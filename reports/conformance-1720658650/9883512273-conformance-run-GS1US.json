{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a98579e2-3a7e-4eb3-a239-cd5a264610c7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "53a21d58-7d36-40a6-a7ed-4484f0d5ec94",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eb38e2c0-5831-4ca2-86cb-1ce85d85d14c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "480b8d94-2f61-4f13-abf0-a1c9d15045ef"
                }
              }
            ]
          },
          {
            "id": "2907403a-422a-4ed1-a1b8-1a9b45fc222a",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e95dac61-8179-42c4-bf87-1f08d9642251",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ea8055ff-af4b-4543-8ce5-b5aa7866f294"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "35575bc0-dff7-478e-893b-63b659927ee5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4679b73f-05e0-4cf2-8144-19deb8168660",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5aedb5be-2ca7-48b4-ac00-8e7a48dc70ca",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfef25d9-cb6c-4fba-9e0a-e2e2b7450a0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4669ddf8-1efc-4779-8153-5f4bb0c2cb83"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0cea4c8b-78c8-4492-993e-6efa800a54ac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "05eac34b-b0ea-4f04-a46c-47d4a66a19e3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "76785ca2-0c51-4181-bd6a-75d006f38532",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5b1b08f3-d9a5-40ca-aeda-444c71fe8bd0"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "515a3e17-ec31-424c-9eab-a4a71bf02744",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f1b648e3-0f01-4ab7-9334-7e5fb9ee284c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "49e7f76e-f50a-4baa-8571-aad7b045afdd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "923e7f5a-097c-4f1c-94af-9a0acf3b1257"
            }
          }
        ]
      },
      {
        "id": "f3bdc7f7-0d82-4858-949d-394b84fc9526",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f0769dc2-a6de-4cb1-a5fe-39e5876880f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d4d457da-c3af-425a-b773-625882225476",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "af165c53-c866-452f-844a-3e5f525a68db",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3c9bad-868f-4be4-90fc-999acb946a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "982e49ef-b605-4379-b29d-188eb4482d2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efabdbe-25a3-424f-beb2-ba096187a9d0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954ac299-edbe-4ed7-9744-cc40d3ec1944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f13a392-861b-4dd2-bc70-0e617ba095d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd490d7-de98-4069-98f0-ff0e11346528",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48813c55-18a4-4901-a6ab-7574154af94f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fcf3a8c-13f6-43ac-bab8-186ca56361db"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8c080f51-d623-4a9b-b537-0e4fdc80f605",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8dcde957-7529-4533-aaf0-f327b19cbd63",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83ee08d-f4b6-4824-9e81-ff1788a1b481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28394033-940b-483f-8ca0-a87c4abacb18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693d3e66-d4d9-4152-b323-1fda8aa5e4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cfec579-2369-4441-9a32-41cc96d91303"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "19aa30c3-3a96-4505-b46d-5d0b25e30d59",
            "name": "Positive Testing",
            "item": [
              {
                "id": "836f1bbc-2375-4a8e-b952-a770a27dbe1c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ece1121f-c4cc-4a82-a3fe-59227db5c7b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e0379620-1363-4e30-a46a-64dc752da455"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "966114d2-4c19-41fe-91c4-41e8ea169203",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5263d53a-352e-492f-b598-3f3bade07614"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8ec463d8-2907-41e6-ab19-8e822171e667",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "30cd5709-19d4-48ff-9f93-0ea1d49b34d3"
            }
          }
        ]
      },
      {
        "id": "317dd630-cef4-45a2-ad1b-b3bda50d51c7",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "53d83d90-a235-4c03-bea6-2a179551ad6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38e05c90-bf29-4fc0-9ae4-5db364e78979",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "db84fdf7-726a-4349-8d39-b07ae665e204",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be03d4a5-46a4-4be5-952d-3b07fbea6e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f0170f-5202-478d-9de8-545cc04af7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66fdef00-4d96-432a-889e-134a59900dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c15401b7-2158-45df-946b-d877181a534a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eece52c3-c8c6-47e1-a1bd-956ff23cac5f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af88b0ca-060e-4d36-a6fb-dd494498c289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a87ec14-aeb2-4be9-a580-a9bf9a9c5240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211322fc-9e59-49a6-bafe-3e7945328bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ca33165-61b0-47f7-8a90-f6a54891aabf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18894570-aab2-47c5-a8ef-9e59910ea49a",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5621e7d-9cf5-405a-b3bf-e04b888d10f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feeaf575-8dc1-44d1-8062-0520481072d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da7f7d52-9429-4989-b76f-c2e1388320a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "06ffe5e5-62e8-44b7-b265-c976d28bca79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54cf883c-752f-40d0-a042-1fd85d31cfe5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de4f2fe-9295-47f6-af64-a2f2d2448ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34057112-139f-4891-b684-c84d2d970aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98490f67-0376-4268-972a-98d5182c1d00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dadd433-8487-42dc-a722-ab761389aff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de0e9f0-fa85-4acf-836e-a05651e49bae",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "130cf08b-e9ef-464c-94cb-b23839754bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dff0509b-da64-495a-87a6-ef7b8354013e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf46af0-19a8-47d9-97a6-0c6ed3a53982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca47524b-cfbe-4e78-af5f-d420a7ed34f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3d61a98-ad9b-4e8b-b8ab-f0f8a8f51216",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed13f58d-abf4-4e86-922e-4a7a2be20ce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1b29df-6fa6-4fe8-a7b7-dea22109a608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379d7226-170c-47bf-8ba8-66f6993d0ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "304b3641-41f2-44d2-9f61-d3f6cefb8dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99075357-8662-4545-b04c-53bdc766d843",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ee459a7-3330-441f-8952-efc315eb5f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be88094c-ad01-4155-b6c7-4d7e8c7d7df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa4def9-ceda-49c6-a75f-ddc8bd6b3b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "56afaa60-1256-4746-a0bb-2adc23b495c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e40b2b05-b308-4832-8541-98986fed8f79",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2108c94-7863-4d8e-b176-5e4c45d1d1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "139b4a7c-3d62-4b76-b007-4db2d4127cc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bcf5dd-0698-4758-8dff-fc6f7bddc673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6c005a2-a3d2-4e73-bfd9-115c774ead9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad1cbbb-57e4-405f-b243-b36334f76883",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bbd0de-309d-4c4e-80ea-6a2957aebfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f051329-cdb6-40b9-bdee-fc9178ed3e1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52701c39-ff6c-4893-bca3-4e1ed2be0b6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4743b2a1-6472-4d91-8721-cbc43a822573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b15f44fc-f94d-42a7-ad87-5077b2adbe87",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0aad85-73c1-4b42-a6cc-60d67fa79a70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12275731-98cf-4ec5-897e-982c726a83b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7526cec8-8376-44fb-bf13-020348ae841c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a24aa1f-ba95-4b42-97d1-40f74f99cf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82172703-14c3-4289-9bc6-bece9bb451d7",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "975cbf3c-f5eb-4aeb-9ee7-8ae403d355a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ccc500c-ed6a-49c7-856f-0dcf4b471f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cf79d9-fac4-438d-a9a6-012a7fafd27f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16461d2e-3ae5-4fa8-8a59-21c53c461c1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c21f8fa-3217-4cbd-be15-3e27ab7929c7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "167e6fc5-b5c2-41df-97a5-9c7ec26d048e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c46e49-a5c3-459a-a9d4-8ee6672ce93e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca8069b-51b3-4f57-938b-dc3265d2a918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99fa1885-bf76-47cf-bd40-a2c360162647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a00275ba-828f-4448-8de5-cf160a390143",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cd847b-ded6-4347-bcc2-ed424278503b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1240fe02-0d5e-4db9-8462-e7dc1e4c3f5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36a982b-9edd-4f93-adbf-3efa21b1693a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a05595e-34df-4ab0-b07d-33de83f2e158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a743872-479c-4b47-8a97-6a9e25f78e19",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d935329-e48d-4b42-bb78-2c795e5c0a58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a890320-fe08-4521-862d-23b45c6a6348"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9692754b-4b96-4acc-b928-90629471a3ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3397592e-4a8c-43ac-9980-f963c0d6de35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0459c0f-6336-4552-927e-edb14ad930af",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9286018-575c-4131-9272-fa0b4b8b2d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5117bd17-876d-4e2d-922c-5e8bbf22224b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ce0b9f-2b31-4885-814f-b43d08e0afab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "caa369cb-edf6-449f-aa75-aa7d1934691b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc91b12-4c5b-4814-b612-8456db323860",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "833bca48-0b25-48db-a517-2a3814528654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3371868-b5d4-4f2c-92c7-a399bec898de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e76c48-e248-4c5e-a0c1-c134cb8f52d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ee9d6d-dd08-4e6d-8db2-7ab8b47ffa6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f481e1-f3ed-43cf-9bc7-c775bbd23edc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e197ff9-8986-401b-8221-b645091ddb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b72442e1-d9d4-48e2-9ad3-f5583b8c3872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1bcdce-b07b-4a9a-b245-147121b5da5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75e0efb0-96f9-468b-8941-2265648a330d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb35f7f-1179-4e25-92fa-4dd2680e5525",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44020dbe-4d02-4d7d-8025-ae34dfb07c34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17d23603-bf08-4d68-ac7d-37b0dda4d2a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "179d0a63-2213-4cdb-9c2a-e0e72c040f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4664c3-3d27-48c2-96f4-5b759b1bf3ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9951227-89d1-4a86-b655-7b4ced6f0e1f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "378a885b-7ccc-4fc9-b5c4-d00700c1e866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11c953a1-5b25-4241-b36c-de88cc1f3db0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c63875-89d5-4506-be68-80ade3c8ebe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0efbec1c-485b-42a2-aa57-2ee20376f1c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4d302d-ffdf-4a71-b4e4-6a71fd20d721",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d74c4b87-ac4b-4e96-9021-11784ee6877d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "835a13df-0ea1-4d24-8cf7-a12ec3e0a3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be84673-4d3c-41eb-a0e1-b046496ac3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae8d87fd-8e96-4bbc-b2f0-aca56378cdd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8d9048-7532-464a-95fa-a16ccaa93c28",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5895b65f-d63b-4eb9-9edf-9f6f2f63a9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3643528f-73cc-4d22-9582-6a07034ec413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "159a288d-ccdf-4f6e-9b59-dcb90322ecd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b0d3ce-6bae-41be-8904-76305cea2474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98e6c0e-a38c-4dfd-8787-339da4810b72",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8902e1fa-6408-41f2-9828-67e87edb6dee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54cd5dc3-d4f9-4bd8-b172-a4aee3745774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659ca02e-bfdc-49b3-bc9c-a961356da5be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5cab794b-76fd-4ccb-9346-a7fd82ab361e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeed9957-8337-49b7-90a4-ecd30a76f057",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "449f210c-698e-4cfd-887d-57948fa930cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d9091d-bf51-4a02-99d0-7db59f8c85d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a027c40-a84e-4c74-b11e-52904381b6f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f39dd866-3206-4ecc-b3c7-ae82dd23d990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7730147f-d2c6-4ba3-82ee-fd600f7c601b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24c4cb77-906b-4153-a7c7-29cd426dd00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "989d028e-63db-49e7-9984-7a601c9da101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39fdb2da-46a2-49f3-bddd-8df3fa86fccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f85b50-324d-4ab8-a690-691ae94299c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b6e5a9-d132-4830-8cec-368a468c9abe",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4d04d7-4b36-4165-81d2-822c15fa42b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1027b2a1-4f66-4217-8da1-35eb168f875a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5492cc52-a523-47d4-8555-cf5b9ffb4f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae56c87b-b4c2-431c-80c4-864ff6a8e958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "496eef45-c24d-4bba-a324-c7214ef2f0f7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88fda39-d37f-4c36-921f-fee6cd8e064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfa4de55-f6ce-42a3-ad1e-2ba769b00f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb4237e-9b97-4e02-bcef-9d5a61124873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "96bc892d-0b24-4a38-b912-267ba6e16579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0815af7f-db07-4301-836e-345b6e03fc61",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c251bf49-4dc5-49bb-9984-91a9339d15e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f8dd6c2-70fe-4b8f-9d8c-c92955852d17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2337e7-a549-4cd9-a224-4089200499f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "67a79494-b95a-400e-9933-e8f1e760df4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45200821-a162-4c3e-99a3-ae7c5d50b46d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1176ff7-7a52-41c6-9fbb-908330139fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7efe924a-953b-4034-a644-f9fd1c9f7bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d65c2c6-ef14-48e7-ac9f-820ede960100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09fed5bf-fc9d-4f35-be3e-f2574eb6d87b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe6e5d3-2995-425f-8ba4-c3db6451f9a1",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911e7b5a-430d-4a4b-b9ba-ddb4002cb726",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369ea204-d6aa-4611-a1d8-c4ff0cb6bce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f298a436-b3f8-46c6-accb-d32012922062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d85d5944-4e83-4b20-8387-eef7a336036c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c69f8d63-ad76-4cd0-94c0-0a876d3b0793",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae342e8e-6586-4e30-997d-a0d813e3dff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6258ad9c-3ea4-4562-b4ad-dde4e851ef17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6698248f-82c5-4b8b-9a12-b84f491e496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c0f6054-9cd4-4287-b9ba-9d9dfbc78e39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad865147-6aea-43d0-be87-7e94027983a4",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c7f3a4-fae5-400e-9249-78aa7206f181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a10cb515-b9fc-47de-a33d-e808890ba098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7cf6eb2-38fb-479f-8e6f-9b47d52da723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1433695-e477-49d2-9e6f-5695e0b22ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8539d8-c9cc-4bfb-bef5-358eb8b56dac",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "407647fa-6d10-4404-b43c-a32eafdec03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45e2f89-deb4-42a6-acc2-72bd07f9dcf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bcf73c-3459-418c-953f-542fb45c0cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c839f19-45c2-4dea-892f-9438d893afe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe15537-79b3-403c-94bc-38e82ff81b79",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4098e287-c161-454f-9e2c-0a329fa84368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ce61a1-72f3-49f3-bf2e-9a1ef828590a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13372f4b-c76a-4df2-b7b3-3c4e6c1ded28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade91af3-ee48-4614-b833-7bac31ae9083"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a8c4bdc-8abf-4e04-9277-51544e205b58",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec5fbb1-a6e2-44df-bbc1-bc6f624b5a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86c22dd-e259-4c78-934e-b78537ac3107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25abd658-e03b-4db5-9cf3-800bd3d53b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "51097b6f-452e-4088-ae97-9044e3fe4449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc034ce3-4f49-403b-a55a-f995975d961f",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ec5b34-876b-4b36-9616-f7ed607163a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87681bfd-68ed-4e70-9f02-d2217e676d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd896e87-2715-4258-9f71-ec165cf076bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "4c549a43-9fe0-4ea0-9f6d-6e068854f0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaeaf6a6-1605-4546-bb47-2f424af95fa2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9852d9d3-6565-49a9-a56c-e2465863224e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb23579e-c1f9-4717-83fa-3f0ffacd057e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96d3b0da-fa8e-40c1-abd4-b3eb8d6f717b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b3c3d87-726d-4e4f-8fd6-b97b131f8f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "574528e7-6b9f-4b35-bfa7-10712f35c967",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd18d782-3873-4569-a3f2-950cfef8fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e53aab7-e428-4cdb-876b-79c5ae9b927d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed6861b-51eb-408a-826d-5f17f8183b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "26fbd1c4-ec9d-441f-b5e4-b5e3a5a37aad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c406011d-d472-491e-81b0-113045f40dcb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba880ca-9748-4ce1-88bd-a9f0a28cf914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d5db4eb-91a4-4eb6-9d13-918e2a884c5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "710ea2c3-9162-413f-b286-28b00d1555a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "51e993af-dc69-4d8a-9a75-a4a9a7a49521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c254829-baf9-453b-9a9a-8364398ce9ca",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "594e8081-44ad-4351-a0cc-c81ea9da174d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe4429b2-5cd1-4009-99ea-c340d58907c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76588dfa-2fd4-4612-8992-f74869bb094f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c541cb1-4ba3-4bef-89d0-5082a352d125"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57340ee2-a71f-4978-b3b7-e7da3d6dcfae",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145525b0-2547-41b5-af2e-38ef3e1a0633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1949aa94-ab2b-4e7b-96a7-55d7e6e9364a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2515ebf7-1f6a-4ade-985b-d4e94994fdda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "050e6990-937f-4c33-a615-d77696ee41dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6266c6-ae8b-4eb5-b7b5-f325d4bda8de",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b79983-60ad-4025-9c89-50e042013425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0dc123-664e-461a-8145-f866bc161b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c2d134-21f1-4399-80d9-85d49087ee4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "195631fa-8c8e-4915-8c2a-31b764ff5e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034c4691-c34f-4594-8160-8ec0ddc1db15",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d41483-b158-4c82-9aed-ceae7ad692c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38c2092-18e4-4e59-a485-4109413d786c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49607947-caec-4ab2-a2f7-fa42769a713e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a4524562-088c-49c7-beee-1603d3929997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc152111-2808-45b9-a3b2-99ce1ed4d5b0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acf6675c-e86c-48d2-addc-bb3d57993916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "918e7adb-0330-4362-ad97-92c79f8e94f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8075a3ef-430f-4d4b-93e8-a6c6ea714e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e255ba5-1e4c-4701-906d-0ff37ccc4310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872e18ba-59b0-4b7f-88bc-cb757dfb76e2",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289a3831-881e-4ca5-a331-445533e84280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90be6721-30df-495e-a4be-86f2fcd60ed0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46fc4413-33e1-4ab4-855c-a07c33183e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "560f101e-debe-4b24-be3a-c3f83f78252b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b1d35c-4272-4c16-98c0-b452d1a51f8a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5855ad-50ad-44c0-b0f8-3cb04e2952d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3bc954-9da3-4119-ac0a-aacb56411b74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d1c8b3-9238-41f5-9d97-589d7990c5a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "531b2f1f-cb35-4079-a4c3-09eb9c3076f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c066b56-622e-4eb4-9c6b-1efe9fac2351",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7f6385-61e8-420e-8efc-6472b0e6b256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21ded4d7-9d40-408c-84ba-b6f844536ba9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4000f003-50d1-4aa7-b122-4435ba9016df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "593eafe0-500d-4345-aff2-eebfcb260fa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ea22178-42f0-4225-97b9-26570e528825",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0320b84b-8afc-477e-9139-1850553cd857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d61acfe-4c65-4f3e-b2c4-58d465fa69be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2825c3f0-9a8e-473b-9016-b9c920dff0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1367747b-0620-4331-b4e7-96344d598a31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36c5201b-442f-4515-a7fb-05fc09dd6cc9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f20dd52-cbf6-4cb6-ac6b-10eaeffa5421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f4c701-571d-4dfc-bced-ccbad17dd329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ef6e77-f45a-491d-942f-7ca8df62f2ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a943a0cf-d105-4ece-beeb-83a83288977a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85660133-562b-499d-b77f-dbd28962d63b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc224bd5-ba72-4b1e-8de4-4d13b4bed0d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46b01a26-b082-4ed4-b154-7c08adc01afc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94e38a0-1651-4e77-990b-ae3a73d7618f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "64b40a7c-ed48-4097-99e6-ed00c32bb00b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b54bfe-d609-46cf-9d56-e4403c7b1b4f",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8de734da-3665-46b0-8dcd-27b6b7712f71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f561d9d1-5320-49ca-9aa5-32f32f5ad852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38b396cd-dd85-42b4-96ce-a50764d973d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec45f777-b008-4b22-8ce4-029a8dc63c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f527435-9f8b-4842-939a-a06322f18fe1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b13fd1-d9c5-4323-aed8-fd2f284fc16b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "757052a9-31c6-41b0-8474-c865770dcf74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45dae41a-7dd2-4962-91f1-d1c82f3afba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "177b96a7-9c04-478e-b777-b54c8ad33d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c62525d-fa64-4933-bf5c-ac1de70b02b2",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e292b7bb-cb14-4918-8118-1a4a3ea80430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bbd186-2b81-4726-b13a-be01e4ffffe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76ac156-6454-48aa-b3bc-448cd982b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fd0a83a-2611-471b-92ca-e2b39ff28d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d787dd1-7e58-4686-9657-34425fd31cbd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b67ef51-8bb7-4054-bc1e-5b76508103ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37ab2622-86fd-49aa-ae25-15915b6b4a70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04517654-6764-4d65-816c-676bff744b08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "de90eae0-2b97-4f0e-a456-4ede8c905be7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e2d5412-ce04-4b37-a52e-c4486c73841c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e8108d3-dff3-427d-8125-5d5983692cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfb47fad-00b6-48eb-818b-8224b48027bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17be2128-8457-4a10-a068-2a4d6ef2bf35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b294d86-4f4a-43cd-a7af-df45b83e3ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03b00e32-2f87-49e1-a1c8-8f0e68dedd88",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf074c69-1a2f-49d9-ba52-c41c025f31b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76d8a1e6-eaf7-4ead-a743-d72ccdddc044"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fc3232-d61f-4195-b4f3-b1a954b428c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "279dcd7e-b016-438a-83b6-31689f7078a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb68a33-24e1-43bd-8b4c-d211bbc8902a",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f29cda-f368-4c2b-866a-a49db3480e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7db3a2e6-dbe1-4261-baee-d8dd78449336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6f600a-fba6-4e4c-8daa-b9ca9b8bccd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "475aea5c-1761-4227-b6f5-455f473cd1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642f4ed4-42c7-436b-8cc8-bec4af02543b",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b9d91bd-32e5-42fa-a510-17baabe40f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67cb0c2b-89ba-4245-ad29-6fd89a46f1e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f43eeb-ed53-4f25-b8ce-b2003c59d887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "663d9483-7928-40e9-ad3b-fbd1ba94ad79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12dbff3c-4b7b-4121-809c-c784fe8fd85b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d7332b-61e7-4c71-9728-2b5ab6e1350d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20545bec-3cfe-42fa-b302-58d64a381976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dc9960-fd44-4dcd-b068-8802df0ec185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "92f8540b-aebd-4a9a-800e-c8e96a214c7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d680d478-a42b-401d-aad5-5d92cc121004",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02b57de-a56e-4943-8e13-db0b65588264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17624cd5-b10c-45ab-8489-0fc39c221e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a08d71c-68c7-477d-af52-2c45f896361c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "06852550-df56-4e9e-a75e-fd07c894e2a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbaacff-07a8-4cf8-a744-84841117516d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad29bc07-11c5-486d-9ccb-a1c3104a8a17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c501704-a179-49f0-bea4-f61d9b6b1dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea7a5dd-4655-49e1-b55f-6e696f89de27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d918b17-e16a-44ce-a668-16de7e883bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cce005ff-0acb-433f-b1f3-232096bef5cd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dbc660c-53f0-4557-bd98-220e872456eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0167598e-f472-4c0f-80a2-43e05b3ad39f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97520316-15fa-4a49-8699-3ef6d8276e03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd931d3a-98d5-4f8c-80e4-f5ab9918f9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7fd41e-81d1-4f9c-a54e-edf17692134b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf9f871-a1ef-4cc0-992b-e0f1ec5e531f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8472dfb5-2c69-493c-bd0c-9570da598b0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7de17710-30fc-432c-9625-4cfdce0a6e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "31150847-6ff3-4630-8b7d-987d58fc951b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca47798e-abe2-4d34-8768-3a3815d875f1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac4a04f-98e3-4725-9aa5-9dd5eea917fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7447bbd7-a503-432f-9e00-f0be153062b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787c16b9-0dcf-4e7f-97f6-fff37b6e91b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d337a0-ebce-44b8-9794-f1cb0296967e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1132c227-359b-4e1c-92bf-236c64c3f05c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ed0cc-0c7c-4de4-a070-5d3f521bf7e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71cd9e78-0b0a-425d-9b86-c4e6f9ef2d58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ff2905-8ff4-4277-8f3e-91c4954a68e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fc1f44b-ae46-40a6-98c1-a04674f88471"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bfbecb-d6c8-4662-bcfd-cca9daa92f09",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e543d40a-08c2-476c-8696-9d269c47bf56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca207fc3-a2ad-45bb-a0cd-1d88ed9fcd0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae25263e-3ec8-4436-a913-589390977fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "216b439f-df4e-4d00-a267-be1e560ae5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99915411-e451-48d5-a276-480fad5e3c56",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a248d0-cfbf-4755-a455-a9b8370a6e7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ed88b77-628d-4f86-a3c5-bdd4e84402ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a71d6b8-0be5-4f16-a1c9-ec1588c25d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c740c90-acae-4d33-ad56-3c7553269aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbdf8d2-e30f-41de-83cd-4ac3b1ad2e91",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62425968-167f-4dc7-9343-ee8987e6ceb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68317aaa-2cd0-4c31-a33e-f394977415c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd079669-6273-4ac2-b3a2-874b30f81541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01f1ac3f-f3c5-40f6-85b8-5ae5f8ffd693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c2bf17-2483-4a99-af3f-16acc805f648",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10480e02-f96c-4755-939e-ebe719ad9bb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be2df2ca-1239-4e1d-83ca-3d95b6cd80a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68318e00-da62-4998-803a-64f4b62f3871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a303b8-fab7-47dd-b447-5eca765abdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67708977-bc6f-4b09-aec9-70b3abc095ba",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ad9401-3ca4-4930-bc32-54694e738362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5f680b-53db-4aaa-99ab-8abd95fe119a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5d64586-ccc8-4197-888c-ed3704fea85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d32691-5554-47aa-b3b6-dee4c93d0a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22954541-d414-4782-aca5-4ceb8caac2fa",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58af7158-11d6-46bb-b148-e76435a29e71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfcc6f6a-44cf-4e26-ba5a-ab394b8062eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62342b79-a418-435b-8ce8-319c15b17d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1bc935d-8d7b-44b0-9bdd-40688f85213a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c76846f-a863-4735-b8d2-0211895b0bd0",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cacdc77-130b-43a8-b09a-bac481c645dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d134ef-b870-46c2-b24d-00b0cdae3ffa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17a1e557-cba4-40b2-aecf-d414b5f1ee52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b849cfe-c198-43cd-9798-34100aeef999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b41df58-0d5f-4ca1-b50b-156a6d4db4bc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abc994d4-17f6-4b26-887b-f10f60dd9ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceac67b1-29e2-4ade-bdd6-fb1a12cb1e0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6cb96e-be68-4b75-bb2a-2aa91a749d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3d198d-e69e-42d5-bf51-0834b3ecc24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c50c4c-c623-4863-a71e-dea14322a7c5",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdce256b-5fd5-4add-b58f-4240cc1f0eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d952357c-dba3-40ec-8a38-d0b00d8175f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1496152-acb0-492e-aa65-0c6b1cc7d553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "617053d1-a96b-4574-8607-a2bec21d9ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6c8dbf-b53c-433e-af36-0741a42fabbe",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be1883e3-8de9-4094-92e4-a2031940a57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd6f5f4c-23a9-4798-a41d-d0cb16361150"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538ed728-dd85-4959-9875-dcf9dd4a95a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "945cb95d-5fb0-4638-ae5a-852e8b849fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3aa792f-fff0-43f5-a7dc-d0ff2efc28bc",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7d52e9a-d452-44b9-ab92-a5065064f689",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f910e8e7-9c9b-4398-96e9-3a8147cfe7b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff3524e-99a9-4a20-ba66-d4fe1a5ec2df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9afcc683-372f-45bd-a1fb-7a06ba9b3382"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0cb236e-2e49-4344-8a2d-a0c8cde909e8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2ce0327-743e-468b-97e3-c606076d5383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f92336-4a86-4819-a14a-b953204b2d5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c25a7fcd-086d-429b-bcb9-b134e5a8a270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ba978c7-a48b-4ef8-b485-a271b09e75bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f21dc8b-8102-46bd-802c-23fb0b00f13f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb7e75f-f716-443a-a0d8-31c337bdb74a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5702ac88-5a1d-45a1-aaed-4d4449ce8dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c70c938-2b46-42ca-a092-09242ed426b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af0d7272-d6bd-41a0-93f4-ed0ed459e1b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e2cd0b-b7f6-4d78-93c5-37b92e776228",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7adcda49-df37-44b0-b695-6fb236237b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b412855-cf8f-4818-8c36-8885bdb161ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779d0df5-7548-4f1a-8373-76fe1e8a3988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d6b322-e046-40e2-b785-a73c78e72c8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94361a0-e803-4963-8649-340a9bb0cdaf",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60903cdc-0de5-49f5-9bae-f9d01cb845fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0e26c0-468d-4022-a55b-ce3cad962156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73399911-fd6d-4c4d-8653-b49f29ca89c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6af9c4-b26b-403d-bfc8-526e0106ca79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9b3265-dd5f-4b32-8130-1e2a8a5a5f28",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bc8f8d-60ce-475b-ae3a-4c6d11608b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6148babc-bdb7-46d1-a1f3-2ed48221913a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88abecd7-8ef7-4f3f-a706-2160fe163566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe09ec4-aab1-49fc-aeb3-62cb0b09fa49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2419b79-0cfa-4765-8b90-593fcc7c328f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203ca5dc-c19e-4a39-bee3-01d1b8b5b617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522f0f60-1769-44fe-9662-76817af4aad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0816d6-95d0-45f3-8df2-79199ee3ed2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9573b9c1-effe-43f6-b33f-59d6a5d11a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafefd3b-dab9-44fe-8fc5-0b528f17053b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6b960c9-121b-4511-b5d9-5d226ce3a869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb87a297-8711-421a-95d5-266554bfe1c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01635b6-9b0b-450e-aab7-6343e863bf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c91a745-146e-4415-b19d-d64ca11c8330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a14d8a-4735-47dc-8512-91303c54766b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3369fa5a-ada7-47a1-a883-657f22399e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa4e5246-3484-438e-a074-eb149580491f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff028fb5-8479-48c8-97d5-970bdd03bbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3628f24f-9df4-460b-b871-3ad26f46a9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5953fdce-9ff3-4810-b5f6-7ca17df8a35c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac68f5c9-52a2-41bd-aa57-16bcc0e2acb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdffc6ea-2e1d-44fa-8f7b-75b08cd66217"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0a2635-223c-4fce-99f0-d86220ec9570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f16ad5f1-7e49-4054-a80c-0ad579c2db81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd6fded7-8d3e-478b-aa10-98ccc176e70b",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aebe18-ebd9-407f-8641-a164baa81218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3c1813-f6fd-42ba-a332-ace0c3446d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6e4453-b388-4cff-8a6e-7bfa2c99ccb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a589a63-3a33-4886-bb24-b8906969d468"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6335e343-a032-4ad8-8764-2d7a043c4152",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bffe750-055e-4f9e-bc8a-fce344542717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65089b79-7727-4ad7-a5e1-9a2e0a4713e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ead2c61d-d68f-4226-a894-8bce641169c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc381b53-8c61-41b1-a25b-6a460c6c76b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86690a86-3477-4b3c-9c74-5f54cffdf77a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287e1fca-eea8-4633-a4f5-bf5496e474c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798f6023-0ac1-4b50-986f-9ca1c1d53921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0977025e-0ce1-437b-abcd-b6ae1f37407f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c61db0b0-7507-46ab-923a-ea3b8ca2d5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "163b7010-c436-4bb4-8d64-42de7ecf73fe",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "169d68ee-d1bd-46c8-8de8-1cc729ea0c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73ecfc9b-9ccb-46c0-bc18-900caa0a4e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555b0035-6f9a-49ac-b26d-389e609a3815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb68a55-55a3-45f5-8d41-87f125945512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "410c8e64-85ed-473b-9ed9-828548aee22a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be2af89-7fac-47a5-ac36-3c9b13fed2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7e110d-1c57-4569-b41c-fd5cf6e12e05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d714a1-1961-4219-9430-159e2a009cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4d1911-2b01-41d7-8a78-9a4928e22225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d58e6d-c564-496c-9b2a-ffc55a0c198a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f94203-1843-4463-b25d-284743b9f9bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "420ee0df-ad19-4e3e-b48f-17a3a6f068da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b367f037-b757-420f-ada8-0ef41a5bef71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "101cf8a3-6901-4626-a01e-2a29cd8c766a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af948c52-bc72-49c6-b6f3-b783a19ee83d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f47326-4ba4-4bd5-855b-78d0ad6c1822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3d053f-bf49-4d4c-83a0-c85d3dac4874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ab87d0-696e-490a-aa12-3734d450c446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "57a9cf60-33dc-43d1-a5aa-9125da46a396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb09cdd2-22c5-48d4-9e9a-0493d4a53927",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712b42d0-e337-43aa-8a6a-05e12e13fe65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "4ffdc346-4d70-4f0c-9d5f-21ea3fafc111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6370ee3f-4f29-4f87-89d3-647975d750f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "94940f10-cd52-40d6-976d-a0a7424582b5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "295e97ba-8084-4564-9746-c450506820ea",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6e7c2583-80fa-42e9-a8e2-03bb06dd5696",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff03df8f-e4d1-435c-842d-8eb9fba554fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acced98c-3e92-43c7-a280-1710e8640e24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6062f2b-579b-4a43-a558-e7c58ae72e6a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eba1454a-b16f-49bc-8d30-e60b94233360"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7a22dbb-f763-41d1-a386-e76f7d97ae80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0deccc44-86f2-4e41-bdb4-dbda8f9474f7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "762de412-01c5-4670-87be-5dc04fbe6eca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68096653-08be-4fba-bc01-31a013b81cc9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a2338df2-889e-4a0f-8691-4516102594c7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "167af61c-cef7-4ca6-94ec-7b12f5428858"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "952ca673-b22c-4524-a2ae-819f778b385c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7a1d1f97-25fa-41b9-876d-48d73b8eaa14"
                }
              }
            ]
          },
          {
            "id": "550b9ed6-d609-4f18-a1b4-fa2f36b8aeb8",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7ec5b4e9-97c4-459e-8de6-5edc23565113",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "3f92e2c9-e79b-4e75-b339-c34bb2276b54",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80774149-d5eb-4df0-87d6-68f1574a6787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "31cb4dfb-b2a8-43aa-84a6-d0b0dd341042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f7a45dc-4bc4-443c-9edd-63a52d0205f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac7c1300-36b7-4b91-a01a-de72820114e1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f47d8431-153b-4fb7-a92f-89fb9e0859ee",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29880b9b-7b8d-4751-95cd-34dc3b011913",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e5110f6-6572-480d-9a9d-89c759609b20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "beac9c7d-5768-498d-aa2d-08a3937eb52f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "110df818-dd0b-4039-83a9-192c688fe26e"
                    }
                  }
                ]
              },
              {
                "id": "b91e8b2c-6899-4585-8f04-e9fb5e29c9ff",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28274753-b218-4b98-a7c4-9c7fe08cb343",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b9895a9a-07f6-4767-8050-9e8e0390aa74"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "400d83fa-739e-4330-9926-357ae193922d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5e80acb0-1f22-4ae3-a556-5a3e5fc8d05c"
                    }
                  }
                ]
              },
              {
                "id": "b39482d6-9bd6-434b-a694-504c5183eb03",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ccf74a1-76b9-447e-a446-946645831167",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adf0b086-f38f-410b-a1f2-2dea753fded5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06b6aebd-e2f5-46ba-80ca-81868b7653d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c25d64eb-f094-4bd2-808c-72e72aecf796"
                    }
                  }
                ]
              },
              {
                "id": "0fa3b1c4-8c69-470f-aba5-a3e1658aac50",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df2293f5-8dba-4e92-bf0c-8b20dcddf200",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "514baaa5-bcd4-46e8-aaec-fc531bbe1b33"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecfaf847-52fe-42e7-9277-e9548f681fc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f6990448-4f88-4e45-bc68-bf14a1d97710"
                    }
                  }
                ]
              },
              {
                "id": "711fb760-3d8c-4ae1-8d1a-15f60725a731",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65657342-0684-41c8-bf95-81d81e94aa63",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f636e379-c7a0-4587-9b92-fd7d3571bd20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f76118c-e637-43da-89e1-eb236bf18fb2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "9d17b930-e5e0-42fd-9c70-4dc86c133e69"
                    }
                  }
                ]
              },
              {
                "id": "ccd39dc5-b227-4a2b-b611-0cf39f1408e8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1b217336-273e-4bce-b6af-f13a3d4edad3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd354ea4-27e4-4227-abc4-e50b8313677d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "438a2023-da51-410a-b4b1-22f11cc19b73",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a7893817-15e4-462b-a51f-7f08aa403fd8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f507065-a1ff-4d3e-bbd8-ca5e9f2fddb3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3aac0969-84e9-4c65-b734-bdf46a9a14eb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a9516866-2d22-4e1b-836d-112c80ebf99a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bb092199-3bfc-4b01-bc7c-cf4e0914220a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ae265d9-63b0-40d6-b24b-7417d0cdac39",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "6627210b-5470-4d7c-9f3c-51d805a6b852"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2ea0803-b83d-444c-aeab-953ff979371c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f31d5fc7-b90f-4b24-a668-110c9729676d"
            }
          }
        ]
      },
      {
        "id": "868d70ee-0b19-4f23-bed1-336d09c50629",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "357b0da6-a099-4d9a-84fe-9f64ac1ea2cc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "041ccc92-f126-4487-ab9c-2c5c6d88bcc6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ee8bd7f-87df-4b8b-b2cf-f233c33aaf40",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db08b51b-1005-4a2f-97ca-52b160bee41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af6a3e0-4a58-4961-9bcc-f526b2ce01d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0033b7d5-8ccb-462e-8203-78788e7b4565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "115ba5cb-b5f4-4087-a3b7-9db603c1fdb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a934e87b-09e7-41e3-8f6d-4b39b8a9cd08",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c993f8bd-39f5-45da-bdae-5ad59a2718bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a987e1bd-3a76-4cca-b8f3-c64f548c6cfc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d22620f-f5e8-457b-a62f-bee6a38f9574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "25e30659-2981-4b49-b590-3baee890f0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4d3b6b-231f-4e55-8ade-d36016e44c1f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7884c5-fe66-484c-b6d5-3b39b8f2e7f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ce58e7b-54d2-4edf-9ad4-b95c9ee81374"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e160b2-ce58-4874-8d43-e970649e793f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f56282c-142e-4f80-9fe5-1efed930fd4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1015fc-3c0a-4602-be28-86a5e7486da4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf0e0f62-63dd-4047-a9ae-8fe92eb4ec36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54e49204-cced-432b-af2a-8534eb96c075"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90989ff3-1754-47f6-ba20-f0bce11adb4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03693045-b6c7-41ed-83eb-e133a45dc040"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73c9c880-1d0e-4e4d-812d-5e597deb3cdf",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df55909-e4dd-4db1-8f5b-7beff2713ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9704279e-6f9c-4bd2-b920-2cc95b661824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e437ef68-986d-42b8-bb48-c2c4dcffcc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff799451-4e96-41ef-b58c-13f689ca0094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14fceb9-9cab-4e97-bd40-f8e4d2215fb8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1dc748b-b981-4072-be64-cbd08c50b8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "378471c0-e817-4a20-be48-f55ab393b855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19553b17-c4bc-4cd8-88aa-6496210ae5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e47d8720-5cc2-4e5d-b36e-b8f9aa8ae316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a495de-541a-4f97-a067-ba0a7c318fd7",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36028d2-2852-4fc8-95f6-889512bc16e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "764043e4-e022-4af6-8931-bc19395c3a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "619717e9-260c-4276-aa5d-c8cd7c50681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "46083156-856b-4090-8f72-bc1a10705448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830200c9-d586-495f-813a-ea90c0b162fd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b6836c-ed0e-4bf3-ade8-f87adff79dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "349cbf8a-c7ef-4960-8731-8cf1e927fbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed16a4a3-2ea2-49c1-a8a8-28d755be2674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "642d2403-c7bd-4fac-aac9-9b2defbed199"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3f47e7-db74-4b7c-b32c-efa3e958e499",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fa5207-7dd0-4d64-ad88-2330b725d853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb1db2a-e092-4cdc-a193-f14931becd8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d57e732-99e2-4e39-acdc-fd59b78af30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee30250-847b-4c12-988f-7bb4e9b4a657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30dacd38-23c6-401c-87c7-88444e82788a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f93a70-7511-41fb-9943-ac1fef165608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf6bbee-1699-443a-8070-59016b755749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6eb4503-f143-4950-b46e-575059381b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "78cbe4e4-f53d-4d43-87c5-379221d69b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "160c36b5-1c80-4780-810d-21a54ef579d8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f7706f9-4f4e-4f18-b387-fadd5cf82a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ef03bb-07cf-480a-ad8a-a726f240060d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e68a9f-1f31-4e92-86af-9d8178ce0f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d93cbe78-0f56-4c65-9567-54dd30854b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ea1808e-1bbd-4daf-9fb9-e4a61f5a5b7e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63f6586-fc18-4d22-a6a2-8ecde43f2a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcf7b09f-dc9f-4e77-bf54-067e3f6965ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf8ca73-9905-4c8e-9d54-c34c9e2e9bdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "da065a79-a075-4edc-aa88-bde4905cc02e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0047134a-cb3c-4589-9c4a-0409daf1066b",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e7b038-a0ce-4cf1-a757-95bf3ff5d41c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18be4c1-7e35-457c-a720-67c1173f9662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8393b922-0dd7-4de4-81c1-cd499c7c4314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aef14b3-9c1d-4dee-b8e7-ce03d8e22cfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5a6111-6a8b-4035-81e9-249899e95663",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d00039-5fb4-47ce-a30e-647c5b03fad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5168a091-5c2c-43a3-a54d-dbf3d4bcdf1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67beceff-f0ec-46ff-9304-165a63630736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6aaa6b0a-b6bf-4974-9056-a2e021da2827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da0eb5c1-9e90-44ae-b559-04047ea63bf7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a2fb386-e7a4-47fb-855e-4ddcbbddc460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de404d1f-e19e-4c20-aa63-089ca6f2ae50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "978124c3-f87e-4181-8779-53dff89094a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2e4795-4591-4e4f-8389-16ce6ebf784e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c62ad9-ef93-4e3e-a136-16877715dc10",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f062b17-ea40-47a3-8f99-d4369e6b31f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1a8a47e-13ff-4524-b652-fa36e29249ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33099a0f-fe0e-4ff4-9cc1-b1bb02eab3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "40bd8fcc-9096-4434-8e4f-5d04d245e595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655c88c2-fe73-451e-8670-e7410077a0e4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a42433f-9ea0-4992-ad18-54c69df8b8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c1adaf6-f7bd-419f-8757-7533dfe5a5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e95935-d8c7-4121-9210-149bf487039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9740cfa7-c232-40a3-a235-972f6a254397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acfd30eb-c7c2-4fae-824c-fab9cc09708b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b6f2cb-72a7-438a-8914-d0bdb7b1d183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "783acc6c-a567-47ea-a795-cff5fcb758c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e240eb63-aace-450b-bef2-231d2740b1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bab762e3-a241-4b68-bee7-fdf3567ae9ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ed7fb9-6b2f-4acf-b86f-87a427718c40",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf977cc-01f0-4791-ad00-170bdebe5890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89f3302-b19a-400a-b1a0-6c2af61ef5de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463fbd4a-88a4-41d4-a5ac-de5fedb652cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a68f3d79-0b3e-4b64-9b5c-2afbd9cf121a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1a44ce-688a-4510-9406-a6e336437f6c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d65fd5-b228-4ee0-bf02-a5207061e29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "436eb968-e31d-4299-a806-734562cd1a68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "126aba4f-4a7e-4130-a591-7387e5c6511c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "813b1530-b554-4703-a012-87a4b5532e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7b1aa3-63e0-4c30-95d1-21602738cf7a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7926dd7a-1193-4017-a79c-6164df15c823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15d79bd-8ae3-435a-b124-1b745018c00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bd13a05-8a91-473f-bbca-e7b4cca36e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b929d7b-1d7a-4310-8641-8213855cf889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4cf65e4-ae48-42a7-b2bb-3ba941b2f3b6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f47bce-4f7b-49da-95eb-3a7ed59ae34e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14fd31e-2648-4c3d-9b7c-6a0ab10ef8c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcd6d1e1-fca5-4b4b-bf67-f7c068b2f900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb718970-c57b-43be-a57f-ce28e4afbc71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2b5edd4-81a5-482d-a7ce-7378ced96981",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c98d60-ca9b-4eb6-b4fc-2fe29e5782d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cd2ad32-e2ce-49a4-8270-0f2a2ba97e3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a814a2f-2f46-4fdf-9571-1fccff0733ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6444e146-7e03-4107-9634-b7b796c0f29c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868262b7-b2af-4f89-9844-298d1c6218ab",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1fd494-582d-4b6b-8f13-d8718f234784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb0403ae-7925-4842-a810-3a51d8ee0ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd801f6c-65a7-4861-af86-d0b29102c9cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7351cef7-bee0-4ef1-b724-a67d6163f6f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d8cc82b-02c0-4a5c-988a-f4456fa87f13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f500cdfd-413e-4b67-87a9-438855527279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a20e44-1a1f-4846-9db0-3ff1e5ff9a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8462770c-a9f8-402e-a6f1-d4bb1c997ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b10db48-19db-4080-b7e4-042c5f6213ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9b814d-47f2-475c-b7fd-1682f199e413",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9bb23a-252b-4145-9cd9-34c64a130382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43f385e0-be60-4271-a75a-bd7af6c9f1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750e1392-7b7a-4ee0-a0ef-55e83d917187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "204e0e43-ab63-4a35-8713-158834efd51b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b97d61-d167-4e03-9e37-6e6c04779623",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "405630aa-54d8-42d3-8df0-aafd0d845cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fcb4543-3549-4bc5-87be-6b4847d00610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31509dd-1926-4ff3-9d9a-176addebe95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c800bb4-0633-4dbf-96ac-6737b0de72dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796a9f23-24b8-46d6-8ed7-5095921695b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a919f390-4b6f-4534-9f1e-ce126dc6a7c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd51a9e-b38f-4844-a342-7fc38b16dd0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4f4e158-0ffd-4dbb-9ba5-6cf22331c1ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2821f485-ab2c-4b9f-a801-537305111edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b2900d-e9b9-4f9d-bb20-69b80b93c48c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3665e2b9-2d04-4648-881d-ea2db440f12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "020cdcdb-4277-4e1b-bcd7-e864fc530678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a59cf6-b28a-4911-b6dc-da55f185e79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27a4ada-f33a-42d2-b6a8-b4ffab2e32a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca1c830-ebdb-4488-8565-e935f494141a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bc2cff-5379-446c-8e6e-70efa90383dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e006220a-a533-4a31-9349-2f9cef20c5b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44182262-964f-4a27-9031-94ad244ffa22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b41cf82-2eaf-414a-b67d-090a4ca8ce70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734ef8ac-7bd0-43ce-901f-789dd36f4e88",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a0a971f-5fa7-4b1f-b627-7e1d5394d338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155e201a-21d2-4b26-ac32-c0bd91a94fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9454124e-a085-465f-abf7-cebf9127a8c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1049f9b7-f973-4b2b-b76b-8b50294beb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d6e392-543e-4ce6-acdb-92426346224c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdcdb1a-2a4d-4616-967c-28c585418809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9740ff3-822a-4e13-9921-34f1d2bdcb4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34336740-d353-49f3-b46b-99cd88c0a887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83ead439-540c-4262-890e-7d428abaeffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd683df-9be9-4a46-84c4-5d09f3a012c1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43672e3a-7462-4e17-a776-dc19c9f8a195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e3dcda-c3b2-4350-b017-b581880095ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae99c03-7e2e-4601-be1b-2d53d5be4a2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e22f3ef4-1df3-4c7b-afa5-7de2abdd8dce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eff73219-f3c6-4edd-a0e0-05236ba9870f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27734a7b-e5af-46fc-bbde-c368b9510053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cc81582-657e-409a-bebb-90479cff5074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4fb0b0-f1a0-4285-abab-43f6a23c7637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02dc7ad3-0986-4360-937e-da9918a2ba92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f76ef0-1b9e-491e-9041-f30b1441fafb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a0934a-1149-4766-9c16-7ffcefcc4fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aaf5ea1-7ec7-4258-acc1-b3c773234869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0afb189-d8a7-4067-bee0-bb91af6eabb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6272fe58-fd81-431a-99fa-b25f5bb81ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf177dd9-c146-4c7b-b4c8-446b6d765695",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0afa8e3-f72d-4c19-bac9-9b6ae800c352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa218de0-f910-4f1a-a855-cab1ae40c21e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5412ac18-a545-48cd-9453-71b95a4cb892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e220888d-8368-486c-b890-45dc48b4f6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9de4b98-1e33-4951-bc83-fe758ffe8fd5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e889f47-1df8-4a68-8c4d-28b08a83d790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28ca628f-2004-4130-b535-452440e87b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1212681-76ca-43a6-95e7-183b5f8fcbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4770f92e-7597-4b60-85b9-7c43f2b60b75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e3f45cc7-624a-4a67-8513-875afb11012e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "60837aeb-20a0-400e-9c3d-cb072aa7052c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da86b8c-2c79-4e28-9156-b5adff2baf78",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e6f5dfc6-5dc2-4777-be1f-424d242450ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f70a053-0fb0-4638-9cfe-ff59d80c2590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4eb42da-ebbc-4825-973a-c9a3147c694a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b967edcc-db77-4060-859a-2490c4435aa0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7052b56-79c7-459f-87cc-87eddcfa2ac9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bfdc04a-f941-4750-8797-78a2d0f097cb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3475867-068b-4a2f-96a9-e02113fe032a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c59e25c-d2f0-475a-8de8-e119560e4417",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9c35c6fd-355c-4c50-b911-aba669a69726"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "90ade3ab-0763-408b-b78e-246991b4e33c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "be91e340-4bdb-4629-b030-e2ad09ae343a"
            }
          }
        ]
      },
      {
        "id": "1a35318f-803f-4619-bc7f-d81774378c41",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "06f4664f-60c6-42cc-ad0c-686e70a30a81",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7998cc24-440e-4b8b-9cce-e90237ff19f3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9e07f8c0-eef3-4975-a877-6301e7ad5634",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d737660d-db64-4500-8c9b-caf10c72958d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e00f4d8-e5e1-4070-b98e-bfbb81a311d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e03a202-83cf-44c3-877a-9ca381a15096",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a693af7e-ec0c-4e76-bdfd-fbbc440de3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c96812f-28f7-49af-9368-a6a12c292a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1272095-1dac-464f-9d66-2676a0d4193b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff5ca15-5cf2-4eab-b462-d4626b74f86f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edb150a0-0f59-4f9a-8fe8-78446a6f439d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da6384c-dc6a-43ee-bcd4-bd1d61df0ee9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "053a5438-cfd8-4db3-9ebe-a35f8ccc3814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ce614a-d739-4711-bb8e-14800bdfd5c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff03e8b0-c4b5-44b8-b74d-a6fa0b8eb094",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f9fed36-b956-47e3-b865-94eb5bdc5457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4d9ab3-a68b-4ee5-bd8a-b21376981ec6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6b75737-8121-4f32-94fb-3f7ff09a0a32",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b86f136-c5cf-4332-98b5-456246b7fc66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b5173e9-df4a-47ae-84f5-78af43739407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25472702-4583-415f-a53e-e0ddd8856f40",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f052c0-a3cb-43e4-a755-435e2a36bd20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e22a2f-01c0-4bba-97e0-a632af4f3b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97394d74-a9a6-44fe-a01d-22bd083b2b3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19c47ab7-fb99-4ee5-a302-1dc1520e44c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27503736-5398-4bba-9e45-ada1ef149289",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988ff2e4-2cc4-4888-b96a-773d6420bf89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61481148-d7b9-4e4b-9c2a-67a32bce649f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8653c43-c402-48b1-a5d1-ef52293da41d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8466a6-fe98-419c-b72b-61b407a8c2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56bb15e4-8a1d-44cd-a037-67785991684f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff762b3c-03e8-4290-ae1d-6ea919c45cf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb16d405-d8c8-48b9-9f24-0c3ea0c2230b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c98f6e-ddbd-4074-b1d7-4934e26f6abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f22784a0-c909-41d3-8cf1-d5bf43b64d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6abd7805-ee88-4a23-9b6c-8b841eb1c9ae",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "594fdb27-167b-436c-b140-f76ff9557310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0955a10-2906-4764-ae6b-69557aebd69f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eafc9892-9485-42a0-bb75-3ccf5d23f1a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ddf0a25-8f28-4d3b-947f-fcd48c8e4ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "621f5ec7-d380-406a-9a03-84d9a4df36e4",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950e1728-efad-4a5b-8da7-8e2f4b34d8d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cd43241-2543-45e4-af6b-9c4687afbce5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c5223e-35de-4397-9c81-5816fd41e268",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9736307-5b77-4b45-b0d7-b0b42760fe3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c14b6a5-a455-4a02-84d0-b254c64ac0f0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb36fb3-4ed1-442d-9d1e-c54c2228a7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "869c7514-bdd1-4343-b3c7-be6d3b9157f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f118d3ca-438e-4364-9779-0ae7f6aad231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0dd1d29-3329-4161-8b09-4f64363cee0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c905b700-f597-4e84-ae42-1119d49faefe",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8960dd2-90d7-499f-932f-7d913205280d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acf4d510-1250-4d37-bcb8-6a8f7415f71a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cc36e14-a631-431e-8194-cfd44707ecdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ae17a8-da97-4dcc-81bb-40edec718e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a914a9-1284-41d6-a6ef-6e1ff0a9c8e0",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc17255-7bfb-4876-b1bb-40c53b0d7ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38462ddf-efa1-4108-893e-729957d7eb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e95cf1-8179-469d-bb01-2ca15fdcb6b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55e5e670-6d08-43b5-b323-5600b6a621cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02ed56b-8a88-4189-bcfe-32d270013666",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbef8ff1-ea9b-4d12-b1b9-8f2f067de7cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f71bf2a-5a37-43f9-b033-d784ca3a971e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86559669-0cc5-47ec-b55b-fdd4bb974e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5471ffa7-5d78-42aa-8c5e-a7d21afa2b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88dda3f1-8a10-4260-8de9-f51df41f9c05",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1de18fd-19df-463c-97e7-eae685ad48c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1a701f8-fa18-4c1b-a9ed-54f8527c7c99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c9a7a2-c5b9-4061-862b-88ae9a03eb7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d900f94-8986-4679-99c2-c93818aeda21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e3be68-2e64-4beb-bc68-45e5a28a4c1b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90245ea2-34cd-4189-903b-415f0bb17172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd70a694-625a-44ff-9e7f-7e3f173a6f91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "093a80c4-fe5d-4332-8d52-048ce5285c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91d0b0b9-c212-40ca-9adf-05fbf742281c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44f9737-4cd1-4c2d-a1cb-6545efccd902",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4973e036-b37a-4052-b50b-de3a9f0fa4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec1ec90-db55-4a06-8176-c07e8b6bf003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba55b0f-db64-4c06-a0f2-de58df074183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24193a17-91bd-44e0-a87d-ea3907866ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcb8d3d-1615-460f-970f-f94c3f8516e6",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4e4a941-bb4c-4199-9bbb-e155216af044",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4e5f88-a616-4194-8a61-1391f8bf78fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6173e9af-8368-4214-ac53-7d061a750e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cabd3e1-2109-404c-baac-d5983ba3e0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b2c2d8-7b8d-4397-9945-a2a2af1fbf42",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf0ee3f-c490-4e79-8c82-4c3aff0145e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c8c32c-1af9-4575-902d-5542a9b48206"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4c80a4-c665-44d4-8d95-4d88d868d354",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce24f84-9973-4481-925b-770807fa8fda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35468f7-bad4-4d9e-959a-269d57dff927",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd5df74-5c05-4fbf-9764-27e3728f80bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56fe6f1-6002-4f9d-8cf1-54935a941d70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "565f637c-56d9-4d65-9dde-0a50f1a3fa6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e68778-0a11-48c6-b2cd-09dcfc0074f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b9459f-9c76-4150-8c2d-d31c46c05422",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "059ba989-ea6f-48d0-a138-bc1ce0140fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5557d658-4a89-4167-a113-839cd5c5c8ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aaf5f5-3125-4a26-933d-319dc17d9356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8637a4-1478-4388-b612-914ee4225d52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e404f14a-3646-4120-b8ca-68e20aaa0402",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5dbbaa-2a25-44a7-a339-e0a7664dcd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45d640c2-e879-45ed-a0f9-8bf57b65aab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "185298b1-c6c5-4326-a420-ce54e8eb34ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c41c152c-852c-4905-9c68-065260a3803a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6284ffba-0362-49cb-ad91-b2e8a3075eb3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75f9d78c-4dbd-4b0c-8375-7203e5804b60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6feb5137-0e5b-4a16-b2a8-04e397c0e609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77db3d8e-f711-4ffd-a8f4-7078a6701a65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c07e966-85bc-43b5-a94f-f96d77d9d380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38abfff8-0d8d-4ee3-8869-3b64e826cf4b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed3a6462-7c05-44fe-acb9-d4a523d4aaf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49b31ed8-27ca-465f-b80a-cadce3ee8699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7e53db4-96cb-4089-91fe-4b19e7221185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6463e21-d5e3-4e83-a001-3ad24c53c86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d7c4bc-a621-4848-ae97-4c99d0121d62",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc0da3a-63a4-4ab2-89dd-76f9edd3d7d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31b373f1-8b0e-4512-82d5-d6de40c902a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c28639b-50a0-4caf-82f4-9c665076a5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13c17e59-6297-4590-81b8-b22ca8a17c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e11436c1-62ee-419b-be32-9796f4fd30ae",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b40190-1e64-4152-a09b-559ffa117fa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79d8250d-3610-4b25-88cc-b0e2c8e76ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2b50ee-28a6-48d8-9ea1-8e9e149723e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2a7be5-e2d7-4b3a-9bfd-9b4492774b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57bad160-e5fd-4e92-8be2-0cbda08f129c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "547050fe-143f-4b2a-8e18-23cc7555907c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9555e042-f254-4c10-a903-7eb2a1ada5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b14aafa-9d40-4807-a00f-2d4bbd82e5f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0485dd-f6ef-4dec-b822-aff7bacd2e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "012465a5-a306-438e-9ec2-c2e8eb2e4ad7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4918fac-5277-419d-aa16-678769a4fff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "194fe082-5e98-4029-84ff-27a4843e78c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea5994a-9933-4391-909f-7eff92084b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e0a058-da9c-47db-bbf2-6967536527ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63df699b-522d-4195-8713-9a256cf335d6",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63a58680-9ee9-4561-8172-00a1562cb043",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a98d24df-4613-40be-af58-24ae4b570936"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73aa0156-06c9-48e7-b838-d5011bc4bb66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d44a83c-5f8c-4b68-8501-2d94c3d1ed86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9014689d-1fb7-4fbf-9215-607c5b2dc653",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87e458b4-d2c7-4d85-ba29-681992135f6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffc139aa-bcb8-4514-ac6c-c4b91ddaee11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a41e0efc-6240-47ba-a70d-d5a94e39569b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eff8ee1-23bb-43d2-840d-6413bdd01bdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf99020-5ecf-4b32-80ca-64cd3d215f8b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d74972-875b-44f2-a653-fcbcbcd634df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b5d7e72-c814-44bf-b170-8492eb0fc77b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dc981b-8af1-4629-8670-b247e1d9d5a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edfe1a61-73ba-4200-81eb-9bbbbaa8d1b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b23fa0e-67ca-4187-be08-984c307aa581",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02760803-4d68-4484-85a1-226f7071842c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb36fd25-8375-4025-9018-b7cda7157354"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6731e2-0d91-4514-aec4-a88b6a7cc6bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7e4a6f6-0a77-4b2c-bc17-9a49e42a2281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5cc10a3-3363-4e30-8fe2-2f3abe0b411d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7634a15d-cea8-4f87-9262-5fe1de99ee48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ceca43-c91d-4ba2-a7b6-84cdc62add16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "615e4e42-4e49-4bd3-8269-d72b000df383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "341aa09c-400e-4d54-a7aa-342c37c9fff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b64d81-6b95-4732-96a2-babd91501700",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6b1efcd-ef27-412c-a825-b2cc83690c40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27c27768-592c-4c7f-90d4-293500300559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e989612c-c1a5-450f-9ab9-04da7ccd83b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c841d975-69d1-494a-81fb-9b0663112f23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb541143-b079-465a-9208-ba0636fc1832",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5735d78-f01d-4daa-acc6-7a6e53c3b9ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56b3b57-2b88-42e4-8f84-84f586167eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305d46d5-4904-49de-a633-7e9898591efe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0cd884a-5881-4361-9a05-8afb9b78471b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16df32af-0614-4d09-bb57-15d1f9e2bfe6",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a830b8-1927-4800-8b1f-a510478631c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04782de-16d3-40f2-a3ab-4571091f7f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edf1bca-7c77-493f-8352-d73d5f295d65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56165ec3-a292-4b89-90e8-6a14661b79c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e971d37e-1dea-4d36-9a6a-080aac3739b5",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d666c87a-12dc-431c-aaaf-e200951191f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4863973-399e-43dc-9fa3-41b8e76e543d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43cc81db-6434-4ff1-a93a-19589bcea0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b64e87e-18db-431d-aec8-65a6f76fa467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f917aeb6-9a18-4ce9-82e2-292472659e26",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4712e98-4c6e-4654-9b3a-60eb712b3959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e00dfe9f-4143-403d-926c-9b8a3d9c2a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25965796-5350-442c-81e4-9029a3b00489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "927e6fa2-4cf8-49f7-b63e-46d53212fa50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a72867d4-1627-4d80-b4c1-68d0970180ed",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d604f0ed-6136-452c-8fde-9968d1eb1424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8929716-c190-4d76-afe4-26cd1e2ee44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69afa79c-1fb0-4a43-8b1f-31513eb5cb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d4df63c-cc02-4a31-9061-b6f79b4d50eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f34d089-6d0a-4cb2-bb73-9a3b663a8f77",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f34ee3c-d17d-4b77-a86d-707147be47c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7c12d30-63f6-4d39-807b-91760f1ef000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "978b3977-4bc5-4fb8-add7-8441d4bf865a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36e499c1-d42d-43eb-9917-f19d1944a00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5b421f-b597-4ae7-b14d-48d4d642e812",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "175bd6ba-3893-4bba-a944-33fb083e15d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5941d459-8ecd-4dfb-9731-e14f003401eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccc352e-e3c6-438e-9ede-6f78e08854c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a9e62be-543d-4d4e-b1f4-b57aa5f2ca53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d040730-7dc1-4e68-860a-80ed124e5e47",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7819a195-0843-4812-927a-1147f04fc7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2469dd10-3b92-47de-8e07-13dbe5b62884"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40db6709-3a24-44da-98da-85f930b41a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41c0951-9239-4846-968a-9f179e694356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3b75429-43d4-4601-b86d-34f81b548563",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2d86ad6-99dd-4345-b02d-21d0040d4345",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2572c8-9ed7-47f8-b1cf-94da643e71ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2777e9-7748-4512-ac34-d5868df3ac84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e236b23f-3570-46ab-a4cd-9d4fb4cbeedf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79e0747-0b03-4b1c-b087-d8fe808ff2b0",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31594a7-f4ba-479f-83ae-de713685eba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02126582-6153-4bb9-a2e4-166a775af0e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b4ed322-afbe-4dde-b744-f53c118242d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7644f639-36d3-4c77-9926-8dcd6ba8ad1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd842247-c284-48bd-8d09-0c0794eca6a7",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1042d85-a694-4941-b265-18be9f071ef8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67e40044-a5d9-478d-ba3d-a9b297a0ef08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a66d899-1041-4a27-9264-f471aa01910c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31eb4980-ccd9-459a-97c3-cf97bf45e6bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6096ff4e-1361-478a-8c38-26084f01b826",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c0fc88-504f-4715-b317-4c1c788d3502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de70f802-b762-4938-87c2-aaa8182799d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46b8fb96-7e7c-4ce6-89b1-108b0b0984b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895e56eb-3fb1-4d20-adbb-cfdf88738957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cabf81c-4221-42f2-bf8f-e50674ebe740",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "499d5d2d-65f3-4858-8315-5c646a158aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312bbcfb-5c35-443d-8c6c-165b1eece5fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c8f677-9a2c-4f7c-b7be-bc767de33b48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "061a4339-6ace-4e4c-a5e8-f5877a8cfb76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "503cfec3-09b6-4dbc-9d7d-eff0db9e3f8b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f722f87-9ceb-42d3-8c44-27336e45483e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2660adc-667e-4a14-93ca-bfd1b92e8716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0da56eb0-613c-4638-b005-e54f269f501e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60457677-fe28-4a1f-a3bc-abf50ff73e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56481346-0761-4e70-9e16-512c1381fb8d",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b1d005-10b4-4bf1-a74e-b65359b1e0db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba876508-ef56-46c4-898f-8ee2b413b685"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b16c141-68bc-4358-bbf5-c887e0b062cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9ecd42b-c0a0-4a72-bbee-03d94b1395c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767a2d8b-513c-48a9-b371-15173a6c668f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3bfa357-891b-4f88-9786-e3ab214e6a4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "188ef974-039d-43ed-ac38-83005b2046c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc91824f-0cdf-47e2-ba04-aa6cac33c396",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed4a6338-4e49-4987-bafe-7326ef5e666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5dee0fe-6a94-425b-8930-d259d5c293bd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a545ddd-ceb7-42bd-aaae-32bd83471819",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a087bfcc-fc26-4274-85ac-eb1e84a71fcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e49c4656-9fbb-48ab-bf98-7ec5d5f22f3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cac7ae67-4b1b-4802-ad8e-c44c6280e650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a6c65c5-9523-4ef6-8a01-b865d13e5839",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "910f7beb-4a7d-4e06-bd8b-fd363f491d3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c5fb16e-257b-422f-8aa1-163acb5f3726"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb283feb-fb39-4bab-97ba-78d435c5d420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd6ca79-f7c0-4851-87e5-0e17dcda7a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0560694b-73fa-44fb-965f-e87a598a4610",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e61a13-bf8a-4892-93af-091b1e86df17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "236e46fc-1bf7-4bf0-bdb1-9a4a587afdd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9d56ea-93de-4962-bca6-980fcef3e6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44ec4de4-3330-4758-897c-205b9ad388fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e16157cb-bdb7-4737-b6f4-dfb9fd275792",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a37986-ff54-46e2-ace0-0b7224b566f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27044c55-3e4e-4b7f-8f88-4c20372b4b89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4daccab2-185b-4256-b878-3252b958dc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e7aff1f-ef91-48a3-949e-67112ab2b628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe7c53fb-5690-4307-b745-1114c3243208",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15335150-72d6-4392-aa67-c26e20bf067b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab30b09-f7e0-4d51-a020-76acaa17bd8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2ff78a-d6a5-452f-afe3-90e6b7fed01c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06999938-75e1-4217-9c94-2f9f88de0dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3394f9fe-498f-4730-8403-244906b0980c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb53e828-5d13-4533-bd8b-e847960c4e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0c0a608-422e-4cab-8be5-e4b707e6a27a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47adf66d-8102-4fcd-9291-956bae31fe17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727fef71-8b84-4c00-b5c2-6bf225b41c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dd856d-2b17-4e23-8be2-1910daeff01d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c135ab-a09a-4bf8-9122-76da0e8d8e7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc7e9052-5728-466a-bb4b-deafc24ec0be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b867587-1a6b-455e-9072-ef93c3445ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ca3b82-ea65-46da-93db-6823975022da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb44ed2-cd83-46b0-ad26-85d43dd890ea",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e8efe0-fb7d-4cd2-b553-882341c32cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0f64e9-56de-4d08-9e0b-1706962783bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f1bffb-dae4-42d8-9e91-a085b2b18dee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f30d7b12-c341-491e-95fa-d7845b289f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f41e70-b412-4bac-b24c-3ec86cfc665f",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4d8c08-3f55-4fa3-b09c-0bc9eb806be7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9aaba24f-e7d6-415a-a485-f900465a10de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae49936b-192a-4294-a407-9be0c2a08fec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bea6586c-0989-407a-8b84-6802efd6dfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bb430d-2be3-45c4-bd74-6ddd5d6959df",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00cdb8f-1bfd-414f-a891-6ed079c1da94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ba87b30-9b24-4c97-ae1a-d47fb799fcf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a544e4a1-6777-4f76-b213-c7c7c5594750",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47986118-0d68-4c71-9542-8caa8d1470b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4798c05b-3eea-428e-9840-fe33757056ee",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75158348-047c-492b-860e-1e8c2a688760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a8eef9-3c4e-4400-b3c6-d2a5a36dae26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f845ceaf-b3cc-4caf-a807-114be71f0804",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "accb7a88-8e6a-404d-9d38-2cdb3c566e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69288342-a438-427a-93a7-0a220f41172f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffdb596c-9750-48da-8261-9f9439267761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b54739-381d-4792-af58-10eea7ec1721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf9e9db-2454-48a1-8204-53cb0c8e29ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8789292d-921e-4d90-946b-f951addd53e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f653cb3-2655-408e-a700-a337ccd28465",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c5504-7b71-4eb8-8862-36790fec5d26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f58ec44-b3a7-4810-8465-c4795d3f69cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e5b858-5a20-415a-bc4d-1b3b92f9b2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c82521d-e182-4d23-92d7-19bc8c5eae18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7682b7-ced8-413a-a515-9033b55da8d9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02299081-8526-490c-b2a9-eb3dd9e7811c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c3e69c-1269-452d-b084-ed8a641347e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a3be58-6f6e-4571-9bc6-0b92a444d754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5974391-27cb-4494-8859-ec30db408c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f7e9b-8506-4612-99df-d82e64b1fa9f",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e424564d-e5ae-4ddb-ab32-1b8b55879f17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "127e7071-055a-4c23-9867-0844abb52001"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fe9b8e3-3b84-45ef-bb8b-cd20dd7c5c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "806a4cb2-361e-4a55-adc3-4c04a05c284d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaed4c8e-bc8a-4172-8133-d24194d25c87",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0be2cb-cd54-4b39-bb0d-cc448b9a8871",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43cec8d4-8c30-4ff3-a3a9-88cf826d6106"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8b16ca-bc4d-4ccc-8d50-742c4e7d2dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a5d74be-b3b3-434e-9447-24610dcbcebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f6ee53-7cd8-4a00-9605-57c9dc7bfa3c",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38527db0-1a44-4bff-8d56-1dd12b6a213d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc7ddecd-49a4-4078-8d1b-9f8ba85a7623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a042892-c7ec-4bab-b062-aeca14920919",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b35748f2-5547-40f2-b894-efa41cc4e4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e70936-6109-4f82-adfb-d78d63864c36",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef480e2-618a-48f5-956d-8e7f1948642c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1a52024-7893-41f0-947d-8c59074a48dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c204f98-3006-4f8e-a01b-4889008123aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52ef740f-ac2c-4361-9e39-00bd6b4561b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35895d10-b7a3-435f-b432-2aa7dffd7460",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72374d3-eba5-4793-bfaa-fe17262a39c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3701dec-28bc-4d05-b44f-651140c041d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78673a65-b137-4b90-8fd0-53dceb1393f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae4ab381-e34e-4604-813b-56818388f71e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9139c214-0997-451c-9720-6a7dcdb6d0ca",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174fc106-b1ce-4514-bb18-fe2d5d24ad6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f51d8ac-ae59-4530-8aee-a2c92ef755a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305f4b97-2704-40fe-a1f3-7a15269c1124",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "383d1b9b-e73f-42f3-9701-ed28d5f32690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "337ae799-e039-4e6e-9e17-aa007336fc66",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5166591a-f3b9-4466-a42d-978957ec3670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90a00f0d-6598-4ce7-b33b-e40f3377d882"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279e68ac-f887-4635-bed7-231ebb6692fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "435a3b31-016e-42ae-a2c9-5b340e378db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d497a50f-44a6-45f7-97b5-334023bfa517",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7aa43e-23c3-46bb-a355-bac661a8dc6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b13be6b-6071-45e4-bfc6-f51a25c13b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1a52bdd-b287-4ff9-b63f-5ee5eeed39b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773445c9-3279-4ce1-84ad-74e4372a798e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85f3939-7db4-46e4-993d-48ceec7ea392",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a22527e-3498-46d1-9709-acea7745ef43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84ca1077-9997-47e9-be24-6125749fa9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ce29620-64fb-4861-875b-403ce7086cd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f36d80d8-b7d9-453a-8a86-15512649ed63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076be4ab-9c75-4455-bcb0-747559c730b6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0636a62e-5634-4a03-aa4e-3f7d6e45d573",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d30e6b8d-e7c5-4cf0-9e04-5a7bd6a8b27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d46b30-b77a-4a0f-be0b-2fa1385ac8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbba42f9-aab7-42e8-962a-92511c60700e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865c45e2-e186-4655-8107-72dfa6f8b795",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa982a0d-dd26-4623-b81e-a1fbf7492b47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c8a78d-867a-4b58-bd14-f4f2583c8f50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37a1f410-1c74-46d8-aabc-726bad28b6bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d931351-56e1-4126-af76-caf25f522452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb15462-6da3-40d0-ad00-ee63df5e3daa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0644dc67-59af-4f81-98eb-5ee12204a60e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed1485c1-2bf1-496c-8410-f6407e8dbd37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06008e36-ab18-4882-8c6d-c4b8ca86c66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c613653-f119-432a-adf5-99f18e102ed9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a63b84f0-34f3-4fcc-8e11-9fc4fb36a581",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09eaf0a4-c092-4fe2-bbd8-41fcd2c33b21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2a56aa-5d7a-4958-8e6f-62031e3b7b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36fb2433-bb0b-4f55-9569-732183ae4f08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bc63d4b-a08a-40d0-9151-8e061dd674ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104d5f80-437b-4eec-997f-20e27858e0d9",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd582f1-a63e-4544-b7d0-6c240c424b87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d1bf65-33a0-472b-b12b-e338ddd50044"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7716c420-b157-482b-b519-6b74eada22e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c7dc7d-49d5-44f2-b0f8-e9e9f413164d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8fd071-e121-471a-bc7f-abab0d1763ec",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4d69eb-ab60-47ef-9539-82414a254855",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3770a30-8f62-4889-ada9-15dec6bcfedc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c579ac-818d-42d9-a5f9-0b9c8d46edf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5677fa54-5d31-491f-ad7f-222b4d869df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc9318b-2601-4db2-880c-b10a1350f9ba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1cf3682-5e89-4487-be16-e7a9661ac6ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6cbf5cb-5ac7-4807-8116-66ffa7acd5df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b072d0-8d50-43a7-b0fa-24991f4f7f06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03429a32-ee06-46a5-a25a-6d7b157dcee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f5f89b-05f1-4071-abec-047b52c17ad2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce2895f4-f209-4f77-81f4-6bc6f80c0f25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a505f3-1788-493b-a2a7-d67594b44047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d742cf-8abd-45c2-a4db-29353a48834a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd3364a2-0638-4435-a4d6-da1aaa553bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82bbc3df-2d41-44a5-974e-a99f2e722446",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b608d0a5-e0f7-445f-8028-e22151d4b804",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9637d69f-ca6d-4dba-bc30-202ef1f5d98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5092369c-c67c-441c-8bec-cfe9b0a41222",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d5a4d5-633b-4662-9aaf-776ee81cda3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d5ce50a-1ff5-4a0b-a1cb-2bc1d7e775ee",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b276c07-57e0-4a16-b713-dba609352039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e403dc8e-370d-4807-b4ba-78490abaee7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73051fc7-db7c-4fce-a9af-5848efb3eb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11686f35-4588-4399-b1b3-0f0fd2d1c83b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51512651-2496-43e8-b0d0-270d5d42d4a1",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f07b928-1e5d-4adf-b98b-54e6ddfac794",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a07d5da7-0ea7-4168-b8a3-52cfc87c5075"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e2eea0-6fed-4596-8f6c-201c52c69c4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fc28099-2594-47c2-bece-52f79a9037ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f735cb86-b81c-4002-8d6b-f2cb7e8d6f20",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e361f1-296c-44df-80be-fc82ddacec31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fb20ce4-f857-4997-9f20-f5ec2b5079fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecc9b828-80c7-45bf-abda-c3925f5a274a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99341234-3b1e-4e90-83b5-93a218553e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c906881d-bacc-4b76-b176-43f69a3e3dba",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d42e5f-606e-48d3-aec5-f80cd0708859",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cbb3666-ff82-47fc-a25b-b7762aa3c473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b637b300-f2cb-4db8-aaff-0b5db2038476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c504e39-12a6-479d-9a9b-2229d4a18747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1129d81f-9684-43a9-94c7-759b55faeaa5",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a332fbf-41f0-41e1-8cc6-cd174d24c9d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "826dc315-5274-4437-9294-7f2b5aa48e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d284d39d-f9d7-4d93-8b69-14e4704099f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce4f6a46-8dbc-46a0-865c-32f1f3ed7b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a93d729-1818-4859-9861-9ebd2c30aa69",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c7fb5d-009e-4981-94c8-f9fe4b0a4722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fa590a8-5aee-46cc-80ad-c613cb039b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e224287f-6847-4e86-b277-aab818c9e246",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2341b9a7-b11c-40b4-8df2-ea59cd146de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee701ee2-1b72-423d-be6e-1886b1cc8612",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06693a0c-d774-40b6-be22-da9f3ff58b13",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ba7142-16c5-4d5e-ba4a-17adad1a5a07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67dc0940-c005-43cb-8d06-421975d80c0a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b14259-8eec-4375-bae8-58f525c65ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0531b121-ea37-4d58-838f-28cbe7e89372",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3ff2ec9-b422-4f2d-b5d4-e1f61c44a35c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d4754f5-c96a-4285-ad88-a8552864dba6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "072ac0f4-4b55-4a0c-94fe-be9569859cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b14220b-3d94-489f-bf59-2363296daf65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f145eba6-0e45-4d0f-8361-7fa293ceb365",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a811b1-a478-4e89-9231-3bfe82644ad1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f37b1373-473a-4641-9446-3f8444db798c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d43b3d0-4c9d-4919-933d-db5b8a24991d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d389d29b-a4c6-421d-b70c-7c3d22ddc86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1445874b-ba21-468f-a6a0-bccbb5ca4692",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6ff1c3-0882-4fb6-8522-c08ce85ef303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccce417-2f4a-4cbb-96eb-dcd51f588205"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b09f838-1a4c-4b57-9214-100ac16e0b5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4172c9d9-e4ad-4da7-bd25-084bfc0f8629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcebc09c-1189-4077-9154-6bef49be632c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "890f2ebc-54dc-4329-9a98-1554134a2ea3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "838cac55-5e23-4023-9b77-a939c065e9b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468142d2-0111-4d9e-98c1-cdbfcdc45bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e62a1b4-b0cd-4497-8b3c-c856b0815589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c9e2a5-4703-4a11-bb06-bcfa563e701f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f67f7f-0bb8-41a9-9749-c19cae915be6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b697cabd-6d04-4657-b7ed-4b14a9b16dc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb04c9d-c89b-41f7-84b9-574b038fd695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2c9970-3f7c-4d96-8b46-bd37d7643ddb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d555e7d-e05a-46f3-8a67-da130318d960",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4588a9-0478-4213-a6ee-eae6025359e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa19b397-3c47-4efb-9a9b-ff5a34d8cc20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5632fc4a-5380-498c-8aff-30c91bdb6f37",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "804628da-84c9-47b5-bf88-ea3433a59640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e44fd0cb-a1ce-44d8-80f5-a5783f256445",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea7d35db-0c4e-4990-858d-0a7aa0478b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cf9b4ad-13fb-444c-8db2-4ff1517d1a45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f2605b-1da8-415e-b6e6-fa1b9e52a935",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ae6f922-1541-49d7-a79b-109907673c3e"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae7a5dec-6194-41ed-80f5-75ccc7257220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "92e3c7fc-0bcc-4542-8284-9b5db6613ec7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a95b1372-678e-4240-a30b-cadd5d176efb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7e80f254-5f08-471b-b461-a8b5789c4f86"
                    }
                  }
                ]
              },
              {
                "id": "9f9cd75a-2635-4179-8701-f257c4d1fe01",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "497eba74-56c2-4f5a-a2c8-bd773121c562",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1039dc82-45e9-4670-8e0d-4a24a0ca5388",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b9d72d62-c7ea-4434-9018-e705dd0c643f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62970313-b5dd-4c03-b294-0a91069be538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72d8c71e-6416-4553-acc3-c81063d9da96"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecccc684-f242-4581-9075-ff382333bab5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2cbc271-4d8a-4e0f-9e5a-d33e6c84297f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d2df14e3-3e19-49cc-a216-ad5547f174ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6dd27845-f5b2-461a-83f1-5ee391af10b2"
                    }
                  }
                ]
              },
              {
                "id": "a609cb09-b074-4ae1-8174-41cbac75b628",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "aa7ddd79-8761-4f16-b2ac-eab080562536",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a13b3eb-6c56-443d-a8aa-9a7538d402b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "91cdd1b4-ebe7-4ea0-9af2-f8001bd0ee1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf08b15c-15bf-4533-a749-a4b7bd56d3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c74171-ae07-4b02-b347-aac51c9d4071"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "01f79dcf-7cbb-451e-a496-17e5f33bd0f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5273c178-b161-4bf1-b039-3cef661d230e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "68c63d0b-081a-49ab-a8dd-3b7c8a925427",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8b99580a-cc79-4345-afc1-5558ea02345d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f83d4480-7e7e-42b9-88f7-4f5d6dcfb07d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0ede40a4-b2f6-4368-8bb9-baf6e9e41b17"
                    }
                  }
                ]
              },
              {
                "id": "81dda1f3-d88f-4cfd-97d9-d68dae263c50",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "914001e3-ab30-4af5-b450-6266e0cab0fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ac7bb547-964d-45b9-be8e-4553c4fbc543"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9e2c051-6ad4-4f88-88b3-7668bc625f0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d6547466-0341-41dc-99ae-73c365d3f187"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a797f489-af35-4469-b140-323aeaff0022",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f817e124-682e-4ef5-a477-655c6ede3d95"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ea8f340-9028-42e2-82fe-af0c621a4f19",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d82843eb-a7c6-4ca1-a218-ec6614bfa48b"
            }
          }
        ]
      },
      {
        "id": "8fd9c812-5c3a-47e8-9bdb-c340095a288a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e45a9f3d-fe80-4149-9869-e324d6e56c62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1705a9e8-c76b-4475-84c6-90ff21113d76",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "12df82a3-5f1c-4bdf-9eb9-c3c11e4cca83",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f88148c-9ec3-4ce6-bf8f-c1eb787cc250",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f1cf9c64-31e2-4ec2-a506-83ff41d4dae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f313a865-72a2-4ac5-aafb-3b9d438f62bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5fa0e704-82b1-4bfa-81b8-89024225d090"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12d138d8-0b96-4a7e-95d7-f669334698b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d52aa3f-508b-4a53-9c33-f0bf2f6210b2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "58980bff-602a-4d42-a4c2-8a7c9e3b51bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6751dc41-ccb8-4779-9684-52636e2af0b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83977106-753a-4cac-8a99-28820fec9f96",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "36862d96-0e95-4e13-a561-68c6568e26b6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5d32896-523d-4707-b810-e2645a9c4bc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e52b543-5c16-4c7e-bf91-5a43f44d16f0"
            }
          }
        ]
      },
      {
        "id": "74e37df3-e0a5-47ac-8ce2-2d3a42392e04",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d0fefaa6-6988-4ef9-a7da-16e69eb3830b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "de95945a-930a-4a7b-ba45-9da356fb4899",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c163102-88a0-4cf0-bd35-5287bd19f910",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2cd255-bcee-4e53-b40f-640df9335008",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80356041-4a03-4bf2-bcdd-347a7d186c0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0549a5a-d8ae-4037-a0a2-40202a7e0d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5cee70b3-3b65-4ca0-957a-0c645294982d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7338c7c-4933-4696-8a8e-363b6c0f4436",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af2f4ef2-3648-4eba-9a28-0eb8fb6db5d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5fd1eb6-ff3b-46f9-afd0-cfc5341ce021",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e366f22-6596-4dbe-883a-d943bbaaa46b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f79e6018-20b4-45b8-bebc-778348421e19",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8c3cec47-494a-4e74-adcf-08cb49342c86"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1926570b-fe87-4ce5-b7b9-8812c51ac329",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4d589107-5c5d-44da-baac-a8e07befde94"
            }
          }
        ]
      },
      {
        "id": "174b8dd4-7aea-44d9-8d26-aad0d8344080",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "eda34c36-d80e-42ea-acae-7d5c40cc1386",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cb4e3e08-5f04-4dfc-afb1-f2954da26541",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bb3e0468-2a49-4dce-a467-5710460814b8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88cf35f2-fee2-48e8-89c4-96b684a2fc74",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dd1b5f54-a79f-46a0-81de-456eb3fce024"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bb9868-fa53-4eac-ad8f-68e2f8a69477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "adaf4715-d8af-47a5-ac54-8fb6279290ef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26411596-0937-41e3-b994-67aea8d43ea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15d99398-f424-4238-b9cf-fab061e81fc4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c92237e9-429b-43e3-bc29-2fac9e991689",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e02dae19-7dbe-445a-91dd-3990b31c6a06"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e4f92ff0-feab-4b9b-8148-e9e51ec1a528",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a4c1803a-ad0b-4a56-a017-8255f91dc40a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d6a7825-87b0-4c3c-82dc-920dc8858fdc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "36de8014-b9c8-4bc4-866b-72bc7bbcf7f3"
            }
          }
        ]
      },
      {
        "id": "d2be31fe-d703-4c0c-a754-ed1384680e8d",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c5b2bce-380a-44e9-ba4b-39e397ec9dbc",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3be5dd97-fa0d-42f7-8d76-0098dd0a5290",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9de601ba-3796-43ef-9e04-6cea5c6f1918",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be013a0b-f05e-48f6-8b86-580541055dd6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a12d61d-1fb7-4b27-b985-609a1999b7b4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 129.6626984126983,
      "responseMin": 8,
      "responseMax": 14366,
      "responseSd": 936.2688706415486,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720658388093,
      "completed": 1720658429149
    },
    "executions": [
      {
        "id": "53a21d58-7d36-40a6-a7ed-4484f0d5ec94",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "28577651-1480-4085-a090-6f72e1ba8693",
          "httpRequestId": "a056b3ff-3d09-43fa-af8e-7ed872bfc29b"
        },
        "item": {
          "id": "53a21d58-7d36-40a6-a7ed-4484f0d5ec94",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "31696bb1-de7c-4a07-bba2-6d35194f57e1",
          "status": "OK",
          "code": 200,
          "responseTime": 40,
          "responseSize": 0
        }
      },
      {
        "id": "2907403a-422a-4ed1-a1b8-1a9b45fc222a",
        "cursor": {
          "ref": "ee974c53-bf2f-4ad4-9809-75074e6aa73a",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ff0fd59a-cf3b-4f5a-ba0b-23b3289eac96"
        },
        "item": {
          "id": "2907403a-422a-4ed1-a1b8-1a9b45fc222a",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "13803ca6-b005-47dc-9c3e-f823e423e082",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "5aedb5be-2ca7-48b4-ac00-8e7a48dc70ca",
        "cursor": {
          "ref": "4bcdb6e0-c93b-484e-a5cc-949eb1829363",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "67bf2c46-8fd0-4151-843d-367ddc5e5123"
        },
        "item": {
          "id": "5aedb5be-2ca7-48b4-ac00-8e7a48dc70ca",
          "name": "did_json"
        },
        "response": {
          "id": "bfea227b-7bc2-494a-bac8-4bec7d3b16a0",
          "status": "OK",
          "code": 200,
          "responseTime": 142,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af165c53-c866-452f-844a-3e5f525a68db",
        "cursor": {
          "ref": "4635c11f-3102-46b0-89f0-2a4f083bce29",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a1ae2241-a9df-4f3a-a5be-59eab70d9be5"
        },
        "item": {
          "id": "af165c53-c866-452f-844a-3e5f525a68db",
          "name": "did:invalid"
        },
        "response": {
          "id": "33cbcab6-67d7-4407-9aba-4397d9c8b070",
          "status": "Not Found",
          "code": 404,
          "responseTime": 653,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af165c53-c866-452f-844a-3e5f525a68db",
        "cursor": {
          "ref": "4635c11f-3102-46b0-89f0-2a4f083bce29",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "a1ae2241-a9df-4f3a-a5be-59eab70d9be5"
        },
        "item": {
          "id": "af165c53-c866-452f-844a-3e5f525a68db",
          "name": "did:invalid"
        },
        "response": {
          "id": "33cbcab6-67d7-4407-9aba-4397d9c8b070",
          "status": "Not Found",
          "code": 404,
          "responseTime": 653,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efabdbe-25a3-424f-beb2-ba096187a9d0",
        "cursor": {
          "ref": "0c32c1a1-346c-4a4a-9cc9-89ae03a1db00",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "c77d301c-5b3a-4066-b92a-01f7f251917e"
        },
        "item": {
          "id": "9efabdbe-25a3-424f-beb2-ba096187a9d0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "00f5dda4-f8c6-4650-93b7-653d07bfac5c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd490d7-de98-4069-98f0-ff0e11346528",
        "cursor": {
          "ref": "b215ad75-d0e3-4296-8764-79c02a60dec3",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ce1a2d40-91d4-42ee-acb7-49b4eafc76a9"
        },
        "item": {
          "id": "8fd490d7-de98-4069-98f0-ff0e11346528",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "eaeb7861-ee71-4583-a068-1e4d19030ba5",
          "status": "Not Found",
          "code": 404,
          "responseTime": 37,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcde957-7529-4533-aaf0-f327b19cbd63",
        "cursor": {
          "ref": "f632c7dd-1616-4df5-831a-a6aa73bb43fc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8f034cbd-f9c3-4f28-b282-901ef9156543"
        },
        "item": {
          "id": "8dcde957-7529-4533-aaf0-f327b19cbd63",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f05f02b3-d741-4143-8288-ef384f7f1ee7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836f1bbc-2375-4a8e-b952-a770a27dbe1c",
        "cursor": {
          "ref": "63b12dab-7607-4878-bef8-036c931189b9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "34f6643a-391f-4ed9-bf1e-39a29092e056"
        },
        "item": {
          "id": "836f1bbc-2375-4a8e-b952-a770a27dbe1c",
          "name": "identifiers"
        },
        "response": {
          "id": "3ac896d9-1602-4b32-a840-721e1bf87269",
          "status": "OK",
          "code": 200,
          "responseTime": 45,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db84fdf7-726a-4349-8d39-b07ae665e204",
        "cursor": {
          "ref": "40238417-5191-43b9-ba0d-e3ae13e766ce",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "28893038-2ac6-4b4a-9e07-e3c479b5ca05"
        },
        "item": {
          "id": "db84fdf7-726a-4349-8d39-b07ae665e204",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5558961e-ba28-4b3f-b457-645326ce6952",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eece52c3-c8c6-47e1-a1bd-956ff23cac5f",
        "cursor": {
          "ref": "d5818b78-2dc9-424f-ae39-8f88249e15a1",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5e36d080-c735-4556-8b99-ac09a2629c0b"
        },
        "item": {
          "id": "eece52c3-c8c6-47e1-a1bd-956ff23cac5f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "91b5edb1-3984-42cf-93ac-3e56f4f58010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18894570-aab2-47c5-a8ef-9e59910ea49a",
        "cursor": {
          "ref": "904f3b51-abab-494b-a655-e0b6c16228a5",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "66d23209-4ea9-449c-bb4c-dd88784069d6"
        },
        "item": {
          "id": "18894570-aab2-47c5-a8ef-9e59910ea49a",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8ffb46fc-8ff3-4c43-a666-e0f2cea36dcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54cf883c-752f-40d0-a042-1fd85d31cfe5",
        "cursor": {
          "ref": "71eb1950-f170-40b0-93c9-42597f2133a0",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "77f723ad-4f64-465d-8f40-66f987cb2ee1"
        },
        "item": {
          "id": "54cf883c-752f-40d0-a042-1fd85d31cfe5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b08f50b1-b69a-48dc-b9ae-889c1d8f8e2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de0e9f0-fa85-4acf-836e-a05651e49bae",
        "cursor": {
          "ref": "cf403fee-f0d1-44a0-8a00-dafd22a7d158",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "992d9409-d8f0-42bb-add4-c17477b20106"
        },
        "item": {
          "id": "5de0e9f0-fa85-4acf-836e-a05651e49bae",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "30061c66-7c8c-409a-8340-6a9c70f9b563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3d61a98-ad9b-4e8b-b8ab-f0f8a8f51216",
        "cursor": {
          "ref": "494d7e5f-3326-4523-9311-bd8692403e9e",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca52cadc-1e3c-4cac-8506-2982e64b15f9"
        },
        "item": {
          "id": "b3d61a98-ad9b-4e8b-b8ab-f0f8a8f51216",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "39735a1b-ba31-4b00-8c77-15ca76d713a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 126,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99075357-8662-4545-b04c-53bdc766d843",
        "cursor": {
          "ref": "fdee5cb6-0bae-4cb2-9ba4-63be092e0e01",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "80f3e4f7-c0d3-46da-be77-52f5c9fed63e"
        },
        "item": {
          "id": "99075357-8662-4545-b04c-53bdc766d843",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "d4e6a47e-a36f-4d79-979e-ebe704570c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e40b2b05-b308-4832-8541-98986fed8f79",
        "cursor": {
          "ref": "3f1d0457-7d47-4b00-9426-619bd3b93329",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ca1a5baa-f9c8-4ce3-b0c4-0091f982a9b0"
        },
        "item": {
          "id": "e40b2b05-b308-4832-8541-98986fed8f79",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0fb28938-29d0-46c4-baef-892db94902e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad1cbbb-57e4-405f-b243-b36334f76883",
        "cursor": {
          "ref": "601bdf06-c74f-43f2-8970-7e1999b6847d",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ee6702d6-c636-4da8-9636-46935a250446"
        },
        "item": {
          "id": "5ad1cbbb-57e4-405f-b243-b36334f76883",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "2535953d-baf9-4dab-9226-1dfb6f3e6dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b15f44fc-f94d-42a7-ad87-5077b2adbe87",
        "cursor": {
          "ref": "bb3c2dc0-63ca-4692-8437-0f8494b03d14",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "d9a1918f-7171-4e99-b8db-8236592848b5"
        },
        "item": {
          "id": "b15f44fc-f94d-42a7-ad87-5077b2adbe87",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "99cc9380-f02a-4b65-ba9a-75b21d6474e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82172703-14c3-4289-9bc6-bece9bb451d7",
        "cursor": {
          "ref": "04409f81-e48a-4fac-a03c-48d551787f0b",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "07502192-a6e9-4e0f-ad0c-711de0cd4f17"
        },
        "item": {
          "id": "82172703-14c3-4289-9bc6-bece9bb451d7",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "dd7e13b2-e4b6-49be-bae1-139fc15f880d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c21f8fa-3217-4cbd-be15-3e27ab7929c7",
        "cursor": {
          "ref": "efdb71f6-44d3-4e9e-ba30-c685419631b1",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4a0f7c26-16ec-41b9-9b4d-50b2dd00a7d8"
        },
        "item": {
          "id": "7c21f8fa-3217-4cbd-be15-3e27ab7929c7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "71b40566-f88c-4899-8798-c6746baa48af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a00275ba-828f-4448-8de5-cf160a390143",
        "cursor": {
          "ref": "3041a70f-2be6-4a33-ba6e-96455dd42ac9",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b1f46973-4be7-47fb-a96d-643e3b1c87bf"
        },
        "item": {
          "id": "a00275ba-828f-4448-8de5-cf160a390143",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f04a633b-b8fb-4c87-945c-a209b5d75f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a743872-479c-4b47-8a97-6a9e25f78e19",
        "cursor": {
          "ref": "34858050-74d1-4108-9660-3b0155791bd4",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "82cc5fb5-3b5a-4451-873f-f9e71d99f6ea"
        },
        "item": {
          "id": "0a743872-479c-4b47-8a97-6a9e25f78e19",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "71819a93-0ec6-4faf-a7bd-1750331aeb04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0459c0f-6336-4552-927e-edb14ad930af",
        "cursor": {
          "ref": "c5c8e8e9-c159-4ded-b0bc-f99fbbf222d7",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a36827fa-38de-4560-ad9a-069c68b1ad04"
        },
        "item": {
          "id": "f0459c0f-6336-4552-927e-edb14ad930af",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a64d77b7-4a5a-4c55-af05-3dbfca213ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc91b12-4c5b-4814-b612-8456db323860",
        "cursor": {
          "ref": "19da5af5-66e1-40b8-82f2-523fedbbaf7b",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e6750862-353a-4999-b385-a52918d33fda"
        },
        "item": {
          "id": "fdc91b12-4c5b-4814-b612-8456db323860",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9b7572ef-2376-4efa-9451-32ae0493278f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f481e1-f3ed-43cf-9bc7-c775bbd23edc",
        "cursor": {
          "ref": "16371a24-35ce-4198-8e1d-6ffb0c6875c2",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f34898b0-7b71-416f-ba19-c32c2c86d16a"
        },
        "item": {
          "id": "99f481e1-f3ed-43cf-9bc7-c775bbd23edc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "d10d028e-196c-4c4d-b67d-a51f6ad989bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb35f7f-1179-4e25-92fa-4dd2680e5525",
        "cursor": {
          "ref": "5a9be756-0f0f-4fb7-8ec1-05b0f8acc0c7",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "05843cf0-bf13-4a02-8f64-0cfd7118a9e9"
        },
        "item": {
          "id": "7bb35f7f-1179-4e25-92fa-4dd2680e5525",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "8797999a-cea6-4e92-83d8-b63fb4f940e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9951227-89d1-4a86-b655-7b4ced6f0e1f",
        "cursor": {
          "ref": "3eabcc5c-b166-480b-9671-2962a86d60a8",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "97ccd726-9cf5-47db-b71d-df4c693d029b"
        },
        "item": {
          "id": "b9951227-89d1-4a86-b655-7b4ced6f0e1f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "67a70891-3fa3-457e-be67-7d7a31fd673e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4d302d-ffdf-4a71-b4e4-6a71fd20d721",
        "cursor": {
          "ref": "f5fc57e8-a1f9-4548-a629-3fd47f8061fa",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c59cc784-f694-4a66-bb92-9bc0fe459a37"
        },
        "item": {
          "id": "8d4d302d-ffdf-4a71-b4e4-6a71fd20d721",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "bb26095d-faa9-4c1f-96de-0c78beb93d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8d9048-7532-464a-95fa-a16ccaa93c28",
        "cursor": {
          "ref": "f84fccdb-bda8-44f3-b23d-c7d377d4f8c8",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "af355d65-88c9-4fb6-9f92-3efbe0ccbe44"
        },
        "item": {
          "id": "2c8d9048-7532-464a-95fa-a16ccaa93c28",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c5903ad5-a6f9-43ae-865e-8647588f450b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98e6c0e-a38c-4dfd-8787-339da4810b72",
        "cursor": {
          "ref": "9310bc41-c15f-4927-a3a4-85b57e692001",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "57c4065c-232d-4a9a-b894-daad96afcefe"
        },
        "item": {
          "id": "e98e6c0e-a38c-4dfd-8787-339da4810b72",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "e157b275-7e42-4bbb-9ccd-5fea4a877795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeed9957-8337-49b7-90a4-ecd30a76f057",
        "cursor": {
          "ref": "92648369-2dda-4e19-99eb-08e621f55869",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7a4f51c3-41d4-476e-972f-60c57515de9d"
        },
        "item": {
          "id": "aeed9957-8337-49b7-90a4-ecd30a76f057",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6267a813-4dfa-4169-a641-8971f921ff44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7730147f-d2c6-4ba3-82ee-fd600f7c601b",
        "cursor": {
          "ref": "d9d95d79-89b3-4906-b7c4-6ed985f66a46",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "809aaf9d-4afb-4619-8752-dd154cb955e8"
        },
        "item": {
          "id": "7730147f-d2c6-4ba3-82ee-fd600f7c601b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e2c6c759-0565-499d-bde9-293a2ac6c56f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b6e5a9-d132-4830-8cec-368a468c9abe",
        "cursor": {
          "ref": "61975f71-c642-4f83-98e4-ce8153e20650",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "790382ec-70a9-4877-824d-cb55b3fe0c06"
        },
        "item": {
          "id": "a1b6e5a9-d132-4830-8cec-368a468c9abe",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ac06b917-744e-4df4-9f4a-bc05775fcd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "496eef45-c24d-4bba-a324-c7214ef2f0f7",
        "cursor": {
          "ref": "d5b1f2e8-4869-4b89-8938-d76359e7be20",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "71fcf8b5-628a-494d-b879-6c018dc58f85"
        },
        "item": {
          "id": "496eef45-c24d-4bba-a324-c7214ef2f0f7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "823034e8-13cb-449d-b009-1547b91610e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0815af7f-db07-4301-836e-345b6e03fc61",
        "cursor": {
          "ref": "cfc44273-b2e4-4ee5-bf7e-a9fc19ce1454",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d2cfbc50-10c8-4ad1-8142-e39d15c6c907"
        },
        "item": {
          "id": "0815af7f-db07-4301-836e-345b6e03fc61",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "63b33834-6995-478c-82aa-5313232639dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45200821-a162-4c3e-99a3-ae7c5d50b46d",
        "cursor": {
          "ref": "2c5a6f24-821e-4aa6-a01b-8b981c1e0ff0",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f7c891bf-5362-4f3a-918b-3a7f3c89bdfc"
        },
        "item": {
          "id": "45200821-a162-4c3e-99a3-ae7c5d50b46d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "d3022afe-eaa8-43b3-8f9a-b5744c3db70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe6e5d3-2995-425f-8ba4-c3db6451f9a1",
        "cursor": {
          "ref": "877ee4f3-bf89-4cb0-93a6-25e8f834d4e8",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b98a52cc-39f5-440a-85f4-7783bb30ad6b"
        },
        "item": {
          "id": "afe6e5d3-2995-425f-8ba4-c3db6451f9a1",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "77421af9-d41c-4e67-b00b-768653e74956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c69f8d63-ad76-4cd0-94c0-0a876d3b0793",
        "cursor": {
          "ref": "5a2fda9d-7c05-4975-9c6a-360a26296017",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "117480b2-30be-4111-83d4-1b3c262d3e36"
        },
        "item": {
          "id": "c69f8d63-ad76-4cd0-94c0-0a876d3b0793",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "276fb20c-c19c-470a-95c1-b5b2f33ba9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad865147-6aea-43d0-be87-7e94027983a4",
        "cursor": {
          "ref": "7aab19a5-e06e-4e4b-9431-6893737f1e27",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "6243d940-b79c-488a-9086-e441af74655f"
        },
        "item": {
          "id": "ad865147-6aea-43d0-be87-7e94027983a4",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "401420bc-374f-4242-a97c-5af357fdb38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8539d8-c9cc-4bfb-bef5-358eb8b56dac",
        "cursor": {
          "ref": "06b40d4a-93d4-4dfe-99ad-3ececf6e575a",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "1603f471-1805-4bf5-9d09-16fab3d1ccae"
        },
        "item": {
          "id": "ce8539d8-c9cc-4bfb-bef5-358eb8b56dac",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "222f2842-0255-4eff-ba54-e340c4318c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe15537-79b3-403c-94bc-38e82ff81b79",
        "cursor": {
          "ref": "6169f671-b730-4b3d-8f73-76f42d380d3f",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8db459b2-79f2-4d56-b0ac-11f8ceca8fa2"
        },
        "item": {
          "id": "6fe15537-79b3-403c-94bc-38e82ff81b79",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c692e46f-86a0-4002-b36d-1a4202f84902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a8c4bdc-8abf-4e04-9277-51544e205b58",
        "cursor": {
          "ref": "86d0d43e-983d-4236-88c6-ac9068f1ed47",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "f5790404-5a97-4659-8c1b-d039464e5888"
        },
        "item": {
          "id": "2a8c4bdc-8abf-4e04-9277-51544e205b58",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "dd8aec22-5b57-4e60-a0a1-9ee0a748e354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc034ce3-4f49-403b-a55a-f995975d961f",
        "cursor": {
          "ref": "5e772769-a71a-45ab-99fa-47f5c83903b9",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a50c1ac7-ef07-4f83-848d-355253afb442"
        },
        "item": {
          "id": "dc034ce3-4f49-403b-a55a-f995975d961f",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ba158df2-3a72-4bc5-9b4d-12eece65da49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaeaf6a6-1605-4546-bb47-2f424af95fa2",
        "cursor": {
          "ref": "4ebd619d-fd3f-4ab2-8b8d-231e44664b72",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d4401e8d-eeae-4b8e-8063-ec609edd46f6"
        },
        "item": {
          "id": "eaeaf6a6-1605-4546-bb47-2f424af95fa2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "fc50c836-974c-4800-9c4b-f2500bba291d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "574528e7-6b9f-4b35-bfa7-10712f35c967",
        "cursor": {
          "ref": "b1273d56-23e8-4b20-afaa-d6a3fd9c507e",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3a44ae45-bc26-4300-b0ee-4184b32714c7"
        },
        "item": {
          "id": "574528e7-6b9f-4b35-bfa7-10712f35c967",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "27e40186-eb1b-4c32-87b0-2432b1de30bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c406011d-d472-491e-81b0-113045f40dcb",
        "cursor": {
          "ref": "b5550721-4d8a-4e27-94b1-4da865d7ba17",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c8941c8e-f41b-4a16-a4bf-1153cbeaee48"
        },
        "item": {
          "id": "c406011d-d472-491e-81b0-113045f40dcb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "d33dfccd-6414-48ff-83c4-896c6855de83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c254829-baf9-453b-9a9a-8364398ce9ca",
        "cursor": {
          "ref": "f44c6bac-b68f-43ec-b27e-fdb467c44fd6",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "d06b706e-86bc-48fe-81ef-5733d7076de4"
        },
        "item": {
          "id": "5c254829-baf9-453b-9a9a-8364398ce9ca",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5aeedf26-e4e8-4856-9ea5-c4c9f8814a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57340ee2-a71f-4978-b3b7-e7da3d6dcfae",
        "cursor": {
          "ref": "06757439-9e4e-448d-b9dc-6fe15c47ae24",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e99e2dd2-fa53-4be3-ba80-528d80a4e28a"
        },
        "item": {
          "id": "57340ee2-a71f-4978-b3b7-e7da3d6dcfae",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "cd738325-a290-4dd4-bae8-27ca43414a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6266c6-ae8b-4eb5-b7b5-f325d4bda8de",
        "cursor": {
          "ref": "165921ee-d443-45ec-b65e-ff2cfd5e928f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "674e7543-5de5-4de2-8edd-992eb1d67856"
        },
        "item": {
          "id": "8e6266c6-ae8b-4eb5-b7b5-f325d4bda8de",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "0ae1d792-c352-487f-9e41-7ccff52b1221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034c4691-c34f-4594-8160-8ec0ddc1db15",
        "cursor": {
          "ref": "e1275970-f669-4ab9-981f-c3544bc67984",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "27cadd1d-e817-4c6c-866a-7764d40c73f6"
        },
        "item": {
          "id": "034c4691-c34f-4594-8160-8ec0ddc1db15",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a7650fe8-41a7-4b08-aba5-ec920738141a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc152111-2808-45b9-a3b2-99ce1ed4d5b0",
        "cursor": {
          "ref": "db152731-8fb8-4f44-9583-383fb7c4eeb5",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9dfa6fe9-9cba-40bf-8ae5-b4bf7e22ca30"
        },
        "item": {
          "id": "fc152111-2808-45b9-a3b2-99ce1ed4d5b0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a80bf0e3-c4d4-45b2-b823-a6133e138188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872e18ba-59b0-4b7f-88bc-cb757dfb76e2",
        "cursor": {
          "ref": "d14ddb8c-6a29-4304-a61e-9e309cb67d7a",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "fe55f88c-fa40-49e6-8cb5-beae09d84fd1"
        },
        "item": {
          "id": "872e18ba-59b0-4b7f-88bc-cb757dfb76e2",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "65632a2e-26a4-4fef-96e2-52c7df696505",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b1d35c-4272-4c16-98c0-b452d1a51f8a",
        "cursor": {
          "ref": "5d8c3151-87d4-4f87-b324-011d0af8fd03",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ca261146-1ccf-4ae0-bd79-8117b0e05d36"
        },
        "item": {
          "id": "27b1d35c-4272-4c16-98c0-b452d1a51f8a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "68b855c4-0534-4d5c-bfd3-09c3702328aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c066b56-622e-4eb4-9c6b-1efe9fac2351",
        "cursor": {
          "ref": "788a56c8-7355-4fa7-99ba-c7e853c34ceb",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "4e1dcf25-5d23-47da-9f6a-18bd6c68d608"
        },
        "item": {
          "id": "1c066b56-622e-4eb4-9c6b-1efe9fac2351",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aed82461-2608-425d-b7ec-4fecba719250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ea22178-42f0-4225-97b9-26570e528825",
        "cursor": {
          "ref": "54efaf51-a395-4dcb-b8c8-d5341ff9397e",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "3bb77a51-feb2-4a72-af34-16073564a3f3"
        },
        "item": {
          "id": "7ea22178-42f0-4225-97b9-26570e528825",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "dd180d4d-bbe2-4179-8438-b5f917bd5e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36c5201b-442f-4515-a7fb-05fc09dd6cc9",
        "cursor": {
          "ref": "aaf8ce97-0c61-4fc2-9ca9-803c9dce06e4",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6bb85f89-be4d-4e75-a6da-e68ed52f909d"
        },
        "item": {
          "id": "36c5201b-442f-4515-a7fb-05fc09dd6cc9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "44bd313d-778e-4cf4-a5ce-e2b547f16bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85660133-562b-499d-b77f-dbd28962d63b",
        "cursor": {
          "ref": "21cb1849-aec7-455d-a340-1a3238a0a8ee",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "54de597a-7475-4a7b-bffa-95d71162f15b"
        },
        "item": {
          "id": "85660133-562b-499d-b77f-dbd28962d63b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "7eb95807-7de6-40fd-af6a-f3c32adc5c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b54bfe-d609-46cf-9d56-e4403c7b1b4f",
        "cursor": {
          "ref": "08d2c497-7140-4a62-8311-66b6546f7dcb",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "7beea055-8bbe-4b7f-9a1e-811098dff713"
        },
        "item": {
          "id": "b6b54bfe-d609-46cf-9d56-e4403c7b1b4f",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d8aed8f2-ee16-40e4-9e80-87a3d23b3257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f527435-9f8b-4842-939a-a06322f18fe1",
        "cursor": {
          "ref": "715a8f77-554f-4ddc-b4ec-e3e070a7efe6",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "07338170-ead5-4abd-8231-516208de8852"
        },
        "item": {
          "id": "1f527435-9f8b-4842-939a-a06322f18fe1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "269a17e1-e37a-4063-aba2-ad89307cb9fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c62525d-fa64-4933-bf5c-ac1de70b02b2",
        "cursor": {
          "ref": "ed3b6434-e28a-4dd3-aed8-cb14951e6ff6",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "470e7f83-c8ff-4acd-afb9-e1bd4c367ac4"
        },
        "item": {
          "id": "6c62525d-fa64-4933-bf5c-ac1de70b02b2",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e413aeed-6b27-4906-986a-535fefeeca2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 142,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d787dd1-7e58-4686-9657-34425fd31cbd",
        "cursor": {
          "ref": "8dd12cb2-d20e-48b6-8669-715401d6b0b1",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "daf93aec-56ff-445c-b7b6-67648ed3e822"
        },
        "item": {
          "id": "2d787dd1-7e58-4686-9657-34425fd31cbd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "a3b11852-af5f-44d6-9576-b6c8a4bc4ab6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2d5412-ce04-4b37-a52e-c4486c73841c",
        "cursor": {
          "ref": "0a37852c-8904-46cc-875a-c90fcefd7daf",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "14415f8e-ca01-40b7-b880-07bcbe262dc8"
        },
        "item": {
          "id": "9e2d5412-ce04-4b37-a52e-c4486c73841c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0e410192-58fd-4467-96a0-62ed21d2b11e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03b00e32-2f87-49e1-a1c8-8f0e68dedd88",
        "cursor": {
          "ref": "23dd92f0-e0da-450d-bfb1-a944891126c3",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8152d760-af97-4d49-bfca-69a22126be76"
        },
        "item": {
          "id": "03b00e32-2f87-49e1-a1c8-8f0e68dedd88",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "4bf85d64-7316-4bfb-ad23-18eb2d6b7704",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb68a33-24e1-43bd-8b4c-d211bbc8902a",
        "cursor": {
          "ref": "080d58bd-2031-4c73-9f1b-ebadb8f39cf6",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c90d8a09-9e71-4a48-bb03-31a82a14ef71"
        },
        "item": {
          "id": "2bb68a33-24e1-43bd-8b4c-d211bbc8902a",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a5852f00-1725-4b12-b32c-5345fd02a97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642f4ed4-42c7-436b-8cc8-bec4af02543b",
        "cursor": {
          "ref": "ad58196f-719d-4b4a-a228-61a8cf280ba1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "813092ab-85b0-47a6-9dc7-08395096d279"
        },
        "item": {
          "id": "642f4ed4-42c7-436b-8cc8-bec4af02543b",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9d9a27cb-f3e8-480a-a3f4-160b0898f5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dbff3c-4b7b-4121-809c-c784fe8fd85b",
        "cursor": {
          "ref": "a5e8748d-9baa-41b2-abc7-0d5f0a69425b",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bbb9fb05-19a6-4850-9594-613517219727"
        },
        "item": {
          "id": "12dbff3c-4b7b-4121-809c-c784fe8fd85b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "5f1d6976-c4db-478c-952b-a11e5ed9d1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d680d478-a42b-401d-aad5-5d92cc121004",
        "cursor": {
          "ref": "79d84be1-0350-4635-a53b-56b0eb9a6cc0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "51eff560-3a51-476c-9819-caf5d58444af"
        },
        "item": {
          "id": "d680d478-a42b-401d-aad5-5d92cc121004",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a788db49-eb57-4aa7-af32-9864c13f1d4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbaacff-07a8-4cf8-a744-84841117516d",
        "cursor": {
          "ref": "b7e263bd-7983-4d43-afb3-a2254298037e",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "452a3975-51ef-4f92-a1e4-988b76ee23d9"
        },
        "item": {
          "id": "bbbaacff-07a8-4cf8-a744-84841117516d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "dfaf8e1f-a7f6-4bce-bf2c-06df082cf6bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cce005ff-0acb-433f-b1f3-232096bef5cd",
        "cursor": {
          "ref": "4aafbe1d-23e7-42d0-84c8-6cde8a2ae475",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0c222d3f-8f71-4c56-8fc4-a34a8b4bcd51"
        },
        "item": {
          "id": "cce005ff-0acb-433f-b1f3-232096bef5cd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "49c91a48-1fb9-4822-8839-f22140122bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7fd41e-81d1-4f9c-a54e-edf17692134b",
        "cursor": {
          "ref": "694a806c-71dc-4587-ae2e-d7bd3e418630",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "5c7b5e29-4be6-4084-94bc-5b53edffa0fb"
        },
        "item": {
          "id": "ba7fd41e-81d1-4f9c-a54e-edf17692134b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2219f429-38b3-46a8-b602-c1e7ac010a86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca47798e-abe2-4d34-8768-3a3815d875f1",
        "cursor": {
          "ref": "a7261824-020e-4a8c-8667-540e97d303b8",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "7496b7fa-3f00-455b-a348-aed640484fff"
        },
        "item": {
          "id": "ca47798e-abe2-4d34-8768-3a3815d875f1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "955095bd-1145-4abb-8e18-f85c4df29f22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1132c227-359b-4e1c-92bf-236c64c3f05c",
        "cursor": {
          "ref": "78938803-9473-4d0c-931a-5b6fdfc43cff",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "41b5a981-1fa7-4951-a77e-fc61183a2927"
        },
        "item": {
          "id": "1132c227-359b-4e1c-92bf-236c64c3f05c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f5750f9c-67d7-4128-af35-a7c8081d0424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bfbecb-d6c8-4662-bcfd-cca9daa92f09",
        "cursor": {
          "ref": "32de3f34-e8e9-40da-9c5c-382c8f5b3773",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f5327807-3ef9-4e15-9d0e-f8f3fe2cac3c"
        },
        "item": {
          "id": "75bfbecb-d6c8-4662-bcfd-cca9daa92f09",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "14bb35d7-1fea-463d-87e9-027822fa78d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 301,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99915411-e451-48d5-a276-480fad5e3c56",
        "cursor": {
          "ref": "86549063-b0a3-4ce1-8891-37d3715bdfff",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "dfdab6fb-bb39-4a3a-b016-b90839268284"
        },
        "item": {
          "id": "99915411-e451-48d5-a276-480fad5e3c56",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "211889cc-bd83-457f-ae9c-aa4a1e4097f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbdf8d2-e30f-41de-83cd-4ac3b1ad2e91",
        "cursor": {
          "ref": "37093352-6931-4bcd-b2e4-149de14e2f52",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "f6201622-e168-492f-b601-d81ebd6059cb"
        },
        "item": {
          "id": "7dbdf8d2-e30f-41de-83cd-4ac3b1ad2e91",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "ad8e57b2-4381-4f30-ab17-37650cebb6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c2bf17-2483-4a99-af3f-16acc805f648",
        "cursor": {
          "ref": "8df54644-248e-4673-95e0-a9fe4161c06a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2f0c1faa-8136-4e84-84ea-0a2f9ca72f7b"
        },
        "item": {
          "id": "f1c2bf17-2483-4a99-af3f-16acc805f648",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "780e4204-1934-41e0-b0c7-8a39dc95b89a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67708977-bc6f-4b09-aec9-70b3abc095ba",
        "cursor": {
          "ref": "f58e995a-b819-4a2f-8d6a-5401087d527f",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "4258b6a8-ac84-452b-b1be-a54034a80394"
        },
        "item": {
          "id": "67708977-bc6f-4b09-aec9-70b3abc095ba",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b6ad717e-323a-4385-a570-c3af757cf0c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22954541-d414-4782-aca5-4ceb8caac2fa",
        "cursor": {
          "ref": "79e925d1-dd72-41a6-ab78-25eab067cb9b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8b6d9a63-5eeb-418b-9d5e-6d651625539e"
        },
        "item": {
          "id": "22954541-d414-4782-aca5-4ceb8caac2fa",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7a07d734-3fce-43f1-8f0c-b8272d5a4376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c76846f-a863-4735-b8d2-0211895b0bd0",
        "cursor": {
          "ref": "bd4a5246-285d-4379-8040-cfc24991a1b9",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "09049ca2-254d-4d22-ba82-ca3c710bba6f"
        },
        "item": {
          "id": "6c76846f-a863-4735-b8d2-0211895b0bd0",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "eefb7001-1744-4a45-a1d1-ad41eb6fd1ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b41df58-0d5f-4ca1-b50b-156a6d4db4bc",
        "cursor": {
          "ref": "fe532827-a17c-4706-8889-28e31106d966",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6b04eaec-6da7-431b-9c00-fafe415194e8"
        },
        "item": {
          "id": "7b41df58-0d5f-4ca1-b50b-156a6d4db4bc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bb6e9331-29f9-4e6a-ac89-833f4c35a50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c50c4c-c623-4863-a71e-dea14322a7c5",
        "cursor": {
          "ref": "43357236-d566-44d0-a029-3b91c0244e15",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "92f32f0d-e6b8-40ac-94f1-79112c4fa958"
        },
        "item": {
          "id": "e9c50c4c-c623-4863-a71e-dea14322a7c5",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3b0ba108-b40d-4ca8-826e-0eff986cca0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6c8dbf-b53c-433e-af36-0741a42fabbe",
        "cursor": {
          "ref": "3911fc60-2e42-4109-940d-ad5f0ee6a714",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f310be11-489a-401d-8ce2-df54a633187d"
        },
        "item": {
          "id": "8e6c8dbf-b53c-433e-af36-0741a42fabbe",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c026a6a9-5e5f-4a5b-a095-8d6507cb5cb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3aa792f-fff0-43f5-a7dc-d0ff2efc28bc",
        "cursor": {
          "ref": "cd8583d6-ec38-4396-9dcb-b2633e23ad47",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "de7e908f-07ef-483e-8a26-98a620e22889"
        },
        "item": {
          "id": "e3aa792f-fff0-43f5-a7dc-d0ff2efc28bc",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0c7d00d2-4e5f-4bf5-9f40-19de1940c7ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0cb236e-2e49-4344-8a2d-a0c8cde909e8",
        "cursor": {
          "ref": "bfce27bc-3cd6-4b3d-8e27-de1f5e6e0945",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "33ad8a84-9150-4c78-88f8-687001e26096"
        },
        "item": {
          "id": "d0cb236e-2e49-4344-8a2d-a0c8cde909e8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "85608b8f-d749-4734-86e3-eaa99ab90956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f21dc8b-8102-46bd-802c-23fb0b00f13f",
        "cursor": {
          "ref": "eb0a61dd-4154-4b07-8ba2-507655fb184b",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fb5b4698-555c-473a-bafe-2a403a035999"
        },
        "item": {
          "id": "7f21dc8b-8102-46bd-802c-23fb0b00f13f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "5d6942bb-6030-485c-b365-dff65befe6ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e2cd0b-b7f6-4d78-93c5-37b92e776228",
        "cursor": {
          "ref": "f00ba3fc-6b76-4aba-bb7b-e1287b33e1f9",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d79cb22f-ffaf-4da0-b122-13a61ffce732"
        },
        "item": {
          "id": "e8e2cd0b-b7f6-4d78-93c5-37b92e776228",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5d33a012-21d3-44dd-8ff4-e36090546c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94361a0-e803-4963-8649-340a9bb0cdaf",
        "cursor": {
          "ref": "12740163-942a-488c-a7a4-acab2827a2cb",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "5639f1cb-ab76-48fd-92ab-6bc38f347115"
        },
        "item": {
          "id": "a94361a0-e803-4963-8649-340a9bb0cdaf",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d2d79bb0-ed2c-4fd2-b27a-47000b984cbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9b3265-dd5f-4b32-8130-1e2a8a5a5f28",
        "cursor": {
          "ref": "46d3a014-33a7-4525-a22b-bced0f84a9df",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "65134c78-385d-442f-9182-b20b3e9882f1"
        },
        "item": {
          "id": "fa9b3265-dd5f-4b32-8130-1e2a8a5a5f28",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1d771ad3-5a6d-41cc-a961-a63ca3116cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2419b79-0cfa-4765-8b90-593fcc7c328f",
        "cursor": {
          "ref": "d505210e-f555-4d36-952e-c642e2fb643e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ee987875-fa0b-4889-a42c-9657bba856c4"
        },
        "item": {
          "id": "b2419b79-0cfa-4765-8b90-593fcc7c328f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "87296d2f-5192-430c-915d-b540740f797b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafefd3b-dab9-44fe-8fc5-0b528f17053b",
        "cursor": {
          "ref": "500ca8de-1c72-48fb-9a29-0b7271edbd9b",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "084151a7-44ed-4066-a943-b25a9646eb29"
        },
        "item": {
          "id": "aafefd3b-dab9-44fe-8fc5-0b528f17053b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f1a1da6d-365d-45c9-a77d-2bb695748ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a14d8a-4735-47dc-8512-91303c54766b",
        "cursor": {
          "ref": "ad2de566-44e6-44ea-9138-23387f695379",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bf364d1a-27b3-4c87-b08d-00a988ef8ab1"
        },
        "item": {
          "id": "57a14d8a-4735-47dc-8512-91303c54766b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "7c8e3590-9fe3-4e4c-941c-c48754f46ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5953fdce-9ff3-4810-b5f6-7ca17df8a35c",
        "cursor": {
          "ref": "9a3305b8-3459-4ed3-adec-35b76369bf64",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "645c346b-f2a8-4a78-9e23-8be6895144c4"
        },
        "item": {
          "id": "5953fdce-9ff3-4810-b5f6-7ca17df8a35c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "129a590c-a10f-444a-8256-3ed94bd14781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd6fded7-8d3e-478b-aa10-98ccc176e70b",
        "cursor": {
          "ref": "0bafcdc5-5909-4872-a59d-457eee790fad",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "1395ba68-36e2-40e4-8ebb-7e7106322ee2"
        },
        "item": {
          "id": "fd6fded7-8d3e-478b-aa10-98ccc176e70b",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f2f07714-ec54-4727-a6ca-c4f98d321508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6335e343-a032-4ad8-8764-2d7a043c4152",
        "cursor": {
          "ref": "80b57fa0-4e48-4432-a7ab-a49e8a8586b4",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e71c3a17-d848-4ed4-b69d-2546b9c01158"
        },
        "item": {
          "id": "6335e343-a032-4ad8-8764-2d7a043c4152",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ae591a36-d08c-42c0-bdfb-ba1fcb9f117e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86690a86-3477-4b3c-9c74-5f54cffdf77a",
        "cursor": {
          "ref": "a8a012c9-55bd-49f2-acb9-41738e6af601",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c59c38bb-45b7-4cee-93bc-86b710f1b1b0"
        },
        "item": {
          "id": "86690a86-3477-4b3c-9c74-5f54cffdf77a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d0d11c8f-f291-43cb-8f8e-70c5e984aa49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "163b7010-c436-4bb4-8d64-42de7ecf73fe",
        "cursor": {
          "ref": "0e0c7d0a-fb28-41f6-b365-e46215671b36",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3d2cf65c-eaaf-44ee-bfde-2d3733287d9f"
        },
        "item": {
          "id": "163b7010-c436-4bb4-8d64-42de7ecf73fe",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "e0f23a15-730c-4797-bcd0-b941033714ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "410c8e64-85ed-473b-9ed9-828548aee22a",
        "cursor": {
          "ref": "c648e4a3-5f75-4a97-8501-c6c0fcb72c76",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1b5864a8-ce69-427d-8a53-c41c935ebc1e"
        },
        "item": {
          "id": "410c8e64-85ed-473b-9ed9-828548aee22a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e8f8f284-35f8-41f4-a77f-991ebe5b3077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d58e6d-c564-496c-9b2a-ffc55a0c198a",
        "cursor": {
          "ref": "14861571-3933-474c-ae43-1184ba83d02f",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "0c6b800c-4bb2-4223-ae22-51e16b784e31"
        },
        "item": {
          "id": "10d58e6d-c564-496c-9b2a-ffc55a0c198a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "362b5f40-0a32-4ca5-acab-88471073763a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af948c52-bc72-49c6-b6f3-b783a19ee83d",
        "cursor": {
          "ref": "ccf9552b-c80c-4800-8bc5-996e67a1e452",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d406b838-c665-4dc1-bc59-a75a3daa3025"
        },
        "item": {
          "id": "af948c52-bc72-49c6-b6f3-b783a19ee83d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b2b44999-d230-4e8d-968f-0bf39de0e8e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb09cdd2-22c5-48d4-9e9a-0493d4a53927",
        "cursor": {
          "ref": "c43a3a36-643d-4028-a463-bca7d3a3ab17",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f4fd1d41-5803-47f8-8e11-0971b6238a78"
        },
        "item": {
          "id": "bb09cdd2-22c5-48d4-9e9a-0493d4a53927",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5905ca62-f364-46ad-825b-53c67d93bfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e7c2583-80fa-42e9-a8e2-03bb06dd5696",
        "cursor": {
          "ref": "65360154-7349-407c-b35d-617719946bb9",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "4dabf84b-1d47-4a5e-bcd8-067c60ae7861"
        },
        "item": {
          "id": "6e7c2583-80fa-42e9-a8e2-03bb06dd5696",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "27026b0d-f168-411b-b241-402211467a53",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f92e2c9-e79b-4e75-b339-c34bb2276b54",
        "cursor": {
          "ref": "4ca285fd-70d9-497b-bc95-fe08581b17f5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a8412185-a4a4-499d-9325-393bcc9f8d2e"
        },
        "item": {
          "id": "3f92e2c9-e79b-4e75-b339-c34bb2276b54",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "46c4153a-af9d-451b-915e-2a5b30aa5fce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f47d8431-153b-4fb7-a92f-89fb9e0859ee",
        "cursor": {
          "ref": "af5dd5a5-bc91-4569-9599-997864b717a2",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "9e14e63c-5b16-482a-8fc6-e00fc5895a28"
        },
        "item": {
          "id": "f47d8431-153b-4fb7-a92f-89fb9e0859ee",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1a4d70ab-24e5-4912-a47f-508229cd4ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "b91e8b2c-6899-4585-8f04-e9fb5e29c9ff",
        "cursor": {
          "ref": "fdb6e46c-9e60-4887-99b7-90c6eccdf178",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "bc04273a-61ba-4d2e-b670-71e39d871986"
        },
        "item": {
          "id": "b91e8b2c-6899-4585-8f04-e9fb5e29c9ff",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6c569324-0ae9-4163-b9b5-bafdc9b93306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b39482d6-9bd6-434b-a694-504c5183eb03",
        "cursor": {
          "ref": "37571a1e-522a-42f9-971d-78c107901503",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "a3f68608-0dd5-4b70-8ae6-771445225bce"
        },
        "item": {
          "id": "b39482d6-9bd6-434b-a694-504c5183eb03",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b8828dbb-a5a8-4b46-b8e5-823670a5e038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "0fa3b1c4-8c69-470f-aba5-a3e1658aac50",
        "cursor": {
          "ref": "c3ea6125-db3e-4b7a-a73a-dd3e21accf42",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f79ec7a8-5d40-44f3-9e63-811e69c22427"
        },
        "item": {
          "id": "0fa3b1c4-8c69-470f-aba5-a3e1658aac50",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5b26c00c-259e-47df-82c0-a47a4d36637f",
          "status": "Created",
          "code": 201,
          "responseTime": 14366,
          "responseSize": 994
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "711fb760-3d8c-4ae1-8d1a-15f60725a731",
        "cursor": {
          "ref": "b5f846e9-657a-4ad1-9716-ad3dd6c88611",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "4dbbed9b-24c2-4308-bcc4-d40b48b261c9"
        },
        "item": {
          "id": "711fb760-3d8c-4ae1-8d1a-15f60725a731",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "831d1f97-3d1b-47dd-a4bf-713d3c9279fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "ccd39dc5-b227-4a2b-b611-0cf39f1408e8",
        "cursor": {
          "ref": "d7c0dc0c-a2de-4123-a5e2-dfff492c75af",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "0c2a8a06-cb59-43dc-b75f-05c278bdb062"
        },
        "item": {
          "id": "ccd39dc5-b227-4a2b-b611-0cf39f1408e8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "38018090-8b87-4e6a-abba-a5cb5b4a6da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7ee8bd7f-87df-4b8b-b2cf-f233c33aaf40",
        "cursor": {
          "ref": "61d7c6e0-1124-4083-8cd3-dcff914a2424",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "588238d5-12d3-4ba2-a585-d2ffddedda8a"
        },
        "item": {
          "id": "7ee8bd7f-87df-4b8b-b2cf-f233c33aaf40",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5aaed0a0-3a13-4787-b8be-85b02ce3ee6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a934e87b-09e7-41e3-8f6d-4b39b8a9cd08",
        "cursor": {
          "ref": "0f8348f7-f200-45fb-a179-0508c4c14488",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8996394c-8c92-4f78-ab14-ba44d79ebb5d"
        },
        "item": {
          "id": "a934e87b-09e7-41e3-8f6d-4b39b8a9cd08",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8eaf1c16-1de7-490d-82c1-f9b4cc0033f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4d3b6b-231f-4e55-8ade-d36016e44c1f",
        "cursor": {
          "ref": "65ccb75e-1c3a-4505-b33a-ef5995240079",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d7cb81fe-5dc0-4bfc-88b8-70f202fd980c"
        },
        "item": {
          "id": "cc4d3b6b-231f-4e55-8ade-d36016e44c1f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f213b354-385d-436c-8a44-93734da682df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1015fc-3c0a-4602-be28-86a5e7486da4",
        "cursor": {
          "ref": "dfe902b5-ae59-4d9f-a2c9-7a3cf0e357c3",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "228b2911-ac7a-4582-94d6-a098602cbd20"
        },
        "item": {
          "id": "df1015fc-3c0a-4602-be28-86a5e7486da4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "394aed40-b911-417e-a3a1-6c28b3661d7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73c9c880-1d0e-4e4d-812d-5e597deb3cdf",
        "cursor": {
          "ref": "6be86a22-186f-466b-a01a-711f7b113a43",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "c659654c-840c-4a3c-8d24-1d5689586b54"
        },
        "item": {
          "id": "73c9c880-1d0e-4e4d-812d-5e597deb3cdf",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68ea90b3-9991-4bf1-9462-6a51badc0602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14fceb9-9cab-4e97-bd40-f8e4d2215fb8",
        "cursor": {
          "ref": "78e11f54-570b-4c6d-a02c-f69ec046aa0e",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec55e61c-b212-4d22-ac9b-67008de528d6"
        },
        "item": {
          "id": "f14fceb9-9cab-4e97-bd40-f8e4d2215fb8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "556a8f35-ec22-4b94-9877-6f1fdd5cfe34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a495de-541a-4f97-a067-ba0a7c318fd7",
        "cursor": {
          "ref": "cc2af679-a9a8-4c6d-8000-9874ccfe5694",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "f8a6c81b-5688-4974-a547-3c4b66441f4e"
        },
        "item": {
          "id": "46a495de-541a-4f97-a067-ba0a7c318fd7",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0b92349d-9f28-4122-95f8-4903a3159b2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830200c9-d586-495f-813a-ea90c0b162fd",
        "cursor": {
          "ref": "fec2c3b0-2c7f-43bc-bdb0-d4276b7195ce",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "dc3539e7-efa7-42ff-9533-b335c7f3ee8d"
        },
        "item": {
          "id": "830200c9-d586-495f-813a-ea90c0b162fd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "87a4c9d1-9e9d-45c6-a2a0-16daa1574600",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3f47e7-db74-4b7c-b32c-efa3e958e499",
        "cursor": {
          "ref": "dddbb4e8-af96-4b6b-823e-fb5d9aa23434",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4cdef2d3-0b19-487a-8fc9-d5cc87f3ae92"
        },
        "item": {
          "id": "9d3f47e7-db74-4b7c-b32c-efa3e958e499",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7432f1cf-ceae-4376-a5f6-70f6e7aba477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30dacd38-23c6-401c-87c7-88444e82788a",
        "cursor": {
          "ref": "dd6b6c3b-067b-4123-a5ff-6e746363f44e",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "aa1a345c-07ba-47e9-97f0-2812af474321"
        },
        "item": {
          "id": "30dacd38-23c6-401c-87c7-88444e82788a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "199404ad-6a99-416a-a44d-3ddd07e7cab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "160c36b5-1c80-4780-810d-21a54ef579d8",
        "cursor": {
          "ref": "1d8f8b69-ad37-47b3-bed1-a4c47ff3e69b",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "31b87e0e-d0b3-480b-a90b-da65c8c29fce"
        },
        "item": {
          "id": "160c36b5-1c80-4780-810d-21a54ef579d8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "494d47c0-14a4-4fef-9a0e-3178906b45ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ea1808e-1bbd-4daf-9fb9-e4a61f5a5b7e",
        "cursor": {
          "ref": "a94dde97-eeb2-4636-9a14-08c90955dece",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9170ee9f-d676-4970-b396-7434d9b5540e"
        },
        "item": {
          "id": "1ea1808e-1bbd-4daf-9fb9-e4a61f5a5b7e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "117805e2-f401-4e1c-9ef8-e9e1eb7c4eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0047134a-cb3c-4589-9c4a-0409daf1066b",
        "cursor": {
          "ref": "2e1bbe8a-1578-4c6d-99c2-245ead1b591c",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "002c421c-58c1-4e5c-8878-0c989e63cb2d"
        },
        "item": {
          "id": "0047134a-cb3c-4589-9c4a-0409daf1066b",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bd319216-bcd3-4182-8de0-cfe84e4cdc3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5a6111-6a8b-4035-81e9-249899e95663",
        "cursor": {
          "ref": "f0c39212-f322-47b1-b647-7ddb50694890",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8ea7d385-b7b2-42f8-868e-651ed7f1b895"
        },
        "item": {
          "id": "1a5a6111-6a8b-4035-81e9-249899e95663",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8e7ef061-6313-41e3-8379-2c5ec3822dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da0eb5c1-9e90-44ae-b559-04047ea63bf7",
        "cursor": {
          "ref": "c36b3abb-dada-417d-b198-7ad62be7c2f5",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "fc1b8334-98b1-470f-9e27-58c2195990ac"
        },
        "item": {
          "id": "da0eb5c1-9e90-44ae-b559-04047ea63bf7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "26b75524-7018-488c-a69b-aeab9db15ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c62ad9-ef93-4e3e-a136-16877715dc10",
        "cursor": {
          "ref": "64c48413-113a-43c2-9559-9f1f702546bd",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "3e7c7947-d6da-40fb-a20f-db11a3a6c74a"
        },
        "item": {
          "id": "09c62ad9-ef93-4e3e-a136-16877715dc10",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "41849407-3692-4928-a743-81c2391aee1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655c88c2-fe73-451e-8670-e7410077a0e4",
        "cursor": {
          "ref": "f147d440-7d8e-42bb-a5cd-dd3a8ab79d57",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "dba7394e-20d4-428c-820c-2088244d7cc9"
        },
        "item": {
          "id": "655c88c2-fe73-451e-8670-e7410077a0e4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "bb96f151-2b7d-49e2-af05-6f85f2ea600d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "acfd30eb-c7c2-4fae-824c-fab9cc09708b",
        "cursor": {
          "ref": "72a134aa-f17f-42ae-bd2f-3f25d531ebf8",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "1e59cb60-4bbc-4e3b-a65c-e45ca77c37c5"
        },
        "item": {
          "id": "acfd30eb-c7c2-4fae-824c-fab9cc09708b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "3752005a-ca9d-4b95-80f1-356f899df693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ed7fb9-6b2f-4acf-b86f-87a427718c40",
        "cursor": {
          "ref": "2c361d02-26e6-42b6-a7ee-55f57b4ed8bd",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a2046e2a-69f1-4c85-86ec-f582b6762601"
        },
        "item": {
          "id": "b2ed7fb9-6b2f-4acf-b86f-87a427718c40",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "10007530-8d19-4386-a25e-ed3192b031b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1a44ce-688a-4510-9406-a6e336437f6c",
        "cursor": {
          "ref": "fccd2cf3-198f-490b-994c-db7c5ccd62ba",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "49560dfd-adb4-47c3-9e5b-58081db1e825"
        },
        "item": {
          "id": "9e1a44ce-688a-4510-9406-a6e336437f6c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cb8910a2-7e30-4701-a010-54a2e5df9155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7b1aa3-63e0-4c30-95d1-21602738cf7a",
        "cursor": {
          "ref": "9622b23e-5bc8-4ae1-a39b-53812ac78e95",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "abd091b6-874f-48ec-b3de-ad13951d77bc"
        },
        "item": {
          "id": "cc7b1aa3-63e0-4c30-95d1-21602738cf7a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e64de513-b09d-4c19-91bf-8baf2ec41d50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4cf65e4-ae48-42a7-b2bb-3ba941b2f3b6",
        "cursor": {
          "ref": "9101dbec-3290-4b1f-9342-a25c3cec84a5",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b1089a9c-0ec6-4bc8-89cc-802f477b8c06"
        },
        "item": {
          "id": "f4cf65e4-ae48-42a7-b2bb-3ba941b2f3b6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4ad2847b-875b-4460-b29b-c8ae1d61a311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b5edd4-81a5-482d-a7ce-7378ced96981",
        "cursor": {
          "ref": "9c314d2b-0d23-48df-8482-dfc11eae2700",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "6693137b-8aa2-4bbd-bf3a-d349e1f8a131"
        },
        "item": {
          "id": "a2b5edd4-81a5-482d-a7ce-7378ced96981",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "17cbfdad-b565-4ad4-ace6-f92c4981b2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868262b7-b2af-4f89-9844-298d1c6218ab",
        "cursor": {
          "ref": "41000274-d2f6-4872-9e3b-63872abf0f0d",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0654faf7-dfa7-4ee4-8e08-1b645ee51af1"
        },
        "item": {
          "id": "868262b7-b2af-4f89-9844-298d1c6218ab",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f7acdd7a-3d64-4c2b-a6af-6fd8fc15ad2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d8cc82b-02c0-4a5c-988a-f4456fa87f13",
        "cursor": {
          "ref": "6ecc7b07-b654-44b9-818f-db41f36a3980",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "da79f199-5d2e-4d32-8b57-6d833aef5fd4"
        },
        "item": {
          "id": "8d8cc82b-02c0-4a5c-988a-f4456fa87f13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "968b5a82-3da0-449d-ab0f-0f2f09305ba8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 44,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "0f9b814d-47f2-475c-b7fd-1682f199e413",
        "cursor": {
          "ref": "8a2eddc6-e182-4e12-a043-81b0e3529bf3",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d3fba52d-75d6-4739-9963-fc14349e4b7c"
        },
        "item": {
          "id": "0f9b814d-47f2-475c-b7fd-1682f199e413",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "71f56e54-2451-4c5e-93c4-3ec25baf1220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b97d61-d167-4e03-9e37-6e6c04779623",
        "cursor": {
          "ref": "e0db8a68-234a-4129-90bc-e23a71a51a7e",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3dfd843a-eb8a-4e83-aebc-a6a83c5f889d"
        },
        "item": {
          "id": "e7b97d61-d167-4e03-9e37-6e6c04779623",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3ec5de2e-b90c-4e3b-a67d-a52dd4128b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796a9f23-24b8-46d6-8ed7-5095921695b8",
        "cursor": {
          "ref": "b43d8a7d-0b5d-4f8f-9d13-1df52fb7ca18",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "64ee0e1b-76d6-4ade-90fc-1c9be76ff61a"
        },
        "item": {
          "id": "796a9f23-24b8-46d6-8ed7-5095921695b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "00a6d375-058d-4c0f-ba1e-4c0a357365c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b2900d-e9b9-4f9d-bb20-69b80b93c48c",
        "cursor": {
          "ref": "28ad8a16-a2cd-4867-b408-b04030c85007",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f8e6ad5a-b469-4c2c-9f92-5ba7a9869d76"
        },
        "item": {
          "id": "90b2900d-e9b9-4f9d-bb20-69b80b93c48c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ae8effe8-bab0-421f-a760-d4712f63ae69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca1c830-ebdb-4488-8565-e935f494141a",
        "cursor": {
          "ref": "8f8f72a4-af76-4921-acb1-d471ef64051c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a48b4d4e-ccd2-4f39-bc71-a5b41fe8904d"
        },
        "item": {
          "id": "5ca1c830-ebdb-4488-8565-e935f494141a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d087edaa-53f4-420e-998e-22848dc39cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734ef8ac-7bd0-43ce-901f-789dd36f4e88",
        "cursor": {
          "ref": "e114490e-5506-4e7c-8b1e-eebdb2e938fb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "8b7b1b31-244d-469d-8436-2b8a0b4f741a"
        },
        "item": {
          "id": "734ef8ac-7bd0-43ce-901f-789dd36f4e88",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6ce6cf8d-5fe8-4d60-b2ac-42c8eb7732b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d6e392-543e-4ce6-acdb-92426346224c",
        "cursor": {
          "ref": "f0c048b0-ea44-4739-bd70-3105ebaa2a14",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "70f661d1-10e6-4648-906f-b472922a5f98"
        },
        "item": {
          "id": "f9d6e392-543e-4ce6-acdb-92426346224c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "db9c22ee-9b0d-40e6-8c6d-2e2f825078af",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "9dd683df-9be9-4a46-84c4-5d09f3a012c1",
        "cursor": {
          "ref": "43ae3ef4-9a85-4f4e-ae4d-8fb2878a87d6",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e59e37bd-62ff-418d-984f-f7100c2349ff"
        },
        "item": {
          "id": "9dd683df-9be9-4a46-84c4-5d09f3a012c1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b1b34ff4-894c-4e4e-98e7-ea013dae1feb",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 37,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "eff73219-f3c6-4edd-a0e0-05236ba9870f",
        "cursor": {
          "ref": "b96264e0-bc9e-47b0-968d-d39336cd052c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6aa336e5-c12f-4620-9527-0200ab0100f1"
        },
        "item": {
          "id": "eff73219-f3c6-4edd-a0e0-05236ba9870f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eb07dc9f-290f-48b6-862f-f52c7516f986",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "f9f76ef0-1b9e-491e-9041-f30b1441fafb",
        "cursor": {
          "ref": "95928549-d354-4d13-9580-227f38e0c60b",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d3b08ca7-c286-4464-93b2-bd3de9e9b9ad"
        },
        "item": {
          "id": "f9f76ef0-1b9e-491e-9041-f30b1441fafb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c87e585c-781c-48b4-bdfe-5886fdf2ab71",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "cf177dd9-c146-4c7b-b4c8-446b6d765695",
        "cursor": {
          "ref": "974e8e28-089c-4752-bde3-7b4c9da3d517",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8ad037dd-3f7c-4a5d-8128-a67b06088fed"
        },
        "item": {
          "id": "cf177dd9-c146-4c7b-b4c8-446b6d765695",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ea879f0e-7a42-4b0b-8eeb-03aaf263c847",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 45,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "d9de4b98-1e33-4951-bc83-fe758ffe8fd5",
        "cursor": {
          "ref": "95104394-4502-4b1b-b879-7bef0843f61a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3f510a9a-605d-42bc-b99b-68f1f8488186"
        },
        "item": {
          "id": "d9de4b98-1e33-4951-bc83-fe758ffe8fd5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "64caf3e3-13ce-40cd-93e6-cec7d6eb7ce2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 38,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "60837aeb-20a0-400e-9c3d-cb072aa7052c",
        "cursor": {
          "ref": "38b05f90-81d7-411b-a030-66d4e35b84a8",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7069d969-f4e9-4493-8515-34e4a84ac4fc"
        },
        "item": {
          "id": "60837aeb-20a0-400e-9c3d-cb072aa7052c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8eceadb7-f050-49b6-a829-03e49a36a79c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e07f8c0-eef3-4975-a877-6301e7ad5634",
        "cursor": {
          "ref": "f57ce6d7-de99-4458-9d38-70bf1dfce8aa",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "13e0b339-9105-48c6-904e-34449d9faadd"
        },
        "item": {
          "id": "9e07f8c0-eef3-4975-a877-6301e7ad5634",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "31cbf9c7-73ae-4f63-9cdd-6b9d17249fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e03a202-83cf-44c3-877a-9ca381a15096",
        "cursor": {
          "ref": "83a7a87b-28d2-4593-8cee-787bc3dd7ca0",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "31ca5986-26f5-4a00-92a2-e3b4cd18e60d"
        },
        "item": {
          "id": "4e03a202-83cf-44c3-877a-9ca381a15096",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b59ae837-7292-46d2-9adf-bc988da8ca4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1272095-1dac-464f-9d66-2676a0d4193b",
        "cursor": {
          "ref": "dc4093a4-8a09-427a-9f5f-4fbdc357bf8f",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ede8d4d1-8818-4a20-ad71-1f85799a0161"
        },
        "item": {
          "id": "d1272095-1dac-464f-9d66-2676a0d4193b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0b88435d-46e1-4393-9fa2-56788c18b088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da6384c-dc6a-43ee-bcd4-bd1d61df0ee9",
        "cursor": {
          "ref": "0ca8e1d8-8ccd-46c7-ad2e-e928802a08ba",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "27ef2b17-d41d-4e5d-a96f-6f4a2451766d"
        },
        "item": {
          "id": "7da6384c-dc6a-43ee-bcd4-bd1d61df0ee9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "098b0f2c-d925-4384-8664-b60a23c3ec01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff03e8b0-c4b5-44b8-b74d-a6fa0b8eb094",
        "cursor": {
          "ref": "a3c4dcfd-3ded-426e-a178-cf882bd840ae",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "d59e0723-27b5-43d9-bd90-d954f0c429b6"
        },
        "item": {
          "id": "ff03e8b0-c4b5-44b8-b74d-a6fa0b8eb094",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7e1cf8f6-fcdf-40d1-841f-1e68d22f94ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6b75737-8121-4f32-94fb-3f7ff09a0a32",
        "cursor": {
          "ref": "dd709e8c-801b-45e9-a9dc-65da0395bec5",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "15c08750-f1ab-447a-9480-6d6f4e471b3d"
        },
        "item": {
          "id": "b6b75737-8121-4f32-94fb-3f7ff09a0a32",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "50668e5e-a358-4cd5-bd00-305b99885ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25472702-4583-415f-a53e-e0ddd8856f40",
        "cursor": {
          "ref": "f259e951-6d3d-4d18-bbbe-43d3f76a6c96",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5bdfcddb-a2a6-472e-a7dc-e1d0da30b7d4"
        },
        "item": {
          "id": "25472702-4583-415f-a53e-e0ddd8856f40",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "54f55056-9dab-4563-8e8f-e942c770e100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27503736-5398-4bba-9e45-ada1ef149289",
        "cursor": {
          "ref": "00522d97-fdd5-4765-ae64-603ec8b542c2",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "29228765-4955-4a2d-a417-2110c9f2185d"
        },
        "item": {
          "id": "27503736-5398-4bba-9e45-ada1ef149289",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "13f254a0-7474-4bcc-a8c7-873b63bf8f2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56bb15e4-8a1d-44cd-a037-67785991684f",
        "cursor": {
          "ref": "cd9d9eaf-efb8-4c23-a60d-9b44cff3237c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "10a45ce6-5719-496f-bcb7-a627c0cd2555"
        },
        "item": {
          "id": "56bb15e4-8a1d-44cd-a037-67785991684f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c12d3976-75cd-4706-b487-b8b719d7ae21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6abd7805-ee88-4a23-9b6c-8b841eb1c9ae",
        "cursor": {
          "ref": "cf0d87f5-e5c4-4a33-adde-d5dde84138c4",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9bae20cc-9965-4b5b-ae83-2134384ec0a8"
        },
        "item": {
          "id": "6abd7805-ee88-4a23-9b6c-8b841eb1c9ae",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "785c831a-910b-4446-bee4-960eeb11b9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "621f5ec7-d380-406a-9a03-84d9a4df36e4",
        "cursor": {
          "ref": "96d57681-6050-448e-9167-6f9ee4af4e3b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "87d544db-73b8-41f9-846c-986453a7ba1f"
        },
        "item": {
          "id": "621f5ec7-d380-406a-9a03-84d9a4df36e4",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "5967d0f5-7bb7-4719-a9c2-4779b45a00e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c14b6a5-a455-4a02-84d0-b254c64ac0f0",
        "cursor": {
          "ref": "4793d502-5498-4858-b488-9d9a072d0216",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "07ec6b04-7c19-437a-a66d-1bb30ec06214"
        },
        "item": {
          "id": "4c14b6a5-a455-4a02-84d0-b254c64ac0f0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9bc5ab46-5589-4195-b0c9-f9f04e160945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c905b700-f597-4e84-ae42-1119d49faefe",
        "cursor": {
          "ref": "4c94a743-8301-415d-95c2-78f6b0e8e6e4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "5e572f26-5b9d-4c10-a785-bd0d6a38cc44"
        },
        "item": {
          "id": "c905b700-f597-4e84-ae42-1119d49faefe",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "01634b85-988d-4dbf-b788-7ae8fd893c7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a914a9-1284-41d6-a6ef-6e1ff0a9c8e0",
        "cursor": {
          "ref": "4e191267-2045-4b17-83a3-d0ed4e255f9f",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3ddd5416-4b0b-46ca-8607-359fe6354b90"
        },
        "item": {
          "id": "61a914a9-1284-41d6-a6ef-6e1ff0a9c8e0",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "2c78c692-749c-4afe-8b3a-342d4a500052",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02ed56b-8a88-4189-bcfe-32d270013666",
        "cursor": {
          "ref": "aa12508c-1ae8-4c3f-a16d-682c2b4351e6",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "cbdf0fc6-9537-4e1e-9c10-c6a2d02cfd4f"
        },
        "item": {
          "id": "a02ed56b-8a88-4189-bcfe-32d270013666",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9cda717d-b0ed-427c-9b61-f6a43555fc95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88dda3f1-8a10-4260-8de9-f51df41f9c05",
        "cursor": {
          "ref": "49e97f4c-61fb-4445-96be-84a1f5fc2331",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6146021e-bae7-43a2-b500-4c413ff6719f"
        },
        "item": {
          "id": "88dda3f1-8a10-4260-8de9-f51df41f9c05",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "34959bca-00f1-4a38-96be-d33da5d58fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e3be68-2e64-4beb-bc68-45e5a28a4c1b",
        "cursor": {
          "ref": "9fc0bb65-a933-4721-b7d1-eda1720f9533",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "99c5cf2a-5ab0-4782-93cc-ae1e43000876"
        },
        "item": {
          "id": "99e3be68-2e64-4beb-bc68-45e5a28a4c1b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "74b68b4c-b365-41f0-9530-75b60dca332f",
          "status": "OK",
          "code": 200,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "a44f9737-4cd1-4c2d-a1cb-6545efccd902",
        "cursor": {
          "ref": "9769a447-420f-48e0-9e66-e4ad9288b5f4",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5883e63a-f90e-4739-a831-d1caa1326e69"
        },
        "item": {
          "id": "a44f9737-4cd1-4c2d-a1cb-6545efccd902",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2fd677b8-222f-40db-8a87-423393697b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcb8d3d-1615-460f-970f-f94c3f8516e6",
        "cursor": {
          "ref": "12b06cb2-9ae1-4534-b777-3dff4f0855a8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bd0c3e0b-502d-4e68-ba27-343df7ea1eb1"
        },
        "item": {
          "id": "2bcb8d3d-1615-460f-970f-f94c3f8516e6",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fd91bb51-ecbd-4dce-96e8-db45663108a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b2c2d8-7b8d-4397-9945-a2a2af1fbf42",
        "cursor": {
          "ref": "0b1d3d5d-4e8f-4942-b65b-fdf2e4bb0f80",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c965b942-fa32-479a-8efc-70b17ab1eed5"
        },
        "item": {
          "id": "a8b2c2d8-7b8d-4397-9945-a2a2af1fbf42",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "716e184a-0905-4a6a-86d6-09a612e7811c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35468f7-bad4-4d9e-959a-269d57dff927",
        "cursor": {
          "ref": "099a54a1-08d3-4457-90cc-cf69e393fdeb",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "75a50486-9610-48de-bf06-7175c33ce999"
        },
        "item": {
          "id": "b35468f7-bad4-4d9e-959a-269d57dff927",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "852cf93c-66f1-44e9-8bda-0f90e399dc3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b9459f-9c76-4150-8c2d-d31c46c05422",
        "cursor": {
          "ref": "83c19b7e-ffd8-4c4a-9a42-2dbf306e8375",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e148abd0-5a30-4a17-88bb-ecd401023b84"
        },
        "item": {
          "id": "66b9459f-9c76-4150-8c2d-d31c46c05422",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ff381c25-8328-482c-b5e7-4586e6b2c40d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e404f14a-3646-4120-b8ca-68e20aaa0402",
        "cursor": {
          "ref": "3dd16f3f-0b11-4177-9829-b65c7d88ed7e",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "dbb1b29d-8b8f-41e5-b92e-33a0f57d6918"
        },
        "item": {
          "id": "e404f14a-3646-4120-b8ca-68e20aaa0402",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1913841a-3483-4393-b531-75f8a85f1c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6284ffba-0362-49cb-ad91-b2e8a3075eb3",
        "cursor": {
          "ref": "9a4b59dc-257f-4d0b-9143-04467a8e7b75",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f8ffa7b9-c5fd-4cc3-a4a9-d2f538f3d70e"
        },
        "item": {
          "id": "6284ffba-0362-49cb-ad91-b2e8a3075eb3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "cfc46c91-2dc1-4353-9ab4-28eb0368e195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38abfff8-0d8d-4ee3-8869-3b64e826cf4b",
        "cursor": {
          "ref": "e67e90e1-54ff-4bed-91b5-df0eae1a7b46",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f194fe52-0bcf-4698-8bcc-22bbf67123ce"
        },
        "item": {
          "id": "38abfff8-0d8d-4ee3-8869-3b64e826cf4b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e6cb6e23-1e48-48ea-a61e-c2cef481e293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d7c4bc-a621-4848-ae97-4c99d0121d62",
        "cursor": {
          "ref": "229f3044-1cee-450b-b672-969516d71952",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2815da1d-0776-49ba-bf42-df47107eaec1"
        },
        "item": {
          "id": "d4d7c4bc-a621-4848-ae97-4c99d0121d62",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "689bb484-1abf-4d57-b6fc-e0da6525c5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e11436c1-62ee-419b-be32-9796f4fd30ae",
        "cursor": {
          "ref": "a5a1ffdd-d097-4ed8-bd7f-3180604cd1c5",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "6498a062-71e2-4cd8-8952-f3032bc42f7e"
        },
        "item": {
          "id": "e11436c1-62ee-419b-be32-9796f4fd30ae",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d9e4d66a-a27d-45d7-b4a8-113fb6d959f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57bad160-e5fd-4e92-8be2-0cbda08f129c",
        "cursor": {
          "ref": "429ee085-d397-4089-8a63-d984640a308e",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4e53eeb9-9400-4951-b022-a930e8766fca"
        },
        "item": {
          "id": "57bad160-e5fd-4e92-8be2-0cbda08f129c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "daeba66b-122b-47ff-a199-0c2f3bafb1f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "012465a5-a306-438e-9ec2-c2e8eb2e4ad7",
        "cursor": {
          "ref": "513f5251-f36f-4319-9474-f07ff167029e",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1647f77d-38bf-43aa-ac08-89fb47d817ec"
        },
        "item": {
          "id": "012465a5-a306-438e-9ec2-c2e8eb2e4ad7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f84d317f-e7b1-44d0-8e86-a40868f8c1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63df699b-522d-4195-8713-9a256cf335d6",
        "cursor": {
          "ref": "ae278058-8348-417c-8262-ec0d1a2f6fa6",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fb689dc6-f28c-4ebe-8e2c-29ca6b8206e0"
        },
        "item": {
          "id": "63df699b-522d-4195-8713-9a256cf335d6",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "23828050-72dc-4dcc-b5b2-e66fa7dd76b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9014689d-1fb7-4fbf-9215-607c5b2dc653",
        "cursor": {
          "ref": "5c0845ae-44f2-4ddf-bb5a-8e33b298a232",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "98e60ca0-b13c-4790-a083-b5802961ccbd"
        },
        "item": {
          "id": "9014689d-1fb7-4fbf-9215-607c5b2dc653",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "839bbbda-dfe4-4da1-8e1b-aeacfe6ffcd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf99020-5ecf-4b32-80ca-64cd3d215f8b",
        "cursor": {
          "ref": "264e1269-9d9e-48c6-b1a5-97215c9048c6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2d5f2257-cfec-462c-b6f7-b17b37bd37d9"
        },
        "item": {
          "id": "ecf99020-5ecf-4b32-80ca-64cd3d215f8b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b13aff91-f5ae-4ae0-9e56-ae02d244c252",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b23fa0e-67ca-4187-be08-984c307aa581",
        "cursor": {
          "ref": "0015a04e-537e-4ccc-b296-183910b70e01",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "7e6df60b-1517-4c4a-a7fd-45adb48ca5b8"
        },
        "item": {
          "id": "6b23fa0e-67ca-4187-be08-984c307aa581",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "541fec0b-0064-4ff6-8e6c-277768b14484",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5cc10a3-3363-4e30-8fe2-2f3abe0b411d",
        "cursor": {
          "ref": "5d0a3c4d-4afe-49bf-9d94-03789f30caab",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "dc811bd8-1a7b-4141-acae-3f60e2457e18"
        },
        "item": {
          "id": "e5cc10a3-3363-4e30-8fe2-2f3abe0b411d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a89ecd76-53c0-4dd2-ab25-8343d0b702f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b64d81-6b95-4732-96a2-babd91501700",
        "cursor": {
          "ref": "3d06c417-22b8-43c3-9bfb-18700fb13d52",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "56cf3fb1-d96a-4044-b045-21877e52cd17"
        },
        "item": {
          "id": "02b64d81-6b95-4732-96a2-babd91501700",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3766daca-e3ec-4df4-aaf3-ff303fbf70d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb541143-b079-465a-9208-ba0636fc1832",
        "cursor": {
          "ref": "65852827-3bb3-480c-936a-81652f67dfad",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "fcf880b1-a81d-4a96-ae70-bcbc3fac034a"
        },
        "item": {
          "id": "eb541143-b079-465a-9208-ba0636fc1832",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f82b629e-1667-4073-a165-8ccbbd4a1440",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16df32af-0614-4d09-bb57-15d1f9e2bfe6",
        "cursor": {
          "ref": "6532ce35-ab8d-4407-8ac5-8c344776fada",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "a77ecfc5-ddaa-459c-8761-31cdcb15e46e"
        },
        "item": {
          "id": "16df32af-0614-4d09-bb57-15d1f9e2bfe6",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "9288a509-d307-4530-b061-969ceee81a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e971d37e-1dea-4d36-9a6a-080aac3739b5",
        "cursor": {
          "ref": "3ae5173e-3563-4b28-af60-6919699b1a80",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9c676a3f-a110-41b3-a972-3f8b41fdb015"
        },
        "item": {
          "id": "e971d37e-1dea-4d36-9a6a-080aac3739b5",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bd137769-7ca7-414d-922b-ef09a45c0f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f917aeb6-9a18-4ce9-82e2-292472659e26",
        "cursor": {
          "ref": "a457ac4b-ac7e-43d4-a94d-26ceb5d517fc",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3ee6da9f-be3e-434e-8c4d-b77cbce2e836"
        },
        "item": {
          "id": "f917aeb6-9a18-4ce9-82e2-292472659e26",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "cfca4e36-9351-405b-8cf5-4ef16c00bb01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a72867d4-1627-4d80-b4c1-68d0970180ed",
        "cursor": {
          "ref": "58d1b94e-2634-4183-819a-b12c79d669a0",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "652b87e6-aed0-4858-91cd-a898dceae185"
        },
        "item": {
          "id": "a72867d4-1627-4d80-b4c1-68d0970180ed",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2f5284d7-9b15-490d-894f-1deaf846175c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f34d089-6d0a-4cb2-bb73-9a3b663a8f77",
        "cursor": {
          "ref": "f343473f-ac21-4064-a528-2394d1d18753",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "31837d81-bbcb-4074-875a-2411ce7f02f0"
        },
        "item": {
          "id": "7f34d089-6d0a-4cb2-bb73-9a3b663a8f77",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "7431893f-3886-4fca-bdbe-5bd8ed4f3623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5b421f-b597-4ae7-b14d-48d4d642e812",
        "cursor": {
          "ref": "529cd4d9-bf5c-4291-ba9d-7d4e2bca73fd",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "532fea03-74b0-48bf-a8e3-d73309af7094"
        },
        "item": {
          "id": "2e5b421f-b597-4ae7-b14d-48d4d642e812",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7a07345f-43de-4692-88ef-3de8fd32834b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d040730-7dc1-4e68-860a-80ed124e5e47",
        "cursor": {
          "ref": "bad366cc-cb77-41d2-b7bc-f69b063798e9",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0e58844e-15af-403e-a26d-cd7674b02830"
        },
        "item": {
          "id": "0d040730-7dc1-4e68-860a-80ed124e5e47",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "5d56d230-9901-4944-ac2a-5f57a5007675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3b75429-43d4-4601-b86d-34f81b548563",
        "cursor": {
          "ref": "d5dcb43b-4f0b-49f9-93dc-02c1378762a0",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2721cd21-2940-430a-b611-772a146fc7fe"
        },
        "item": {
          "id": "c3b75429-43d4-4601-b86d-34f81b548563",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "65015742-8078-44ee-b33d-4bac81ed2433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79e0747-0b03-4b1c-b087-d8fe808ff2b0",
        "cursor": {
          "ref": "fd6f51b5-5636-486b-8ec1-db7d6df73bb2",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b04e7535-c875-48b4-b197-63826dfa4d53"
        },
        "item": {
          "id": "c79e0747-0b03-4b1c-b087-d8fe808ff2b0",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "61e28dd7-3b44-45f2-8b3c-df98d67f5d82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd842247-c284-48bd-8d09-0c0794eca6a7",
        "cursor": {
          "ref": "97d8e571-dadf-4407-acc5-93ef01441134",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "18e85747-f685-47c9-8016-81433f592278"
        },
        "item": {
          "id": "dd842247-c284-48bd-8d09-0c0794eca6a7",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "678dc9db-b826-4ce4-840d-b43bb6d79ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6096ff4e-1361-478a-8c38-26084f01b826",
        "cursor": {
          "ref": "01e9d35f-eddb-4964-b309-028273a0bcdc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "98e7dcb8-9409-4cec-8ad9-5d88ade1e5ce"
        },
        "item": {
          "id": "6096ff4e-1361-478a-8c38-26084f01b826",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "671ca746-700e-4387-9a3e-007189018b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cabf81c-4221-42f2-bf8f-e50674ebe740",
        "cursor": {
          "ref": "0f565293-695c-4810-beb8-f3f967eb5ee9",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "a4ed8bf3-40cd-4591-8681-48dcaf975ac9"
        },
        "item": {
          "id": "3cabf81c-4221-42f2-bf8f-e50674ebe740",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5cd14bd5-a095-4b1c-9dde-ba1c5cb0e0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "503cfec3-09b6-4dbc-9d7d-eff0db9e3f8b",
        "cursor": {
          "ref": "9937361e-8fb6-4b0e-8852-fe224f7781aa",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "7ee38129-0612-46b9-a0b5-1af345c86820"
        },
        "item": {
          "id": "503cfec3-09b6-4dbc-9d7d-eff0db9e3f8b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9d75d7b-9ba9-4626-ab14-b2ef5a290c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56481346-0761-4e70-9e16-512c1381fb8d",
        "cursor": {
          "ref": "3746a2c4-2a8b-4745-afea-60f04353a272",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "313dd392-ab59-4d03-8540-a53026592966"
        },
        "item": {
          "id": "56481346-0761-4e70-9e16-512c1381fb8d",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "1165e55a-a8a7-486d-b282-af23fa598dbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767a2d8b-513c-48a9-b371-15173a6c668f",
        "cursor": {
          "ref": "c8e4590a-4182-4916-96e8-786e31a96bfe",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "0f8cf68d-c690-4eb8-a029-0a2538c298d4"
        },
        "item": {
          "id": "767a2d8b-513c-48a9-b371-15173a6c668f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "a0087b89-b456-4738-b5ca-8017b441bd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5dee0fe-6a94-425b-8930-d259d5c293bd",
        "cursor": {
          "ref": "608a25fb-2ed7-46f5-bc26-b1fee29bb8fe",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3a0b7fd1-f664-4e7f-a526-2981b0ac8644"
        },
        "item": {
          "id": "d5dee0fe-6a94-425b-8930-d259d5c293bd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a8222de3-9b7f-412d-99a0-d343b9d161e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a6c65c5-9523-4ef6-8a01-b865d13e5839",
        "cursor": {
          "ref": "378129b8-4827-43fc-bfc0-84e168729c8e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e8ffc9d2-14ab-4a49-b693-da670f3df995"
        },
        "item": {
          "id": "4a6c65c5-9523-4ef6-8a01-b865d13e5839",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "48d77b4c-1715-42e8-b87b-0583ed6654d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0560694b-73fa-44fb-965f-e87a598a4610",
        "cursor": {
          "ref": "96853ca4-73cd-4a63-8255-01e09ae4dba3",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "8f99e294-f8c7-4b46-9cd2-6a3e8e18b659"
        },
        "item": {
          "id": "0560694b-73fa-44fb-965f-e87a598a4610",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "58947dd9-170b-48b8-9a82-b98ea73c9b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e16157cb-bdb7-4737-b6f4-dfb9fd275792",
        "cursor": {
          "ref": "3592307f-fffc-4c5a-8203-50f2d21301e1",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c97a7484-df7a-47ea-933e-267bd00c5d9e"
        },
        "item": {
          "id": "e16157cb-bdb7-4737-b6f4-dfb9fd275792",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5fdff722-a7fd-421e-abaf-30a6226e7967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe7c53fb-5690-4307-b745-1114c3243208",
        "cursor": {
          "ref": "9001d8f3-cb75-4e5c-9aea-6b3a1fe6fed2",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e5f5318e-dafa-4d93-ab38-12772ceec0cc"
        },
        "item": {
          "id": "fe7c53fb-5690-4307-b745-1114c3243208",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a4a4a093-d1f0-4371-aa71-b8c3e07269ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3394f9fe-498f-4730-8403-244906b0980c",
        "cursor": {
          "ref": "187f3006-dd17-439b-894b-2a1d1bf281fe",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "57da42a1-ccd2-45f9-8bf8-91d0c0101c2d"
        },
        "item": {
          "id": "3394f9fe-498f-4730-8403-244906b0980c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5e868a97-7cdf-481f-9476-95d0c594e5b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dd856d-2b17-4e23-8be2-1910daeff01d",
        "cursor": {
          "ref": "ba4c385e-dae9-4f23-8ec9-26ec1409e543",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "a9199a9a-3d14-4bb4-8711-8c7ff67bd8dc"
        },
        "item": {
          "id": "a5dd856d-2b17-4e23-8be2-1910daeff01d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "d2f52d85-c49d-4476-9e8c-1bf1f453938d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb44ed2-cd83-46b0-ad26-85d43dd890ea",
        "cursor": {
          "ref": "69c4738e-9d7b-4938-a832-b8cd15e5ec39",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "426217b0-2888-4877-847a-af10609d9211"
        },
        "item": {
          "id": "2fb44ed2-cd83-46b0-ad26-85d43dd890ea",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3ed3db04-f861-413a-94c0-6008b474dc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f41e70-b412-4bac-b24c-3ec86cfc665f",
        "cursor": {
          "ref": "0fb76ee6-488f-4d9b-ab26-df87038d5015",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "46cc6e01-c7c8-45b6-b6e6-eb6cb54ecb23"
        },
        "item": {
          "id": "63f41e70-b412-4bac-b24c-3ec86cfc665f",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "daced00b-5be9-4f77-ac58-59a327b4f0b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bb430d-2be3-45c4-bd74-6ddd5d6959df",
        "cursor": {
          "ref": "ef8e0863-7e3b-4420-9dbf-2b4571bcf30e",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7d4cdb1e-39d3-402c-8f1f-65d3bde37725"
        },
        "item": {
          "id": "45bb430d-2be3-45c4-bd74-6ddd5d6959df",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "61b88da8-bf0b-435a-8374-d269e576dc60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4798c05b-3eea-428e-9840-fe33757056ee",
        "cursor": {
          "ref": "15f05e62-1d0e-4007-9b23-f23232a702ee",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b4bfaadd-dd31-4b00-bf24-a3d4077a3f3b"
        },
        "item": {
          "id": "4798c05b-3eea-428e-9840-fe33757056ee",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "4a926c34-9fe3-457e-a109-5deaada02ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69288342-a438-427a-93a7-0a220f41172f",
        "cursor": {
          "ref": "c7bb4e35-8804-4d03-8e25-8ceda9db0dea",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "55c6f310-1db2-4279-b0f7-a48122b6e2da"
        },
        "item": {
          "id": "69288342-a438-427a-93a7-0a220f41172f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "99d71f8e-2900-48b5-9aa5-5abecf6b7e9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f653cb3-2655-408e-a700-a337ccd28465",
        "cursor": {
          "ref": "800e169f-f771-40d1-8031-eefc39fa8c70",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "53880b6a-b942-4db6-a5b5-d95cc2e4d04d"
        },
        "item": {
          "id": "4f653cb3-2655-408e-a700-a337ccd28465",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d4fb8d4d-3df4-48ad-b7c2-e8f972e67897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7682b7-ced8-413a-a515-9033b55da8d9",
        "cursor": {
          "ref": "3d6a3a83-ca0b-47d1-a1f5-3e9100bfc780",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c538f4d0-1d97-4f20-ab64-5f407d1c667a"
        },
        "item": {
          "id": "dd7682b7-ced8-413a-a515-9033b55da8d9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b8d979c8-133b-43ee-afb3-be6d04d077ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f7e9b-8506-4612-99df-d82e64b1fa9f",
        "cursor": {
          "ref": "fb0e2014-4a5a-4db0-b352-ddfd49c508b8",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6e3458a8-f24e-4272-95a5-8309b81f4d36"
        },
        "item": {
          "id": "4f0f7e9b-8506-4612-99df-d82e64b1fa9f",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "73faaefd-4235-4d4d-95f7-c7b4e34bdb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaed4c8e-bc8a-4172-8133-d24194d25c87",
        "cursor": {
          "ref": "d68d947b-794b-4f24-9d12-7beb644c5936",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "66e47104-a125-493c-a1ab-907af043bdba"
        },
        "item": {
          "id": "aaed4c8e-bc8a-4172-8133-d24194d25c87",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "6e6f391e-5c23-49b4-9f89-3f331a688706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f6ee53-7cd8-4a00-9605-57c9dc7bfa3c",
        "cursor": {
          "ref": "b0367271-faed-49fb-87ea-584d75156d51",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a71090d8-d2de-48a7-b557-cfc6f9ab19c4"
        },
        "item": {
          "id": "b2f6ee53-7cd8-4a00-9605-57c9dc7bfa3c",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6640e221-87c0-4c01-8053-30665e0cac7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e70936-6109-4f82-adfb-d78d63864c36",
        "cursor": {
          "ref": "1437a131-4983-485d-88e6-295b21795a03",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "1f8e1452-ed7b-4176-a45c-0ecf7d8176ce"
        },
        "item": {
          "id": "69e70936-6109-4f82-adfb-d78d63864c36",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e556d54b-4960-47a8-8582-95f399d84676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35895d10-b7a3-435f-b432-2aa7dffd7460",
        "cursor": {
          "ref": "4ffa6f69-4a1f-4957-a068-6b31a7c792b2",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ab801557-645f-4151-b1e9-fc465f34520c"
        },
        "item": {
          "id": "35895d10-b7a3-435f-b432-2aa7dffd7460",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "34f34ab5-e270-453e-bb91-109c9d1ce39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9139c214-0997-451c-9720-6a7dcdb6d0ca",
        "cursor": {
          "ref": "64ded7a9-037e-45f1-80e3-39b21b2f54d5",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "139551f9-b852-4b94-912f-910ff488103f"
        },
        "item": {
          "id": "9139c214-0997-451c-9720-6a7dcdb6d0ca",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3cb64510-23ed-4c3c-a095-9c1f6f83094a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "337ae799-e039-4e6e-9e17-aa007336fc66",
        "cursor": {
          "ref": "eca1bcf6-ff58-4348-b259-3380db43b029",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7d68ebbb-0b61-4602-87f4-5f8d020ce1d2"
        },
        "item": {
          "id": "337ae799-e039-4e6e-9e17-aa007336fc66",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "9c60edff-3e2e-46b1-9654-f376d10dde7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d497a50f-44a6-45f7-97b5-334023bfa517",
        "cursor": {
          "ref": "ab73a0e2-bb59-4ec1-b4b3-0c09c68701cb",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b4b5ccd2-97c2-480f-a14b-1f3070999fbd"
        },
        "item": {
          "id": "d497a50f-44a6-45f7-97b5-334023bfa517",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e66129d7-f348-4f2e-b2be-32d4981564e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f3939-7db4-46e4-993d-48ceec7ea392",
        "cursor": {
          "ref": "9b088c9e-cf09-4777-88ec-dc6495791b61",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "98ad99da-92bb-4d8e-b712-3ac8053d92b8"
        },
        "item": {
          "id": "f85f3939-7db4-46e4-993d-48ceec7ea392",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "ac23d146-cea9-4e7e-be52-502a69208017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076be4ab-9c75-4455-bcb0-747559c730b6",
        "cursor": {
          "ref": "36e45966-a5a5-4d5f-9543-8c6315f127ef",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "5550fc79-6bbe-4458-a3c3-77785718348c"
        },
        "item": {
          "id": "076be4ab-9c75-4455-bcb0-747559c730b6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7989dcde-3b8c-4b71-943d-3c142c4f142f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865c45e2-e186-4655-8107-72dfa6f8b795",
        "cursor": {
          "ref": "e704d1c7-3bf6-4523-b8ac-c9978fd67984",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "42348c32-0052-4d37-b1a5-765d962393ac"
        },
        "item": {
          "id": "865c45e2-e186-4655-8107-72dfa6f8b795",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "21316cb4-b9a3-44b1-8a02-aa795a0cc57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb15462-6da3-40d0-ad00-ee63df5e3daa",
        "cursor": {
          "ref": "b31bb504-74fd-4037-875e-936b949a22e7",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "aa00a361-10c7-45c6-b4a5-72b6e35f6322"
        },
        "item": {
          "id": "6cb15462-6da3-40d0-ad00-ee63df5e3daa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "335a2133-da35-4058-98a8-f09490926c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a63b84f0-34f3-4fcc-8e11-9fc4fb36a581",
        "cursor": {
          "ref": "e441e588-b47f-4a90-8b22-4cc30c07c55a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "844b91d0-b890-49c3-acbf-6067873ed8ef"
        },
        "item": {
          "id": "a63b84f0-34f3-4fcc-8e11-9fc4fb36a581",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "feaa9f36-b60b-4f4a-8025-a8cc22b63ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104d5f80-437b-4eec-997f-20e27858e0d9",
        "cursor": {
          "ref": "76ea423e-6e79-4aca-8100-0f2f13d0c19b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "04083c69-8a92-4deb-8af6-3b2b7c18add7"
        },
        "item": {
          "id": "104d5f80-437b-4eec-997f-20e27858e0d9",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "01e65b9b-ec59-41f5-a3f5-d92d1f6512e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8fd071-e121-471a-bc7f-abab0d1763ec",
        "cursor": {
          "ref": "593d7c85-957e-4a25-ac19-f23a011c2b5f",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "152b7469-bc88-4328-adec-ab15f3c02d0e"
        },
        "item": {
          "id": "4a8fd071-e121-471a-bc7f-abab0d1763ec",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5e9c6e52-98fe-4c72-a00e-cd2baf2fd11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc9318b-2601-4db2-880c-b10a1350f9ba",
        "cursor": {
          "ref": "70389daf-d062-4fa0-926a-ab926bf57952",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e7c3b114-4306-4ed3-8241-ec5a3e3aadda"
        },
        "item": {
          "id": "dfc9318b-2601-4db2-880c-b10a1350f9ba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f0158348-d40f-4b4c-a1b0-7cdf26ca5927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f5f89b-05f1-4071-abec-047b52c17ad2",
        "cursor": {
          "ref": "d6f4e600-ab9f-4006-a4f3-5500c91ecdbd",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ca4805c8-4e36-431d-ae0f-218727b31d2e"
        },
        "item": {
          "id": "98f5f89b-05f1-4071-abec-047b52c17ad2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a75b2fa5-38a3-417a-af29-ff35e545984b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82bbc3df-2d41-44a5-974e-a99f2e722446",
        "cursor": {
          "ref": "5cfb4acd-bf5b-4229-805f-29d65c5394ca",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "fab2196a-9758-4bb2-b9ad-c40c7208da14"
        },
        "item": {
          "id": "82bbc3df-2d41-44a5-974e-a99f2e722446",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "08976ad9-8dc4-43e1-9bf4-3aea9e9c415a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d5ce50a-1ff5-4a0b-a1cb-2bc1d7e775ee",
        "cursor": {
          "ref": "b9a39a26-726a-4cab-9db0-1850bdfe3621",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "4fd8590d-e63d-49f9-917e-f8d409b1759e"
        },
        "item": {
          "id": "4d5ce50a-1ff5-4a0b-a1cb-2bc1d7e775ee",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f15250e7-3a1c-4c0f-97af-37913fb8cbb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51512651-2496-43e8-b0d0-270d5d42d4a1",
        "cursor": {
          "ref": "9df1f138-7d9f-4f52-98ef-b7e330bdddbd",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "13dee132-547e-472f-a3a3-79ffd0fb6e08"
        },
        "item": {
          "id": "51512651-2496-43e8-b0d0-270d5d42d4a1",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dc25ccf6-8d4d-4cc5-abcd-ca2f3cb24649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f735cb86-b81c-4002-8d6b-f2cb7e8d6f20",
        "cursor": {
          "ref": "cc36e0f3-df03-452b-a172-c30554221a03",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9b7f27c2-d657-4882-b721-9706128ae0b5"
        },
        "item": {
          "id": "f735cb86-b81c-4002-8d6b-f2cb7e8d6f20",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1b659e6d-633e-4a5d-b6a8-15c9c0b81afc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c906881d-bacc-4b76-b176-43f69a3e3dba",
        "cursor": {
          "ref": "1014a3e7-b0ba-4fe5-bfe5-0f24547dae44",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "47814579-71a2-4abd-9aac-ba8e33079742"
        },
        "item": {
          "id": "c906881d-bacc-4b76-b176-43f69a3e3dba",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6105d422-67ea-48b3-83b0-03399307f18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1129d81f-9684-43a9-94c7-759b55faeaa5",
        "cursor": {
          "ref": "6656456d-50ce-44c7-9456-25e20830e803",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "87e2bc79-547f-4698-9cfc-71e99b10f7c9"
        },
        "item": {
          "id": "1129d81f-9684-43a9-94c7-759b55faeaa5",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e6276bbb-556c-496b-9f2f-6e38f5ca8560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a93d729-1818-4859-9861-9ebd2c30aa69",
        "cursor": {
          "ref": "05db0b2e-e343-495d-b355-90f84c4db0fe",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "e0e872a3-e03d-41b9-b5df-530b44c5314e"
        },
        "item": {
          "id": "7a93d729-1818-4859-9861-9ebd2c30aa69",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2b3e6069-d847-419d-98c6-ba6a785584e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee701ee2-1b72-423d-be6e-1886b1cc8612",
        "cursor": {
          "ref": "34a52269-29a2-4fa9-9fe6-2a593319637f",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6477e551-67a3-49c6-aada-a1d48bcb9f3d"
        },
        "item": {
          "id": "ee701ee2-1b72-423d-be6e-1886b1cc8612",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dd94f8f2-ec83-488a-9f23-ebc6c47e2117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0531b121-ea37-4d58-838f-28cbe7e89372",
        "cursor": {
          "ref": "68594454-7117-462c-b8c0-fdc5283efe2c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e5b9971b-d91b-4433-bf62-1f3ee68b5447"
        },
        "item": {
          "id": "0531b121-ea37-4d58-838f-28cbe7e89372",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "74301af9-b4bb-4d96-b7dd-3dd0dc522feb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f145eba6-0e45-4d0f-8361-7fa293ceb365",
        "cursor": {
          "ref": "d83211f7-9217-4ed1-88e2-7ecc469a219b",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a9fe8bed-4639-44ec-88a9-60dc4e944495"
        },
        "item": {
          "id": "f145eba6-0e45-4d0f-8361-7fa293ceb365",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "d3bcd7fe-9f95-4939-a785-d14b946324cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1445874b-ba21-468f-a6a0-bccbb5ca4692",
        "cursor": {
          "ref": "0ab58807-1897-4323-b379-f9e3cad21027",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "17ab8058-ddd7-4d34-b89e-c80ebd31dcc5"
        },
        "item": {
          "id": "1445874b-ba21-468f-a6a0-bccbb5ca4692",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e8304835-0235-4631-9dc5-4e30a2734b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcebc09c-1189-4077-9154-6bef49be632c",
        "cursor": {
          "ref": "9504e116-ab7d-4274-86e4-99c6d593e39d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "bb495232-4778-4dc3-b19c-97e1ffeb98a9"
        },
        "item": {
          "id": "fcebc09c-1189-4077-9154-6bef49be632c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3cfaa7e2-ae86-421f-8c6a-acab0cb109f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c9e2a5-4703-4a11-bb06-bcfa563e701f",
        "cursor": {
          "ref": "729760f8-659d-4576-bec7-d4732a2ce0db",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "eeb7ddc6-fcfe-4cfa-a26d-f68a80f4bce5"
        },
        "item": {
          "id": "b2c9e2a5-4703-4a11-bb06-bcfa563e701f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "10359b4d-628b-4974-8496-de2fc8135bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d555e7d-e05a-46f3-8a67-da130318d960",
        "cursor": {
          "ref": "7f7ef6d4-0f01-4295-b68c-cf77cb5fc745",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "141220b4-ed91-4558-be95-28c53cc1511b"
        },
        "item": {
          "id": "9d555e7d-e05a-46f3-8a67-da130318d960",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1c164b3b-6fbb-49df-aedc-ab4bc1470c2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e44fd0cb-a1ce-44d8-80f5-a5783f256445",
        "cursor": {
          "ref": "84f35628-276e-4017-84c1-d4f915247081",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "85d26fbc-105a-4f3f-ba9e-e4d2645c03d8"
        },
        "item": {
          "id": "e44fd0cb-a1ce-44d8-80f5-a5783f256445",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2222033d-1988-4758-8bcd-a5d82133a1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497eba74-56c2-4f5a-a2c8-bd773121c562",
        "cursor": {
          "ref": "50d5fabe-10b5-42a3-983b-bdb1019dc106",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c412a06c-eb59-45ac-b3d3-73adf497a675"
        },
        "item": {
          "id": "497eba74-56c2-4f5a-a2c8-bd773121c562",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "1a853c84-1365-4da4-915f-753729135e8f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7ddd79-8761-4f16-b2ac-eab080562536",
        "cursor": {
          "ref": "e1466210-1f8d-437c-9616-75389bed3e08",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a80b78b5-4e19-483b-b42b-becaf056674d"
        },
        "item": {
          "id": "aa7ddd79-8761-4f16-b2ac-eab080562536",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "8c30cad6-05ee-43ac-90f0-6f5afc7aca49",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "5273c178-b161-4bf1-b039-3cef661d230e",
        "cursor": {
          "ref": "4f6bece7-2031-4ebd-ae1a-ccaa30d62aa2",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03eb40d7-0d6f-4623-b074-342a3bf11d16"
        },
        "item": {
          "id": "5273c178-b161-4bf1-b039-3cef661d230e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0efc6f87-19df-4ab9-8a2b-eb9deff1490b",
          "status": "OK",
          "code": 200,
          "responseTime": 2608,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dda1f3-d88f-4cfd-97d9-d68dae263c50",
        "cursor": {
          "ref": "3af4c036-749f-4c1a-8e67-a4a4d704e1b2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1796dc2f-b8ba-4700-b699-b374ec59ebca"
        },
        "item": {
          "id": "81dda1f3-d88f-4cfd-97d9-d68dae263c50",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4f84096b-6e96-49d7-b23a-8297b3d0eb70",
          "status": "OK",
          "code": 200,
          "responseTime": 2994,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12df82a3-5f1c-4bdf-9eb9-c3c11e4cca83",
        "cursor": {
          "ref": "6549b813-c6b6-4eca-9979-8a600200199d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75b3ec73-6341-4e1c-a501-800d5ca8885a"
        },
        "item": {
          "id": "12df82a3-5f1c-4bdf-9eb9-c3c11e4cca83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e2362d12-8b4f-435b-90de-a96c58bf9426",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12df82a3-5f1c-4bdf-9eb9-c3c11e4cca83",
        "cursor": {
          "ref": "6549b813-c6b6-4eca-9979-8a600200199d",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "75b3ec73-6341-4e1c-a501-800d5ca8885a"
        },
        "item": {
          "id": "12df82a3-5f1c-4bdf-9eb9-c3c11e4cca83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e2362d12-8b4f-435b-90de-a96c58bf9426",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c163102-88a0-4cf0-bd35-5287bd19f910",
        "cursor": {
          "ref": "7cf209a0-1040-4458-954a-2c76473e922b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "68458a22-6afb-4c59-91e6-6b4570457388"
        },
        "item": {
          "id": "6c163102-88a0-4cf0-bd35-5287bd19f910",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6b238e9e-1ddb-4aa4-99fd-66280e70400f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3e0468-2a49-4dce-a467-5710460814b8",
        "cursor": {
          "ref": "59f6210a-84b6-4b80-8ded-610445ae4d71",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "cd9b4081-b933-4cce-8a3b-ca7d6173a0de"
        },
        "item": {
          "id": "bb3e0468-2a49-4dce-a467-5710460814b8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1a81ea13-5df3-4e38-811e-7e5680c8a152",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}