{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "63ca70a8-2190-4bea-81d6-2a223c47d98f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "5dd8dcc7-4641-4114-9a3e-7a05ae6a6956",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "16990d16-7b1e-45ac-b964-4f8bd34e9385",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ae98a1e0-4ff0-4ba5-b12f-d813fa26142e"
                }
              }
            ]
          },
          {
            "id": "d6b70c2b-c77d-4048-8626-b4536fbc84ff",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8e15be52-c645-40a5-aef4-6b07c688adce",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b3b94bc5-ea52-4ed2-a8d2-989b3ca07f16"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "759381e9-824a-4dcb-9089-0f78fb435c13",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5293f325-daac-41fd-93b0-09316a8ac146",
            "name": "Positive Testing",
            "item": [
              {
                "id": "122e568d-152b-49b4-a623-5a5f5714c4db",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b14c6325-25b0-4a9d-913a-a386503a6810",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3bce6ba0-9ee7-4c09-9443-6ef872b936d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3db281ac-7760-4306-8bbe-737b8ff0c9d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1320e156-3a9c-40e7-bc6f-665a6ebf1843"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "534aa4ad-7623-4f09-b982-428590f9561d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e2ea0f74-0dc0-4563-9ffb-3d98283f5336"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1fb6241b-5df4-4e4d-a6b5-51eb63c3bb8a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "a4d3284e-f7dd-412f-afd3-b743bce50dae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9d3bf010-d04f-4a8f-b730-3844ffc05d04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6a6485ac-da28-4562-b172-7a702eab3407"
            }
          }
        ]
      },
      {
        "id": "0aa88451-0dea-4f8c-9850-1939525a54ca",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d6debb31-c4f4-498f-9231-8cf4427fd71d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ebcb9b74-9072-42e3-b693-881aa98e06bb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a302b31f-15f7-440b-9a3e-ebc4c59315be",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0c6c985-9ae2-4a75-bafc-4a266ca2012e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b081b97-5df4-4a97-8dca-4d690aee15b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c6ff8c-ae11-4f43-9cf2-7ac9d4bc4be0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94f658d4-3477-43e8-8a6e-e455d02c93bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f650128-a5d2-4b72-9736-4c1d48f8d4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5757c2fc-e96a-4807-bc42-be1c087fb606",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f862ce84-b8fd-4d17-a622-d8e65b3a9435",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b90c0c-188d-48eb-9de7-58cd6dc5f2a0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "deb51b4a-620c-434c-a90f-4a6138654994",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d574379-7bb8-4876-bbf3-d6ad823584f7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a958b419-e63d-499d-93e4-eb4140675a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31ba24a3-f55a-4c98-bc93-9b3c3504c4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613aecdd-075a-4f1a-adfb-625257c0c63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed5f0b8d-af84-4ffa-bdf6-510d20b9d878"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c02bdedf-29b5-4a07-bfbe-dcbadf16c95e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "da1b00f4-b8ff-4de8-85fe-ea45d74ec67c",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "774fcb5c-89cd-45a2-9eda-617ed359d29e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "0f980829-4e98-4179-b1e2-9ed74ef69dde"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6c737fea-dc32-4485-9e33-9db0342d0615",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f6c13788-72f6-4b05-aa20-8161012c7af3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "61f7a94b-f4c8-42ca-81e8-96f9750259a0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "40d385b6-a526-4fcf-b686-6c9dfbdf6c47"
            }
          }
        ]
      },
      {
        "id": "d87f99db-dc9b-4933-b411-adeed1ee1590",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "385fe910-c8fa-469d-8bca-3ebf61d4f3c7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "521f091c-ee81-4c4a-816a-bfbe763180ea",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "580c09e9-81d5-4af3-be13-180adeb95df4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98805536-e90b-4579-b29a-ebedeb6fea76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a603439e-cb7c-478e-9472-ec20ece94277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480db104-f1e7-4896-925b-ba5d36541282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81f3d448-82a2-4bc0-bc77-cbffed1a8757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3672e6-da83-40e4-b8b1-13b5d99c5259",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0563335-c7c4-4309-8d2e-b028f6d80743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d86728cc-7c86-4fd5-ad91-c191127153bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04eec1b-5b26-4d9d-a773-181f08d70cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b057039-52f1-4125-86fb-75380f6a64ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d026602-3999-4d05-8d95-47f0cf24f54d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22725f2d-af51-4f24-90fd-706969676d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1eb9de4-1736-4b7e-8735-226db2c48cce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02416bbb-2db4-46f3-a25a-efe9f09f2260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4674443b-eebc-4fe2-abda-2177cb1da826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3496eb-3fee-4830-b023-7aa95132c36d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5872f017-b548-447c-850b-f81adfb0ca4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22f75859-90a8-4189-8ba4-45f52d68b0bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b8aa1a-aafe-401c-a438-d7e2c6d4cce4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fec66e39-3643-4453-ad76-01582546e479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a97fb3-65cb-43ef-8509-b65e3dde8978",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a32c2c-a530-4bac-8f2f-eb04a896fe6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fff9a2-cff3-4b50-ab8c-d841d43970b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b616e3-93a7-4bce-8218-a32acc7f42a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1356e1d7-1d75-4a41-9d37-fbee987bfbee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891542b5-2295-4125-b3fa-d71fc6c276ef",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c40d2b-280f-4f11-9d5a-07716e5843d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea777426-3100-45de-ad96-76374cb2777a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23dfb075-2971-4670-ba57-3c8e8a7a4452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01864b64-1ac1-44b0-9c3d-a0aed9567bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acf7a6a4-7a36-4c75-a89c-a2a1fefb4dd0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45c01635-0e38-4ffc-9da1-cb01ed61479d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d70c75-08a3-4386-98ae-504305d0d124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7d3ed0-3a8d-4e28-85f2-9ab5027c1386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9e4d5ee-8bf7-4ec6-9ab5-2fa977f66b3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5bb102-bde8-4fb7-96d2-8f098babfe6d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8371d7b-e527-4490-a5e1-26631dfa19ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a93993d5-211a-4022-a199-4d878537509e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fec816-f1b0-4c06-a92d-b4b7632a5950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c1ac2df-d796-4aa2-9d7e-03f9c8596c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b5d6d45-0c11-45c9-b67e-169b5bc3149b",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72fceb3-4897-4fa2-be1f-8cf57fcff0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a247b0e2-a932-481a-a2df-f874e79e28a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5772f355-d8a8-4bc6-8372-3597a3362b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d1382b5-f916-4de2-910e-54b2627d4974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58a0f96-5a1a-4365-b3ca-0ed0b5d9b031",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "033fb8ec-c136-40b6-8669-308d1df6118d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a71f732c-ac70-40c1-a5e9-1966fadfcaee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98774e71-d542-4c05-871d-228a4f3003ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6511d94-18b0-44d3-8213-cbf0211f4fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f00eff-d254-43bd-bb97-419c3f6245e8",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea972c7-a097-4043-be8a-74ce29c1c65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2df15adc-bcac-4b37-9ccd-272c07b03210"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d669970-ec89-4c31-b0e1-15a0fdc1d360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2d199e98-9629-47f6-abd9-570d5c9d38a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a7fcad-ebe8-4d99-94cc-086148fff2f4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcf67f2-c13f-41cc-b792-c122658b0951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f938c7b-6ab4-458b-b2b1-56ba2e2ae1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df1a015e-6bf0-4f52-abda-95136577f871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b00ec7a-0e37-43fb-9d2d-a6e634dfaf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a6df71a-f574-4d02-8212-af57ee39c710",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b36608-066e-4734-93b3-db73b1ce00d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619c998c-babf-41d7-8979-a3f2226ecabf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df4a5d4-050b-4be4-8a00-610d5b65acce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bce2da52-6d35-4c93-9441-bc1db97e0c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4da76d04-721d-4bff-a227-0940a8ce138f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9070168-88f8-4322-ab36-2be2e2e103d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bb6266-4db4-4e84-89c5-590f7b8fcfa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44988b0-f013-42ec-9476-dff82e1f11c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5304fbe0-7eb0-4da6-9e95-48d9a3e3b1f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca34390-ba29-491a-ab2c-4ff125ad6b1b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0405477-1fd0-4fec-a7cd-c4fe18035c5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1653946d-909a-40cb-8b30-d715f8c5fa04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69eab9b3-d584-481f-b5b0-6fba652b048c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7ff00243-f864-44ac-89f4-9d9087aefd9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4a0a84-b99e-44f8-80d6-1a85ef50e2d6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f872326-1eb1-4ab6-a034-22573682aa63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e57e20-f542-4fc8-9253-79e35f1f04fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9facd36a-db86-4ce3-947d-c56e48be1099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "245bbfdc-935f-4ea0-b985-fe831ebf43b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc2accae-de86-498a-9aeb-1f5e5475b285",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e8bafb-e706-43e7-8284-41ca5407e358",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efcfb2a5-843d-41d2-85da-f57d12467d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a54362f8-7b0e-40da-be64-9e64109493e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6d6147a-9bc1-4a77-9ec2-c83d03288860"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8bce0a-231e-4f5b-a054-9ec95a88ea74",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b174be98-05c7-4cd9-867f-52915d5be64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d7b97d4-73be-4c87-bcc1-723844d49a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e2c14f5-506c-43bd-9122-4a38a98d00b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "afdc6b98-9d6e-4202-a0df-d83b5ebcd92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b45f9cb-add5-4062-a748-8a784aea8669",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecf29771-4299-4dbf-9b87-bd5674ba65b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13cb0a04-35c0-4ce0-aeda-cc10ded874a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f35dacdc-a2e5-4f5b-9677-7bac65fd274d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7eec8367-3b03-4fdc-8f29-6c06997ed38f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "370d1195-40de-4a91-a93b-c49ab453f190",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41703b5a-2b2b-4496-83b0-7d113bd32801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e1a75a-0c1b-4c60-a9fc-8aadf9da295f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "480dd322-a6f6-4e75-879b-87a2d846867a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ffbd2fc-afe6-4d06-a8d7-6948f3e6238f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67bd0194-6fed-4227-a1ce-87e2e56f067a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653cf609-d914-4598-8cad-2b0e6c141fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6f50a8-8702-4780-9d0f-e416cda6f546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e71a243-a05f-459e-b755-ffc45e9e2952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "651cda42-29ed-46b8-a623-952a546bfda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b01979-98f7-40a7-b6c2-392061285efd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06262de5-c45b-41e2-a557-1f5dcb2be842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e49dcef-56df-4e61-9163-d2c77cb3717d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cebb033-277f-40b3-a9bf-df5c26f58c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc39873e-a1d2-403c-8170-7db144c19475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a977f937-d623-4fb8-aca0-68f3bdcc4834",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3bf1b7-2e13-4508-8cd8-a3cebc1557f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23f0a261-0847-4da6-b1f8-4c4a1cc3e9b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ef4f325-3a3e-4f50-9453-776c72c92a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5256eb-81d5-46af-9c08-8373bee421aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea0130e-68fb-46a2-9aa9-04f4ead463b1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1961462-eec0-4e36-835a-e6b1f8e88bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a25d14dc-8843-4ed3-b346-4ae2c7637806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "304c30c9-7fc4-47c7-ada3-936e6a7d936f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca1344b-7dd3-4203-9cc8-8d5741bc1139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314e5f68-50df-47a2-90bf-c1566d0597e1",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81f7f06d-f30f-4ebd-aa7b-1a5c777eed00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab66b515-45b6-4ef7-9c52-12f867d4aa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83054048-0a92-4c0d-ba69-64397667a08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2ebdd3-1f49-4c08-8a26-fb336044dd2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5ca3b3-0d50-4a0d-a649-4137c054a16d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a08f585-5be9-48ef-ab75-5dd3c7a44580",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf896d5-6104-43db-9293-076ccb28e347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6808daee-9e90-426c-a1df-034583239a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "35a32ca1-9cc0-4479-a74e-9f960717dfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9af4b795-6f7f-42b3-9940-bb0a1ac00f31",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbcf76c-b46e-4545-a076-7c177e6388ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe71c4c0-8771-4aab-a1bc-156b8d223463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e911db1-5921-4a13-987d-761e06e6118b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "44cba59a-14f7-45ad-8877-04e0e2d715de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f2e741-e74e-4ffa-af86-dfbac24107be",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685ae586-5a28-4f2a-8490-f219e8404f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "967f0bff-d8d0-416e-a914-f0952599c67c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ef15093-e276-4c87-a13e-d01f5bfa8de5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e36ebdc2-a5f6-4180-b6e6-082e25643be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a754b681-a764-4371-9517-753a257b9564",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d702e4f-7207-4208-92bc-14048f17b225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33069477-79c0-4eed-a1ea-5e46c7e35f36"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccb20653-d262-4ad6-944a-072c1526bc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f41ca4c-0122-4830-871e-fb043ff713e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bd1238-5275-491a-a5e4-2a2c2f519f2e",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6ffd20-8a82-42dc-9f80-cdf0cfb4ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e006d81b-076a-41ff-bf50-ee818f58e879"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30eacf70-e8dd-4632-8ad0-6fe88bf99aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f55e9d4-8d07-424a-8e9a-2cedb83be023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e50914-0f03-4435-ab5e-0125acb1ff7b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe64b4b5-f4a4-444e-820c-6aca8477599d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af63f6a-a97f-4fac-a43f-9499fe9dc917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4543ac85-7483-4638-9af4-6c1df0103611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb811173-e827-44d6-8c1f-790de137657e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "816998fa-41ee-424d-9c71-624486185e12",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1130ccc9-9806-473b-bf38-27bc3e971f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4014a4c-4909-4239-9809-651a028387ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28898637-09c3-4a35-8c64-a6500e0dbc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d6e697-9684-4796-aff7-9ebf6523f070"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e489c33f-510c-40c3-9c22-34862c55282c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4be04c-71be-409f-8629-bf558fe94099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79e335c2-cbe4-4bca-8816-1b0a2c524cac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0752adf4-4874-4b82-bf52-b635bca41a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f363035c-3db3-4a07-bf1e-1ae01fe133a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e534f04-edfb-4828-957e-a319ff034233",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704e8a4d-b586-4a0f-8ce7-29398984eb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9e0136a-6b81-4644-8028-2bf76813fbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4565a4cd-f163-4ab1-b1fe-8c95b220a603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe07a2c-b180-4e32-b3e8-22f1481b374a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e30232f-34ce-4a34-872b-d9a12a7d80ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cee57c-ef92-443d-93f6-a8b2a4c1d7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb628a9c-e856-41c6-972f-97a6144882a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "350e7d20-2288-44cf-9395-80c2e2f6e455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "eb855ef5-3586-494e-b7a1-658b22d9f7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56847ffe-fdd2-4ba7-b14a-01077a4defe2",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caf3496b-c27d-4597-b173-937e1f19b0b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae134d59-82b5-4a70-93b4-f71f216d6ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0777ce61-c847-4526-9202-2244dcf12a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "382a4b56-c03c-48e6-8f3c-04cb7ff49acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920fa13a-308c-4a23-a691-36d194a8099b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48bc446-422e-492a-bfe3-0017f847e150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "453e7aa5-566b-43fc-b00f-f931222d3821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c033bb5e-27d5-47a0-84ef-e443679cf2b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1c956f4-9c60-4280-b028-5a03fc52d3be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d052f3-7db6-4d66-8d72-4092398d8bb7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "892b4f4c-4123-41f6-b755-20d53a860c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49af7412-e409-4fb5-8ca2-efbf5bd40e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92062d7b-2060-42ef-b2a8-f6b9aea3e880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "45c3c010-20b5-46a4-95db-042ab4534cbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ac57de-2934-4928-81eb-5a4019e98217",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008cd9e8-1093-4159-ae12-0a56e69cb10d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "615786a9-8b31-46bd-89aa-94ff3edb3e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668b112c-8681-4468-8be1-cacc52642147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "489163cc-3ef4-47b7-a1e9-95c5b92c0413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d24fce1-df9a-4840-ac4b-b9547c67683f",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f30d66d-8d48-4575-8a4b-6d75c9b301e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c274c2-7a13-4e5e-a8bb-daf7f78c89d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01df993c-d634-43ac-924b-05c7efdd4077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "99d83f1c-de23-4a3a-b950-f01e6e90987e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e05476-4efe-4400-9781-90783ddaf06b",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f38e58-df11-4468-a41b-c9d3c1df3fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10482666-4b4a-4a1b-a626-99d0db5f5012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ebdd246-2bd1-48a9-b01f-8812be882aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "22dbdeb9-cb00-4b00-814d-97c484df59af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc611a7-2271-4a3f-8b38-a32c7dff0741",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bca601-85db-450a-a4b8-9a38855aa21f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9748fe89-4aa3-4c8d-9c9b-2f4f03315bca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b11e1b0-6a47-4767-9d72-25efb3cbed4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "f7947ed3-f604-4cbf-875f-fd9ff7a27e90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc802dd6-5230-4a75-ade8-b8862fbfd68f",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9594051-0181-40c0-8a88-2b52e3ca53f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bd4fe77-5b44-437a-bfd7-19b447155a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dff7f18-5057-43d3-9409-1b351ab79fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "41296bcc-e1e1-493d-84a1-a748e148a6eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05ab1225-c481-4795-80de-07485f8df7f6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f82d291-1438-40c7-b9fb-04061f8f450b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9074214-a63d-4d96-96a3-17aa12aaf399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac61a7a2-e3fc-4fe9-a81c-8d2e2720d5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee7a886b-2cc4-48ed-bbbf-9d668326d391"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56f94f5a-7112-4fb6-9877-15fdbd95b2d2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff41dd5f-1e30-4d23-b270-02f80f152528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f452baa9-088f-4267-bf15-d04483619c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31093716-a4ee-478a-9b11-812db04e12c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ba6143-bc52-4523-a73e-add4a6cda3a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b329e683-b9b1-44a4-ad08-cc0450037583",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f5ef185-b067-40b2-8664-fff35ba5d4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15265cf7-ff10-4e78-9591-63f58e3e9ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51027885-3bb5-4f28-9647-8515b989fbaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "94d31065-2907-45c7-a1be-9a74beb1e138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99934ec-3257-42b2-a95b-d5797ff1ab81",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5253fb85-8c3b-4a84-9fb2-db138326a96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a3cc4f-9f96-4d8d-abc7-4e1a615b0420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee2cbe3-1a74-4896-8205-941f2e8a126c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b939e6ba-3d41-46e4-9a44-bd98d1cc7f8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5f95d9-07a1-4531-b778-e8eff1f30aa1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37ee1cbf-904f-4d96-8ead-848eae40f3ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb676de5-5f3d-45ba-a750-07ad7865deb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10733994-02a5-4c40-9e2b-9712e482f74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11aee055-8afc-493b-8bf0-bbcdf7ea49ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fd3240-785c-47b1-baa4-e18f92c75239",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd75a8d-c294-4beb-aec2-695a250e82c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b293e621-9d9c-4082-adb0-c44842ee1e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fb605d9-7668-4669-a9e6-82cd25bdc862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "04e6c21c-443f-4527-8ef1-ed0c8ec00021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2061573c-3bb1-4e37-a5f7-3bdc288e91b2",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e378680-283d-4dd7-8b01-bda93eafd155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "567be455-559e-421a-a58c-a3d4dc56bada"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "243ba7ed-ecd5-4faa-930f-ff1425e481bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0768f285-d1cc-46f3-be72-e007f243b3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fbcd58-1d8c-4409-8acb-39194bb260c1",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb5b64b-c823-44c0-b648-292c3a69fe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68430c22-a957-41cd-828e-a61047128dc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857a3be0-f051-4346-916a-53d763eee42f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "305d9cb1-c543-49f7-b652-e4e2739b159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f723ef-e429-4e34-b36e-2ab3316a4997",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5ac6f7-f180-4b4d-b54c-b043b5711e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afa423cc-2e6f-4074-a199-bd7dcbdaef64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a47cd926-48d1-4d13-99ad-42c7950702db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8f0e7b1-4b25-4179-add8-5588647966d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516578fd-bb6a-4237-b0fa-6cbadf261af7",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d29e92-8b88-4fd3-ad3a-60cb83151c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95c1f70-7152-4338-bf93-f43c4423e370"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce1852a-3741-4677-815a-d8e7afe52fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "22989895-ae7b-4e9b-ae7f-b56a93326b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7190423f-2a29-4355-abea-53d82c474a1a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1b1dda-2170-4e7d-be96-bdeff9aa7562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4550aa-c163-4b8d-ab67-d22661b3a3d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959b1d38-1bd3-4ed7-a810-d7cd5d73ea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "03251773-158e-4d9e-ad5d-84d3055af0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95d6aaff-611e-4227-bbf5-68da1bd81c07",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b64cad15-c48d-4209-bf1b-e7d50ffac914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11293d4-b3a5-4320-8c35-28e4477667ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c9b3e1-5fe8-4159-9f87-5624fa7c3c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75b7b2b-fc88-4b33-8a27-243987e36ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c5f99f-9cfa-4654-ad6e-dee9c9f7d717",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c269eb4-fbe1-4472-9580-6787b1c58bad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1394f438-b7a5-4054-a331-112b2cf04071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb655531-956d-463b-8ed0-dca1b8d23137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ce4c42bc-2aac-45f0-ba32-e02ca2b9582d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cef7a08-0d5f-487a-aa6d-c53fea656c8d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9c2c50-692e-487c-a59c-5f8d58576cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61bb11ca-a746-451a-8ead-d3db75ae1c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ec22ffd-cfec-4924-ade8-9a8dd3a8e815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e849a4-0486-4d35-9b14-3559b03b151f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cbc4dc-1011-4c23-b88a-94bfaf760c2a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ca40a4-4e43-4dcb-bc4c-aa9fe7f691d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4849ea-5518-4a34-bbe9-5fbf785f7573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dde10d5-cb3a-403f-bd6a-1ee20ee1e1a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f07616b-8aa8-45e4-a597-5b73f98a74c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d7f23b8-d6fe-4d65-934c-a48792608380",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6989ea9-81c2-4f17-8fc8-7601206f3493",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "334463bc-cc10-46f4-adc0-5028f585fa01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ea80b4-c3f5-4e6c-8e2a-3cac1e899d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6a604c-e371-4099-9783-e0c80f9db693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66db6e6-9905-4ef6-b91c-499bb87451a8",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34275331-14d5-450d-b849-1c7e7f395198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98827617-6d51-449b-a1f5-5b0747914a4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a6fc57-5993-46db-b27c-44cb57eb2ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a403b46-7e18-4642-a0a0-03ee83cdbb6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a94a01d7-f2ab-424e-b231-2a668e965326",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a3a603-62ab-4304-893a-b6f6ee83916e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d5cce2c-8daa-412a-9e83-81a6160284ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d3db58-4c9e-4081-8c8b-954abc8b38d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "11c104b1-f4c7-4f8f-bc49-10dff1cf0a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8895259-9bda-42f2-b711-9e0d8bb7ca26",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8c7b72-af70-4748-a642-1a1ff13de5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2514c62-1a4f-48c4-8b72-869ee2535925"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "491c9102-d524-4d97-8809-99051e5659f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4397fb3-7042-4567-9bb9-eb3a77c5540a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849a5cc5-5f86-48ba-81aa-4c192fb7a709",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd73e854-05eb-47ff-ab68-42b1cf60423b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffef5aa6-e7d0-4a10-99df-016e7ee1aeef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cab87f-a42d-4cd9-9c91-bd5bf29f76c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8becff26-cc06-4e42-9e7d-e09d16809675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5688bd1e-6b39-4b2e-9e5a-6aace494d02d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0603b189-b3c9-4253-85bf-a267586efe94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4501e0-5352-46fd-b63f-6b38d5d36628"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299a9672-0712-4cbd-8a94-f9ead79ad7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56389a37-7e43-471c-8f9e-439c3b6981d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f70e1d1d-904f-4645-9f74-7841c5d477e1",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab3a735-c6b5-493f-833b-f94262b2356b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0a785b7-3cca-4ede-b783-fb5e72c8792d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9a4004-425c-4971-9aea-529951038c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e5869d4-4206-4ef7-bfed-2e2b27a66c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47284d1e-5044-437e-abe1-6a7650d8b847",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "868d90f4-3c05-40df-97a4-379abff90356",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a38666-da55-4396-a076-f703a8b20a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bbf494-2c78-4f89-85e5-321c8b2ac959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa2cf87-b976-476f-ada3-c20d5a1f8f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c76a0e5-bd46-46bf-bf1b-e6e254068516",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "623f7ec5-0f98-47a1-9a5a-eca264a7342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04808594-55f0-42eb-acf8-060d9b88db01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228ac5cd-6a09-4cbc-8c6b-c73a1151de25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50220663-f60f-4fd5-b6a6-d04fac0766d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1525cd09-321e-4023-9ecb-549977247c24",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43ab3e6-bfc2-46bb-bd4c-cac95f1cc3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6793d311-f4ee-49de-a49a-2723299589e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af75e5a-9094-45a0-840c-d7bdd4e919a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "765718a7-e55c-416e-ae9c-0ba846232898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959ad3c2-d58b-48ce-ad90-e3e3051f3da4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289c31e6-b981-4a84-b700-0ac7e52a78d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164d49c1-9d7d-437b-97f1-8032f6dcfa8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff998fa-13f4-4b28-8d57-21930970c562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b19f9a22-1c4e-4988-8ca6-3aaddaad1a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b268f1-ab2f-4c2e-ad9a-88701f62ece6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c237b1b-a11c-4992-acc3-e3d5be4b9e5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4723afa9-c880-47cc-aee4-4ab8dac56b3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6861baa2-f7a5-4c0f-b50e-e01555867333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b36f8865-2ad1-4a7c-86df-3c697e5fa90a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6d0ee7-0e30-4f52-b201-0302b00b2710",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b9c060-fdfd-4917-97f2-71577e6424c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f54385b5-4484-43be-97bf-6422a6474f35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b1d381-0561-4a0b-b8e1-f9af3c13db1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "be4754f7-54d9-4f52-8f4d-80aca396bc61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ff94b4c-6693-4f59-b0e5-4d1bdf8f24a0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "648b0f1a-625d-4616-b386-23a1fcb96fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c82d4713-e14e-4e94-b914-2587677fc55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fbcd463-c9df-4ecd-ba94-cf6e92ab7bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f76b98f-29fb-4383-aadd-6d6d7d66b239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29d020f-8396-47a6-8bb4-df942978e741",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09044993-3895-43d7-aaf7-4ef61f626ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2292d5e4-cbb2-4175-b4fb-8ef90526b971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a877a29-2b2e-40da-8756-9039d8f8598e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "95ec00cf-d510-4b0b-9ecd-2e618d09e7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b337c76-fe8f-4a3f-90be-d7ecc8c9b2ea",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc390b15-2f6a-4443-b4cf-63708161cd14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4802a1fd-1961-418c-b276-a3a29aeeb703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c86747-6e48-4dbc-9542-51071565592b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17fce5dc-26e6-474d-9db1-ed4fde76c01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17065970-d131-4ca2-a82c-e035feb486ee",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335407ad-1007-48ce-9547-92e698ce99b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b0f641-0d83-49e3-8cc1-c8e6c36cd749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b338bb-b928-4e49-8027-44a2aaf77ff3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4cb5c4b6-e6a7-4b41-b3b0-6f254db9ae68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d30a9d3-9b34-409c-b4fb-2f0a95343d1c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac19260c-ea5d-4710-a69d-b07842cd027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49d0f594-03ac-403e-b871-5974806a05e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbd3e206-c1b0-49d5-b685-5d851c2e4220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e8ed929-1f2c-4a1f-b780-f868420f212b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bae12941-2b51-43ed-b2c1-73d0a8878eed",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996fe3c3-4e53-4b6d-ac94-dddb420832c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9046404b-b49f-4bd4-b62e-27c7eba5d365"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e2ec774-31e4-44f2-a852-16ce26aac5ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c4d527-e5d9-48e3-ae94-96ac7ef28c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbc6357-3893-449a-ae60-0e393970ac1d",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af8fd605-be56-474e-9476-0409c839a6d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1411dbd2-a0bc-41de-a7d1-4104738b737d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4568a917-f1a9-4e0d-b0f2-d437c9685f6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33179151-9ef0-49bf-8f8e-c3ca988fc436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ae37a-2226-4918-b6ea-0312e99d6706",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25465aa-ccd8-4bc6-aa49-5e6224cb6639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1458afea-e56a-4bfc-96a8-612456b36367"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ece05-2b19-4ad2-bfdc-4a0b34771085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2529dbe-f94d-4e05-8e7c-e285c3f3610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460e47dd-745b-4b7a-9649-5f421ae320dc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4bb070-f4d2-4dbe-b0d3-b69b7bd010ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db895e2f-8c87-4852-a314-6325d78fbb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3ef683-1c44-4d3a-9346-a6b096b344e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e1d13d-570d-4dd2-977e-8576db3181ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1c451f3-867a-4c81-bc83-ffec61c5c8e0",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "117a3262-44f2-4cd6-88a4-8b83259eb8b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40ef9d37-bcd6-48a5-8611-d538d5144274"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "171629e5-a7b8-433d-9fea-62a452453c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0de0c30b-3776-4f4a-a6c5-002b9890cf07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e54ea21-0c2b-478c-8d91-e7255c31c866",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ffabdc-b06c-4eee-b0e4-8d136b35fb78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24ea4951-cd85-459d-a4b2-d51624d3663e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42fc225b-02a8-43e2-af89-bbc366f89a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67ec1817-4e4d-4837-aecf-749ea68d8d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19b6369-085c-4e60-94b2-3a9503fcd120",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4697566c-73f9-4f2d-af6d-fba51d7db7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "303d7125-48ac-49f5-971b-6756c218adc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69297ac8-2d64-4278-8062-479585791029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b07f3aef-4d7f-41ec-9b13-94ec21c10739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9104760-78fd-4344-8c44-433f31111440",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e596e1f-6679-4e20-abb7-256a6a63d69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec8b821-26f9-441d-ab33-f5783b7e07af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96482d76-f210-442b-afc4-66ce1a68e514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ab12f7-e93f-4391-bd23-06d15ad62595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf37201-4179-4d04-bab2-efb146fd5bb5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a81381-d4dc-476a-8680-f287bb2c72f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "657a60bc-ce20-4c03-8056-9e6c8fccd503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7f79f7-bd8c-4973-9d8f-ea8df790259f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40bb7d09-ac2a-4cea-b7a1-e191c5a7fa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b848764-7de4-4ad1-9faa-41f485b1234e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c026c7cf-5f14-4c5e-8996-4b3a264f0bab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44f9c9e-92a1-4d72-9a5f-30bb15b02a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd94fb67-ce5d-438a-90ab-6769bca79e60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9544db8-856e-4711-a29d-71ed439326b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db320ee-e4a8-46b9-a645-ba07d8d16398",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd02c9cc-6c85-4945-b6eb-360a955538a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e929f37-aaeb-44bf-816c-cd4a4d4bec9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9340c9eb-29b1-4d5a-ab02-c2dbdf47babf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6199a9bd-79c6-4ca4-bc09-039ed0234561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf6b3350-a460-4025-bd63-0eab63133146",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5e99ea-934f-4d44-9650-a364c10990da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ef4b208-2429-4bce-a0df-b7d7e65a7c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481c6e87-773e-4da6-a6c9-2e51957b1553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2535b157-2ad8-418a-af28-bb789172f1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d19e97ef-a31a-468d-9177-9dcb56ea32b7",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d846e1-9a5a-4354-95f9-e09852ab7be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fca42aab-0f0f-46e9-aa55-1a2dcc3f8187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "080aee20-f9e5-4eaa-aa93-ae556fd16cfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "136bbf2c-954e-4afe-8f9e-1a7cf0334ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a429a1a-103d-4444-bb57-b447d62a581f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c25755-c856-4d36-8c68-97a7e08b9f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aca3a1e5-482b-44fe-9497-c93a6a69187b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713119c1-8de1-450a-b2c1-34334ed51fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eae41667-eed7-4b57-bc8e-bd9d215fe23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cc9830a-d778-43b5-9253-3ba636227753",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aba98e75-c49d-4a9d-bfad-d4ddce5c90ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb376702-870c-478d-aeb9-f84fda30feba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03102b32-8b30-4e83-a469-78cebc231ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee7b938-6dab-4a83-abdf-bb689f5d4c80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2674e71a-e122-4441-a12a-db8e6bc38c8e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4847440c-dc07-4e69-9ac4-7f7d2ee1dc51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "6297f394-b5f7-4ba7-84e9-b7b6ad3d72a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a89d06bb-2ed6-4cb4-bfa1-784092b5ac38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2efa0513-0d32-4ade-8549-1dcd7dfb010c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a32a2ef1-70ed-4bf7-9622-188b2367dede",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "70a3c842-b873-4787-8a12-dde57f3d17c8",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ac440-d3d3-4c74-897f-c9b25c01ea82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4c0c3ce7-199c-4c5c-a7bf-bd4d5c3f43e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28783e7-faf4-43ae-bcf9-69a129543c89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9c6fd055-49fc-495d-9cb1-5601575ca1e4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "05a30286-64ce-4647-b74a-d26e2d7b86b1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98a6000e-cfc3-46c7-9db9-0bce4cc234b4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e084675-7bff-44ae-886a-30d3c5de40c9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6064fd22-75bb-433e-9c6a-ac7da75d9562"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64930a4e-e0ce-444c-b86b-d9531043c6d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e04a88d0-ec1d-4745-924e-98a7b19f5b39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "081a2a38-503e-4e96-9cfb-bbfd541cbbe1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "daa33b41-b18b-400c-ba4d-357e6c7eca38"
                }
              }
            ]
          },
          {
            "id": "39f6dbc7-c707-429f-b3f5-138e934ec94b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "626abff3-e6b6-4921-88e5-75e8b1025e61",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "462d63a1-00d5-415e-acf7-4a03c59d6592",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a5b58ca5-9309-4a66-ac92-4484951a3139"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0ca49f17-f842-440e-9e8f-650036a8fc20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e7c9a333-082b-495c-812e-8e3a485dcd03"
                    }
                  }
                ]
              },
              {
                "id": "fe8b4280-7f83-44d3-85ce-cfbd92307800",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9671217d-5b1a-4e37-b7ab-cac56db83a54",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "801631a1-7bff-450b-9db5-e2f49e60b936"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fee581c2-01a1-4606-91cf-fc5c578b8601",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2b4fc9b9-86cc-4e25-b48f-f3951508acaa"
                    }
                  }
                ]
              },
              {
                "id": "bd9194f4-77f4-4844-96de-908c78617882",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "481adfba-ed5c-47c8-93f0-119bb4b300be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ce77805d-5457-4739-bce3-557efb1d6e58"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8501cb79-198f-4f14-be3e-6c23b296fc27",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8d1c6f9-cda0-4295-bdf5-95ba913fe7fa"
                    }
                  }
                ]
              },
              {
                "id": "d11f3026-ea73-480e-86e7-fb57b9a42dd0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1938914b-0078-4e96-868c-b3009bc5dc9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b859dc9-8a97-4297-873d-15411b657531"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6101610-e941-4b9b-84d6-9dbeeb6a8125",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "534793cc-5095-4b6d-a21b-f2922f0bf98e"
                    }
                  }
                ]
              },
              {
                "id": "1931e938-d640-4d31-925b-aefa3923faf6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d631609-868d-4a24-bf81-8fa2f4dc2061",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a7d5f718-bddf-4007-b5cf-98a48c8b8897"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ae4cc4d-2d8c-41d4-931f-eceae07f9712",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0d3be58c-edf1-4817-8f98-e3a2e00368f4"
                    }
                  }
                ]
              },
              {
                "id": "906e0655-467b-4d63-a283-69a6abb33ddc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53671237-9091-4c71-b1dd-ae23502bc635",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ed6cb69-9e50-4736-b608-4f65c502ef4a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30e9278f-27b4-49ca-a5cc-c6a8b8c46f2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b39acc9e-9ca5-4fb6-8753-30951372a5db"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef35080f-6b3d-4771-89e9-1c8bedb63587",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e8ad7210-34f9-41c4-89c3-d6248a1ac2e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8f8e558c-04ce-46c1-aab5-f6858c2b914d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b79b6c45-c3a3-4517-942e-ba40e03e0c25"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44f2e05b-350e-4966-b3fe-222d6e8b3ae9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f9515a05-8539-4154-aa76-58e3087a2296"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d301b6ea-fc72-4911-8577-d47c65a06cfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f6411ca-2173-4e20-bf73-0874b8dc7a7a"
            }
          }
        ]
      },
      {
        "id": "7264c204-49b5-4b2c-8251-4cd460e43092",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "5c5e0a3a-b6c9-4519-b81e-bd36046b5c6c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b2162b31-6120-4baf-b855-5c43ac1bebef",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2d9a07f-4660-44ac-8907-1c93871116ad",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14458703-043e-4fc4-8a72-5de0d4195ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "219814be-61d4-4b01-b200-eab3f1cf49dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c1d911-ae5d-40a6-b025-37461b7cc945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "631e2795-8b4b-4cb1-b63b-bba81b3b906d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0da345b-62b5-4686-9613-27c96850b16a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e2aec2-9426-40c9-8b34-90c7de48aaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971e33b1-7211-4957-b6b2-36f399085852"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d752dced-feee-49f9-8bf4-9502cd02bda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ecc71a-6aed-406b-8793-0755781b0a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51820158-c23b-4bca-9f5c-92db23fcfd46",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d5813a-6965-450d-92e8-a1fa3ab63a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cadd5e-7618-44ba-8428-c1947942b253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc00fae-10ee-483d-a2ce-80b8264c467a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "316b48f0-c8eb-4024-bf23-90990d3519f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c51f4946-1330-4464-8d91-25e16fd9e7f9",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476be186-f379-47c7-8efd-b2aff22d22a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d21f31-be96-4c36-a1d5-2045756336a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63edd3a7-5259-4131-8b3d-97f7b15a4b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba29a2a-c55d-4dbd-b551-f3789534f4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc3e9b6-ef12-4cf6-b822-75b5a1406fd8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba37f08a-bed8-4e0f-8698-52d5e90d2e96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d604ee90-6d4c-4977-ac25-4658bf9fa2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ee6879-08d7-4572-9dce-1019f9a60a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "98ce7d95-fd31-4868-8438-a5b5e51d8d3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886e9136-7074-4728-9663-0bb8f1ba00e4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f5d516-a270-416f-9e7d-0503c4d6d662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fef688a7-c98c-40b5-abe5-fc5425929c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea8b3558-2477-408f-a697-061cf9798114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae26a049-475c-4ec0-924f-612117a63fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47cdbdc-c2a0-4eaf-a9ea-6d5b73563bdd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcf4c719-ea20-4384-a59a-6b00c64621f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31de31de-0276-4aa9-a894-2ad37b10821d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "655c81b4-5c89-4fea-b55c-b458b5c9ee3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f089e34d-f996-4295-a901-91c7b5f7ebaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27383e83-a40f-49f3-8d77-04aca895d6a7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2052b48-5ce1-4055-b06d-da01bd1cabb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a826eb0e-9888-4341-a19f-ff4ee444fc92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8767dc5f-55f0-44ca-8c9b-dcc224c54c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f460636-af98-4772-9dbd-f20b5eb49640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15edce9-a3f9-417c-bea1-9049b33572df",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d3c4c2-5c4d-435e-87cf-910da550fd9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e221d68a-acea-4245-b09f-f43c07867b0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1514fe-a7fe-40b9-9df7-ea8bd030bd3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4949b8c5-f085-416a-9c35-e3e8a8b152be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4910d3bd-8935-4e12-bff3-9a6ac7cd4b9c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f075babc-1b15-43e3-972c-0d5d3bb5f665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c5c85f0-ca25-4233-8d5c-ab0f3fc90153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48ba77e-5187-472e-8001-05b8b5ca49bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f24c10-9b5c-46f4-90e6-ee9d92c652e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150cd50c-d38c-4f51-93c2-0f2b335a4049",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c93655-e48f-4a95-9cb5-8eafd5db1b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac0afec0-b6ca-4c7f-a1fd-7b178368dc40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5b73ab9-fd1a-4a55-ab9d-e1d2c8cd2a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c41f0616-eed2-4b22-8eed-49aceabb7c25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "078e5c03-b0ac-4921-b67b-dcd6c6bb24e6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a9d5b6-5ad5-4646-9bd2-57f24d4e94fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cffcfb8d-5fb5-4c1a-b967-df0b1443869f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c1766af-c23c-4ce0-8f59-bfe4c2013988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be9d62d4-f9b5-4cac-980d-f19c548fc20b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e7fecde-0ab0-4849-b47a-24a143c612d8",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a134dd-7744-47cd-8944-bf1e260109b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43cc9d1-a4f2-4dd4-8d78-773a8d7602b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c5740dc-875b-4a32-afee-dbce00c1af43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c1b9a3b-7cea-4e4e-9e3f-bf5bf4a27552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0967cae5-7cd3-4437-a081-bcc9994f9e05",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1172d929-e82f-4657-b639-20602398fe87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5400cdb-ba83-45aa-a62e-56d9b48af282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3f073c3-0365-46f3-aadd-eff6e0f29223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c8f3f4-67b4-47e3-86f1-986b8d636308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f35a2e9-9d61-4e6a-88b6-45b7cf9568cb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f95afd4e-1af9-46f1-a405-0b458dcf3451",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d13ba1a-32a0-44fa-8db7-8a216d9681c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17963784-a911-44a2-8cd9-d4c5d62c92c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f33cfa0-b12a-48d7-8372-e39d0532fab3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae63f67-58ac-4c1a-8974-8dc415edc9d6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f5b0b57-9c76-469f-adf6-d4ff836aa844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893f1484-004f-4457-8ec3-60e46e0e7b5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a37a8c-d2c0-429e-9233-a30ecc87399d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "efdff473-042e-4a0e-8d11-b746cac2ab8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa6c383-1fde-440c-9cf2-2460b0c4a6dc",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1756bc4-8b2f-460b-8f3b-3c05f90a0ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e378e361-e877-4d99-8f3e-a205a33eeb4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb2989d-8b8f-4db4-9d37-6a2caa8368d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "99d109ca-e56b-4cf1-970d-a4df8d9cad97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "635863b2-f52b-4c55-ab33-11ee76cf17a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c095d078-902c-4d79-bbd3-397b5b6ef796",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35fbc8a5-d178-4b9a-a6f9-a2dcf7c668b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1bac6b-2d38-4d76-aed5-85e2c9f9edf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a18e5353-928b-44d6-adc3-9849cfab0887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef08a8de-3b16-438f-a894-39fbd1710e65",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63964673-815d-486c-9fc4-6fd28332c348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7c9f656-fbb1-4dfe-bdac-ed62bf563c6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fedd532-8c20-4976-ad41-a258d2ef3067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8d9da6-b3ba-4015-8051-8329b95ccb64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd627ce-e878-48bc-a654-bc6723f2cd73",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715e1672-0de3-4088-a230-ee055c483282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d080f21-efaf-401c-a2b5-b3c68c970c9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3529f070-0824-4e31-9121-9f1bbd90a283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59789955-107d-4fc7-9c4e-90047dc3caea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7725cdbe-2e94-4759-9334-28a6547a7759",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7982a664-914e-4647-971b-464942893e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8777003-598d-4c23-a339-8607ab02f537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9c6ae26-ff2b-4cb6-90dd-5a9275ce9291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a37b37b-6abe-402f-aea3-71f644c09682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83f2532a-f05f-4798-ae3c-0dadae821260",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d8589e-7932-4dec-a60a-8e828f4d8306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3c6074b-d0fb-4584-b52d-e027890e84a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73a7099-e221-4d8b-97ef-8019ef3ce5e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "845e5b19-0e2f-4f51-8e91-a17db7dbdc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256aaf5e-2d71-4f47-8251-5aa98e57812f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d78166-6826-4921-b8a0-135985772b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1885eab-3e03-47a8-9e3f-032aff042869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30525f3-2a2f-4066-a55e-342b19b91894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb197b10-9a1a-4147-befa-0e0cb063ad67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88bd034-9f47-4132-9f94-f0e8ac18db17",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5426afc6-38c1-45dc-bc4c-d34019f5c647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282ef9b1-803b-49f8-8316-66f227e91fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42daac12-3fce-4c15-9273-69cf8cdc8e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9cc69ebd-8c36-4216-b647-0e31c5e8b74b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e651d34f-0a8e-4ebd-a48e-3110cb22cd0f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229dcfb9-8639-4c56-aa2e-9cfb2dd71d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee4d8fd-62c2-4852-9c1b-6d9ff5a6bb90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da9dd01-0e44-4029-b057-7842e25c7410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01aa8cb0-45d1-4ef9-ad47-8049d4e3fa20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f426b1-cae3-47e9-acd1-eac621df1fb1",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e83aa4-e8d1-4bec-a1b0-59f39afc3d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c040fa-ad23-4d87-9aa9-0ef84578e5ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adce7683-4435-443e-9b36-d59380292e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76bcbc9a-7da0-495e-9df2-0d565cc58363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e927e68-0acf-4ed1-87c1-8f5d8f26c931",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbd14b4-e22b-44ad-bb19-c48c52964beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6b8ca8-9186-4ffa-a8dd-185b59d16ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be0ea19-a056-431e-a072-fd0209a2d5bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "119986b6-1a95-4485-9a57-325bf9992deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb2e4f80-45ec-4c03-be8d-cc1e632e7da5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ecb212a-7a5b-4e0e-a84a-d936b24f40ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe68750-6b8c-489f-a5f8-5c2ae711e119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "879663f1-4227-41d3-af0c-68ea97baf3c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b947a57f-3b7e-4c56-9e71-3f7f80adf20e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fed2538e-e31e-4a3c-9b79-674e9a29a41a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c70cbe-c53b-4ca8-8475-973e0dd77e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d33458f7-0684-40ea-8aff-8a9fd60ce430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56342b8-005d-424c-83c2-4e08c57390dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f070ac0-da5e-4480-a06a-d34767c770f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb59896-8ec0-4ec1-96de-168ed2e07e7a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81edc10c-08a8-4c5a-bca2-bba3a75c99af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e524046-8a32-4b38-9d1c-b3043e66d6a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b050ac37-cbf4-4010-83c6-3ee6f1325482",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8570846a-6d48-4feb-888f-779e8eced029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60a98bf-e8a6-4397-b43f-817da15e8f67",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9206aa1c-821c-496b-b8be-bc111c0aa5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f874ee4-f56d-49bc-8ba1-de9186da01cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e26379e-e14d-466b-aa63-3fea6277de2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80acda8d-8fc1-4939-aab7-3c50cd0d28b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522a626c-b2c0-4d84-86a9-ade2a7056088",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2451dfa6-399b-43c2-ae31-2cb797f92a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19aa6bb5-9c30-49c1-90ce-879c88bff2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe5fec3c-99a2-446f-b5c9-f82e99df696b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54f08b3-0268-4ea3-a53c-00194c04a4d0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b789b47b-7f51-4589-9d36-e0040050f9b4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d516d3c-96b7-415d-a248-ddb7fb967e16",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "174103b2-bf11-4bd4-85f1-f5798da79cf0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "032049c3-d7c7-4cdd-97ff-8638a00cdbcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e94a83b-504d-44b1-8cdd-2cecc0de4200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "167cefa7-78e1-4d83-ab20-116db78d2cb2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78486a89-3637-407a-b759-6f469484ed8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c914012e-b576-4ff5-9025-7ed93ae1d840"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b0449d4d-6554-4180-9ff8-8b6a8a286508",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73a16c41-a56b-4188-b7d8-bbcb8345a337"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75165ab9-b860-48bc-b203-f9b112370ea2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "60752b39-8ed8-46ab-a0cf-859763a1f48e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5237baf9-9909-466e-881b-6cfc241aac7c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7653ffa2-2c5a-4f24-b42d-696e2207d7c2"
            }
          }
        ]
      },
      {
        "id": "ccba5880-6ed5-4bf0-9432-1f10c0edd5f5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "3ce16362-94ab-456e-8d9f-6e3a17000ee5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "216bead5-7c03-4349-8c2f-fb3d486f3c93",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "caea8eff-7767-4bb2-bfb0-32eeca94f11f",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74fddc44-3a39-454d-b388-a683a63fca43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ad3c95-69dd-4cf0-8a32-5781afc32616"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f6c3259-320b-4c29-9e39-f5aa1a083080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b689340d-eb2f-4d8c-83f5-9ee9a1f2ae2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a290edf-1b10-4949-b886-a676fa7b8b7f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d168699-b7b3-44a0-abec-b448c499f142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "716c2090-84f1-4838-af6f-0661ce893cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2611727-6f6a-49c0-9f7a-8a14b4ae64cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1afb33de-d141-4fb8-a126-61e5171ce6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8add2ed9-8218-478c-91ef-b1d5720408f8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f325c015-0a23-4f71-9f90-738336a1a7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7129b3-085c-4acb-9c36-a2e088397b87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7d77a0-e519-4adf-ab4a-a7d7fd14981f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "131b0ee6-e118-4d9f-b911-276d4e95cb14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b6b5bc-1670-49ad-b697-ef5652012db7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89938b2f-2a8c-4711-8500-0cc09da42ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1cacf6-7c5a-4c7b-8b11-62e260feaf17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942a30ec-2b12-42d3-a50d-c33581eecf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b507fb4-1bc3-4725-acd7-e373a3cfc8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d67d97-f862-4a1e-9f31-f8a107adc69d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf78728-d379-4743-8de1-c6d0cbdc7f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3d3e23-05fe-4784-beff-cb92e6c28bd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3211165b-bbed-4c54-af56-a038ac9b8c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e021fe8-d366-401d-bed4-defcfda71578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb62f2d-8a50-4026-8c51-a215f50ad9d5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64554d0d-23be-4723-a071-53e53f0de5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd64088f-2e90-433f-b7f5-c1f23d46caed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2517c986-bbad-4865-8302-b99de5237e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "18fc6de4-da79-415f-994d-9dc3dcb61dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6cc3a5-ddac-442e-bb84-8499e4bc2f7e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39f66ff-56d1-41d6-a9f1-c94940cf582c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb3862c-a0cc-434b-836e-a1138bb1265c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67c2a17-65b9-49c3-9693-58278d985791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2ca1a50-1121-4f72-b673-130e92576d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c1f20e8-8aff-4ed1-933b-1aafa5f2d6f9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369c005e-e446-468c-be1d-93d8828a5497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf87ebc-4c03-4ccf-a9f6-4c37cf73c9a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea0c6f9-bf7d-4b4e-81a7-a03cfe568091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3eaa95e8-43d4-49fa-afa7-c01f6e76a50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0685d0f-cb3a-4cd4-81ee-e534c57a38db",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "792fae6b-b20f-4a3f-96a9-c321c41c4913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdb4e8ad-293d-4a32-a879-32225da9a0f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8a68fa-6553-483c-b92f-63c23b4a9c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb4a1e09-caf0-4f96-84ce-7ea47c5712c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fca5995-59a3-48c6-9a8b-5809c08698cd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d0b34e-f90e-494b-9f64-72b260b48d0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca4d6477-daa5-459b-ad2b-92fb67db2084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a6b867-6af3-499f-8dab-be7b920cca40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1f1405-7cb7-4011-b779-8f9510985cdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa44ee52-41e4-463a-877b-e444ca56c22b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d526080f-2a7c-4a81-bdfc-20f14a4c3581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d707b01-0eab-4361-9180-0950057618e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee86202-7994-462f-83fa-23bfdc43fb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "42185315-9832-4e4e-8edf-f17dc98c2a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f65556-c260-4eb0-b36b-de8e8856d599",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0a2133-f8ef-410b-92a1-929a2e5a6af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93f5ff76-bd18-44ea-8fe6-b47cf88bb421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d52d2d-29ad-49a2-9fe9-e007e856bfb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "05c794ad-c329-41f2-ae9c-16798c453c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca6d8fb-3b81-40f8-b98c-e2d123b10b7e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f622bf8-51ba-4379-b662-2fdd085674fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc67a7f0-2521-440d-b418-e9ab8d551722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627063c9-dcb6-4a74-b6fa-69a0db23a71f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c209d0c-6679-4c69-9431-2f4f94e109b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e819c08f-34ac-4c38-90bc-8782f40245d2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4121b78-514c-4e7a-86d4-aeeb5a3f5966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a262003-e6d6-4aea-b710-0f7ad2d1236a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "039f4cbf-7d5c-4797-b8d1-098425f0d84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "53ba1f5a-b9b0-4ef6-81c9-a205ab6d2642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ef1ae6e-8e98-4696-be98-58bc844e9ffd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22258a9-beb7-4110-9ab0-6e2fb9d7d241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dda6100d-70ca-4570-93e3-4638d00bba7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f9eef53-ed82-4d19-9456-f61a5faaf6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "da29b5db-a7dc-47b9-96aa-8df5e10888fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9302a99-5eb7-4cc6-b467-3c9fbb0667a6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9add7c3f-8b57-47db-82e3-f4d1d33ab206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e881219a-9879-4597-aff8-08d400640525"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431e3890-506b-4989-abd3-3bb2449ff8f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "17f29e5a-798c-48ad-96fa-22c86b494029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff9d0b9-a505-4cd9-881e-2099ed9c564e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f0f36c-c942-4102-b771-21f1a07f8e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc1a07dd-83ab-4b20-a423-b547a18a1369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae083869-8792-42a6-a0d4-a28b8fda78f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "01ade216-687f-4405-8f2a-cf350987663a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5116f875-d111-4e87-920a-30e3bff73ce0",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73e6af5-3c87-4d20-817d-4bb5cbf67e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38ce359-2fd6-4d55-981f-2fbf551cf9ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ea847f5-2cd6-45bb-b275-885c5f1f02ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff96b450-144f-4d4d-b69d-ac9c60c325a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9343b8-1480-494b-9080-e2f3a81ae5c4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e264202-fc6f-4cf9-a9fa-2770356a7739",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad3961d-a73a-4705-8165-e9b0c3b459ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5726bf18-b126-42db-ae1f-d8eaa062d28a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "461b0eeb-e8c2-4fe2-9308-625d66303892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef13ded9-512b-434a-869c-0648294f5fd6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee9d4dc-b142-4e72-adf1-b6fbf13abd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2708703a-6acd-4af3-b987-846a52d5f85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8bf85a5-27ae-4ebf-943a-0e40d0e48260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df85bef8-3b71-4b79-aaa7-2a16e29dc549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89be7539-bd40-4019-92d4-e4ebb4b38663",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e546feda-1801-4c2f-b083-016d823ebfa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd02806f-a047-4c9a-ba97-a595f8f19ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f6003f-0996-4729-a96a-1e5bc7abd6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03ef69e2-a162-480a-99b2-0e3275619bd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db025e09-abc4-4b4d-add3-beb5726bf421",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4eab282-c45a-47a8-99ad-e4022f90e30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c364730-1416-417e-bef4-02eea1ea9701"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac205b4-028d-4122-a648-168c853b69bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "727e5ba2-5cab-45ab-b3b1-1bbbfbcbb7e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef732b49-4808-4893-a500-f60b11686194",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c16d57f-06ce-4217-9395-b1e931462a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0079359-25fd-4144-9011-443347332e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3393874-d858-4913-83bf-a8dff7299a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e9fd44-e88d-430e-a429-1becfa9989b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c164cb78-6f45-437d-a599-bde774161bac",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e0b079-fe9c-4cff-8a44-4073bcf695d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e46657a9-497d-4334-9409-3f00eaf15638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31f67cc-58c2-4e9e-8935-115b425212e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f6e7332-42e6-4e04-b4f7-e181764b90b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a9a0575-fabf-4081-ac94-096a11478881",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f54b026-c12f-4f1f-9fe4-f1ed85fe5e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4caec3e-56dd-40c6-adff-22d9e382bf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ba6c88-f56f-4786-a6ce-b37502d120ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0394515d-9e12-483e-97c2-6187653c7447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a13a60-fa71-4e8c-8b14-5cc161166be5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6d6968-5b69-441f-994d-d4095c369169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4512b627-022f-42b9-8e75-67addf71d603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0050097-3cc8-44c0-a42e-0725f5d3ad51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6f0c1d9-9aa7-49df-83f1-694dd99bb25d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70e4b343-f8b2-4049-9c19-704c9d5bdce0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e69217a-334c-4a57-a015-c32f87473c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75ffdb5d-d54d-464e-b0fd-e8ca93f858f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6e074f-55b7-4cb5-a499-c66de70389e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38bf1a03-5b2f-4520-9914-de0954024d6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca6c8b4-5fd6-4046-914b-1dcc1c687c1b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e9a763-0882-4526-ada5-524d9e676d95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022f5c3a-b29c-437a-9254-96a9f5a45c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1feea6b-0fa4-4765-9a85-1ba6287cae63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1740e03-1617-41ab-a544-945eec48dcdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "577ae235-55f6-47de-89fa-4e3a9f93b85f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7654c26b-a9a4-4210-abf4-18561b62b4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b164bfb4-df63-487f-a613-b436ec32d21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4046613-1d2e-400a-a7db-6af6e756f119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0a93e5-384a-46c6-9aa8-00aacbe207f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0289a9-c96e-4b54-85d7-25902a0e896a",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fe8b79-a079-4df7-a444-f9ac616fbc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9d5e67-48e7-4518-9e49-8714d81387d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8415ae9d-4ed6-44f7-9904-521db3f44958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df9396fc-5890-465c-b80a-0a70c48e3b31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723b846f-c23e-4499-a822-c034708c82cd",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519f754e-1028-4697-aeb9-517f95c5f07a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a89a694c-b35b-4bb6-ba77-311408785d69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783674b1-17fe-4d86-9a68-80cc4966eaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20ada631-8ee4-40c9-b349-7d95aa090812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0c1427f-3343-4973-bdbc-584b9769f679",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b618aa7a-e06a-49f5-93c0-73e592b09160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7955cc4-b06b-4057-80c0-896a9359655e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cea6220-fc21-479d-8378-4826b31584e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "651de3f5-8347-4cee-9676-4b785bbf2d2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49f3dc1d-7630-427b-92c9-63e696cb7871",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5aabda-f233-4a1a-a039-e4b77ec09a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4b2b01d-fe38-4f8e-9049-6003bfd4e388"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608d335e-8c7f-43ae-a118-0ae14741a1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8713b1e9-ae3e-4a5a-a615-cc74a52ea0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f55be4-3523-47fa-a310-382e0f01446e",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6982e526-4a44-46be-9e4e-e773e820a56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "012a0cba-11f7-4ac3-b773-1bbb05352678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adedfcb-8104-4d9e-b26c-94f8b97ffd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ae51628-8c95-4577-b52e-6dc51c54597d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2da120b-a124-44b5-b76d-0079508d4167",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27870189-2c85-4a1e-879a-e424ed3492f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d76757eb-8c2e-48cb-8c43-463582a77870"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e683683-ed77-4c85-ad93-cc0818369d8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b176bcf-7fbe-4d19-83f1-04529b3c979c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0a9d6d1-15a3-46f9-bb80-472cb669f568",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eb5b391-db15-4fe5-9043-019112a9d885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b935193-7599-441b-b952-6b87e03d154d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b03f144-f441-4a13-b798-210b312a0290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf248cf-5fff-4502-9f2a-c6e29103fb49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffa3696-8f59-4f9b-b70d-c64615a202d4",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45b6fc4a-b0d5-4935-8bd7-467e14eaab88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2b2904d-c265-4338-837d-01431e237d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77677bac-d238-4708-9499-39f0aab8c0d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dceabec2-0624-40e2-841c-ee0b628d712c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42125f8b-85fc-4172-8ad0-debe638a9f72",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d5e91ce-7fc0-4cf2-a1dd-448106090e63",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e120271-b7ca-4d96-8b79-0e2b73f639b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e1525750-f3a3-4714-b550-f0fedf84199a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5f936cf-b5de-4dc6-98c5-1991acedb0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a3703f8-e993-4217-a150-02e590254410"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cac3e887-9526-48f9-ba98-dd3ebb217feb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "425f4b89-2fc0-48d9-959b-3c9ad92e8c47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2419b045-40e7-4968-893b-33316328c4e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "64570323-2f38-4f4f-ba2d-4cc596564bc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa7366ec-dcd3-48ba-a8b8-d5d385d55ada",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6595cdff-3f73-42a2-973c-5dcfa099bfbb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26a36355-9727-4e6e-9694-57e7de215e60",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3fc843e-dc2f-4329-a592-148b6de01430"
            }
          }
        ]
      },
      {
        "id": "711b5322-19a8-4c40-af7b-9f7bf7533c1c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3863fcdb-8863-45f1-adf4-78b8a3da74ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "30041dfd-cbd4-481f-bd14-7f0ac471b903",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c0798bc2-da78-4c50-95e2-eaa9d94904c4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25beb9ae-94ec-4a39-93ed-b65b851c7933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b431e49-3c57-4765-b008-6b48981696d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ddf438c-d2d6-4756-a923-496fb174c506",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cde449-d2a5-496d-870c-bf65491e4779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70192796-f337-4f53-8aa2-84791b67b667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04cab64-cf9c-48f5-b6ae-e7bbb5a88d9f",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3e9168-21d3-462f-9362-f5a4076be485",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e67761-5a43-4cf2-b796-4a77eb7c23aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de57bcb-ca3e-425d-99b2-be55cbf02894",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e971683-0639-4e52-8da1-26f50693703e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85282d92-d8db-48d6-adf9-f79a9cc78e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e782ece-d268-4859-8dc2-451a31651883",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ad1c6f-024c-49cb-bc4b-9ea2e0923f13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59232c89-01c8-4ccc-aa6f-74aea118a5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c035ccb1-1b7e-4186-a866-8a6cf41ed99f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9019f110-8b72-4eab-90a3-974e9f56dcd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2166f676-fc06-4d8b-a3fb-04bf9e903ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a117b5d-afe6-4226-820f-5d6462f4502c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93e1500-8a1a-4fbf-b959-47f0492f20ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3589d5eb-61a7-4579-a3e4-ffc9faef3bd7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09180957-7451-4b88-ae30-f73580b64c24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfbfcda2-4376-45b7-b633-bd53ff200838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a10ef2d-22af-4e9c-a784-c2b94de6b9ec",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cdb63d-f7e9-44fe-8f21-449f532645e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bae4c6fc-2ffe-4194-bd6e-8abbd693cfc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8b7d9e5-61a1-4516-918f-bcb4d33827c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca460942-e013-41f0-af57-1aad37c5f6ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f0f54e-b36a-4e10-a7cf-6aa8f4c868c6",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5dad5d4-0d87-44e4-8a08-8763e2aceb45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fe0a51d-a7f3-4ac0-a974-149acd4fdaf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a39978-c1eb-4764-a5f7-e17c2e4e4789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "949d99d0-dc3b-4849-b624-5cbcbfa4c2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d884d9-2895-4ddd-98a0-33dd486e9fc0",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9be27b5-728c-4f63-9b02-586edb816913",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d9d4ef1-dfb6-4a2e-9e68-f7fb29e3d9d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021db5ee-0e70-454c-a11c-769dc9766861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3119514-b4df-40c8-a44a-77d817c2b191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ae15bd-a831-4479-9082-35cb0f8b4d81",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5745265d-6fbd-48ff-8296-a36d2fec15ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebbe3b3-7882-4913-a55a-7472aa08415c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dc4d7b7-8b47-49f3-bdf2-fd5e2e2d47e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687c2479-baac-4e8d-ab84-7d4e4b50b5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c031d7db-37d3-4627-94b3-6272d4cc5a59",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee27bd68-32aa-41d0-91d2-ddc704fda884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f59f782-5676-404f-909f-c56b9fc3e0af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09d093ec-e094-4fd4-b864-be5c174bec11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd93e7dd-5a55-4d14-8c25-4b27b08b1058"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365c5627-9d3b-456c-9096-7e4fc0ef49ce",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d96aa45-3738-46d5-98d3-9e8d2aa23c50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4ad238e-a895-426e-932c-86435f4e0b4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd809fc-19c7-4f04-af30-cd8dbc0ce202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30bcd5f2-e65f-4820-b08a-02c2f9935088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9835447-feba-472d-9a96-696af3417c2c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbc3d4b-e599-490b-a907-65e0023cccb8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07cc5dba-7f78-41dd-a62e-589d8d7367c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "639f46e1-6b58-4a10-8504-fd983c3a8c46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e5dbbe-96d4-4354-b85d-3962515483c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52d92f18-d722-4736-8a12-78321005dc8b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e6958a-8a83-420b-972e-114e8c445393",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "763a54b2-228c-4ad0-b073-2e92953369c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdb50eb-e636-4e8b-b1db-61e99f05f34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf046f9f-d88b-46a0-a462-f6fdbd056346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9b5e462-3250-47fa-b82d-866f673faef5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3531d846-278d-4e12-b939-2085d00fabc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "919b7282-c944-444d-8c3a-ebc266f1cd17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c2f6933-8121-4c21-b975-fabf8e2ef5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac07d63e-c7d4-401c-8a86-80bc1ee252ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa9064b-90ab-49a5-a4a9-ad312ff2293c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f213046e-8b0b-4756-8e74-331f4da93934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98ae270-dcc0-4edb-bb3c-bb366c818f2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0ddcc4-ba6e-4144-974e-dac8bd975b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ef983c-dec6-44c9-a919-7e4ea1c2c587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de777997-1ed7-44b2-824a-5fb2278344df",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ea2a5d-5ab9-41db-9dea-cdd7e6cf299b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eed7f2c5-20a5-4c38-a33e-5b7e9b448cdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51dad424-bf5c-4ef7-98dc-c91aa5cc143e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d8fdc0-5ac0-4cbb-ac33-8377c15a25aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9bdc77-11c0-4180-af0e-8326aa10601b",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced8e08a-1e9f-4793-bbb3-eff2f4876c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fd5cb77-f6a2-447c-a42e-181ba97f323f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a03e48-b241-49f5-b449-a829d4a08a7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c7a9a4e-e2fb-448e-926e-8fa4a069e805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f8488f2-8821-4b2d-ae1c-6cfa64795027",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abedbbb0-729b-45e1-b867-83066e320128",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddf4fd18-6d26-4cd8-8ce6-277ff8bae247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4456bfc9-6fd0-49e8-a6ad-83e83222ae84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99dccf0f-9727-4d54-b006-3d21483dab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3d0ba8-2922-4f11-807e-7c966c2e4116",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a7260f-0f5f-491d-a7aa-3d451deab2bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a55c72-5b36-4b80-9f54-d59e29333a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ce4feab-6862-4bdf-bc5a-f3d132235729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76650762-1f72-4bdc-aa20-f7fa0e8a39a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94046244-28cf-438d-89c6-e06ffb90a004",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d1d0a44-f10d-41c0-9d84-e6cd0751d4ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d509ca91-9e16-4064-a58b-0dfec87864e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39637095-393e-44e1-b6dc-36532e448d29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d040db3c-67d0-45d6-9826-dcd3448553db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82b1b8e8-f161-47e1-bcfc-669e976d7ce0",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc03c3ee-82df-4495-948c-97275666039f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b8fa44d-b583-43e4-af28-13d115238879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f7b988f-02ff-4ce0-807b-f8a577b4cf7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3482db54-4441-4b71-8044-1e0488a44110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ccac1f-22c5-4690-ae36-7aa2c9c52656",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca4361e-8fbe-4316-9638-10357175e6ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb23db8-94b1-4cdf-83cd-663803907ed9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "237e8dd1-a8e2-4c02-9fba-6655cb4dea9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a383f6e-1db3-482c-b467-1a62dfa45540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda2b44-dc33-4264-ae39-25440faff8e3",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f51a3c7-d780-47e9-88d5-1302decd2901",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cee1e0d-d829-4564-bf78-8467ba535699"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be5c7a8-ee2a-4edd-b479-1f6d05ac0d81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d3b6116-5af9-4870-a263-1dfcac7254a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc05ad19-2a81-4d78-a59d-5ecc1d3a7e19",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2a05cbe-a5e8-42e8-9ef8-d798791d0f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1711605-942b-41c1-9ddc-a4e67f726fa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47c7706-60d8-4235-986d-462fa4925603",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17ade081-e923-4761-ac81-15b427b4632a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027e5434-cea8-437a-8437-9728c2a0321e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83d1b96-c2b8-40ac-aa0b-741fc6762190",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b55ede86-1360-4681-b911-74081ca76678"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11034211-93db-4058-a7f2-4b6d3c28a48d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "245838f2-0c26-4c33-b5e4-58e673f87111"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99f8a023-a43b-43d3-9d34-cf6eb6fd5187",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c597cecc-b6df-4ee4-bbed-293983cdf98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec7c690-8d05-4a2d-a38c-02c1ab3d810f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8181646-323f-45fc-889a-1c4a3f434bbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4eda87f-d3a1-44f6-8efd-38d716e501f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89c325f7-8ad8-442b-9e3f-7117410b228c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdf42f8-ec88-482c-9aba-4b4f6eacc609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "285fc410-59b4-4905-a949-e5b910529209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c962770-0fe5-42b6-a7d1-a856b282a409",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec86a085-488c-4d18-80e2-8a355fbbca60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f26d1d9-1de2-4165-95dc-08d0694e37fa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7d3e5b-92b0-4fc3-b720-98c95f7c363f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea47ce87-91fa-48cf-a84f-ab4d66cec759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6ffe75-f1f4-4b60-8a53-e836108e053e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b88c57-1c37-40a3-9f32-b4d21ad88e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92f6545-6390-4a6c-b618-78f394f7b409",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa08f32-a2ed-4ba9-9667-7a591f85bc0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "798f21f3-6aef-4b87-b0fc-65d9801a0865"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8336b1e9-fabb-4b37-9ede-50b05e2b2d72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5a9776-38fa-42fb-9f51-dc25ed0e87de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da758c49-9d64-4fa7-9f95-31d4d49e1b89",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f30bb19-ae5f-47db-af44-ac058b05789e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70645282-21a8-4f5f-8b5c-57dd784b6526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea868809-4f91-490e-bb98-1f3333247d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df400076-49f8-480b-83da-f1e2ff7feadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bd9ccb-d051-43ed-9767-923d562ce7af",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c17c256-ffaf-4117-a4c1-6274e7309f06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66bb6651-3632-49e5-94f5-f63a1dbe0857"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f890b818-6bbd-4a22-b938-befbce966c6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d593b935-3ca4-4f67-a2ef-746b28612c23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63aec21-efa6-4f65-94ba-909089ce0ccd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6e4749-adb4-4484-b790-b8041d7b112d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22547153-7ead-46b1-a102-6b7b5790fb7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "897f963a-a8b8-451d-a4b5-38c209e3e80c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58aa8608-d6c4-4169-94c9-3177c3dc8dd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be6a53d-70ad-48b1-bce2-22f5b7545036",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d79a23-85e6-4163-8a0b-afb39eafbd33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83db0fe2-c1e3-42d8-9c97-e1e6126681f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0181b9df-c488-4e63-bb0e-5707b5879874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "641e754e-22d4-4a6a-a0bd-a8540e000848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c34686-5db0-4f4f-a708-7cc6a575a05e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae7946c-d4be-4c92-ba7c-34e2c9cf9e25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d393fba-44af-470b-898a-47c92612f047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a720e1-ddac-4f85-a07f-931cc4859fa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729e151a-b392-4819-a09f-1cd2dea0e0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0dcaa9-b92e-45d4-b135-4dcb3c761703",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f150e3-2f7a-4980-bdf9-1e6496a291b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e04c2a5b-5deb-4651-8eef-149b9e1143a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd8ab6b-9a6a-4b8d-919b-a72f8f8302d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e3746a9-938f-4da6-a3a1-1bb6ee622b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6111eeb0-760b-4c11-9363-1b422f6a3c1e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b613018-0de5-473d-bd23-9b3e8541fbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8260fbb0-ac0f-4261-83ae-f4f58c601acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95746886-681e-4c86-9e40-2107daaac6f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d336651a-6339-49cb-8078-a5421b02abf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef7eda9-2cd8-4014-a498-3a699d0ca928",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a87be1-41aa-49cd-bcf1-4e9582464943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fef02a7-ce4b-4510-8d40-ce69cc6224ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a29592-d095-4554-9f8e-8244252a6c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241cce1c-adde-4c4f-b97c-bcec1401a823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0ceda5-e449-4dbb-95f0-32bfd8dc6586",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df6d6d9-b3af-4ff1-9496-df1dc6866b1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fe8ede-e4f2-4dd2-9510-a72f3f1d418f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17af3c21-271b-4bcf-88cf-9115d42ea85e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ecc781-a570-4ecb-84d5-8566e059adf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97ed5cf-4dc6-472a-8218-11521d329d6e",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fb846b-9380-4efb-9b94-569f18b7a0d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8314f33-3f93-437c-acd9-c6a4d973a4d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "212be11e-9a55-458b-8856-fb4865ece9ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfa333db-10c7-46ff-94c2-c3a3cc8e6baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b018b9a2-8f34-49af-8dc3-2d27a16c0eb5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa19830-ef2d-4329-afaa-202954fc2863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d384d070-ef7b-460b-a098-e9ce3ff1a1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98458614-7c44-4210-aec0-6ba3e7ce5921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca85bb6-4a97-4152-a7b6-102c280862f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c5a130d-3705-4165-a3a4-efe145f1a0af",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce731e2c-cd65-4016-93b2-b7294ebfee42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ad6752-4dec-4c71-89cd-84daa01ace63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47982c68-c997-459d-8f7e-2ae331cf2f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "470a61e9-6a65-4790-8fd9-7e6732eec9e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f00663-e9cd-42b6-a604-e886cf47ac06",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa2d409-cad4-4d27-9001-b33c4516235e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "816d09d6-7da1-457f-a213-9cb679cd5546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f946ffda-c50e-42c3-b681-a383090c5912",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629bea6b-916d-4d11-8d05-920ecfd7c9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "216d4a72-bd1d-4f00-8952-a4c1fa261062",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "273c2a31-af8b-4a49-ace7-3b59bb8b4257",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dde6d05c-ca14-44fb-a9af-73b794947da8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e06fdab-19a8-4ede-99e0-c2aa9d2dd886",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8e71b9-b82b-49b8-b55e-9a78dbb39af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a84926-70c9-4a49-a78d-7a9f584dbf95",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b25b877f-1669-46b1-9434-8eaeda77c6e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c5e05a7-42a6-426b-846a-6688da18eba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72b4b151-4c5d-44fc-bab5-d101a89a7c9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a1e3f14-a412-47e4-8af0-996a7f781bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d707b1b-52bc-4d0d-8011-160fb59e6942",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8350a318-7ae1-4a50-acd8-2ea7c7863a99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00b677a9-3d0b-4e1c-9009-a773cc07b1b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b4224ca-7a7e-48a9-94b8-853a6eb6d711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c78f2a4-4eae-42a2-8f81-c24f1375a113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c670bb4-8f94-4db8-8e01-32c2bb180d2d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23a0228-d05c-44a6-b0ff-cd59bc6d12d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cef46f1d-48cb-4733-b40b-3e2ed0cc546a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d63ec19-ff52-4bd0-a46f-77a72009744a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eef61c92-a781-4a56-b9e5-789bef75780a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1362b4cd-d603-4099-a171-cdaf10fb9375",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e7de69-4ba4-4bb1-a379-5d057a9ac711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a861f57-6172-4eec-990a-4618a9669629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e52b0ce-7916-403d-9c6a-a6d8652bfa4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eab4c48-c70b-4872-853f-b7ec8202fb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0aa0980-1133-439b-a664-eefcc10f3b14",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641c9fdd-f7a1-4b7e-ba48-019a610a753b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fa5812-22d0-49bc-b858-f130df7ed180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fe699b-357c-4bf1-8b41-94a6bcfe3437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f0680e-5933-4944-aee1-1e6e0ac05ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1596f9a3-8e04-459e-a54d-3b779c14f319",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b837c8-5d71-4ba5-a73f-f2799ee917c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7080787f-38f6-4408-9f06-58cedb82b15d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff64b68-32ba-4d3a-bcbb-4437d91e7ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1180d7ca-147b-4f56-a3a3-d32c2783bbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ec5930-453f-4027-ba42-ac7d8ec64e2c",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f60723-ea2b-47a2-91e9-9f0d03fb9a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b71f219c-adc0-45b4-8cda-8d58a3b12809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2f83d4-10e6-4f10-8d70-44e32f16131c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6957a7e3-b574-4b55-9c4c-2165d1b97358"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477ee0c4-b11c-4e04-b800-cf15f704fc8c",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e61c47b8-318a-43b0-af2c-3dc386b0f131",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d36870-740e-4a07-842d-da899210d4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c4d72b-e9fd-4986-9e48-1c99da3e6c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b31e81b-b1ec-45df-b479-4aa292c4657b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45bfb06b-90fb-4be6-9fc8-706ef51313c9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff3dc80b-fe9b-4bd1-8b12-ab27e05dd081",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a312b58-4947-43c0-9596-00415ae294ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f28e7f2-3e2b-4d5f-9cca-020dfecdb565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4352edb-7f9c-487b-88ff-5607eb4c93fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c5250c-3a51-4017-8103-297dec96a94b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa88607-b796-4ce8-b51d-b75766f6e3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70125d7d-b1c3-4717-a7dd-17e471708bb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8161abd-d1a4-4fbd-a149-15212a99945a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df95f2e-af59-480e-a41c-f512dce7b3bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7186a003-697d-426f-9bae-50eb71938534",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71d69252-23c9-49ae-93ad-844241e3abfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf3ca597-ee52-4a91-a327-2bb4bc44ef17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "775a9906-74e2-445d-92ba-95750ca8ab4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e88da5-877c-4522-9bf0-2af762b2e3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf77edd-ae30-4980-ae01-63a2e01464a1",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65dfe5ec-c2ea-4815-8d5d-e0a20e1f785b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e212858-c92e-4bd0-8da2-f47b0d8639fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd2f32f-0b73-4665-aabd-4e3f9082aac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af87830-0b34-44e9-8de3-b4f373547a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf02c0b-89b1-4f1e-b415-b33f3819468d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75184701-c0ef-4b70-844c-3611037cc10d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa366d87-fa5c-4b95-8236-de93ee987f09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d77639-8377-4375-b677-bf3408d0ae20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f0ad132-f0f0-4e72-8cd7-6fd1c09a6d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d9fda0-38df-4414-956f-ae6384ddd580",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfec347f-7103-4e95-83cf-726046beb008",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb6b9b3-9a87-43c1-a9d7-db7a38459712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9227f68-54b5-4e71-89cb-7d2d920de874",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b5e3a53-9c8d-43e4-9ad4-ea0d0e5269e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8342eb78-58f0-4739-9acb-6abea4d22cd9",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1814d2ed-bc2f-402d-8704-30e9c97efa5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1502d5f-aca2-4e9e-a19d-1564135470ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1706e464-842f-4cd0-aa2f-e1c67ad53d3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4746c567-6899-4128-a67c-a79256bba047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8354c070-1f14-46e7-8d7c-6c28ab41dd83",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04f08bb1-7279-4615-9592-e83b1c8df9f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04b6dc6b-1112-47fe-baf5-786aa56ae8ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b11265-7f83-42fe-b98b-73e363e6cb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af8e9e95-da0b-44fe-8920-543bb9609dfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64256b1-8925-4e1a-b128-9a50da8c6d0c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a10d4dc-4125-4027-b71b-82f1dc897e08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "931920df-8d1a-4d55-bb92-aa89ffbc6b12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e196a5-8c04-4c8d-9902-7c9a691554eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "649da963-d05d-44a9-9aa0-b94d34f32a74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e952c025-b56f-4612-a1fa-83bdbb97d2ec",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e07d50-bf23-447b-9aba-56af210a5324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "718dfe5f-6e2a-4d77-9459-ae0d4847a54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d362b587-d3b0-4b45-b161-4125b9583931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3643e924-0d13-4b90-8fc3-ddc01c0e88fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c269c1d1-d825-49a5-bf7a-64794fa27f33",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d16c978-0a01-4bfa-8732-0a80beafb7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dde6f1cb-38c8-4b45-be89-792458793f94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "318acbe4-afd9-4216-a637-0943b675110d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac84f773-1dd0-4fc7-a392-d4ac89710e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd8072f-876f-4215-b62b-99dfdbe37a32",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4fadff-acb4-42f3-9cb3-74fe35bd5179",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c15f3f60-bacd-43a4-a19f-bbe622690a39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62912990-3b77-4e7b-9b5b-8e62db15ea9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d07c2272-449a-47db-ade8-22d20a335fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d0350f4-4136-45ae-8815-8618e47cda1b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15b971b-d548-4cff-8557-7f3e4e352e2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b82e28-48d7-41e7-8e12-99c75956c30f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "790a2355-6e41-405c-9bae-16de5a7d22e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e648c0-458e-4f68-bc5c-4357c0f8a6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b7ce423-d2e7-4706-97b5-5b0c54d71c23",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bb5cc5-6523-479a-861c-652376a258f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66d8e40c-dd4b-408e-965c-5cfc65cd6ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "354e6300-19f6-4a75-8263-5d2ce78d2e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44c2393c-c94b-4846-a0f5-7858912e6b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea81a66-8eac-4e17-9571-af001a7c5ffe",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc891aca-a483-4fbe-b83b-9524349bbb95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5dff2a6-62ff-42f5-996e-4734a69bf397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5ba401-3d96-4b55-944e-b285894c42e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "928af4a6-c0c5-4353-a024-68cc8f619642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "789ec46b-32cc-4be8-9ea8-57bc1f7cf88a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e6f57b-72de-4127-88bc-f4dcdc03cc52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "707c9aaf-402c-4be2-a92e-0f7e176a27a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08e6d758-5434-4bd2-80e3-bed8d0655173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b081321-086f-45dd-a8d7-0e67c71d54f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9721a62a-a32d-4d4e-bcb7-57c68e8d8ef4",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21fc995-0908-4c14-870f-d32128edb67b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46126b2a-b8da-4058-95ed-586c010878ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd258fa8-8516-4e82-8629-b204cda65c56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c176b74-ce8b-49c4-b63a-e6837e155bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f47f285-89cf-437f-b014-aaca5658bd51",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f33ae1-1793-442c-bd3e-c5f3aa84a86d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a02f003f-d080-460c-b48b-451e444e57f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa05ca19-543a-4bcf-9052-828cd6159027",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "382e5f5f-bb44-42cc-9323-1232fd6c5bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474175c3-f325-41bb-9292-19d68bd3faab",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f87dcb-f967-48cc-93bb-4dd0a3829cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1368ba60-b611-408c-9929-07d5636973e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70632968-0587-4c29-90b0-859c41462d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d4aa9d-55ee-4cd7-93c2-699a6c2364e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf2456f-4b52-40f3-aadc-94a7d868804b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83d0402-b571-4b86-974d-bfe2a40e91d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "724ae99b-c320-45ce-8437-3066a05163c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b018a30c-21d2-4961-bf00-72c29d05b703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52058e94-e73c-4844-8d78-95f0b67f5738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9779a0c7-05ca-4fe8-9ff9-476f558b5aeb",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad840d0-764f-48bc-8e8c-a14c642c5add",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "058da693-66fc-4ae7-a181-dd5252c58cc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92dd7396-a73c-477a-96a8-def4d65b70dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1222d52-c138-4cea-b635-9d89e1dda052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82c69be-767d-4889-9c8d-317ee73ab75a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d482be-06f1-4ad5-869f-a07568f44f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bbf1418-2890-458f-b3c7-7eb7941538ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f51eb4-32fb-456b-b2a9-e62806577db7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09284105-5413-4ade-afdf-81a55cc2a4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e82de6-0bdd-4c0f-ac8e-dea629ed34d0",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eef0e390-cb5c-49a9-bb52-b640ed04f8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "018c687a-c550-4a5e-8764-8c7ecda88360"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2fb2b0-6956-4cde-b0d0-339197ff4d41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82401e83-80a8-4315-a007-35a6eecb60b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5756a0b4-a2eb-42a8-ace2-77562c1a862e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272061be-e008-4537-acd8-94b7c752634d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77fb21a3-a3d2-4641-bc23-5be32148b823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9ad227-a7b9-4fdc-9beb-54e79a657668",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69bb5f8c-f063-468f-8889-c03a4069d97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d2ec4a-b64e-47b2-8b1a-98826dba3f4d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0abdd0-a852-4c86-84ba-f0544883a51f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1429a923-f4e8-491f-b858-4cd475c7f1f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b25f32-51a5-4c66-ae1e-290bbe8fe646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "468d4e7f-448e-4026-966b-8adf6999856a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "116f6931-35be-455c-a6bf-ed1996f2aa86",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eb5e372-d336-4531-95fd-44ec9d6fa73a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4c465fa-b145-40fb-b79e-f9aaa44012fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10e3afd-bc32-464f-80ea-f8a50843fc19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a76f0f9-085f-421f-917e-56f1f3c43bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb02ae97-9870-4fcc-814a-3923e099d640",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0f826d2-224a-4f6d-b912-a1d693941317",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a239214-0898-476f-8950-1246227f0d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99e45ab3-f236-427a-9173-02cebca2019b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91a871d0-dc68-4861-b9e1-7e5f92cd2be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77493eff-afb1-49b8-8e65-a0f32cf061ef",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a05cfd2-552b-4fc6-91cc-7c51627cc29b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32f85b7a-dfe5-48ec-ab49-bf6e4c4e30ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d26702-cb56-4312-b1cb-417d1689c22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c2d442-5b89-4641-a84f-0d85107d0569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87117865-b2b9-47b2-a7e3-0162babc1e10",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1728e0de-50dd-45f7-84f2-3e5af314737b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b966ae26-d02b-428e-867e-d6fffd6b9231"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d90916-63ab-43e7-ab7c-fd563d236f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f77e4f74-6507-4e31-a2b9-b0b53507cbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f1d69d-1f4c-4f28-a4e4-2d5402013a24",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4894c502-42cd-4d44-80f7-2898752975ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "661d88c7-5038-44a1-a567-865d3e0d9b10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88e94fa0-8e44-439c-922c-2fd177f94d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb9ce968-4735-4e0d-8443-7996886017e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afddf29-60e4-4b35-ac04-e7b89645dad7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7c957c-f6f1-47c3-924d-72023895876f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc86d55-2af0-49d5-933a-e8665f7d9a2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f3ec03-b7f2-43ff-9bd7-d887dcd3933e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102b1d77-f522-45d0-b5e7-c3b7cb825ef0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eede044-74c6-4080-bd42-8f993519b444",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cf2eb7b-5e91-469e-8e91-d0e5aa35d8e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ce9ccf-88dd-46aa-af87-4537ad9918eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067a37a6-d82d-4db2-a0e5-55429105556e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "749d5152-5caa-451c-9bc0-4f4ca6a15ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81f0c31a-0f1e-45fe-a735-68ab01fd6a92",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da00514-5b7d-424c-878f-0f40f3a4e909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d0a84dc8-0391-4991-8929-b70e2b59abe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f5a47-feef-4909-8631-31f062a18146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "321d50cb-a8bd-4954-b834-67218487261e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7769ebaf-a7ad-4fd9-8f2f-ae64f73d8af5",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d3f402f-f5a2-4aa4-b1c8-9c640328ec5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90ed4a53-a2a1-4046-b09b-9fae90e1d8af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c113ad53-00c6-4207-ab17-1e9176317791",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69c6131-ad48-4ce7-a3d9-9dab80998129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7153a9a-aa44-4c53-b3eb-95e596620d01",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2205fef-6d2f-4c91-bd6b-396e97c56fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145e27cc-26cd-4985-9eec-68a0a6d5758b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf1ea40-cb2c-458d-a052-1acd982ce0c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dcfbb1-a440-4857-8df1-7ccd3fb9a5fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f60630a-cbd1-4f00-905d-c591af7a5193",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c64bb66-6268-4f1a-abb9-021543c82589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed5cf7dd-1cbc-4483-82ef-5373d2ebc9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46686111-e7e2-409c-baa2-06d3ad72302c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc0b9893-07fc-4382-8fc8-db75a8ed7a7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4ec0df-d339-4e0c-a911-ea37ccf9d6b3",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5864dd08-fe8b-45a0-81bb-de0e00ded108",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48c49690-1f8c-4e11-9f3b-e1e99ae90bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f051b23-68ec-4b11-8e08-1f4d491ec35e",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ef223dc-e941-4906-a86c-0d1f73009d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fc9a2c-aff3-40f2-b99a-066e838c1013",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9370e1-ac08-4f45-86b0-6b4bc2867699",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d58bd40-0934-439f-9aea-92cbaeb65553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09065d4-6082-4980-a4c1-fe24a3aae039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117cbdff-4b01-4b3a-83bf-1a5ba169e3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e6858c-5581-4e77-b3ea-2c187c5a07be",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6bdc230-20c8-4f42-9d51-afd9f70f633d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4da1bd70-f6d8-45e2-aaee-02a1fab3aa1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58102fb6-7290-4402-8888-71a6e84f12e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e7af31c-3e07-452d-9e50-2c7c9b8aaba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af96fc46-1530-4ffc-b26a-a127ced115bf",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9d27eb-5bae-4eb4-ab79-aac6f71960ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42060c95-b0a2-4af7-81a5-de91c37594cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da509a2-deb8-4c94-9d21-cea2ef826287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11c1de4e-9290-4cd5-9e9a-692994dc9bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84638ced-beeb-4e81-8a75-09754ed6875b",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "522ad2b4-ec3a-4de4-9652-64d119e830a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59070fba-f1ac-4e8f-b388-d0a749bf0759"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2b0f94-002d-44f4-9ced-d90e8db4b9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98b2b84-7739-4d3f-9f71-04589da69425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f8d42f-264d-42a1-aca5-1edacaaab714",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a68437f-396b-4db7-87c2-57f9a8a11f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc250c97-f21c-4696-afd0-961c72bf6fe8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfae2d42-62e3-499c-bd70-5c08e7c5ccac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d80115-731b-405d-ae4f-d1a416d0e1ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a1e5521-f912-47b8-9486-b9dd3be123da",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24509a4a-c9df-4f3e-810d-c8d7045ec0fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5866e779-842c-480f-915b-78f0039a040d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7623f32-8455-42f5-b29f-5c53bb971a9d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdd5a52-ee17-498b-99ec-e14fb33c847f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1105944a-612a-417b-85bd-c1abb64cb900",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdda0c70-03b0-4788-9b98-cb7ca6e7d457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a5c38ee-470c-4078-bbc7-b63b9e617955"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a56d61-58c4-4981-a512-19b3f904d6fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8297d98-6ac7-4d0d-a626-9e5eb021ef2c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d993e251-2f91-4c6c-9766-8b1b1e4e7325",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "634a4eb3-c503-47cb-939a-6564302d737c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e9968de-8140-41cf-929d-29556a4d6841",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "89b42b81-cd99-4cfc-acf4-de1cbbe3e500"
                    }
                  }
                ]
              },
              {
                "id": "4c454436-17d8-4637-8b85-0acd14713059",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa2c62ec-2cc9-4b02-8a04-072adc5d7afd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984c6e50-18ef-483e-abe2-bff54bb40201",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ec220af3-1f86-4ee7-8e3e-8137edba23a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f70ab344-1f95-4185-bbf5-9ef1c28bf2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aae842b4-b798-4411-b87f-3d602be6351b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c7d7b3b7-dbdd-4b93-8f47-0a03f9cdfe8e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c08d7a90-5b88-42af-915d-8e727c87b4bd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "710efe3e-7834-4e29-9335-f280345a528a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ac8a5e0-b577-44f3-9bcf-5bcb65eb8846"
                    }
                  }
                ]
              },
              {
                "id": "3e36f65f-1848-4a6c-bccc-e32a8673ddd7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5c0e1a21-8597-43e3-a5c9-ddc6d35fb2c3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "008e17f3-7f67-46e3-ba4d-2e164d1b2513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "9669325e-e63a-4c29-986b-f34309285558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9a7f9ab-8ace-46c4-8ca7-51947ff9344b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f17d6d5c-3d7e-4233-af87-8f3193144071"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a02e2dbc-d931-4b5d-b7fa-9dd4494bf7ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "81b9bfc8-299c-499b-a967-941cc1cf1cc9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec290df5-70ad-4258-a9f0-5525a39ea285",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4c9cd565-92f4-437d-8670-fc7dd5d08d9f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5a1e8d6f-d317-4fb1-89f6-f157de7ef983",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ef43da33-80e8-4b82-93e4-0adf5f4562d8"
                    }
                  }
                ]
              },
              {
                "id": "12150513-bc23-4421-816c-3514b14fd311",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4b94976-7f15-496d-9ce2-56b4fd32f1e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1d3ccd60-059f-4185-ac51-ad92829c6b7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8848db2c-1543-47d9-a174-f0376f8eb53b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "73821e4b-9967-4c2d-91a1-69857b88b266"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "09fb4615-f37e-4b3a-9999-2ef200468296",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "47d4e26b-2510-4a78-8073-5e564912fcf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72a8e053-200b-48ec-bfbe-e768ec774aa2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f4416cdb-5e8b-4ddd-a0eb-036fe85bbcde"
            }
          }
        ]
      },
      {
        "id": "8edd6b60-d2fd-4d72-97d2-e7b65b4010fa",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "d5bfa534-983d-4e51-aec7-74956789b39d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0e5e68c2-4dc2-487a-90d1-94618bf15134",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "82556a24-affd-43c9-a488-2b85619fdb83",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294a627b-c66e-4848-a05d-8f112cca6895",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "511811df-4be8-4ef2-826a-214374b1ec6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eadc7b4a-af71-43cf-b9f3-fc76ee0da54f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2717a0cc-ddf4-4fb1-ae28-b8fc9a8d11b8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce86222e-cf6e-47fc-9106-060183827a73",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "554763f4-1a03-4e53-8bf6-eda89d95816f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "741d7e71-e37f-4fa1-b14d-2494d91c4ea6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5ca11213-2e90-4587-bbca-103cf33a1bf5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d80c0bbc-8498-4c44-a226-82409567e6b4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "c884c20c-921f-4527-a121-d71cab91eb9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b047aa6c-e3cd-4066-879d-7c7e17ac5343",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48cda137-4cb6-4af6-8c1c-67db87f13801"
            }
          }
        ]
      },
      {
        "id": "71d18149-56b6-4e66-8103-2f84a81db48f",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "56a4c3cc-dbcc-4c1f-b066-66459680003c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3291014e-6798-428c-8ffa-1a66bb3bee7d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2a767787-41f9-46be-b219-fadfbbdb5e94",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709fc0e0-bce7-48e6-8675-6a223d32793e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b600df5a-fc61-44d2-aa02-dbb402bfcb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "731edda0-7311-4c98-a31d-bd44841c402e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b6e879-fd57-48ff-8d43-62fb9eda0b0d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "774b3534-d180-4d67-88b8-6bed365b5883",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d52c7d80-34fb-4f98-85a7-6ae1801cf993"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a458bb33-2dfd-4142-9649-9537fd829752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6f04873c-96f7-467d-8b1d-50495cb3df9e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38b0f1c6-d4a0-4b6d-9808-de5a46cab26a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "12b492ba-931e-4fad-b14f-c96c99092c48"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7d06f06-ba17-438c-b9c2-ae9c34eec462",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7ca36633-a3af-440c-990b-76f26cfc37c5"
            }
          }
        ]
      },
      {
        "id": "acfae4f0-8fe1-4b5e-a884-c049f0d8824b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "920916c8-1478-4c58-a5d4-eda0909432bb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "606c96fd-1111-489c-b814-19a78aac36ce",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "400d8e02-8d3f-4dc4-bc7b-d9afb7c5cce8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1133e8-38a5-4989-8157-0f5ba3a3b18f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "844a6ceb-5709-4cfa-980f-8053f9293b5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a35d21-3f43-4107-a781-4a5cc73efe48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f08730c3-53cd-4ee0-a6dd-4bc60d8f68c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a73e3a82-395e-4415-8ce7-4bbab2cb18fb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95dc7ac4-48f2-4821-9792-7a324205e7aa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5b5bb273-c947-477c-a300-494d3075bf92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a1c0398-3744-44c3-9dfa-c55ffdc8d907"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b82fb161-d32d-4a34-841e-32dbddd66cd8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "38780eac-a1fb-49df-adf9-fedda0a6d179"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e37f7cc0-fef5-42eb-924c-30fd478ee8d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fa91313d-f2a8-44d1-a535-1ea3f3c87542"
            }
          }
        ]
      },
      {
        "id": "f431c01c-fd6b-4613-abfc-e8a8b544e021",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a18d5230-00b8-4c0a-a98e-9eba77f4e793",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "988827ab-09ad-4e05-9679-4437a66c5e6a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "9b088f2f-04d0-4d63-ab0a-b870c85a04c4",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39747d18-d447-4917-9195-f8955b38748e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70db1719-77ab-47c7-82be-2d6411c17398",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 223.82746478873247,
      "responseMin": 17,
      "responseMax": 8006,
      "responseSd": 750.8198958513616,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690245842402,
      "completed": 1690245921046
    },
    "executions": [
      {
        "id": "5dd8dcc7-4641-4114-9a3e-7a05ae6a6956",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2900ee16-c5b7-42dd-a786-5f7f300b5c61",
          "httpRequestId": "dd4341c0-3ec0-409d-b87d-9f68b23a0755"
        },
        "item": {
          "id": "5dd8dcc7-4641-4114-9a3e-7a05ae6a6956",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a1de32e-8a96-41e0-ad20-d68d62da58cb",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 0
        }
      },
      {
        "id": "d6b70c2b-c77d-4048-8626-b4536fbc84ff",
        "cursor": {
          "ref": "33fe704d-36c7-45e5-a235-4352613c2c13",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a5e52cbf-15c5-41dc-a105-09dd6aecf33e"
        },
        "item": {
          "id": "d6b70c2b-c77d-4048-8626-b4536fbc84ff",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "8d7f0c1f-d4cc-4be4-9773-51a37ccdddfe",
          "status": "OK",
          "code": 200,
          "responseTime": 17,
          "responseSize": 0
        }
      },
      {
        "id": "122e568d-152b-49b4-a623-5a5f5714c4db",
        "cursor": {
          "ref": "d969ea92-29fa-4f15-b848-b380c6fe88bd",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "47c7ceff-32a1-49df-a060-aa1f5f0d99fb"
        },
        "item": {
          "id": "122e568d-152b-49b4-a623-5a5f5714c4db",
          "name": "did_json"
        },
        "response": {
          "id": "2cc6b480-e302-4465-9be1-bf7fbe98d812",
          "status": "OK",
          "code": 200,
          "responseTime": 332,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a302b31f-15f7-440b-9a3e-ebc4c59315be",
        "cursor": {
          "ref": "666b04bb-3e3a-4e61-a18b-c2663a4500dc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "904db440-a1ec-4dde-bec2-7a1580dca791"
        },
        "item": {
          "id": "a302b31f-15f7-440b-9a3e-ebc4c59315be",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cc80234-5c44-4325-a741-49ef4d37c4e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1184,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a302b31f-15f7-440b-9a3e-ebc4c59315be",
        "cursor": {
          "ref": "666b04bb-3e3a-4e61-a18b-c2663a4500dc",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "904db440-a1ec-4dde-bec2-7a1580dca791"
        },
        "item": {
          "id": "a302b31f-15f7-440b-9a3e-ebc4c59315be",
          "name": "did:invalid"
        },
        "response": {
          "id": "4cc80234-5c44-4325-a741-49ef4d37c4e4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1184,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c6ff8c-ae11-4f43-9cf2-7ac9d4bc4be0",
        "cursor": {
          "ref": "47447614-34df-4e3b-b5ce-c43b79e50d66",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bfce2f2e-3971-4b12-ab1e-e614eb2dc4d9"
        },
        "item": {
          "id": "19c6ff8c-ae11-4f43-9cf2-7ac9d4bc4be0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6331ea7b-eaad-4c6b-9f90-7fe92bae7f35",
          "status": "Not Found",
          "code": 404,
          "responseTime": 45,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5757c2fc-e96a-4807-bc42-be1c087fb606",
        "cursor": {
          "ref": "deb5860f-5ef6-4a04-a497-740ffec563b9",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "edbd4bb9-d258-41d2-9b03-fe20c4249470"
        },
        "item": {
          "id": "5757c2fc-e96a-4807-bc42-be1c087fb606",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "efd48721-0204-45a3-8244-b750f1c9cff4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d574379-7bb8-4876-bbf3-d6ad823584f7",
        "cursor": {
          "ref": "20000df9-d7c4-4cfa-a270-145b03a47787",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d67448c6-958d-4bdb-a640-f884b0899e2f"
        },
        "item": {
          "id": "2d574379-7bb8-4876-bbf3-d6ad823584f7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "cdafc4c1-c1bf-4bdc-9d3d-df0c8ddcc138",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1b00f4-b8ff-4de8-85fe-ea45d74ec67c",
        "cursor": {
          "ref": "72f687cb-58e9-4249-a63a-5d22ae8604c8",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "715c7ec8-7e68-439b-8b45-309e841701f3"
        },
        "item": {
          "id": "da1b00f4-b8ff-4de8-85fe-ea45d74ec67c",
          "name": "identifiers"
        },
        "response": {
          "id": "bdc1ebcb-cdb4-4d6d-9da2-33d889a7a194",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "580c09e9-81d5-4af3-be13-180adeb95df4",
        "cursor": {
          "ref": "9be1ac08-6882-4578-a9e2-d703cdda3de1",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "408dcb52-b52c-41dc-bef9-139a61964ada"
        },
        "item": {
          "id": "580c09e9-81d5-4af3-be13-180adeb95df4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8e868996-714b-4838-9a44-e5649238b456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3672e6-da83-40e4-b8b1-13b5d99c5259",
        "cursor": {
          "ref": "109d9012-87b8-48a8-8002-6a89883c3183",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "96a91a21-079d-4838-aa9a-f46fc335bb4d"
        },
        "item": {
          "id": "0f3672e6-da83-40e4-b8b1-13b5d99c5259",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "391b2cce-c3a2-41de-b9d8-6a15f577b7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d026602-3999-4d05-8d95-47f0cf24f54d",
        "cursor": {
          "ref": "8ded7c32-f793-4eb1-8d09-dc91b6a28b43",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "0e5b9165-d91e-4cda-b6a2-6be1dec1de6b"
        },
        "item": {
          "id": "1d026602-3999-4d05-8d95-47f0cf24f54d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "71b14d5e-b1d6-4e7a-aaee-814acf45d316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3496eb-3fee-4830-b023-7aa95132c36d",
        "cursor": {
          "ref": "a544e00b-1247-4c11-8f69-a858de9a45d7",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "96f4c925-4248-40bd-92e8-9b6c4247a408"
        },
        "item": {
          "id": "be3496eb-3fee-4830-b023-7aa95132c36d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5b74a8c1-1a64-4280-8a59-5b88bd3e08fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a97fb3-65cb-43ef-8509-b65e3dde8978",
        "cursor": {
          "ref": "9d5ef0e6-e5ef-4a23-88d4-a174421b7286",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "37d2aaca-3cc5-498f-a4fb-77e32866a9eb"
        },
        "item": {
          "id": "83a97fb3-65cb-43ef-8509-b65e3dde8978",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f6093767-20e7-4fc5-8e47-cfa12427f4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891542b5-2295-4125-b3fa-d71fc6c276ef",
        "cursor": {
          "ref": "58d430c3-8cd0-48b2-ae62-78d2cc3983ed",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "f746fcb2-fcb2-4469-8570-cbcbdd1c82e8"
        },
        "item": {
          "id": "891542b5-2295-4125-b3fa-d71fc6c276ef",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "4ee6cd51-b1ce-481e-9bcb-1c84ac1599e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acf7a6a4-7a36-4c75-a89c-a2a1fefb4dd0",
        "cursor": {
          "ref": "9c3488af-53e6-4461-8125-e9410fe623d3",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "99998a8b-3735-4ad4-b7bd-7cbddfb50ef8"
        },
        "item": {
          "id": "acf7a6a4-7a36-4c75-a89c-a2a1fefb4dd0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "88427fb7-4692-491c-aa2b-8e7fc3708728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5bb102-bde8-4fb7-96d2-8f098babfe6d",
        "cursor": {
          "ref": "c88e3f13-0e05-4f18-a309-d9fcb24fbf53",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a3bd7a1a-8d65-44d4-9d33-f036b4eb1930"
        },
        "item": {
          "id": "9e5bb102-bde8-4fb7-96d2-8f098babfe6d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "98798828-5e83-465c-918c-18acb5c0c49b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5d6d45-0c11-45c9-b67e-169b5bc3149b",
        "cursor": {
          "ref": "5cde1b27-006a-4852-b965-b69168e22f23",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5eecdb55-1855-4596-a5da-f362afd75696"
        },
        "item": {
          "id": "2b5d6d45-0c11-45c9-b67e-169b5bc3149b",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "e52f97e5-60e9-4714-b711-cb27d5a7d5b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58a0f96-5a1a-4365-b3ca-0ed0b5d9b031",
        "cursor": {
          "ref": "e4bebb9e-afae-4579-b1a3-26aa6a63e508",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "80b07dd1-d590-4889-a2a6-63706e8c02ef"
        },
        "item": {
          "id": "f58a0f96-5a1a-4365-b3ca-0ed0b5d9b031",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ed24368f-2bfb-4c21-a22f-1e00930cd6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f00eff-d254-43bd-bb97-419c3f6245e8",
        "cursor": {
          "ref": "c554e811-7f29-45ed-b37b-5f60e1b7db97",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "f0698dac-86a4-4207-8207-b7b2db453258"
        },
        "item": {
          "id": "a1f00eff-d254-43bd-bb97-419c3f6245e8",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "df4b8722-e9fd-4605-9264-94b4f461dcd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a7fcad-ebe8-4d99-94cc-086148fff2f4",
        "cursor": {
          "ref": "42a2e736-6e02-4561-bb13-ec62555e249d",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "7472b72f-f050-474c-b721-71a6cc18d787"
        },
        "item": {
          "id": "46a7fcad-ebe8-4d99-94cc-086148fff2f4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "551b78be-e447-4a17-96cd-cb3795c50a4f",
          "status": "Created",
          "code": 201,
          "responseTime": 624,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "1a6df71a-f574-4d02-8212-af57ee39c710",
        "cursor": {
          "ref": "ecf83b4d-03a2-424e-8fa0-879b6e72b733",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "851bb977-7f03-43ae-b6a0-dec5dbd986c6"
        },
        "item": {
          "id": "1a6df71a-f574-4d02-8212-af57ee39c710",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "789b5c7a-8960-41a9-b761-3abaca0051cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4da76d04-721d-4bff-a227-0940a8ce138f",
        "cursor": {
          "ref": "cabca72b-6ae3-4c21-b1fa-7c9ed027bee8",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "35428cfa-77ab-468a-823b-655476cbaea1"
        },
        "item": {
          "id": "4da76d04-721d-4bff-a227-0940a8ce138f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "6095e48e-2a99-4b70-a505-d2f63605b2fc",
          "status": "Created",
          "code": 201,
          "responseTime": 8006,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "eca34390-ba29-491a-ab2c-4ff125ad6b1b",
        "cursor": {
          "ref": "395c4df2-ac4b-4c8a-acc0-32346b0ed840",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ac37fecd-fabb-4714-80c6-5a3ef3f77d65"
        },
        "item": {
          "id": "eca34390-ba29-491a-ab2c-4ff125ad6b1b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b7da0dfb-9d46-4137-92db-e97fb94a8f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4a0a84-b99e-44f8-80d6-1a85ef50e2d6",
        "cursor": {
          "ref": "f864e75b-3f4a-47e4-81c8-326c735faeab",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cc6f627e-c6dc-435a-b3da-1d04cf89458f"
        },
        "item": {
          "id": "4f4a0a84-b99e-44f8-80d6-1a85ef50e2d6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cb17ef13-7ad6-474b-a775-bc8ba02dd874",
          "status": "Created",
          "code": 201,
          "responseTime": 2669,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "fc2accae-de86-498a-9aeb-1f5e5475b285",
        "cursor": {
          "ref": "d60b99cc-c109-4674-8749-a07f720a3943",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "795937fa-9166-4c41-be26-69c442892922"
        },
        "item": {
          "id": "fc2accae-de86-498a-9aeb-1f5e5475b285",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "eb8c55b5-34bf-4433-954a-e53c30c0c9cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8bce0a-231e-4f5b-a054-9ec95a88ea74",
        "cursor": {
          "ref": "27707804-29a3-4c55-a51e-25e764756309",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "cfec1700-b8c4-4e64-9a0c-845f1da51c7d"
        },
        "item": {
          "id": "9f8bce0a-231e-4f5b-a054-9ec95a88ea74",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ef8d29ef-ecf8-4f10-b28a-cb22ac04aefa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b45f9cb-add5-4062-a748-8a784aea8669",
        "cursor": {
          "ref": "c2c45e58-1166-4c97-9df6-14d2b7e1ac01",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e7ec9bf7-a57b-4845-b263-7ac64815f8f3"
        },
        "item": {
          "id": "2b45f9cb-add5-4062-a748-8a784aea8669",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4bc1398b-3cbb-4508-b604-c689f9a97327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "370d1195-40de-4a91-a93b-c49ab453f190",
        "cursor": {
          "ref": "7ce1ee53-a27e-4178-ba77-bccc3cd3942b",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "91783111-9c2a-4b90-96b4-39b2afef3980"
        },
        "item": {
          "id": "370d1195-40de-4a91-a93b-c49ab453f190",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d4b9952b-8942-44ed-aa8f-860f12dbde63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67bd0194-6fed-4227-a1ce-87e2e56f067a",
        "cursor": {
          "ref": "580376cc-6fb3-4230-88f1-2f772da692bb",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "41812512-3433-4f6d-be4a-fd7fec27fa8f"
        },
        "item": {
          "id": "67bd0194-6fed-4227-a1ce-87e2e56f067a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "927ac6bc-9324-4711-b30c-b3377af58e62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b01979-98f7-40a7-b6c2-392061285efd",
        "cursor": {
          "ref": "c06425ce-ee2b-490a-8887-95fdd31499ce",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "63daee5e-33c1-4e07-b4eb-f8d4e48c72e8"
        },
        "item": {
          "id": "b9b01979-98f7-40a7-b6c2-392061285efd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "14a37d6a-a569-4387-b517-145879551082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a977f937-d623-4fb8-aca0-68f3bdcc4834",
        "cursor": {
          "ref": "00b3b52f-bc1a-494e-aa96-e558d4546ac7",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "81e5ad31-d603-4f9c-912f-118c65b071c4"
        },
        "item": {
          "id": "a977f937-d623-4fb8-aca0-68f3bdcc4834",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "238da124-cabb-470f-b4fe-469b601956c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea0130e-68fb-46a2-9aa9-04f4ead463b1",
        "cursor": {
          "ref": "90cac981-fb6f-49d9-bb68-4c72532f5d3c",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "39cf3dbf-182d-4180-bc85-33ef254e6fd7"
        },
        "item": {
          "id": "3ea0130e-68fb-46a2-9aa9-04f4ead463b1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7dc7a28c-bc58-4123-9a0c-27d797cc2d35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314e5f68-50df-47a2-90bf-c1566d0597e1",
        "cursor": {
          "ref": "4df27ff2-6806-48f2-aacf-ddec97ed419c",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "78e073e5-3e54-43eb-9f2b-848a1f545ac9"
        },
        "item": {
          "id": "314e5f68-50df-47a2-90bf-c1566d0597e1",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "40d8cf34-43cd-46e6-8af7-1f37ad3f521d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5ca3b3-0d50-4a0d-a649-4137c054a16d",
        "cursor": {
          "ref": "af5deb4b-7cef-41da-94cc-7a6f0a9eedfe",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "c870ddc5-d99e-4582-ab10-ecdb5a25bf3d"
        },
        "item": {
          "id": "fb5ca3b3-0d50-4a0d-a649-4137c054a16d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "f1266648-6294-4072-9c84-4aa025eae4f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9af4b795-6f7f-42b3-9940-bb0a1ac00f31",
        "cursor": {
          "ref": "29a286ae-aee2-43be-9961-d8a2389e8381",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "02373e07-85b9-4aa2-86bd-0dbf62b4e1a2"
        },
        "item": {
          "id": "9af4b795-6f7f-42b3-9940-bb0a1ac00f31",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "eb3573c1-bde2-4d53-95d0-7006244ff6d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f2e741-e74e-4ffa-af86-dfbac24107be",
        "cursor": {
          "ref": "9f99fc7d-a2a3-436f-8ab1-1d36a43d0d7f",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "a1fdaae1-3299-4720-86fb-2b21daa87055"
        },
        "item": {
          "id": "a4f2e741-e74e-4ffa-af86-dfbac24107be",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dde32f5c-d432-4660-81d9-d5b73103b6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a754b681-a764-4371-9517-753a257b9564",
        "cursor": {
          "ref": "9a407df6-e0a4-4242-9208-d7d0be8777fb",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8d3ea25f-9375-4e0d-bb22-8e9da358f6ff"
        },
        "item": {
          "id": "a754b681-a764-4371-9517-753a257b9564",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a00bce9c-a35c-47b7-92e6-5824730b564b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bd1238-5275-491a-a5e4-2a2c2f519f2e",
        "cursor": {
          "ref": "4534c828-f7f1-4e39-b1bd-ad4f67076c1b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1178274c-784b-4574-81f5-eab651810aec"
        },
        "item": {
          "id": "e5bd1238-5275-491a-a5e4-2a2c2f519f2e",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "beee9f12-3c2b-47af-af0d-589005d9ec7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e50914-0f03-4435-ab5e-0125acb1ff7b",
        "cursor": {
          "ref": "8445fdfc-91f8-40c8-a2b6-4dbc2ab07cf2",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "89e78808-9f29-4ba6-a9f5-f5fcd83a91f7"
        },
        "item": {
          "id": "a2e50914-0f03-4435-ab5e-0125acb1ff7b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "98a4f6b1-dedb-4be2-adb4-4af6053df745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "816998fa-41ee-424d-9c71-624486185e12",
        "cursor": {
          "ref": "4e3fdea9-486f-4aa0-bab6-bc44379755de",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a9b26e64-2502-4d03-8927-a30f26922ef1"
        },
        "item": {
          "id": "816998fa-41ee-424d-9c71-624486185e12",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "06952c38-27d4-42d3-af15-9043a3382262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e489c33f-510c-40c3-9c22-34862c55282c",
        "cursor": {
          "ref": "3271510e-8383-4c8f-b7f3-8bde6ad67c06",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2b9371bc-2075-4152-9c6e-7c06e71e8970"
        },
        "item": {
          "id": "e489c33f-510c-40c3-9c22-34862c55282c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "36e7b349-e3b1-4ac8-8c08-f0ab7b3734aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e534f04-edfb-4828-957e-a319ff034233",
        "cursor": {
          "ref": "c80d2ea2-d8c4-4add-9fa9-b3721fa3568d",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "8c3aa8e3-6406-4e7c-b06d-e126c2dc0cdc"
        },
        "item": {
          "id": "3e534f04-edfb-4828-957e-a319ff034233",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9242d830-79a8-43fc-b95e-e33754b995aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e30232f-34ce-4a34-872b-d9a12a7d80ea",
        "cursor": {
          "ref": "2e8be537-cb2f-4111-ac27-2bc659f75725",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "4f9cfe4e-1772-4bc4-b3c9-97c6f0bade37"
        },
        "item": {
          "id": "4e30232f-34ce-4a34-872b-d9a12a7d80ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "96433c93-0e66-4390-bcdc-254e16c2bd9e",
          "status": "Created",
          "code": 201,
          "responseTime": 2827,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "56847ffe-fdd2-4ba7-b14a-01077a4defe2",
        "cursor": {
          "ref": "3390db2b-1b18-42de-95bc-dd6f0b97d246",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b89671f8-0a90-4aee-ba7c-bd875becc1a9"
        },
        "item": {
          "id": "56847ffe-fdd2-4ba7-b14a-01077a4defe2",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "ee2d398e-758d-4bb6-86ce-60ccf0ad7545",
          "status": "Created",
          "code": 201,
          "responseTime": 2971,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "920fa13a-308c-4a23-a691-36d194a8099b",
        "cursor": {
          "ref": "7eff4d33-b9ec-497c-b386-987c2727043d",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3b653b0b-fcb0-480f-8de7-1ebfe777a8f2"
        },
        "item": {
          "id": "920fa13a-308c-4a23-a691-36d194a8099b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e883ce4b-656b-40d4-9726-97ca0ed728d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d052f3-7db6-4d66-8d72-4092398d8bb7",
        "cursor": {
          "ref": "6778b3a7-6663-46e3-ae1a-74a859850945",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1e31641b-6476-4235-8881-368f8d19b1ff"
        },
        "item": {
          "id": "e5d052f3-7db6-4d66-8d72-4092398d8bb7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "01348917-9d23-4985-8dec-922bb9c7cbf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ac57de-2934-4928-81eb-5a4019e98217",
        "cursor": {
          "ref": "ce1115db-4629-4123-8123-2a30307d0b87",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "47be4163-eb89-42e6-a491-bdd8c0fb7e92"
        },
        "item": {
          "id": "c9ac57de-2934-4928-81eb-5a4019e98217",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0dbfdeeb-871d-4d4a-b5d5-b2de96f973c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d24fce1-df9a-4840-ac4b-b9547c67683f",
        "cursor": {
          "ref": "dd2b0c96-8205-4a0c-b054-6bae1b60ad81",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "2b35ecee-2f35-4924-8416-ad897885bf33"
        },
        "item": {
          "id": "0d24fce1-df9a-4840-ac4b-b9547c67683f",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "67249bff-b24a-486b-984f-e2a7b39b42b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e05476-4efe-4400-9781-90783ddaf06b",
        "cursor": {
          "ref": "18411f5a-1a58-4720-a6e6-ee5fa2f59e4d",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "0310139c-a35b-4e7d-aa52-e9dc385fb5c4"
        },
        "item": {
          "id": "f9e05476-4efe-4400-9781-90783ddaf06b",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "bfb00118-bbd6-4079-a5b3-ccb4b58f0b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc611a7-2271-4a3f-8b38-a32c7dff0741",
        "cursor": {
          "ref": "993f93a6-01d4-49da-a6ae-df0ab3ed2ada",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "766ddb74-995c-4bf7-925c-9feb29c0f88b"
        },
        "item": {
          "id": "9bc611a7-2271-4a3f-8b38-a32c7dff0741",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "e39278b9-5c3f-4ab7-8871-7b31f817e7ce",
          "status": "Created",
          "code": 201,
          "responseTime": 2465,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "cc802dd6-5230-4a75-ade8-b8862fbfd68f",
        "cursor": {
          "ref": "ec1527f0-ea1c-4094-9fc8-d3902e5be75c",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c052e48f-a7c9-4dfc-9bd1-ad6ab2b73988"
        },
        "item": {
          "id": "cc802dd6-5230-4a75-ade8-b8862fbfd68f",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f4d16b43-74cb-466e-9ce7-7161288a196c",
          "status": "Created",
          "code": 201,
          "responseTime": 2587,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "05ab1225-c481-4795-80de-07485f8df7f6",
        "cursor": {
          "ref": "253a23e6-cf15-40a9-b54f-3d52964df8a5",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "3046f71c-6314-4529-8e16-50fcb19dd93c"
        },
        "item": {
          "id": "05ab1225-c481-4795-80de-07485f8df7f6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "5c48727a-ab2e-4ddb-bcb9-c440f7b31c7c",
          "status": "Created",
          "code": 201,
          "responseTime": 2938,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "56f94f5a-7112-4fb6-9877-15fdbd95b2d2",
        "cursor": {
          "ref": "3aeb4706-58be-4edb-a522-199a5787c335",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "ce3c3e1d-6de6-4821-9e25-40af733ce2d9"
        },
        "item": {
          "id": "56f94f5a-7112-4fb6-9877-15fdbd95b2d2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f1ad998e-2c03-4ffe-ad14-79f3ca43253e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b329e683-b9b1-44a4-ad08-cc0450037583",
        "cursor": {
          "ref": "d8e0eb11-31b0-4e94-885e-a9b578464444",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "bbe5b258-b6ed-4a08-809f-b2c64c1728e0"
        },
        "item": {
          "id": "b329e683-b9b1-44a4-ad08-cc0450037583",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "6bdac67f-65da-49a5-9110-4ac1af2b8d1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99934ec-3257-42b2-a95b-d5797ff1ab81",
        "cursor": {
          "ref": "95706b13-9f6f-4b21-8bc9-1dfdb269acaa",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "899826fa-1d91-403d-88b9-705825cc5263"
        },
        "item": {
          "id": "a99934ec-3257-42b2-a95b-d5797ff1ab81",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ad4bba60-08ef-4949-9bba-50d3be843d70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5f95d9-07a1-4531-b778-e8eff1f30aa1",
        "cursor": {
          "ref": "d43f2a40-5111-4dce-bc81-d626a0ba669e",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "70f59b6a-dc78-4b0a-9020-af7d1ba2478a"
        },
        "item": {
          "id": "5d5f95d9-07a1-4531-b778-e8eff1f30aa1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "33567524-e30c-423c-8b9a-d9c7acb0beaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fd3240-785c-47b1-baa4-e18f92c75239",
        "cursor": {
          "ref": "de4da525-1b2d-4f23-85e9-080903ad2089",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "84baf9c7-f453-413e-a6e7-5880462f7203"
        },
        "item": {
          "id": "44fd3240-785c-47b1-baa4-e18f92c75239",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "367701c5-747b-4ce5-81e7-3e90fe5ed693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2061573c-3bb1-4e37-a5f7-3bdc288e91b2",
        "cursor": {
          "ref": "4e87c0ac-c7ef-44ad-aa41-16451f25ef1d",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f14846e3-90ad-4e6b-a1ef-82faa19148dc"
        },
        "item": {
          "id": "2061573c-3bb1-4e37-a5f7-3bdc288e91b2",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "411544c3-b702-4877-948e-00c811c47cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fbcd58-1d8c-4409-8acb-39194bb260c1",
        "cursor": {
          "ref": "4b0ff8f4-bf11-4513-8e8a-a63553310425",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e42b86a3-cce6-4fc2-9a5d-b8e6ef4e323b"
        },
        "item": {
          "id": "15fbcd58-1d8c-4409-8acb-39194bb260c1",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c966e1d3-ac62-49ca-bfa2-641ab1b8e198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f723ef-e429-4e34-b36e-2ab3316a4997",
        "cursor": {
          "ref": "5dead3b4-e450-463b-882e-c3978696ffb7",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "7be72338-eb9d-49fa-8c53-2aeafdd82c59"
        },
        "item": {
          "id": "f3f723ef-e429-4e34-b36e-2ab3316a4997",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "537f257e-45ac-46a9-b9c6-f9e053276270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516578fd-bb6a-4237-b0fa-6cbadf261af7",
        "cursor": {
          "ref": "0bdcf2f5-d7c0-4a89-9234-f72046c178d4",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "812559b0-632a-4e2b-b584-eac382cb730d"
        },
        "item": {
          "id": "516578fd-bb6a-4237-b0fa-6cbadf261af7",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "df673e73-29cd-4da2-ada0-13126eee2cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7190423f-2a29-4355-abea-53d82c474a1a",
        "cursor": {
          "ref": "4712d1db-339b-42a3-a906-f932e3f73fa0",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "37359724-edda-4f42-a1d4-2e80fdea5866"
        },
        "item": {
          "id": "7190423f-2a29-4355-abea-53d82c474a1a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "00261030-05c3-43ef-8545-254c5ce211bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95d6aaff-611e-4227-bbf5-68da1bd81c07",
        "cursor": {
          "ref": "67c84019-d107-4472-895b-6a5d54c520db",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e8349b80-cf72-4574-9282-20d20846466b"
        },
        "item": {
          "id": "95d6aaff-611e-4227-bbf5-68da1bd81c07",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "87ec42f4-5f53-460c-bd57-1e08e98fca04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c5f99f-9cfa-4654-ad6e-dee9c9f7d717",
        "cursor": {
          "ref": "56fea8dd-e3b9-42ae-8024-0a54e58a0541",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "034c80b0-053b-4167-bb97-60af72fd1f16"
        },
        "item": {
          "id": "69c5f99f-9cfa-4654-ad6e-dee9c9f7d717",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "50943f03-130a-4e4c-8d14-6dc19432a4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cef7a08-0d5f-487a-aa6d-c53fea656c8d",
        "cursor": {
          "ref": "146f36a4-34d9-40a9-b9d0-e2c1edd60239",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6db49070-3f42-455d-909b-d9cc9220a0de"
        },
        "item": {
          "id": "2cef7a08-0d5f-487a-aa6d-c53fea656c8d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "ba34b356-1fcf-40a1-b505-aa5c605fee6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cbc4dc-1011-4c23-b88a-94bfaf760c2a",
        "cursor": {
          "ref": "83be64f6-79b2-4dea-b0f7-038b3270212c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "2ddc1a6f-94cc-4e8d-b2b8-4a84aeef4e57"
        },
        "item": {
          "id": "12cbc4dc-1011-4c23-b88a-94bfaf760c2a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b9c6649d-d0be-4aa1-8dce-3081698aa7d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d7f23b8-d6fe-4d65-934c-a48792608380",
        "cursor": {
          "ref": "f18529a7-a0d8-40ab-8d6e-9e4436194b82",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "3f5f047c-1473-4971-ae87-ae2cffbe4cb7"
        },
        "item": {
          "id": "6d7f23b8-d6fe-4d65-934c-a48792608380",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "146a6f8d-1e93-446a-a4e1-ad6fcc605f79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66db6e6-9905-4ef6-b91c-499bb87451a8",
        "cursor": {
          "ref": "c9d4c816-369a-4c73-9e44-77fc3abf7650",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "01fb92c8-ab86-4e90-b334-ae0abdfd8a7f"
        },
        "item": {
          "id": "f66db6e6-9905-4ef6-b91c-499bb87451a8",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b87502e9-d0d4-4777-bd84-553bbc095e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a94a01d7-f2ab-424e-b231-2a668e965326",
        "cursor": {
          "ref": "a90a809e-b2ba-4332-a553-07be7235c397",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "ce39710e-bf4a-49b4-a68d-25ca533f1ec5"
        },
        "item": {
          "id": "a94a01d7-f2ab-424e-b231-2a668e965326",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ad14fe24-acbb-42c4-ad15-cc662d62e457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8895259-9bda-42f2-b711-9e0d8bb7ca26",
        "cursor": {
          "ref": "6b39790f-8002-4e0f-b157-a697f1e06df6",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3847d5e3-62c8-4fb3-9bb8-06fd07b3086c"
        },
        "item": {
          "id": "b8895259-9bda-42f2-b711-9e0d8bb7ca26",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "0432ef88-4320-40e7-9a4b-4f5d4423e97a",
          "status": "Created",
          "code": 201,
          "responseTime": 2632,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "849a5cc5-5f86-48ba-81aa-4c192fb7a709",
        "cursor": {
          "ref": "9b3edec5-e9fe-423b-a44a-ee8510b393fb",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3f084c6b-2c12-4c28-bd22-b7f416e53dbe"
        },
        "item": {
          "id": "849a5cc5-5f86-48ba-81aa-4c192fb7a709",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "43cb6430-f189-4c96-820b-c30804881ef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5688bd1e-6b39-4b2e-9e5a-6aace494d02d",
        "cursor": {
          "ref": "93e463ae-800c-4884-93ab-00ef7fd6796b",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "9823a83c-c90e-4401-9fc5-bb5b731780c6"
        },
        "item": {
          "id": "5688bd1e-6b39-4b2e-9e5a-6aace494d02d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "f24b5a4d-b46d-40a9-9ad0-645fc3b9199e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f70e1d1d-904f-4645-9f74-7841c5d477e1",
        "cursor": {
          "ref": "71f88ac1-2ec0-4c2b-ad93-f137b4fb58fe",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "d096f6e7-52cf-4bac-9b04-d7a53f223432"
        },
        "item": {
          "id": "f70e1d1d-904f-4645-9f74-7841c5d477e1",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "62c207b5-eb27-4c96-aaec-be425a2651a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47284d1e-5044-437e-abe1-6a7650d8b847",
        "cursor": {
          "ref": "9e633d75-ed80-4abd-a0b5-a4494bf9c437",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "17b7be32-dab5-4877-941e-d2d2ca9b8932"
        },
        "item": {
          "id": "47284d1e-5044-437e-abe1-6a7650d8b847",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c2edf808-6dec-47f2-96e7-28c334e8d1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c76a0e5-bd46-46bf-bf1b-e6e254068516",
        "cursor": {
          "ref": "1f8343ea-18a7-47e0-b9e2-021d7564679b",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "177bd3a3-aefc-4e34-badb-bc733c20ff47"
        },
        "item": {
          "id": "3c76a0e5-bd46-46bf-bf1b-e6e254068516",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8ea515f1-fbbe-4a76-8f4a-9e38c8c241a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1525cd09-321e-4023-9ecb-549977247c24",
        "cursor": {
          "ref": "2b4d5e68-b66a-4418-b618-224061e95107",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2f6ed1fd-5561-45ca-b2dd-8335e61de6ec"
        },
        "item": {
          "id": "1525cd09-321e-4023-9ecb-549977247c24",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c8b979c3-2d55-41d1-9a37-e4e228e60afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959ad3c2-d58b-48ce-ad90-e3e3051f3da4",
        "cursor": {
          "ref": "5d39a2d1-d6c2-4e5f-9f3a-fef5b85eaa58",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e16a03e9-a7ef-445b-a0e1-fee368596774"
        },
        "item": {
          "id": "959ad3c2-d58b-48ce-ad90-e3e3051f3da4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "268095a0-c539-4abb-bbe9-c786e441a9ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b268f1-ab2f-4c2e-ad9a-88701f62ece6",
        "cursor": {
          "ref": "43f6e999-781b-4a7f-a03c-6cbe48fbea85",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "770b5004-fa7e-4e70-9253-0aa912474f86"
        },
        "item": {
          "id": "14b268f1-ab2f-4c2e-ad9a-88701f62ece6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "41ade8d3-5085-40ef-b4a1-37448a982fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6d0ee7-0e30-4f52-b201-0302b00b2710",
        "cursor": {
          "ref": "3bb48f75-95fd-452e-b3f7-f95542b6aff8",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0f74d140-1e4b-4971-b39c-4b6c4660ee72"
        },
        "item": {
          "id": "1b6d0ee7-0e30-4f52-b201-0302b00b2710",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "260ab3ee-ce06-4097-9370-e302bd40107e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ff94b4c-6693-4f59-b0e5-4d1bdf8f24a0",
        "cursor": {
          "ref": "2c911b2a-8206-45c6-b5f2-fcdcb76c10c1",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d2fd8394-5a5b-4af8-b0a0-e4f9313b7626"
        },
        "item": {
          "id": "8ff94b4c-6693-4f59-b0e5-4d1bdf8f24a0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "915468fa-422a-479b-9756-0c199595bf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29d020f-8396-47a6-8bb4-df942978e741",
        "cursor": {
          "ref": "3f71c8d4-339e-4828-8313-621e588d4084",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "1b413ffb-a71b-4153-9437-a0b3cf367daa"
        },
        "item": {
          "id": "a29d020f-8396-47a6-8bb4-df942978e741",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "464f0f2b-3fe8-4a17-a00f-48c07a17014c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b337c76-fe8f-4a3f-90be-d7ecc8c9b2ea",
        "cursor": {
          "ref": "bdfd7aa0-2f3a-4ffc-ac85-5c1614ce80be",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "74647eae-834d-4cbd-874d-5203e483df79"
        },
        "item": {
          "id": "4b337c76-fe8f-4a3f-90be-d7ecc8c9b2ea",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "53154c0e-04a4-4833-8bc5-b8437bb3cf1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17065970-d131-4ca2-a82c-e035feb486ee",
        "cursor": {
          "ref": "b255391d-f4f3-4224-b4ca-52ce7751aac3",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c41260aa-bc28-4220-89fc-373f3ecd7212"
        },
        "item": {
          "id": "17065970-d131-4ca2-a82c-e035feb486ee",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7283c885-55c3-4146-bc15-ed96de59d104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d30a9d3-9b34-409c-b4fb-2f0a95343d1c",
        "cursor": {
          "ref": "758ae336-4500-40bf-85a8-37e35f1e087e",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "7dd554de-4dd2-4b48-a3f4-e511c1632f95"
        },
        "item": {
          "id": "0d30a9d3-9b34-409c-b4fb-2f0a95343d1c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "953d9d17-626f-4197-b39a-66e29fd4926e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bae12941-2b51-43ed-b2c1-73d0a8878eed",
        "cursor": {
          "ref": "23483f89-bbe6-48a9-8d78-0d7a764640f5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "af59841b-11ee-48c7-85ce-15b3bbc98ca3"
        },
        "item": {
          "id": "bae12941-2b51-43ed-b2c1-73d0a8878eed",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "67ca3aeb-c142-4e7e-831d-8853041b8e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbc6357-3893-449a-ae60-0e393970ac1d",
        "cursor": {
          "ref": "33d02cf3-5a89-4622-846d-0b0b9dcb4c71",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "bcd7faca-1beb-450f-8ebb-2fe500b30d4d"
        },
        "item": {
          "id": "4dbc6357-3893-449a-ae60-0e393970ac1d",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "477a78df-f7cc-4b64-a945-52f275a64765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ae37a-2226-4918-b6ea-0312e99d6706",
        "cursor": {
          "ref": "965783dc-6db1-4fca-90cb-aa24a77c1969",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f784fa86-9bc0-46b9-82b0-58468b6355df"
        },
        "item": {
          "id": "368ae37a-2226-4918-b6ea-0312e99d6706",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "bdde3f3c-f71e-4824-8083-6e02f6165e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460e47dd-745b-4b7a-9649-5f421ae320dc",
        "cursor": {
          "ref": "a7231e82-0178-40f3-9057-a44d27d0c982",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3da2068d-5f46-4c15-ba74-050634a21920"
        },
        "item": {
          "id": "460e47dd-745b-4b7a-9649-5f421ae320dc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "1f40d19e-c329-4562-a342-f6adaf7489e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c451f3-867a-4c81-bc83-ffec61c5c8e0",
        "cursor": {
          "ref": "3addd21e-c001-4d8d-ade8-aecd5d94c1e1",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "692dbf2b-796b-4bba-8318-e28ffd58c398"
        },
        "item": {
          "id": "d1c451f3-867a-4c81-bc83-ffec61c5c8e0",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7b94b7d7-cc5b-4650-b3ee-b83bcddce3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e54ea21-0c2b-478c-8d91-e7255c31c866",
        "cursor": {
          "ref": "9380b854-a080-4f96-a550-9516fc54da5e",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "abc2a4ff-9e5f-4399-99f6-c4014abe275b"
        },
        "item": {
          "id": "8e54ea21-0c2b-478c-8d91-e7255c31c866",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "37bb0538-8b96-4f93-b560-3a0f5f3f12ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19b6369-085c-4e60-94b2-3a9503fcd120",
        "cursor": {
          "ref": "4026fb10-f3c4-48f4-adda-521c4522bc04",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c4b0c749-4fae-4021-9b00-c994630d99cc"
        },
        "item": {
          "id": "d19b6369-085c-4e60-94b2-3a9503fcd120",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c66ae1bd-7f73-48f6-ab02-0b3c913c28a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9104760-78fd-4344-8c44-433f31111440",
        "cursor": {
          "ref": "24c0f52d-0028-43d3-b8d1-f6a1e908bc90",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "46a40676-76af-4f87-b2b5-be5f15212f60"
        },
        "item": {
          "id": "f9104760-78fd-4344-8c44-433f31111440",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "25cc4a0a-8b1c-4fb0-a65e-228acd97721b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf37201-4179-4d04-bab2-efb146fd5bb5",
        "cursor": {
          "ref": "4a9dabbb-6f91-42d3-a8b0-d660ffe8ae51",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "165a3a38-0be7-49e0-b3ef-355614cd3095"
        },
        "item": {
          "id": "ebf37201-4179-4d04-bab2-efb146fd5bb5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "11de51c9-a693-4432-8b0a-6fce54d183d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b848764-7de4-4ad1-9faa-41f485b1234e",
        "cursor": {
          "ref": "158a98bd-3250-46f4-90e2-78f6ab8d5101",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ce45dc62-72fc-486e-8359-b1028466c4e8"
        },
        "item": {
          "id": "4b848764-7de4-4ad1-9faa-41f485b1234e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "68d230f2-bdcb-44fc-bc6c-da60a6d7a776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db320ee-e4a8-46b9-a645-ba07d8d16398",
        "cursor": {
          "ref": "5ba865b3-9ef7-4337-a4e6-241bf3688105",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f9eb6cc1-77c2-4e4d-a4ea-a80ac0dcb8cc"
        },
        "item": {
          "id": "9db320ee-e4a8-46b9-a645-ba07d8d16398",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "55fd0c66-0189-449d-8368-16c47f58b697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6b3350-a460-4025-bd63-0eab63133146",
        "cursor": {
          "ref": "96ed039f-0cf9-4820-b388-9bd2316e61b7",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7e03f3d2-90c0-4c33-a995-07d8a9c9f84e"
        },
        "item": {
          "id": "bf6b3350-a460-4025-bd63-0eab63133146",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8c3322b4-447a-4c7b-a99d-367284c94947",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d19e97ef-a31a-468d-9177-9dcb56ea32b7",
        "cursor": {
          "ref": "157e8267-6354-4e22-9829-465130c5b8fd",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "7a0618d9-af5d-4651-9050-82f80de1fcdc"
        },
        "item": {
          "id": "d19e97ef-a31a-468d-9177-9dcb56ea32b7",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "2e7eafca-5836-4004-aa3e-935a26c131ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a429a1a-103d-4444-bb57-b447d62a581f",
        "cursor": {
          "ref": "32c85ece-5896-4c0e-a4ed-0f6c636fbaeb",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "bdfc0119-bc7b-4b41-9e4e-23cccc99c8f5"
        },
        "item": {
          "id": "4a429a1a-103d-4444-bb57-b447d62a581f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5cb25355-bc1c-4516-bb98-e8ba3fab9817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cc9830a-d778-43b5-9253-3ba636227753",
        "cursor": {
          "ref": "a70c453b-5379-431d-87cc-bc28dd5901c8",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "21b99560-2a87-4eb2-910c-cc374c9c3e9b"
        },
        "item": {
          "id": "3cc9830a-d778-43b5-9253-3ba636227753",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ad34dde1-c0ae-45b8-8cdd-fc4fd823468e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2674e71a-e122-4441-a12a-db8e6bc38c8e",
        "cursor": {
          "ref": "7ee2da2e-f2b1-4abd-a8fa-78f2ae980e47",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "deee575f-91d7-4816-8cf5-11e1f203fc32"
        },
        "item": {
          "id": "2674e71a-e122-4441-a12a-db8e6bc38c8e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "725c38c8-3f59-4665-9415-19faeb63978c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70a3c842-b873-4787-8a12-dde57f3d17c8",
        "cursor": {
          "ref": "34ea854a-9518-45ed-bbf5-6377ed2ff981",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "63496723-8180-4bd6-b069-ffe39e96e5f3"
        },
        "item": {
          "id": "70a3c842-b873-4787-8a12-dde57f3d17c8",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8fcdc6f4-8bcf-49e0-81e4-7e348b22062d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626abff3-e6b6-4921-88e5-75e8b1025e61",
        "cursor": {
          "ref": "333bfc75-ad03-41e5-9855-997e68139ac0",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9fd0a84a-11e8-4dcc-9a87-57b462a7762f"
        },
        "item": {
          "id": "626abff3-e6b6-4921-88e5-75e8b1025e61",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ca592dfd-f1cd-475b-8fb7-c7dfbda65f49",
          "status": "Created",
          "code": 201,
          "responseTime": 2694,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8b4280-7f83-44d3-85ce-cfbd92307800",
        "cursor": {
          "ref": "014742f9-8db0-476f-828b-1be8ba5d7a3b",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "345d3a89-d6c9-458f-bc98-c7c18042ea50"
        },
        "item": {
          "id": "fe8b4280-7f83-44d3-85ce-cfbd92307800",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ad282246-938f-4a4d-bbb6-5d9f10efb450",
          "status": "Created",
          "code": 201,
          "responseTime": 2606,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd9194f4-77f4-4844-96de-908c78617882",
        "cursor": {
          "ref": "43f09685-4902-427a-bd5a-35cf103be1d4",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "cece051a-b6df-4ed4-9e88-0704afaba704"
        },
        "item": {
          "id": "bd9194f4-77f4-4844-96de-908c78617882",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "0c42b294-74eb-4f0d-bd87-b0c855af9738",
          "status": "Created",
          "code": 201,
          "responseTime": 2763,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d11f3026-ea73-480e-86e7-fb57b9a42dd0",
        "cursor": {
          "ref": "f2178a72-47b3-4ee9-a5c8-27fa45af6a98",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8fc16697-a1f8-4516-8a8f-86265e5e6fab"
        },
        "item": {
          "id": "d11f3026-ea73-480e-86e7-fb57b9a42dd0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4c7e1ae1-fb3c-4deb-abe6-dda79ad355cd",
          "status": "Created",
          "code": 201,
          "responseTime": 2788,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "1931e938-d640-4d31-925b-aefa3923faf6",
        "cursor": {
          "ref": "e6716015-28a5-4962-a0a6-bf9f0eff95eb",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "bc4a235f-e569-4520-bd1c-25c0b1ebf0ea"
        },
        "item": {
          "id": "1931e938-d640-4d31-925b-aefa3923faf6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "dcc261d3-9a3d-4d4d-8cd6-a475428021a0",
          "status": "Created",
          "code": 201,
          "responseTime": 3159,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-25T00:44:55Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-25T00:44:55Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "906e0655-467b-4d63-a283-69a6abb33ddc",
        "cursor": {
          "ref": "fcc48cbc-b1a7-473f-8755-c5532f6bee7b",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1e1734e7-812e-400d-bfb1-39b606feb3f7"
        },
        "item": {
          "id": "906e0655-467b-4d63-a283-69a6abb33ddc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "e879161d-1ad5-4338-9aa5-e9da2460070d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 138,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "f2d9a07f-4660-44ac-8907-1c93871116ad",
        "cursor": {
          "ref": "e1418cf8-3e0a-414b-a2ae-3ebffb2023bc",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "3f6ca8a2-7ae1-4269-a98e-a58348b8c809"
        },
        "item": {
          "id": "f2d9a07f-4660-44ac-8907-1c93871116ad",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ea685ba5-15ca-4120-b7ff-dd7c8bee4821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 149,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0da345b-62b5-4686-9613-27c96850b16a",
        "cursor": {
          "ref": "b098bc61-69b3-4567-9d0e-e95103ecc92d",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0d9f44cf-41e3-4924-a68a-23785dca753a"
        },
        "item": {
          "id": "a0da345b-62b5-4686-9613-27c96850b16a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8fe9850b-9216-4412-b85b-285c990d0c5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51820158-c23b-4bca-9f5c-92db23fcfd46",
        "cursor": {
          "ref": "db816c72-cfee-4e94-96c0-e4fd2ec17e8f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a51aa5e5-516b-4a0f-a3e4-d74ab9629c06"
        },
        "item": {
          "id": "51820158-c23b-4bca-9f5c-92db23fcfd46",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "be072125-f902-4257-9b1b-da5abe39fbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c51f4946-1330-4464-8d91-25e16fd9e7f9",
        "cursor": {
          "ref": "9fce0457-fdaa-4187-962f-c808c96c05b5",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "21dac19e-61f3-4a9c-aad6-51ad30ace5d4"
        },
        "item": {
          "id": "c51f4946-1330-4464-8d91-25e16fd9e7f9",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "eaea8c9e-0c86-418f-91bd-4aa32194ebbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc3e9b6-ef12-4cf6-b822-75b5a1406fd8",
        "cursor": {
          "ref": "c5c6d7c7-0d59-450e-ae46-580404295902",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6acc4f90-1a3c-4311-a5f1-4b0b63af4d78"
        },
        "item": {
          "id": "afc3e9b6-ef12-4cf6-b822-75b5a1406fd8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aaa5ff52-5217-4fca-90f3-229e1c05e4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886e9136-7074-4728-9663-0bb8f1ba00e4",
        "cursor": {
          "ref": "9c50ac0c-5a14-42b2-95cd-1f9af8bfcdac",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "384b06d9-d61d-4636-8c9d-3c7eb59d2015"
        },
        "item": {
          "id": "886e9136-7074-4728-9663-0bb8f1ba00e4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "99368fa7-42da-45af-a59d-51f00b982f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47cdbdc-c2a0-4eaf-a9ea-6d5b73563bdd",
        "cursor": {
          "ref": "073e93d9-f075-4c44-bbf3-bdd5835dd8cc",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3cead299-b9ce-449d-ba72-7a9a6ca203e0"
        },
        "item": {
          "id": "f47cdbdc-c2a0-4eaf-a9ea-6d5b73563bdd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eb239685-622d-47eb-8e79-b11491f4e35c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27383e83-a40f-49f3-8d77-04aca895d6a7",
        "cursor": {
          "ref": "a92b9b8c-fee4-4f10-bf0c-c30c67ebe436",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "53894a81-3f63-490c-9c7e-467362f1282f"
        },
        "item": {
          "id": "27383e83-a40f-49f3-8d77-04aca895d6a7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c615a4b-3bb3-4599-b44d-d98695f274ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15edce9-a3f9-417c-bea1-9049b33572df",
        "cursor": {
          "ref": "7c9ce62a-11e8-4554-8132-5965c41a9cfa",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "0b01fa81-41ad-4f1a-bcc9-b5d00037d379"
        },
        "item": {
          "id": "a15edce9-a3f9-417c-bea1-9049b33572df",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d144a07b-4def-448b-aef1-3327529bd969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4910d3bd-8935-4e12-bff3-9a6ac7cd4b9c",
        "cursor": {
          "ref": "ae2f684d-4657-45f8-8107-f2935d1d32d6",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a5bf468e-498b-43da-bc3d-fe3d9890a447"
        },
        "item": {
          "id": "4910d3bd-8935-4e12-bff3-9a6ac7cd4b9c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4a036691-dff3-43d9-9d25-cc2bb482749c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150cd50c-d38c-4f51-93c2-0f2b335a4049",
        "cursor": {
          "ref": "339d2fb2-05a3-4fe4-85b2-b9c59aed53b5",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "51f8153c-7b04-42ea-896d-1cd1c67f21ff"
        },
        "item": {
          "id": "150cd50c-d38c-4f51-93c2-0f2b335a4049",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f4ead01b-8f01-4b01-b50d-088f105de78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "078e5c03-b0ac-4921-b67b-dcd6c6bb24e6",
        "cursor": {
          "ref": "4ea69f8b-1b41-4930-a3af-6fa63e4285e8",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "32af6050-f5f1-40df-9993-7eda4851f352"
        },
        "item": {
          "id": "078e5c03-b0ac-4921-b67b-dcd6c6bb24e6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "93468947-c090-43c4-85d1-01624aa01c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e7fecde-0ab0-4849-b47a-24a143c612d8",
        "cursor": {
          "ref": "4db6423a-c9ef-432f-849d-e75ee2cc42f6",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "b9124232-e101-4c22-be41-ca68b6a44f5e"
        },
        "item": {
          "id": "8e7fecde-0ab0-4849-b47a-24a143c612d8",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "29815cc9-3ae7-4c49-80f2-f837a0f68ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0967cae5-7cd3-4437-a081-bcc9994f9e05",
        "cursor": {
          "ref": "78250109-a92e-4810-ba73-a4cc87a220f8",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "6972abbb-73ba-4795-8ac4-9d678cbd5d15"
        },
        "item": {
          "id": "0967cae5-7cd3-4437-a081-bcc9994f9e05",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "da060e4d-5abe-4187-bee7-ffde640f91a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f35a2e9-9d61-4e6a-88b6-45b7cf9568cb",
        "cursor": {
          "ref": "a3b414a0-e1f8-48fb-b626-3b059064524f",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6fa2562b-01df-4f38-ab64-2a4cb83188ac"
        },
        "item": {
          "id": "9f35a2e9-9d61-4e6a-88b6-45b7cf9568cb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "9be2ed15-ae88-40b1-9d6e-ac352458962f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae63f67-58ac-4c1a-8974-8dc415edc9d6",
        "cursor": {
          "ref": "0bf3ac0f-647f-4f37-9ae3-a0cc8e1e0fa5",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "dde8782c-5f1a-426b-8c9a-ffa540c79206"
        },
        "item": {
          "id": "6ae63f67-58ac-4c1a-8974-8dc415edc9d6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "35e3820e-3482-4ca8-8e59-ee1d021faf7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa6c383-1fde-440c-9cf2-2460b0c4a6dc",
        "cursor": {
          "ref": "f561a246-019b-41da-8a73-0cd315b9287c",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "a1bf6057-6072-4635-8c53-e70ef5b9612f"
        },
        "item": {
          "id": "4aa6c383-1fde-440c-9cf2-2460b0c4a6dc",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "407544e3-5093-46a7-bd12-d032253357fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "635863b2-f52b-4c55-ab33-11ee76cf17a5",
        "cursor": {
          "ref": "2a7e9035-0bc7-4b00-a3ff-db87ce98955b",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "f6d00c0e-25da-4a6f-b6fa-c390d6a05b76"
        },
        "item": {
          "id": "635863b2-f52b-4c55-ab33-11ee76cf17a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e16b4bed-de0f-451b-b234-f2beecbf207a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef08a8de-3b16-438f-a894-39fbd1710e65",
        "cursor": {
          "ref": "ace24f5a-35cc-4a4f-9dc3-8b92c5c845ba",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "54965afe-f8b5-4d07-9dd3-6a0300d1fceb"
        },
        "item": {
          "id": "ef08a8de-3b16-438f-a894-39fbd1710e65",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "85a5f27e-8040-4879-8801-6a1c14fdf08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd627ce-e878-48bc-a654-bc6723f2cd73",
        "cursor": {
          "ref": "3e80351b-577f-4192-90c9-e13a0841d6d0",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c0f64120-0c82-499d-b2bc-7b616c6c41e4"
        },
        "item": {
          "id": "ecd627ce-e878-48bc-a654-bc6723f2cd73",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "07360d8f-ffec-4261-a6d8-e788b52f09c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7725cdbe-2e94-4759-9334-28a6547a7759",
        "cursor": {
          "ref": "258f94ea-cca5-418f-ae25-6d04a6968fc9",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7d22148d-6b48-40de-a271-987cb08c0039"
        },
        "item": {
          "id": "7725cdbe-2e94-4759-9334-28a6547a7759",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c9a0020c-4cbb-4308-950b-c52dc968c1f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f2532a-f05f-4798-ae3c-0dadae821260",
        "cursor": {
          "ref": "c458c631-c5c9-45b9-9208-af20cb58953e",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a2533c0c-4cdd-4971-8779-afc3b253877c"
        },
        "item": {
          "id": "83f2532a-f05f-4798-ae3c-0dadae821260",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "7320381b-7108-49f9-bbba-388510e3557c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256aaf5e-2d71-4f47-8251-5aa98e57812f",
        "cursor": {
          "ref": "6db44cb7-7141-4906-893a-8288c1bc42ae",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "63afec2c-317e-4ccc-b6d0-9b2a2dc23a1f"
        },
        "item": {
          "id": "256aaf5e-2d71-4f47-8251-5aa98e57812f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9f6a9889-eb2c-4fdd-8549-baf864411e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88bd034-9f47-4132-9f94-f0e8ac18db17",
        "cursor": {
          "ref": "6f41961e-4720-4e77-9369-a2c82998cea6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "ea73055f-3c03-4cb9-a5bb-98a8101fa96a"
        },
        "item": {
          "id": "a88bd034-9f47-4132-9f94-f0e8ac18db17",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "1949638c-5c68-4bd5-ab8d-5df5721886ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e651d34f-0a8e-4ebd-a48e-3110cb22cd0f",
        "cursor": {
          "ref": "f2a8adf4-7f2d-4fdf-81c9-f931cc36deb2",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "14a18821-15ad-40ad-b089-92835f1597d2"
        },
        "item": {
          "id": "e651d34f-0a8e-4ebd-a48e-3110cb22cd0f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "852b463f-0f04-43af-8acc-ffcd7660626d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f426b1-cae3-47e9-acd1-eac621df1fb1",
        "cursor": {
          "ref": "3ce0b600-d21c-4c4a-8bf8-cfdb76f56cf2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "52e5bbf3-d01e-425c-82ba-fc50b4f73b3a"
        },
        "item": {
          "id": "f2f426b1-cae3-47e9-acd1-eac621df1fb1",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "279f4468-d179-4e91-9a5b-f756b78c3344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e927e68-0acf-4ed1-87c1-8f5d8f26c931",
        "cursor": {
          "ref": "ebc8ec12-914f-4c4d-bb23-3c9ff8a4bda8",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f35b2c8d-0b49-471b-a0f9-697e0dac7934"
        },
        "item": {
          "id": "6e927e68-0acf-4ed1-87c1-8f5d8f26c931",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "730a0205-3c43-4704-8681-ee5c953a4cb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb2e4f80-45ec-4c03-be8d-cc1e632e7da5",
        "cursor": {
          "ref": "f2320d68-6ba7-44b8-b1c7-d932ef13956a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "23902020-c330-4059-a78b-4ce660fd1515"
        },
        "item": {
          "id": "eb2e4f80-45ec-4c03-be8d-cc1e632e7da5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "1dd4dbf0-0a0a-437f-9a8e-f0a7de4c0a7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed2538e-e31e-4a3c-9b79-674e9a29a41a",
        "cursor": {
          "ref": "4d7e6375-8053-4aa7-a8a0-cd0cbd495b06",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "64f975b2-169c-4019-bf79-3c06f83716d6"
        },
        "item": {
          "id": "fed2538e-e31e-4a3c-9b79-674e9a29a41a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "74110b57-29b0-4bae-9117-5bdf9b364435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb59896-8ec0-4ec1-96de-168ed2e07e7a",
        "cursor": {
          "ref": "4ad23261-d2e3-434c-bfed-e6e40574735e",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b4a65b8a-aae2-4fc2-8e92-b47fecff786b"
        },
        "item": {
          "id": "8cb59896-8ec0-4ec1-96de-168ed2e07e7a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "efac7588-ab13-4c72-9384-bf3b947e7647",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60a98bf-e8a6-4397-b43f-817da15e8f67",
        "cursor": {
          "ref": "f61c9cf0-59ac-4ef3-bca0-8b751a099072",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e89b4d5f-1045-4d63-b3f5-5a05946d63fe"
        },
        "item": {
          "id": "d60a98bf-e8a6-4397-b43f-817da15e8f67",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "047436ae-0793-458e-bcf4-8fb811ac78ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522a626c-b2c0-4d84-86a9-ade2a7056088",
        "cursor": {
          "ref": "264f90df-2368-4c89-9571-522e1940c022",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b85e5bc0-7b93-4e3b-b4d9-cae281e13823"
        },
        "item": {
          "id": "522a626c-b2c0-4d84-86a9-ade2a7056088",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e654e27b-e154-4580-85f9-e46827a310f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d516d3c-96b7-415d-a248-ddb7fb967e16",
        "cursor": {
          "ref": "f1869b0b-e87f-44be-aad6-1a4113b61e26",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "2b7e4be7-b9ff-48d7-9922-54ba0a570757"
        },
        "item": {
          "id": "0d516d3c-96b7-415d-a248-ddb7fb967e16",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "83a19044-5810-4702-b2b1-72325467d7d0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caea8eff-7767-4bb2-bfb0-32eeca94f11f",
        "cursor": {
          "ref": "5ecc40c6-e4a0-4369-98ee-9ac9e10ae463",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "61a46fe5-3f4c-437b-89f6-076825e8ac5b"
        },
        "item": {
          "id": "caea8eff-7767-4bb2-bfb0-32eeca94f11f",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a229b87b-60ee-47ed-9e48-b09397127fe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a290edf-1b10-4949-b886-a676fa7b8b7f",
        "cursor": {
          "ref": "e8732341-8122-49dd-bbe0-b92ba4fe711f",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c826638b-8e1f-4b90-80ca-05950cf2ffe8"
        },
        "item": {
          "id": "5a290edf-1b10-4949-b886-a676fa7b8b7f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "53fb77ef-d66b-4077-861d-dfdcacf2a3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8add2ed9-8218-478c-91ef-b1d5720408f8",
        "cursor": {
          "ref": "5416f2be-7066-4a9a-bc4b-46cda850d84c",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7754574c-91ac-4870-a588-a3caf130b034"
        },
        "item": {
          "id": "8add2ed9-8218-478c-91ef-b1d5720408f8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "9b7f3c2a-ea91-47e4-95a7-948141c6b47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b6b5bc-1670-49ad-b697-ef5652012db7",
        "cursor": {
          "ref": "4108c301-247a-457f-b297-bddb1f76bca6",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2a3c6604-99a7-471f-bfb1-294c9803ccc1"
        },
        "item": {
          "id": "f9b6b5bc-1670-49ad-b697-ef5652012db7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6ba8dc0f-04cb-41fa-a80c-84a1ba54fd7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d67d97-f862-4a1e-9f31-f8a107adc69d",
        "cursor": {
          "ref": "39ead7ed-7617-4f59-80cb-61307ddff4da",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "df510724-d08a-4910-afac-c2eebff7479e"
        },
        "item": {
          "id": "b6d67d97-f862-4a1e-9f31-f8a107adc69d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "93428216-dfb6-4652-a57a-3aeb28bf837a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb62f2d-8a50-4026-8c51-a215f50ad9d5",
        "cursor": {
          "ref": "fac197ab-574b-4768-a33e-91f3bb30dff2",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "9e99af63-0cc0-41c2-8079-d177bc992e13"
        },
        "item": {
          "id": "7bb62f2d-8a50-4026-8c51-a215f50ad9d5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a97ea3a6-b69f-42c8-917d-904924f16d6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6cc3a5-ddac-442e-bb84-8499e4bc2f7e",
        "cursor": {
          "ref": "ec8f8974-8c64-46fe-9b06-152ba707dda2",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "218f3287-e38b-48d8-9df4-ab774e1a4844"
        },
        "item": {
          "id": "8d6cc3a5-ddac-442e-bb84-8499e4bc2f7e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a4a2da53-ab1d-4e11-b519-31815b8d1597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c1f20e8-8aff-4ed1-933b-1aafa5f2d6f9",
        "cursor": {
          "ref": "c76abade-86b2-4102-9775-36e837fd1b8b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "23b73dc7-41d7-4bd8-9c77-6eec1ee67ce7"
        },
        "item": {
          "id": "5c1f20e8-8aff-4ed1-933b-1aafa5f2d6f9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9a9dbc5c-8a36-4e08-82bc-22162e9e3371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0685d0f-cb3a-4cd4-81ee-e534c57a38db",
        "cursor": {
          "ref": "c8bc5a31-b6e1-4006-a199-883393254551",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "11feb474-868d-4171-8d3f-b2949850fa75"
        },
        "item": {
          "id": "d0685d0f-cb3a-4cd4-81ee-e534c57a38db",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "63de9eaa-e586-4933-afe3-01f9881f67dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fca5995-59a3-48c6-9a8b-5809c08698cd",
        "cursor": {
          "ref": "486f6b19-e817-474d-b4b9-641ce08aad4f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "92cfa888-e74c-4e6d-9a64-ddaa6c97f16f"
        },
        "item": {
          "id": "5fca5995-59a3-48c6-9a8b-5809c08698cd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "617d4dae-2c9e-48b5-b2fb-b0cb05219ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa44ee52-41e4-463a-877b-e444ca56c22b",
        "cursor": {
          "ref": "eaaa9a77-4a8e-46c8-9c53-ede06ad255f7",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "719fa53c-2b4a-4077-91fb-ee41e6db5d7e"
        },
        "item": {
          "id": "fa44ee52-41e4-463a-877b-e444ca56c22b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b4092123-76d1-4274-a6cb-00c27504619b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f65556-c260-4eb0-b36b-de8e8856d599",
        "cursor": {
          "ref": "c3eac665-c628-41e5-9fd9-8b069586a2e3",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e1f0e170-8206-43a8-9fd0-0bdf22ef7e0f"
        },
        "item": {
          "id": "d3f65556-c260-4eb0-b36b-de8e8856d599",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db803c6a-ad1b-425d-8f3f-f1b11de454b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca6d8fb-3b81-40f8-b98c-e2d123b10b7e",
        "cursor": {
          "ref": "dd4cbf5f-21b9-4151-bae5-ee615d6c3e46",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "570432e3-a4e5-4ea4-a16f-f39df0820e12"
        },
        "item": {
          "id": "fca6d8fb-3b81-40f8-b98c-e2d123b10b7e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "f15b1c0b-c61f-41ea-a476-a8507f9b9047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e819c08f-34ac-4c38-90bc-8782f40245d2",
        "cursor": {
          "ref": "588bd371-70f9-4b40-a67c-bd1ea24796c5",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d050846d-94f0-4680-bf1f-c09986735865"
        },
        "item": {
          "id": "e819c08f-34ac-4c38-90bc-8782f40245d2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cc7d6712-1766-454b-811d-3a1eacd278ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef1ae6e-8e98-4696-be98-58bc844e9ffd",
        "cursor": {
          "ref": "f61ed03b-8f99-43cf-85a9-0e3889d635e5",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "517befee-34e7-448d-8083-cdb4649ee332"
        },
        "item": {
          "id": "7ef1ae6e-8e98-4696-be98-58bc844e9ffd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "ef8a589f-c60c-4db3-a281-0c98630ddb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9302a99-5eb7-4cc6-b467-3c9fbb0667a6",
        "cursor": {
          "ref": "a50955e5-1073-461b-9d68-143e8e1cc094",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1f0b6d0c-3c52-4b56-b597-052b84f67b85"
        },
        "item": {
          "id": "b9302a99-5eb7-4cc6-b467-3c9fbb0667a6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e0bd60af-c4e4-4b2f-8326-af751f2e7bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff9d0b9-a505-4cd9-881e-2099ed9c564e",
        "cursor": {
          "ref": "0c5876ce-9492-495d-a6b3-b8fd4f48b1e9",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9fec97fa-bafa-490e-b26d-a26f9301e2dc"
        },
        "item": {
          "id": "0ff9d0b9-a505-4cd9-881e-2099ed9c564e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4cbfbf50-ee6c-402e-8457-204860fee50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5116f875-d111-4e87-920a-30e3bff73ce0",
        "cursor": {
          "ref": "fb528c22-0803-4366-850b-a7edeacff889",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "b174fb73-3e22-4735-b295-e472293cc855"
        },
        "item": {
          "id": "5116f875-d111-4e87-920a-30e3bff73ce0",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "acd91800-b291-4a27-9d97-7250b7ad386d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9343b8-1480-494b-9080-e2f3a81ae5c4",
        "cursor": {
          "ref": "4677061d-2e59-4a9b-8c8b-9fc4c2e2491d",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f60ba44c-8ec1-4b2c-94ac-4b9aca655802"
        },
        "item": {
          "id": "9b9343b8-1480-494b-9080-e2f3a81ae5c4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a3c30388-5cb3-4313-8eca-2c3d37e8c2d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13ded9-512b-434a-869c-0648294f5fd6",
        "cursor": {
          "ref": "0bf05530-8a70-4def-8d37-cea396e61973",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "809bb55e-d6b3-4741-a4d6-6c35a9527bd5"
        },
        "item": {
          "id": "ef13ded9-512b-434a-869c-0648294f5fd6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "01581e26-e579-4b86-b076-75187d7fe119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89be7539-bd40-4019-92d4-e4ebb4b38663",
        "cursor": {
          "ref": "601e251d-0602-4f71-9563-00b6f4688324",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "2c767b91-bcf1-4590-b058-8985793e2b82"
        },
        "item": {
          "id": "89be7539-bd40-4019-92d4-e4ebb4b38663",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ff1c04e8-13af-4b0b-af50-6c5b332d164d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db025e09-abc4-4b4d-add3-beb5726bf421",
        "cursor": {
          "ref": "0a78a795-67db-49a7-ad3e-f2450f62ae4d",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "dd07fed6-369a-49af-bfd5-275636afa011"
        },
        "item": {
          "id": "db025e09-abc4-4b4d-add3-beb5726bf421",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "79ecdd66-95f7-49b0-b69f-7e892a13289b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef732b49-4808-4893-a500-f60b11686194",
        "cursor": {
          "ref": "af8a9d31-f6b7-42e4-817b-2829cd7ffc97",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fb74db54-400c-451b-87de-be3d18e80f81"
        },
        "item": {
          "id": "ef732b49-4808-4893-a500-f60b11686194",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2bfdb26d-19eb-4b61-bff6-7e2601a41b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c164cb78-6f45-437d-a599-bde774161bac",
        "cursor": {
          "ref": "1016509f-347e-4db5-8607-a535c918b663",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "81799c61-152a-49ef-8ddb-a0d19bbf3c37"
        },
        "item": {
          "id": "c164cb78-6f45-437d-a599-bde774161bac",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "3a038bec-4c70-4415-906c-cbb12ff1ba24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a9a0575-fabf-4081-ac94-096a11478881",
        "cursor": {
          "ref": "bb947f46-0c50-4abc-8150-b0384d6886c5",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "8363f379-223a-493e-a868-745b7619cea5"
        },
        "item": {
          "id": "2a9a0575-fabf-4081-ac94-096a11478881",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cf9ab8bf-19e9-4cdc-a473-e43fba65568d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a13a60-fa71-4e8c-8b14-5cc161166be5",
        "cursor": {
          "ref": "f90e3595-ddae-4215-881a-74cbe7d9af1e",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d66c2d0a-1acd-49d5-a8d7-4eac628d32df"
        },
        "item": {
          "id": "68a13a60-fa71-4e8c-8b14-5cc161166be5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "564ac812-8296-4bbc-b689-8604175e4979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70e4b343-f8b2-4049-9c19-704c9d5bdce0",
        "cursor": {
          "ref": "e263964c-3c09-4fb5-9bbd-bdfc8e840101",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4ffaa4b9-b26e-4a3b-9054-1f93f3aa4d63"
        },
        "item": {
          "id": "70e4b343-f8b2-4049-9c19-704c9d5bdce0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "36ba09c9-6d80-4f5c-a1a2-325a9862d4bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca6c8b4-5fd6-4046-914b-1dcc1c687c1b",
        "cursor": {
          "ref": "3842a51f-56cd-4978-89fc-774b02f6f1a6",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b3386efc-2e93-495e-9451-33f34fc2b28b"
        },
        "item": {
          "id": "6ca6c8b4-5fd6-4046-914b-1dcc1c687c1b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "69ded28f-7646-455f-ada9-c35d9c3e9df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "577ae235-55f6-47de-89fa-4e3a9f93b85f",
        "cursor": {
          "ref": "9ca86ce3-35a3-40f8-9b92-f04f99e235ca",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a27ca03c-fa67-4c05-9943-6dca1354ba61"
        },
        "item": {
          "id": "577ae235-55f6-47de-89fa-4e3a9f93b85f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "9c730e65-7aec-450a-a74b-eb54e71de1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0289a9-c96e-4b54-85d7-25902a0e896a",
        "cursor": {
          "ref": "136c7272-42e2-4e9d-9a8c-83e994a1b79c",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "8730d75b-c55b-4c00-a8cf-2eb5e40ad3c8"
        },
        "item": {
          "id": "6c0289a9-c96e-4b54-85d7-25902a0e896a",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ff4b431b-72b3-46c3-b849-3b860db47174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723b846f-c23e-4499-a822-c034708c82cd",
        "cursor": {
          "ref": "5d961c27-31c3-4ac3-a12f-bc214f0b0f65",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "53e591ea-60a1-4408-bbc0-86a690b4268e"
        },
        "item": {
          "id": "723b846f-c23e-4499-a822-c034708c82cd",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c5b352aa-d37e-49cc-b070-0b482a6dcd30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c1427f-3343-4973-bdbc-584b9769f679",
        "cursor": {
          "ref": "9025627b-e98a-4415-9563-6bac5d049ee0",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a21d3042-2d43-4ee9-8f82-1d858ef8d294"
        },
        "item": {
          "id": "e0c1427f-3343-4973-bdbc-584b9769f679",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e103266d-97f6-4048-814f-45c370986189",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49f3dc1d-7630-427b-92c9-63e696cb7871",
        "cursor": {
          "ref": "55fc867c-82aa-43d3-b925-012b7572d94a",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4cdf9c7c-c5e3-4a18-98bd-c43f5f8e429d"
        },
        "item": {
          "id": "49f3dc1d-7630-427b-92c9-63e696cb7871",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "3afadbef-6bbe-4657-a61f-73ce29e4793a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f55be4-3523-47fa-a310-382e0f01446e",
        "cursor": {
          "ref": "1c0e9450-3911-4ea8-b8c3-8a6e46fddb5e",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "5ab82fba-5701-4906-9626-4ea28fe16034"
        },
        "item": {
          "id": "d8f55be4-3523-47fa-a310-382e0f01446e",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0b47e7c7-cf5c-4cba-a991-37c36be5abee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2da120b-a124-44b5-b76d-0079508d4167",
        "cursor": {
          "ref": "68aa0b29-d576-4ae4-8981-e51a06199479",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fd396262-f66a-4ed1-a342-0a46d4f65430"
        },
        "item": {
          "id": "d2da120b-a124-44b5-b76d-0079508d4167",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "01c47225-fd15-46f2-8d5b-58f950f25957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0a9d6d1-15a3-46f9-bb80-472cb669f568",
        "cursor": {
          "ref": "a8804f1f-0bf7-4844-a51a-923d674c79f9",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "78c56807-75b2-4a87-9512-3425f6ad8b99"
        },
        "item": {
          "id": "a0a9d6d1-15a3-46f9-bb80-472cb669f568",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "27e97c11-08ac-4337-88fd-d3b9c824c0de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffa3696-8f59-4f9b-b70d-c64615a202d4",
        "cursor": {
          "ref": "52fac144-121a-49e1-be0e-f9e928357b75",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "3f141e33-85fa-4343-b08e-70f8a1339d9c"
        },
        "item": {
          "id": "3ffa3696-8f59-4f9b-b70d-c64615a202d4",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "ae10d0aa-d0f2-4fde-9b0c-853c0e2d27e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5e91ce-7fc0-4cf2-a1dd-448106090e63",
        "cursor": {
          "ref": "6e051d33-4a25-45b3-8a24-b21d601cc557",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "de5ec599-2b54-426e-81e8-349d39f48ca1"
        },
        "item": {
          "id": "1d5e91ce-7fc0-4cf2-a1dd-448106090e63",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "365e28bd-0a7d-4760-9eaa-b63f6a427516",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0798bc2-da78-4c50-95e2-eaa9d94904c4",
        "cursor": {
          "ref": "405d5199-a805-42f4-b7a2-b3be3be864e7",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e23fa805-de8e-43d6-8e60-c03ee22c86d0"
        },
        "item": {
          "id": "c0798bc2-da78-4c50-95e2-eaa9d94904c4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "700cef5c-6e67-4d3d-a1ba-cccf1af8e73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ddf438c-d2d6-4756-a923-496fb174c506",
        "cursor": {
          "ref": "2c9c7114-9677-4cbb-b4a5-33e5c58a7d6c",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e1cddb93-05fc-4b06-b069-9f7c46a21bd3"
        },
        "item": {
          "id": "8ddf438c-d2d6-4756-a923-496fb174c506",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "68c993c9-fa87-4a9b-990c-1b2b95eee9e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04cab64-cf9c-48f5-b6ae-e7bbb5a88d9f",
        "cursor": {
          "ref": "f8b8fc6f-097c-41b9-bbbe-df398f964f3e",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "6228e527-4386-4ccc-a5e3-3d1aa3344a0d"
        },
        "item": {
          "id": "d04cab64-cf9c-48f5-b6ae-e7bbb5a88d9f",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "9e1adda1-ba77-4239-b698-dda6503bff1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de57bcb-ca3e-425d-99b2-be55cbf02894",
        "cursor": {
          "ref": "cd8617fb-d038-407a-a4b2-8182dfa46cb0",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "1c6bfb04-bec0-40f4-8e84-8915e196970e"
        },
        "item": {
          "id": "1de57bcb-ca3e-425d-99b2-be55cbf02894",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "dcbead9d-5827-4854-9813-dbe69e36fc1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e782ece-d268-4859-8dc2-451a31651883",
        "cursor": {
          "ref": "b0e6623c-04ca-44d3-83cb-d4a06fd2d4d0",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "15b3bff6-ebd9-4f73-8564-e5775c3ae657"
        },
        "item": {
          "id": "1e782ece-d268-4859-8dc2-451a31651883",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "05fe5cf9-efda-4cb3-bbb3-821acc680b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c035ccb1-1b7e-4186-a866-8a6cf41ed99f",
        "cursor": {
          "ref": "4aadc7d9-919c-445c-b450-6e93eeb701e2",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "1dcc9ab5-ee4a-4252-bad2-48200ae8b18b"
        },
        "item": {
          "id": "c035ccb1-1b7e-4186-a866-8a6cf41ed99f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4fb304ce-5a9f-4485-8150-f9f0ef4e83ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a117b5d-afe6-4226-820f-5d6462f4502c",
        "cursor": {
          "ref": "f54704c7-3768-464e-b63f-4f2189e64952",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "139f9a63-0671-4eeb-87c3-4d9291219926"
        },
        "item": {
          "id": "5a117b5d-afe6-4226-820f-5d6462f4502c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "fb571855-fb61-468f-9a94-9b1ae9d3e198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a10ef2d-22af-4e9c-a784-c2b94de6b9ec",
        "cursor": {
          "ref": "f754ba56-3aeb-45e3-8e2a-967e93f3da2e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f54272f4-a53c-483a-947d-1f382c1dea12"
        },
        "item": {
          "id": "6a10ef2d-22af-4e9c-a784-c2b94de6b9ec",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "30cdab03-54f7-4c92-8ce8-ac8d4bb0b129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f0f54e-b36a-4e10-a7cf-6aa8f4c868c6",
        "cursor": {
          "ref": "790db4f8-dcae-4e16-9927-d26a464505e1",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e07f551a-09dc-4a9a-b97d-277a7a9d980e"
        },
        "item": {
          "id": "70f0f54e-b36a-4e10-a7cf-6aa8f4c868c6",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "976c4679-ef68-4415-93cd-26b69f153b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d884d9-2895-4ddd-98a0-33dd486e9fc0",
        "cursor": {
          "ref": "2ec4d0dc-5c04-4440-9b39-23d251053cd9",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ac1bc9c3-35f1-4547-b960-4d711afedf60"
        },
        "item": {
          "id": "d7d884d9-2895-4ddd-98a0-33dd486e9fc0",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "554f8061-00b6-41dc-bca0-4447f14546a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ae15bd-a831-4479-9082-35cb0f8b4d81",
        "cursor": {
          "ref": "e8a980cf-ac85-4c69-989c-61d4923101b1",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "67586b8b-e370-433d-8c01-a6eeec3c4079"
        },
        "item": {
          "id": "18ae15bd-a831-4479-9082-35cb0f8b4d81",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "04469a19-0fd7-49f1-9503-8597322d3e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c031d7db-37d3-4627-94b3-6272d4cc5a59",
        "cursor": {
          "ref": "19828582-762a-4f03-8417-5ae3367bfa53",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "74a3fee6-b182-4e5a-825c-b38a7a872e0e"
        },
        "item": {
          "id": "c031d7db-37d3-4627-94b3-6272d4cc5a59",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "09c09336-d916-400a-b665-b4cddf6ae1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365c5627-9d3b-456c-9096-7e4fc0ef49ce",
        "cursor": {
          "ref": "aff8d885-7562-4c0d-8089-4b01bf628f1b",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "dfebe775-7620-4329-9c3b-8bbb908c5d33"
        },
        "item": {
          "id": "365c5627-9d3b-456c-9096-7e4fc0ef49ce",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "dde7c055-1767-4394-a07d-7b23269e3cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9835447-feba-472d-9a96-696af3417c2c",
        "cursor": {
          "ref": "edaa5f79-f296-49f0-bef6-ead206f222af",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bb70a024-33e6-4c46-9e07-8b1651795ee9"
        },
        "item": {
          "id": "a9835447-feba-472d-9a96-696af3417c2c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "bc1edf2c-8ca2-465e-9dcf-e28ad1852c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52d92f18-d722-4736-8a12-78321005dc8b",
        "cursor": {
          "ref": "185142ba-45c1-4d67-80a8-d6515365d52c",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bbe4dfdb-97aa-43b1-87a0-5d62e48960b1"
        },
        "item": {
          "id": "52d92f18-d722-4736-8a12-78321005dc8b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1e83a412-dc5c-442e-a166-b48e89e665e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9b5e462-3250-47fa-b82d-866f673faef5",
        "cursor": {
          "ref": "806d32ab-c97b-45f4-87f4-87bcec951b36",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ec9ae047-80fe-4418-993f-7761342bd3a0"
        },
        "item": {
          "id": "e9b5e462-3250-47fa-b82d-866f673faef5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a63ea9e1-f542-4827-a5c6-5f63f70fcf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa9064b-90ab-49a5-a4a9-ad312ff2293c",
        "cursor": {
          "ref": "7dba6260-87b0-4741-9ab3-28172ebb4ca3",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bc303038-0d99-4746-a843-9f851a14ce4d"
        },
        "item": {
          "id": "1aa9064b-90ab-49a5-a4a9-ad312ff2293c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "49109696-bf8e-4eac-9222-f2ea986b7c39",
          "status": "OK",
          "code": 200,
          "responseTime": 222,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "de777997-1ed7-44b2-824a-5fb2278344df",
        "cursor": {
          "ref": "50d3fcee-7680-44e9-bd9f-8045798ee202",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "dc3e9405-ef58-4e04-b3bc-3851031aa550"
        },
        "item": {
          "id": "de777997-1ed7-44b2-824a-5fb2278344df",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "532a345d-3bef-4f61-b3a4-aac2c2bac7a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9bdc77-11c0-4180-af0e-8326aa10601b",
        "cursor": {
          "ref": "b23d4675-d7b0-4209-8278-60780369af97",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c25fbd01-bde1-48c0-83af-683a290837ab"
        },
        "item": {
          "id": "5b9bdc77-11c0-4180-af0e-8326aa10601b",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f5314c5e-4766-4f57-a0af-3dd9b36f8710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f8488f2-8821-4b2d-ae1c-6cfa64795027",
        "cursor": {
          "ref": "1f2004ee-bdbf-4f7a-8788-5beb02a0c3d3",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "cde93d37-d486-4d4a-bd5e-bb6221126042"
        },
        "item": {
          "id": "6f8488f2-8821-4b2d-ae1c-6cfa64795027",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "94d5ba41-ddd2-42cd-8fb9-6f85d2ad8c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3d0ba8-2922-4f11-807e-7c966c2e4116",
        "cursor": {
          "ref": "5fda4d0d-99b6-4b54-b652-e557225973ff",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "9c8a5852-1a40-46bf-b141-1a75d33da79b"
        },
        "item": {
          "id": "be3d0ba8-2922-4f11-807e-7c966c2e4116",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7b1850d0-7ef5-49a7-9a1a-fe48286dcfd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94046244-28cf-438d-89c6-e06ffb90a004",
        "cursor": {
          "ref": "5e1834c6-18a9-4ff1-a496-cd56ac492933",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ef89d3f0-9bbb-4a88-a667-a0ba1839721a"
        },
        "item": {
          "id": "94046244-28cf-438d-89c6-e06ffb90a004",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "ee40ca9b-f61f-4d7b-8ce1-2678a69b63b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82b1b8e8-f161-47e1-bcfc-669e976d7ce0",
        "cursor": {
          "ref": "d308f963-d384-4d85-8b87-c5b42b343ff0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "37888a6d-f95f-4020-9859-03ad77b886e4"
        },
        "item": {
          "id": "82b1b8e8-f161-47e1-bcfc-669e976d7ce0",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "4f1d8bc4-0cc2-486f-9d82-3a07bc535e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ccac1f-22c5-4690-ae36-7aa2c9c52656",
        "cursor": {
          "ref": "5a6fc820-0de0-4659-b810-3a50d4809dbf",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e14629d6-b34e-48d4-b2a9-8392db013010"
        },
        "item": {
          "id": "12ccac1f-22c5-4690-ae36-7aa2c9c52656",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6042b8d2-f734-46c5-bb58-c37f7db31c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda2b44-dc33-4264-ae39-25440faff8e3",
        "cursor": {
          "ref": "e3a38193-7bc6-40de-8015-c79f5b75455b",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "12a1dcef-225b-4490-887f-92c5c4edfdf8"
        },
        "item": {
          "id": "2eda2b44-dc33-4264-ae39-25440faff8e3",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d5643f38-bd6a-4d29-866e-a0babc9ee3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc05ad19-2a81-4d78-a59d-5ecc1d3a7e19",
        "cursor": {
          "ref": "7b068d1d-ad00-4fe6-99e7-2f75e2dd0f87",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "95ae98b5-dcb3-4ed5-85c1-90f1a2826f73"
        },
        "item": {
          "id": "bc05ad19-2a81-4d78-a59d-5ecc1d3a7e19",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "21506ae0-6af9-4502-ac7c-f1ab0f20d00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027e5434-cea8-437a-8437-9728c2a0321e",
        "cursor": {
          "ref": "18b33967-d26a-40d2-a8a4-8f4024bbe593",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6932383e-d795-47fd-a2fc-a180fce15233"
        },
        "item": {
          "id": "027e5434-cea8-437a-8437-9728c2a0321e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "4d71f3a5-aaae-4c6d-8062-4becbcb1b622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99f8a023-a43b-43d3-9d34-cf6eb6fd5187",
        "cursor": {
          "ref": "a09eb576-d7ee-45b3-87a9-1d136dd4cdfc",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c2b2ca3a-3f69-4a37-b3ea-0528c52a758a"
        },
        "item": {
          "id": "99f8a023-a43b-43d3-9d34-cf6eb6fd5187",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f075d950-0344-4a1c-8744-9d3c3ae6ecd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89c325f7-8ad8-442b-9e3f-7117410b228c",
        "cursor": {
          "ref": "9615bd7f-bd0f-43e4-a6eb-3faaa3af52d3",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "93f0daea-d82b-4ace-aff3-04dc71639200"
        },
        "item": {
          "id": "89c325f7-8ad8-442b-9e3f-7117410b228c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "f68cbee2-29ae-4c49-82bd-9f99b2eb80fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f26d1d9-1de2-4165-95dc-08d0694e37fa",
        "cursor": {
          "ref": "b1945b15-57e8-4dae-84a3-7a1cc3813f88",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "871d03f3-661a-4f67-b4d2-e0446815ff9a"
        },
        "item": {
          "id": "1f26d1d9-1de2-4165-95dc-08d0694e37fa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "f420b7a6-0d0e-4d14-94fd-1a7c77de07d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92f6545-6390-4a6c-b618-78f394f7b409",
        "cursor": {
          "ref": "1a79804a-7d2d-4ede-8e3d-f5ed0dd21a86",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "062356f2-6768-46e7-8249-1f31ab227537"
        },
        "item": {
          "id": "d92f6545-6390-4a6c-b618-78f394f7b409",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "dfd2ce43-2d6a-48c6-83bb-b0c9e8dd83c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da758c49-9d64-4fa7-9f95-31d4d49e1b89",
        "cursor": {
          "ref": "91ef98df-c452-422a-a225-c0c5fbd7e123",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "133b4357-b7a7-479b-8dcc-13687b6214ca"
        },
        "item": {
          "id": "da758c49-9d64-4fa7-9f95-31d4d49e1b89",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7f3baf07-d1b2-4bf7-bde5-ca3200bdc9c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bd9ccb-d051-43ed-9767-923d562ce7af",
        "cursor": {
          "ref": "85ff556c-29f1-4b7f-8dec-abd750af9f1f",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c7f8f923-cf02-49f4-b7c2-09134a7b4099"
        },
        "item": {
          "id": "d2bd9ccb-d051-43ed-9767-923d562ce7af",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "608c6770-1149-4d1f-bd13-e6e4a801f981",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63aec21-efa6-4f65-94ba-909089ce0ccd",
        "cursor": {
          "ref": "3c5fc54c-a811-443e-a77a-f3cba8191504",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a96eb604-a8ce-44b6-ae60-19f5135a9ce4"
        },
        "item": {
          "id": "e63aec21-efa6-4f65-94ba-909089ce0ccd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "3e1a9aa2-8811-4de6-a836-400436a0c86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be6a53d-70ad-48b1-bce2-22f5b7545036",
        "cursor": {
          "ref": "74afb208-5d32-4f0b-ada8-b464f14c683c",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5fab4c3c-903b-4520-8657-b7497fd9fdae"
        },
        "item": {
          "id": "5be6a53d-70ad-48b1-bce2-22f5b7545036",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "4e8a63b0-8552-4663-a5bf-451e10911b37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c34686-5db0-4f4f-a708-7cc6a575a05e",
        "cursor": {
          "ref": "89f8a62a-907d-4a9d-8712-f5cd2f649d0a",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c26d1a81-1d67-43da-be33-84395d2c4cdc"
        },
        "item": {
          "id": "01c34686-5db0-4f4f-a708-7cc6a575a05e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5781edad-7deb-4024-8156-817ad28e383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0dcaa9-b92e-45d4-b135-4dcb3c761703",
        "cursor": {
          "ref": "bbe67c32-b972-4913-8a38-39c2ff5bb093",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "83968923-7e26-47f2-a996-554896433aba"
        },
        "item": {
          "id": "fd0dcaa9-b92e-45d4-b135-4dcb3c761703",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "70cf597f-abfa-4703-836e-4b48aba92188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6111eeb0-760b-4c11-9363-1b422f6a3c1e",
        "cursor": {
          "ref": "d5aac884-9ff2-4e38-9ad5-39b6354944da",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f1b33cd6-0227-416f-9043-b1fb535e8ac5"
        },
        "item": {
          "id": "6111eeb0-760b-4c11-9363-1b422f6a3c1e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "43c01978-2c7e-4e2a-9b94-8d441fe5f820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef7eda9-2cd8-4014-a498-3a699d0ca928",
        "cursor": {
          "ref": "f6a4464d-ce53-4564-a6d3-9f676e0db8fe",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ff52401c-81bf-4e7d-8d5d-abe8257f0c2b"
        },
        "item": {
          "id": "eef7eda9-2cd8-4014-a498-3a699d0ca928",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "023b4389-ba4c-444a-bd83-bfde228aff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0ceda5-e449-4dbb-95f0-32bfd8dc6586",
        "cursor": {
          "ref": "ce339b44-a9a6-4b18-b2a0-f8fc6f7fbc7d",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "53bfcabe-d05e-44f9-8872-4b127e1166a5"
        },
        "item": {
          "id": "4f0ceda5-e449-4dbb-95f0-32bfd8dc6586",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "368cf431-4709-4ef6-97a7-07d39107dfed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97ed5cf-4dc6-472a-8218-11521d329d6e",
        "cursor": {
          "ref": "04da199f-d4dd-4ac8-ad86-ef17e8010bb6",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2345ed1d-b285-421f-b70d-5e0feeaf037b"
        },
        "item": {
          "id": "b97ed5cf-4dc6-472a-8218-11521d329d6e",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "20cfeeb1-0f73-4c6f-a2a8-317eed3300a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b018b9a2-8f34-49af-8dc3-2d27a16c0eb5",
        "cursor": {
          "ref": "b9becdf1-6e7a-4de4-b54c-1953ef110902",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5d908e0b-ffb6-49ec-a973-0593aa4f4d51"
        },
        "item": {
          "id": "b018b9a2-8f34-49af-8dc3-2d27a16c0eb5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "629e1b36-b9e4-469c-ad4e-a7dd7fd2b1ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c5a130d-3705-4165-a3a4-efe145f1a0af",
        "cursor": {
          "ref": "907c8c22-76cd-45a8-bd36-7004feea846b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a326c595-34fb-4b35-b048-fb6f8fb195ae"
        },
        "item": {
          "id": "6c5a130d-3705-4165-a3a4-efe145f1a0af",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "36829305-b824-4e0e-8cb1-fd35b573a70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f00663-e9cd-42b6-a604-e886cf47ac06",
        "cursor": {
          "ref": "ad6b9a7f-f98c-41d2-98ed-722dc1278d6b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cca81bed-4f7a-48bf-aeab-ba4ab330df9e"
        },
        "item": {
          "id": "30f00663-e9cd-42b6-a604-e886cf47ac06",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "bf603c2e-42fc-4b46-ac18-bc25a2f29bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "216d4a72-bd1d-4f00-8952-a4c1fa261062",
        "cursor": {
          "ref": "f65824ee-4840-4a38-8575-759bccf03e95",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0cf8f3cb-991a-4c75-b6cb-415ff3947fbe"
        },
        "item": {
          "id": "216d4a72-bd1d-4f00-8952-a4c1fa261062",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c2528da7-7f69-4928-864d-75f0dbf028f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a84926-70c9-4a49-a78d-7a9f584dbf95",
        "cursor": {
          "ref": "f11d898f-9e30-44da-a71b-2ef783d064cb",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cfd93973-352d-4c2b-86b8-b53f3ca8b41f"
        },
        "item": {
          "id": "b5a84926-70c9-4a49-a78d-7a9f584dbf95",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "e4526251-9e64-440b-bbb8-e91f7231121f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d707b1b-52bc-4d0d-8011-160fb59e6942",
        "cursor": {
          "ref": "e414c864-6d9c-4818-8da7-6ba193c8a3e2",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cef26a49-ed49-47bb-8114-28880cd00dab"
        },
        "item": {
          "id": "4d707b1b-52bc-4d0d-8011-160fb59e6942",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9d7b1197-8d74-4aec-a309-2ae194eef6a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c670bb4-8f94-4db8-8e01-32c2bb180d2d",
        "cursor": {
          "ref": "be1f0b0e-a70a-42f0-b1da-093ab5df05a3",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "8b4405e2-0b00-483b-b591-ca27afb70dd7"
        },
        "item": {
          "id": "8c670bb4-8f94-4db8-8e01-32c2bb180d2d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5f64da65-12ad-4d9c-a684-76a935c04a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1362b4cd-d603-4099-a171-cdaf10fb9375",
        "cursor": {
          "ref": "09403c8c-3b23-41e1-bc41-bf1c59a13667",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "72af9f1b-3c40-457c-bda5-f8529f9b2385"
        },
        "item": {
          "id": "1362b4cd-d603-4099-a171-cdaf10fb9375",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "90094db9-22bd-40ce-8480-242f6daa165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0aa0980-1133-439b-a664-eefcc10f3b14",
        "cursor": {
          "ref": "6586db23-75c2-42d3-a792-bea5bafaf119",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "03e3ff4c-79df-47e4-a3cd-2bb8f91824ce"
        },
        "item": {
          "id": "f0aa0980-1133-439b-a664-eefcc10f3b14",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "ec847604-a5c1-459e-bfa8-2218532cac80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1596f9a3-8e04-459e-a54d-3b779c14f319",
        "cursor": {
          "ref": "ee2379c3-6cc6-40a9-94b1-e4a0c71e83f6",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "2eadd262-fce2-4332-a427-9928767314f0"
        },
        "item": {
          "id": "1596f9a3-8e04-459e-a54d-3b779c14f319",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7391cd3a-1e0d-4e20-98c8-199563f4831e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ec5930-453f-4027-ba42-ac7d8ec64e2c",
        "cursor": {
          "ref": "601aabe8-9725-46ff-ba31-6f7ff40b223f",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "2516e00a-ab3a-4415-9441-dc35c9f3a191"
        },
        "item": {
          "id": "d8ec5930-453f-4027-ba42-ac7d8ec64e2c",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "a3f91ee1-4ed4-4d17-8d97-b7b408e382cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477ee0c4-b11c-4e04-b800-cf15f704fc8c",
        "cursor": {
          "ref": "04886099-b625-4428-b819-87c8f058b7c2",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "dfa5b150-2537-432b-b9fc-e17a7f7ee61c"
        },
        "item": {
          "id": "477ee0c4-b11c-4e04-b800-cf15f704fc8c",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e69acfe6-8dbd-493d-9fd4-19cec4624948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45bfb06b-90fb-4be6-9fc8-706ef51313c9",
        "cursor": {
          "ref": "b544e7b1-c87d-4db1-9cf9-fd1ad2c76430",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "33d9fc38-f6ad-4f8f-8a93-01308aafc46a"
        },
        "item": {
          "id": "45bfb06b-90fb-4be6-9fc8-706ef51313c9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "aac40467-14d7-4405-bd20-19e8a5198ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c5250c-3a51-4017-8103-297dec96a94b",
        "cursor": {
          "ref": "0b44e64c-cdea-45fe-a065-deec8d281c93",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7f58e42e-400f-4420-b089-451282b65caa"
        },
        "item": {
          "id": "30c5250c-3a51-4017-8103-297dec96a94b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8281a864-ea30-414d-beeb-fa024cb663c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7186a003-697d-426f-9bae-50eb71938534",
        "cursor": {
          "ref": "5f6c0378-7c49-4733-96bd-ac22e738d3ed",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "defd9f4c-4d5c-4dac-a1a3-a88a6f912440"
        },
        "item": {
          "id": "7186a003-697d-426f-9bae-50eb71938534",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a6a84c86-5806-4695-8c67-4ed3a1112f47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf77edd-ae30-4980-ae01-63a2e01464a1",
        "cursor": {
          "ref": "6b75b9d5-23d6-4a0a-b218-ac1606c59f52",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f2ddc91f-ca05-4765-ae3c-02c5fce0f818"
        },
        "item": {
          "id": "5cf77edd-ae30-4980-ae01-63a2e01464a1",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45962c60-b6ba-4187-b3d4-d62ae3d36624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf02c0b-89b1-4f1e-b415-b33f3819468d",
        "cursor": {
          "ref": "5d1f10ec-3686-40cd-b814-d1946ebb81c5",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "2cf145fa-bb8a-4c8d-894f-1a2f0a3a1662"
        },
        "item": {
          "id": "ebf02c0b-89b1-4f1e-b415-b33f3819468d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "49a236e2-f2ed-4421-9122-bd8c130d971e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d9fda0-38df-4414-956f-ae6384ddd580",
        "cursor": {
          "ref": "6fa1bfc7-1b47-4ddd-afde-9bf3b4e2cd1f",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "2cbb8ef4-e01a-4a67-97ae-62ba1efb6866"
        },
        "item": {
          "id": "a6d9fda0-38df-4414-956f-ae6384ddd580",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "709281b7-d54d-4f18-ac19-40d10b0dd81c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8342eb78-58f0-4739-9acb-6abea4d22cd9",
        "cursor": {
          "ref": "df3a4217-94f5-4a85-882d-4326754e8bc6",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "74374ef7-bb05-494b-9eed-bf2c941a2fc9"
        },
        "item": {
          "id": "8342eb78-58f0-4739-9acb-6abea4d22cd9",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8b070e57-804f-48b8-b439-e4da28fa4377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8354c070-1f14-46e7-8d7c-6c28ab41dd83",
        "cursor": {
          "ref": "a693a0b2-5e77-4762-be5d-df5621ec1ec7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8bcf92cd-4728-4b5f-9444-d1bb0e5613c3"
        },
        "item": {
          "id": "8354c070-1f14-46e7-8d7c-6c28ab41dd83",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "01724a85-ecf3-414e-8d9e-fd67c95a9516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64256b1-8925-4e1a-b128-9a50da8c6d0c",
        "cursor": {
          "ref": "d332dda0-1704-4dbf-899f-61b6df83f64d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "3faa147c-4db6-4440-95c2-763571b51772"
        },
        "item": {
          "id": "f64256b1-8925-4e1a-b128-9a50da8c6d0c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "79ad3ba8-8a38-474e-8a10-8721ed537b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e952c025-b56f-4612-a1fa-83bdbb97d2ec",
        "cursor": {
          "ref": "e8b22aa0-4511-441f-9533-b9297bb9fc8d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "49c2cf09-bfd5-4913-ba7f-0661a94dbf5d"
        },
        "item": {
          "id": "e952c025-b56f-4612-a1fa-83bdbb97d2ec",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ae84602a-2de6-4ed2-b088-c8e2e96a133e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c269c1d1-d825-49a5-bf7a-64794fa27f33",
        "cursor": {
          "ref": "d71f447f-2792-4497-9450-5f151b5dbfdb",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "7b04458a-374b-4fa8-a7a9-681c78682af1"
        },
        "item": {
          "id": "c269c1d1-d825-49a5-bf7a-64794fa27f33",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6d98694c-0309-4271-96d5-378c8ceed01f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd8072f-876f-4215-b62b-99dfdbe37a32",
        "cursor": {
          "ref": "3b0f42ba-90f4-45b0-9386-e88f420f3dc5",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b185a6a8-f3ed-47b0-a1c2-42b8b14d513c"
        },
        "item": {
          "id": "6fd8072f-876f-4215-b62b-99dfdbe37a32",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "cb9c223f-d550-42d4-9213-ba4ef2f50ce2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d0350f4-4136-45ae-8815-8618e47cda1b",
        "cursor": {
          "ref": "e3e6f539-de00-4677-95fd-3961662ba948",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "43367eb2-dcae-48d8-add4-3ca3ea8a480b"
        },
        "item": {
          "id": "7d0350f4-4136-45ae-8815-8618e47cda1b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "010d89f2-81ed-42f0-9fd1-b3f035d70e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b7ce423-d2e7-4706-97b5-5b0c54d71c23",
        "cursor": {
          "ref": "6a3a3495-7c43-4f4b-9aaf-6f6bc78a5e4f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "e818d87e-2019-4eec-aeab-b4d3fe9d9c37"
        },
        "item": {
          "id": "1b7ce423-d2e7-4706-97b5-5b0c54d71c23",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c92a7ecd-eaa2-490d-a911-8b61b3999891",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea81a66-8eac-4e17-9571-af001a7c5ffe",
        "cursor": {
          "ref": "e72e2cf4-0cde-4dc1-82f9-a8e843f78a19",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d92df561-b276-42d5-ae97-ad7ddd9a6201"
        },
        "item": {
          "id": "dea81a66-8eac-4e17-9571-af001a7c5ffe",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ff48b002-e6e5-4add-ae39-8bc60fbc0a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "789ec46b-32cc-4be8-9ea8-57bc1f7cf88a",
        "cursor": {
          "ref": "0d7707fe-2ca0-4221-b4ff-5b16450d0ba4",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "001dcc42-2729-4b68-bf31-1a178e3dcae0"
        },
        "item": {
          "id": "789ec46b-32cc-4be8-9ea8-57bc1f7cf88a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "397d3124-1394-4d8a-85d2-2bd70f22d74c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9721a62a-a32d-4d4e-bcb7-57c68e8d8ef4",
        "cursor": {
          "ref": "f8d01698-de54-46d1-9fbf-e998682ac1bb",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f11c0a5f-c67f-44a0-8a55-e6313dfb8c00"
        },
        "item": {
          "id": "9721a62a-a32d-4d4e-bcb7-57c68e8d8ef4",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "8376c386-5ca7-421e-a08c-5595c7e005d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f47f285-89cf-437f-b014-aaca5658bd51",
        "cursor": {
          "ref": "842b27e6-9eda-4a8b-93c8-aa1d72a4ae5b",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0ab1944a-5265-451b-ab61-4d9b6c023be1"
        },
        "item": {
          "id": "5f47f285-89cf-437f-b014-aaca5658bd51",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0016921e-f68b-4749-b4bc-60e52d1d0acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474175c3-f325-41bb-9292-19d68bd3faab",
        "cursor": {
          "ref": "686298d7-2ea3-4e0f-bb08-5ef67905201f",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "bf156267-20cb-4743-98b2-4b17686416b0"
        },
        "item": {
          "id": "474175c3-f325-41bb-9292-19d68bd3faab",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ecf2f7ca-4435-42d6-85ee-a187b6e6cfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf2456f-4b52-40f3-aadc-94a7d868804b",
        "cursor": {
          "ref": "db24ad83-45c6-4359-83f5-b43f40849bc5",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a2dd84eb-9fba-4cae-8f84-1d6aae057c8f"
        },
        "item": {
          "id": "edf2456f-4b52-40f3-aadc-94a7d868804b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "11c417ab-9aa3-41b7-9e2a-48e88a7fd71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9779a0c7-05ca-4fe8-9ff9-476f558b5aeb",
        "cursor": {
          "ref": "9f3f84c0-2b2a-4e8f-8ce3-e372490f407d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "bbce535a-aa82-43eb-b0b9-b1b506a802f9"
        },
        "item": {
          "id": "9779a0c7-05ca-4fe8-9ff9-476f558b5aeb",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "83075ddc-afc3-453c-a9f7-4710666af320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82c69be-767d-4889-9c8d-317ee73ab75a",
        "cursor": {
          "ref": "1964fcbd-8e48-4699-b43d-d322518ff7d0",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7af1a185-e3d4-4076-bd9c-c341a44c9f10"
        },
        "item": {
          "id": "b82c69be-767d-4889-9c8d-317ee73ab75a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "1ab524d6-42ee-4245-b9f7-c61cfce20b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e82de6-0bdd-4c0f-ac8e-dea629ed34d0",
        "cursor": {
          "ref": "0ad47606-a074-4a19-8601-f75f13b9c3af",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "04d657eb-3367-4be7-aca9-bd1f8817fb1b"
        },
        "item": {
          "id": "c2e82de6-0bdd-4c0f-ac8e-dea629ed34d0",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3ba14aca-0216-43dc-85c1-5ea905db2671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5756a0b4-a2eb-42a8-ace2-77562c1a862e",
        "cursor": {
          "ref": "4f8eb4b9-fde1-4095-9944-211bf8693c29",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "cd167483-cc64-43c1-bb54-702b44c26889"
        },
        "item": {
          "id": "5756a0b4-a2eb-42a8-ace2-77562c1a862e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5dd5c1ed-ebf1-4397-b3ea-8a98ee91eaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d2ec4a-b64e-47b2-8b1a-98826dba3f4d",
        "cursor": {
          "ref": "a57d4603-2835-4a1e-8a6d-b3ba7acb8df1",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7e92f686-5674-4257-9d19-2a8204ac284d"
        },
        "item": {
          "id": "74d2ec4a-b64e-47b2-8b1a-98826dba3f4d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "18ae23f0-149d-4899-a06d-75598225a027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "116f6931-35be-455c-a6bf-ed1996f2aa86",
        "cursor": {
          "ref": "5fc5c605-5083-49cd-be31-727d295abfb5",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "319fd169-321a-4a26-9eda-118054e4d3bf"
        },
        "item": {
          "id": "116f6931-35be-455c-a6bf-ed1996f2aa86",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ae012b07-b302-47bc-b227-a816b6999cfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb02ae97-9870-4fcc-814a-3923e099d640",
        "cursor": {
          "ref": "34e8ec4a-dcd4-4dd6-b6e0-da4310bcce82",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "3e70cee2-a6af-447d-9144-e69214599179"
        },
        "item": {
          "id": "cb02ae97-9870-4fcc-814a-3923e099d640",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b127beb8-b35b-4706-b8de-c6432146db9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77493eff-afb1-49b8-8e65-a0f32cf061ef",
        "cursor": {
          "ref": "9aa3cd91-b12b-405b-b7d1-ed9d0798fe7a",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a5267f17-14ef-4364-82ba-eab5923abf4a"
        },
        "item": {
          "id": "77493eff-afb1-49b8-8e65-a0f32cf061ef",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "f63d73f7-8faa-401f-a2c1-a6ed1cb3f112",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87117865-b2b9-47b2-a7e3-0162babc1e10",
        "cursor": {
          "ref": "58f16434-1064-4dea-b4c5-750d1f4b45f9",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "909ff6e3-2e84-4b62-9c95-5ea19ba69972"
        },
        "item": {
          "id": "87117865-b2b9-47b2-a7e3-0162babc1e10",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1a830584-107b-4c02-87bb-6d3d4da5d48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f1d69d-1f4c-4f28-a4e4-2d5402013a24",
        "cursor": {
          "ref": "81b05281-2dda-4274-b430-dad2212e6323",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "09915c4f-9a5e-4afb-bbac-1c7b5bdf819f"
        },
        "item": {
          "id": "f0f1d69d-1f4c-4f28-a4e4-2d5402013a24",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c414003e-454f-4bed-b161-b05250dea315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afddf29-60e4-4b35-ac04-e7b89645dad7",
        "cursor": {
          "ref": "43714a63-73cf-4ba7-99e9-983fa2462a96",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "161588c6-0bcf-48c7-aa00-f61d25fc6dfc"
        },
        "item": {
          "id": "5afddf29-60e4-4b35-ac04-e7b89645dad7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "97f16411-bd67-444f-ab08-1e30187f4e5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eede044-74c6-4080-bd42-8f993519b444",
        "cursor": {
          "ref": "364ae638-19f0-4ae1-b759-1337eeb2dddb",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e12ac687-19bb-467a-80f3-ad6c12af8260"
        },
        "item": {
          "id": "4eede044-74c6-4080-bd42-8f993519b444",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "04b41de9-84a7-42ad-adf9-6b4cbad566ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81f0c31a-0f1e-45fe-a735-68ab01fd6a92",
        "cursor": {
          "ref": "7311b9fc-ea62-418f-9468-9a79c2dfa30b",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "287fe55c-6349-4564-b7b5-10ed109d8886"
        },
        "item": {
          "id": "81f0c31a-0f1e-45fe-a735-68ab01fd6a92",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "efa0501d-d7d9-4747-8195-eb09952a80fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7769ebaf-a7ad-4fd9-8f2f-ae64f73d8af5",
        "cursor": {
          "ref": "b1e4cb51-7c61-46a1-877a-d46d4de8b7eb",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "aa1f388e-2609-4c4c-a422-007016d38c90"
        },
        "item": {
          "id": "7769ebaf-a7ad-4fd9-8f2f-ae64f73d8af5",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "6de976c9-d163-47e2-8ee6-1ef8bbb815c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7153a9a-aa44-4c53-b3eb-95e596620d01",
        "cursor": {
          "ref": "5321217a-67aa-4fef-a4ea-ef20846a6f22",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "e734b5bf-a285-4216-a805-e40fbea72c3e"
        },
        "item": {
          "id": "a7153a9a-aa44-4c53-b3eb-95e596620d01",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ebb0b2ce-8d4a-4392-a180-cfdd07315973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f60630a-cbd1-4f00-905d-c591af7a5193",
        "cursor": {
          "ref": "7406d162-d633-4d90-8972-64bbee9cae1c",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f66a6177-a40a-4a0f-aaae-f3859a366b86"
        },
        "item": {
          "id": "5f60630a-cbd1-4f00-905d-c591af7a5193",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "dc321bfd-245e-4681-b953-898f6f8a4ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4ec0df-d339-4e0c-a911-ea37ccf9d6b3",
        "cursor": {
          "ref": "ffd8b596-483b-4d59-bc94-99370d8cdb81",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ee28d353-ea7c-46d8-8eb7-7ed9860f3ef9"
        },
        "item": {
          "id": "4a4ec0df-d339-4e0c-a911-ea37ccf9d6b3",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "85056495-30c7-4d1f-9c5d-01072038fb52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fc9a2c-aff3-40f2-b99a-066e838c1013",
        "cursor": {
          "ref": "783e59c6-59a9-423a-9ac0-45990d0c1dd9",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bc0df614-0e56-411e-8611-243666d246bd"
        },
        "item": {
          "id": "a5fc9a2c-aff3-40f2-b99a-066e838c1013",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "576cd181-02a0-4ad3-bf16-08cc62f4bb3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e6858c-5581-4e77-b3ea-2c187c5a07be",
        "cursor": {
          "ref": "1052e8cd-3463-4f18-a9cc-f249627e66a1",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "7260822c-c28a-4294-b89f-fa0a535286ac"
        },
        "item": {
          "id": "e3e6858c-5581-4e77-b3ea-2c187c5a07be",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "09167169-3784-4989-8616-e4f8462727c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af96fc46-1530-4ffc-b26a-a127ced115bf",
        "cursor": {
          "ref": "396ca72f-e842-4414-9893-78454cefd45c",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "98f30fb4-271f-4c02-8aef-886cc0eb2b78"
        },
        "item": {
          "id": "af96fc46-1530-4ffc-b26a-a127ced115bf",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "91d9021f-2af3-4d32-8221-da56b2223f19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84638ced-beeb-4e81-8a75-09754ed6875b",
        "cursor": {
          "ref": "7010533b-2818-4a06-9ab0-574836dfc5cf",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "14677c4e-48ce-40ee-abc1-97cba988657d"
        },
        "item": {
          "id": "84638ced-beeb-4e81-8a75-09754ed6875b",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8fe65fd6-2bf6-4890-81f6-fe859b95b298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f8d42f-264d-42a1-aca5-1edacaaab714",
        "cursor": {
          "ref": "81c6e7c3-8342-41cb-9873-7a1624c91eb2",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7b02f035-7ee0-420e-b977-8acd9e537c8b"
        },
        "item": {
          "id": "27f8d42f-264d-42a1-aca5-1edacaaab714",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0d9d6616-d19b-41a8-ad36-f16ec8fc5bb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a1e5521-f912-47b8-9486-b9dd3be123da",
        "cursor": {
          "ref": "e3ddc348-eeea-4f3f-b425-1c0a5f558fba",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "2f325be3-05a8-4157-8326-1d246dcb4b99"
        },
        "item": {
          "id": "6a1e5521-f912-47b8-9486-b9dd3be123da",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d52d2990-b98d-474b-96b9-b4f0c086d25e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1105944a-612a-417b-85bd-c1abb64cb900",
        "cursor": {
          "ref": "1fd371c3-f688-4abb-839d-30de1c264674",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "84f17746-557b-4307-99e5-05d88bbeab18"
        },
        "item": {
          "id": "1105944a-612a-417b-85bd-c1abb64cb900",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "475b7d2f-7443-4e1d-bd4e-b799d1a5d345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2c62ec-2cc9-4b02-8a04-072adc5d7afd",
        "cursor": {
          "ref": "c534e339-0634-459e-868a-8ae672cb7b50",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cad90147-ca93-443c-95e4-2b620c54730e"
        },
        "item": {
          "id": "aa2c62ec-2cc9-4b02-8a04-072adc5d7afd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "e6088714-0850-48db-9bb5-66eb8f100a28",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0e1a21-8597-43e3-a5c9-ddc6d35fb2c3",
        "cursor": {
          "ref": "6a2af389-c715-419f-b315-d56815ad48f9",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "c4105b60-0cba-4efb-a524-95f93428b2ce"
        },
        "item": {
          "id": "5c0e1a21-8597-43e3-a5c9-ddc6d35fb2c3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2ece5828-ece8-4f41-977d-fdc00e8dd78a",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b9bfc8-299c-499b-a967-941cc1cf1cc9",
        "cursor": {
          "ref": "afda6511-8c73-4583-a58d-70c1bd69d44f",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c1f67d87-9b4f-4802-870e-4c718c5daca0"
        },
        "item": {
          "id": "81b9bfc8-299c-499b-a967-941cc1cf1cc9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c6ce41e1-a4ec-45af-93ae-7ebed4ba71de",
          "status": "OK",
          "code": 200,
          "responseTime": 2722,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "12150513-bc23-4421-816c-3514b14fd311",
        "cursor": {
          "ref": "e58b0add-648a-4424-a506-444dfe6c4141",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "39c382f2-8c76-4b29-9256-ada33093096b"
        },
        "item": {
          "id": "12150513-bc23-4421-816c-3514b14fd311",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b5094c81-61bc-43d4-a592-a838ab292806",
          "status": "OK",
          "code": 200,
          "responseTime": 2478,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "82556a24-affd-43c9-a488-2b85619fdb83",
        "cursor": {
          "ref": "0ba5a855-ffce-433e-ac59-02f4b808f475",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b3b70729-3267-407f-ae4d-b6c2c498ee4d"
        },
        "item": {
          "id": "82556a24-affd-43c9-a488-2b85619fdb83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b1e4bf43-9ff8-491a-8cb5-1ee5c8398f9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82556a24-affd-43c9-a488-2b85619fdb83",
        "cursor": {
          "ref": "0ba5a855-ffce-433e-ac59-02f4b808f475",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b3b70729-3267-407f-ae4d-b6c2c498ee4d"
        },
        "item": {
          "id": "82556a24-affd-43c9-a488-2b85619fdb83",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b1e4bf43-9ff8-491a-8cb5-1ee5c8398f9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a767787-41f9-46be-b219-fadfbbdb5e94",
        "cursor": {
          "ref": "2f7ef374-0384-47c7-996a-3ca2e86f44e1",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0d0a98ef-701f-4568-b837-e598a9d0b403"
        },
        "item": {
          "id": "2a767787-41f9-46be-b219-fadfbbdb5e94",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "1101bf76-1d36-44f6-bd22-fc57365b5036",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "400d8e02-8d3f-4dc4-bc7b-d9afb7c5cce8",
        "cursor": {
          "ref": "a978f45a-7973-456a-84b5-7ad0a0d4c4ad",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "13ccc86b-be3e-47d3-9782-0eaea066348b"
        },
        "item": {
          "id": "400d8e02-8d3f-4dc4-bc7b-d9afb7c5cce8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6181f5f8-db1f-4b6c-a42b-d85989b82383",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}