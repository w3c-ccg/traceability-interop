{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3db040d3-4924-48c4-9e4a-3e0177812051",
        "name": "Clear Cache",
        "item": [
          {
            "id": "df40859a-de9a-4bfd-9188-ff05abe4a535",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4200d84a-716e-4f77-acd8-93775e06d21e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a07c6a64-56ea-4bd7-89f0-b93d3a25b379"
                }
              }
            ]
          },
          {
            "id": "51446ab1-3a2e-4c1f-8319-07312b5f45f4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64937cad-3fd9-488f-aac4-9deed427c05d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "342ce0f2-b70a-45ea-87c6-885f3b4f6522"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4d430293-b770-46d4-a954-cca6ac0dd824",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "eb2fb13f-7995-449a-a7fb-5dc87d3e48cc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ba8b0bf0-b06e-4aa1-a579-a6da30fb0f07",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eecc62fd-1206-4657-9d6d-ad03ccf77694",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cbf034af-dcff-43d9-928e-07cac0e78986"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b235dade-6c28-4b8f-8199-0270e1535383",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85af119c-0111-462b-bfa2-13be13091088"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf94d711-8058-4988-8035-6f0c0f29e873",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "173e36f0-9781-4f5b-ae79-6e7d1342219e"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aca7db28-797f-40ce-8f31-e3111b760ea8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "22eb8f60-ef1d-468e-b96a-3a5873838419"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10a1ad01-b5b6-4f21-b2d6-5ea0c9390089",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b10fe77c-e8c5-4fec-84c9-da4f467350dd"
            }
          }
        ]
      },
      {
        "id": "18b6407e-b66c-4249-ad0b-8fe4a7c13ee1",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "f610c565-0c72-4387-a28a-153a4e544679",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3ebd24c6-85fb-4a9e-b265-0adeace92721",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ca6ccfdf-5614-4f41-b5bc-846abc016b39",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6b4a05-e008-4473-8ef1-666578d7a88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b42283d-bb2b-4efc-bcae-60462fdb35fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abda41cc-f317-45ca-9793-81b46d9280b5",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b29338f-68c7-4c0f-897c-d38bcaea6591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c525b788-33d1-4810-879e-e02b42c36908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95696ecb-9a8a-4ec5-9729-b8c2898276d8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "212a8db7-3624-4005-869f-870619a000a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75afcb59-da1f-4386-a136-2cce2250613e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "68d5c058-bedc-41d1-a42b-24064d3c91f4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "55a1129c-f8d6-4036-a4e4-ce612e111766",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a23125-070b-4604-9b82-fed671bac683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "24f5c968-9e70-44df-8278-05de6bbad9e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137f3f18-76ab-424a-8336-6472dcb18406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b8108b-9a99-4731-acc5-1bbf1aacdec0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eac01c1b-80a3-4b54-a217-df22eca8b3ce",
            "name": "Positive Testing",
            "item": [
              {
                "id": "099ec93b-3d59-4db2-a846-7a462d09a59b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89ddd222-7dfe-4126-910b-d9c848496f9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "2e3d127e-704f-4909-9afd-29b0fc04e7e0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08f3e71f-e18f-416d-a0cb-fa27a6b2c712",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "6beacd7f-6118-439a-98a8-a0b2854ad28e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fb212c6-602b-42e9-b03b-3d1bfd66bd52",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2aa8c33a-9f6d-49a7-9dca-cf7da022315b"
            }
          }
        ]
      },
      {
        "id": "cef862ba-474b-40d3-abbe-9cc3980e2916",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7154cc14-ab9c-4b19-b131-46b371840b68",
            "name": "Negative Testing",
            "item": [
              {
                "id": "56b2a1c3-612f-4d43-a346-65d9b54febb1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "06c1ffb5-340f-4595-921b-4f6be668f093",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97a23321-832c-4b78-b36a-d16e86b92ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2890fb-e412-4216-9c62-9620183df976"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea777fbe-8e38-41f0-93ed-cfc0872b6212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f5111e5-78ff-4e7c-a32d-fd818967c677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e60c671c-b255-4aae-afbe-8f38719796ed",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6331292-70ab-4a00-87e3-b39f5626d9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "facf08df-65ad-40e0-b2e0-25bc3695b4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc27616-b08c-42e3-95cb-6d09eb88f4e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d650f85-90b8-4a49-b57c-cce343afb7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18f1e1d1-deec-4fd0-a519-d40c56d055e5",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba48d188-c1f4-4624-a16b-3f7efe48b624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f387dd-beba-4e08-abda-016b5e3da9f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1a4fe73-b80a-4fac-a8ea-9118620eb5ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a15d457-9699-4960-8239-88e87abe8bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2fb8b5-6fd0-4388-b475-7138fa1b04f8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f219d3-99a3-49ba-aba7-4314d8a036ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0eace2c-b898-4315-bdf7-96e9aa3bf63f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c1a3a0-56d1-450f-b81c-b80104575966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c50919ae-53f6-469f-a498-4353811344ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cbd50d6-e62d-493d-8f42-a95d6cd0601a",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69740833-6185-419b-9fea-599c9f4d91e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1588955-7eec-4c55-9561-d6d150ba138e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80c7635-af2b-4b7c-8a20-f9ce45cd7cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4c27e2e2-c462-4fc8-8226-a977004db476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c3ab71-78c1-4ad9-a701-a1b80d1a2d3c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926bce3d-6c02-42a5-a825-ce3d9b4216e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0d266b8-d245-46c6-90a5-7d357c736f57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4373117a-9889-4438-8dd5-1f704ac164f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cfcd6226-1758-4838-a32d-d6a324838de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f916bc4-2216-4582-a7c3-c83fbd62bed0",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8dac4b4-4fb6-4589-8b29-35b54d9ed292",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "074f39d2-9844-4c40-95ab-97180c57de7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "528f93f0-162b-4ce6-b0f1-ea87ed2ba9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fee2164a-5fab-4184-b0fb-c76bfb5474fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17575336-3276-4aef-9133-f3bddc928be7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0308898-2b37-4796-96ab-aceb1e8eaf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec491150-4093-4812-b9ac-940fffca5de6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48bc2f9f-b4ac-4f60-86df-04d919ae9bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "77898a4e-28f4-4bfe-b0bd-3b3a54b58812"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa463c3-4ed5-4c4b-b675-0a5b7afaa3a4",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "329e5136-93e0-427a-974d-cdbb6a90cb31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "959269b0-6d3a-4840-8bb5-e4ea679c0764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0786d6a7-9a4c-4b4f-8593-750671864098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02fc32d6-32fc-420d-aabd-57a57fb065e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616c7bb5-6cdb-47c9-b551-d83b2079c3d7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c7823a-8f43-4dd4-9982-b7861be81706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e877b1f9-14fe-45aa-9ea8-d1c16e96efb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e495ec7-e370-454a-a94a-08d14aa57c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d052ca5-9ba3-4533-91f0-5a676f03006a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07901cf7-3788-4d3e-b947-5e01cf42017a",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22b8ab07-ace6-4201-81bb-14d47319fca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "127be642-ece9-4df1-b6c4-44c13ab7bd7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be535c57-bf14-4027-b32e-698e8ac0144d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e987de0e-910f-436a-aedf-70513dcdf8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a8b7cc-434f-43d2-8657-e5d3751395b4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d8b204-29bc-4019-b2ec-fd9cc252b372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d046a762-7ed3-40c0-8d58-d408f57f4ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8913f6-af5f-49db-a80f-c3c1d2494a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "795abd72-848e-41ef-a2f4-0d7b5d7a7a3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd434a55-05e1-4668-8673-3aab2d13efad",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5636fcf0-5d33-493e-ba67-c701050fe25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f07869b-6583-4221-894e-bb364494a031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e063843d-7562-4816-8c9f-fd23715dc165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "407e6ecb-a377-4a1d-8111-e5e0d9dbccb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0571be-9f29-4bdd-80eb-8fc5bd953fbb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3aad5a-0d8f-40c6-b3b2-fa8eeb38f301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd11099c-a582-4eb0-b119-ab1f6607901c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e876ac67-1bd1-4aeb-ab04-ee4eb8eec2c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5a942ad4-46f2-4887-8180-31c954cd2f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d02707e-1f79-4e08-842b-8a4cc77e47bb",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b610e310-d1c4-48a5-8c31-9dd93de920c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fa88f6-3c3f-4b53-8332-de2bf0212d04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea14d1a5-c51c-4d14-b1ba-11161b564191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e448f9cb-eab2-4bd4-860a-b2f060685c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88aa570b-ed83-4b05-af49-bcf45fceb2d0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc1fd308-7600-4395-a51a-63d9b7df5269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "797fdf48-ddd0-4ad2-bfeb-7c61ed9bfc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4689be6d-7524-4d47-88a5-e95baa389e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ad5a354-245e-4e39-8cad-7b93496399c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4426c8f5-1738-491a-9af7-de25d0e01aa6",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9a0602f-adc2-44d0-8fa1-ee0a76a447fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82853f1c-d035-4f46-8848-8c119dd3897e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b50a90fa-20ea-4e95-a03f-696863754a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5916cc67-79e9-48ce-a80c-4c4bb1f76b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ec5dd2-0bc3-4271-9d9a-e3f4bcd59093",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d60da52-a37a-4e88-8f7b-7f3019b52a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19207ac6-d312-4fd4-941c-5d42b3f82034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df5fe01-6f8e-4c6f-a3bb-ed0f0b2c0507",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccae06a5-bf3d-4915-8572-4a65edf6b51f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c88a1c4-f792-4386-9168-5734c4710b15",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ba9988-1960-48dd-9c92-722758c2a94b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7404d1d1-0178-42f4-a2d5-2db44dab0bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6818781-9227-46e6-8c52-b853b8e378ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bbf3bc77-9014-448f-9b5e-3c16af24c2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dca1935-1508-4d9b-a2d2-9383966b4e56",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6620caec-3f5a-41a2-8164-cd8ccee9272b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "888b0fe6-cf8c-4fe7-b19f-3a0e72235bfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2719fe-0843-4ab1-9fb7-1dc248ba6ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c73625-463b-4ee7-8a0c-cef96c2673b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e784bcc-73b9-4abb-bd54-c2cb7aceda3f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "addf8d14-0a18-4ae5-b3c2-7bf99286e8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45670d86-9f9e-41d7-8ce2-d5b3d4ad7cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2402da-edb9-46fc-8ed6-af3b62c911a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0b37ee4-721b-474d-a8fe-778eb6435f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb27da37-9159-4238-9178-cd2ab2f86357",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d49448-af87-47ef-9969-0d5eec97d8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abdffcb-7c1b-46c8-9883-c532212490d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "333551cc-c7ab-41c9-89a4-919acc37b386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e92e887-7273-419c-9710-f49b36f48a0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ace78e7-0104-44ce-85c9-4b620cc1841c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8109833-577f-4049-bf97-e43578c259c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3108e3f1-1957-4dbf-864c-6c9450c9ae4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9e9f1b-495a-4d41-8519-967e05fd886e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2685491f-7637-465c-9c7d-7c87c82e785c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6157c61c-37d8-489a-b31b-826e533dbd53",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43df7cf6-52b3-447f-9fce-a652faf7209d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb1b3694-aa30-49cc-8278-62e75e533b86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f915fba-4495-43fe-affb-379f09fb6de8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c63f8f79-89eb-4947-aff4-f71d9272f187"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a31c1b46-570f-46de-9e1a-f3c87ef36154",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95f3bdeb-dfc5-4fd5-863b-3752e68308f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "969b0fe5-b334-4e1d-9233-fcf0f522ab19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51baab49-8bdf-48f9-bc8d-db18fb319646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24f193b-1fb3-4ffd-8b7f-ce21194532e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1434f563-9ca3-4583-9b25-23610f5a67b5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f824dd48-d4c4-4812-9968-291ace7a114e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369cf763-9f58-4a68-8a07-10f4990b0a93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1171ade5-ed98-4e73-b84d-3a45196003fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa70d72-bc2a-440f-b453-a3c06048fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c931524-065b-4694-9042-9ced8ff9df94",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860a1fd1-c7bb-437c-9150-040102a31f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f6f0fad-c26e-4178-b729-6b2840ee3f09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98f09ac8-6716-4083-8279-273ee22b72ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "07986d7f-bd49-4089-a04b-7f1ac16dab91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5639d9d-3220-4621-b063-a5f662c7aa4e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87fd71f-804d-4f1f-9631-255e6e77cdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2c70eec-d320-494d-99d3-a67e62fa04d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd947c1-6210-4d2b-ac56-1234f0f171a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "deb410bb-2d62-4d48-8abe-78013bb0e718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dee700d-1ab4-47eb-8aa9-bc909f04f039",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6b5018-03da-48e9-b802-f3128df4ea36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b411ba-f930-4fcd-a56e-ac71a7e22a1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ed3e21-976e-449f-bbd2-01dd5f3b7290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c2c894c-fd3b-4fda-b2e7-c5e759cc229c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a043f3-b54d-472d-a7b6-ab331b9f4523",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bd4b8b-3ea4-4269-9fe3-0ef12c320f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94cd8c0-6d7a-46de-ba0d-8b97dfb088b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9590cfe7-abec-4c52-8fbc-9153e79f82c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e895564-0cd5-4e34-ae86-bbd8ab7b3584"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0349ace0-78bf-4d84-8744-547ded2d9480",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcca2dc5-9341-428e-b7ed-e96a83f4d2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95dd32ff-ce71-451f-ab7f-3703d0695e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1f8aad-451a-429c-bdbf-aa5586b95a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87faad54-11ec-4806-8f74-3e6497452c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7af55c9-93ef-4ebb-8fa6-ae2b99777de2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988fd2f1-804a-4448-815a-4f41bef71081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630a8b7b-e1ca-484a-a704-311357ed2074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8cc804-b625-4662-a798-36d97f74638a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "630b3d0e-cb16-4319-81f9-673d51b769e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eca0bda-d9cd-428f-8aba-cdb1fb58498b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc15909d-9579-408c-b5c2-455a8dc4f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5291c96f-62f6-4df1-9591-ac39bd9d18c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c3c8a0-a753-4dfa-ad16-f838c8ffa22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0d5c22d-d672-46a4-87d6-08702caf4179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9374c75b-5766-40fe-ba7d-92e264aa31fc",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e226ff-cba6-4584-b602-f398482a877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5098e886-0472-44e3-8b8b-7cbe20bda11d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00601263-f724-40d0-b8be-d4691fc1226c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6999d8e-787b-48c1-a571-36461d5a15be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fc4cd7-0fe3-4980-bfac-f99f2db28caf",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d3d0de3-b47f-4086-8360-e8f2c05498f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8806f8fb-b8b9-48e4-a5ba-63930a06df35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b1df69-5155-482c-b996-534d64ab666a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ac3469-1aae-4df7-905c-5aafeda00e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d88351-89a0-47d2-a67a-3081f984515e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "655b4f8c-eb34-4a79-a1d4-fe8bfdcd2dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "627cc9c4-3ef1-46bb-aa0e-eb2e7f0acff1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa460461-2946-4bfc-977e-78b96b66b1ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5d454b91-8e85-431c-8019-6204e34d456a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e1ac75-ad27-4d1a-858a-ab4db4f86137",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c03cf8-55d6-4170-bcfb-5c3a3ac4f1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173487eb-c9cc-45dd-992a-6250cbf91812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765c8367-7905-414e-8b87-610faebc8359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d770149b-4436-48e7-ba2a-9bbc27205354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54684624-6d71-4d71-adb3-7d9ef69e960a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70f538c-3141-4c2f-8c6c-0d8ccd9dd0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371dae89-1228-4086-9790-bed868179e26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b70e49-29dc-44ce-a81b-d7055a128be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "845bbc34-d859-420f-b8fd-242087f6d359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ad1db7-ac62-41b8-962a-7a074dfce2f7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea6f545-a953-41b2-93c1-b2c00c175432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed5c180-e85e-489b-9b90-e6f175010ff9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87da08aa-36b1-4f26-afd0-748479fb5612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b2ecc1d-193a-4a4f-bb3a-631d69de8af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d26c35a-19d2-4c75-aab2-8d572b8df303",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf2e6cc-2a90-4890-bcfa-4d18d7e42372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "756bdd7d-65b2-44c6-8a9c-3c06cac667c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffd511b-2849-44a6-a054-0fcf7c641e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "73d7f216-be46-43b4-affe-6d5274d0863d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1663781a-15d1-4b2c-a6f1-5185dd595b8c",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a56b77c-4b9a-4102-b167-5642c5e29e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9539c00-aa83-4b77-bcca-eed6761ede27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cb564f8-1343-46d9-86f6-7753488cbbe4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c19ef3a-f513-4a7d-b9a2-403c72fd3231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f4bcd2-6a9d-4bbb-94ac-2d7e44f3ef4f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87c1013-c376-448c-95a3-ae0f49987320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44050e5a-fca6-4448-b0b4-c2a3668f61a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251c1464-6f29-4013-a4ad-1da96a02847d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fa88cc71-ed6c-4815-a4e6-9c33bd6ec877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12891dce-bdb0-4762-8107-6be7901f10ad",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf03f7d-414d-48a0-a61b-6919de91c6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57b89eb2-d9d2-48a6-be6c-01feeba6a2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e447b6-3a78-4bef-b5c6-dab928788a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f694bdab-53a0-4cfa-9a6a-a63c5c27d540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77a3651-8296-4aa1-87e8-43259089432b",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678d1980-663f-4397-9573-6176a21271ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8440baad-75fc-4cf5-8a29-16ab8509bad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0b4ee2-1c52-4eac-bc4e-17150c5cbcd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "09a4d188-3db7-4ea9-8e10-ab7011ab7309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8736127e-d6f0-4229-b42d-e607115811f1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccc0bf7-a108-430a-9f36-b848f2cbea6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8601df-63df-4543-9f6d-8eca94b368ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fccd5ccd-6920-4123-864d-ecc998492052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "caebc4b8-bef0-41c5-8374-a325dfb270bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ccf506-b361-4b7a-92cf-87970f1daa4e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e24605-9d54-4b70-8b9a-ae69a0eabdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3db18d7b-83cf-4523-b2fa-e85c66046981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ff2607-5400-48f0-95ce-b94e8905710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "19817505-ceca-4595-bbbb-10f042d8c8ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f84ace27-d233-4d92-bd64-7eec42bb29ef",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f96120-7893-4bed-a1f6-e4e5e23caa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "531b0495-8f9e-4997-8b88-f6990372c89e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9309967d-63af-4be6-8a27-a9451710608c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5e367e-6fd9-4738-9c0f-7370d544268c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e92b3b5-4405-405b-87a3-0bd32b5ba9fd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6490a6da-2f4a-4b2e-9e4a-bf5098616619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5f70e0-d15f-45da-a610-fb1af7102b4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083ee895-8bb1-48a7-a50d-308448dd1bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dfe9eb3-8ae2-452c-9bfd-52d3abc267d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a41afb-8ef3-4e1e-89a7-51052433ac4d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54117ec6-b1f1-4aed-9c58-ddbe936a4c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62187c66-759d-4289-9b8c-4c6990d43823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b538f6f-ea37-4406-8804-11f6bb44e29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "696dcdc3-fc3a-4651-9950-543b5c05f858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccbe95e-79e8-4245-b8af-c6a486b54c18",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d68820b-00e5-41c1-b8a8-ede3c2f76817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fab7509-3eea-4378-b474-80e89e2ab142"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ffbb9e-2efd-40a6-a835-f75c503c86a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d15e7298-f7e4-4725-9da0-34b93d612d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85d286f9-b541-4f99-8e65-0c951591b710",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ef41a2e-5cf4-4bff-9c95-4543dae8a450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf1e7c25-f96a-4854-81f7-6ef6f081b794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dea8f50-f1ab-4cb0-92a7-49fda72e6403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd68de83-2d29-4133-867c-207418625830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e0804ab-6029-4931-9da4-18ab48faa3d0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1738a811-59de-49c2-be5d-d010a8805743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e89057d-57e7-432d-a617-38cb26405b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6988ffda-66cd-4ef1-887f-0e3e36de225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4ed0c1-0fc3-4070-929c-282476f12360"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c77737-ea33-43f4-8436-25e89271ad7b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39352f55-0243-4c1d-8791-58a270f1003e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "365b55a2-f7c4-417d-916a-b9b1cda0b8b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bc12f2-07c3-4eee-ad53-a451dfbda6f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c84ca027-eb6d-40c1-9a68-7e83053348de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b0cec0f-90b4-4c7f-9144-0a48d53a055c",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf03befd-cc50-43eb-8d86-218575fc76fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1013caa3-4cb1-4ea4-bdab-fe13afe1c10d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f97f1de-3c92-47fc-9b35-4d7f686d8d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a1845fe-abf5-40bd-adc4-39920f9c8fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4146b0fd-5f7c-43a6-bf2c-6d03de5f1b96",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d00d233a-587e-4e94-a402-ccb34b9726e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94af1d3d-9040-4480-8e9d-e03851a28130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf437210-1922-4bdc-a1ca-2bb5eddfc460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c3ef38-aceb-487b-9360-a7bcb1a399f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f73986-fb6d-447b-bfb7-2e33d3dda240",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f568bb13-cd4b-444d-940d-38a795979a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a0344d1-40b7-4fdb-a8d5-82f5fd20642d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7d0db5-1184-4e83-93f8-ac9c0bc9b187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5eef19f7-39bf-4977-9efb-9ecc67df1459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a74d91a-6140-4c61-b0e4-a2054118828d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206b3150-665a-4e74-aaec-0f54669fff4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f27fadb1-9c50-4900-87c9-f3e28ab62d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2ef1502-c012-4873-8656-317d21f1a3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6e84558-bc7c-40b1-a51c-654cd09dde12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9028632d-f1f8-4429-a654-35968cc3c909",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73076c8-eaa6-4ad3-9a4a-57443fa58230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1079587-5471-486a-95d5-852fc99ae243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622067d9-1f31-432f-b339-3158fe3eb7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb044f29-4e1d-453c-a124-9f61e98fc37d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d41be5b-64f5-4050-80aa-3de512295391",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84c68a4-e610-40e2-ac7a-4c4b0e2fdde3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c504ef-8895-4d35-a701-b40a1393c977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d04a2417-3df7-4f24-b516-15c42f0fc006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf067089-b50a-47ac-bb4d-201897c849a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b6606ad-9ce5-458f-90ba-135e6bbd9af5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "394d59ab-79f2-44a2-898f-1e4aaa8a912d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f6dd0d9-dd4c-4871-a7d5-be2fcaf07003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f4445f-7779-4bae-a428-d08c1258888a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "093aa532-d221-49e8-91da-58cf523b082f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bf96683-d052-468b-9e38-e085891ebb42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1d0092-fe4d-44cc-8f25-580616b0ec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76685ece-41bd-4cd4-9f54-94bbbb7df902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f9538de-8079-4a8b-b77b-93cd0fff0e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c9a108f-39bb-4c51-ba5e-025bc4fec916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65e7f6cb-b71d-468b-bca3-8e7919c9009c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c9b2ecc-d0d1-4afa-ab30-01f4e270563c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951a26c0-ba59-422d-a53c-d8b30a261050"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77cf216b-1389-4421-b059-32c97d710e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a92812a-3d44-4ea4-bb4e-496c864e4e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf340d2-0a28-4e40-ba46-423d2ba00886",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3f21a8-8122-431f-b274-38ec0a80bfff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfc8f2a4-ba25-4b40-904b-161c461330f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69083b2d-d912-4171-ab30-67fea50e76e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ecc9a9c-81a5-4c5d-9780-f76c9b2cf34c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6cd68d-389f-407d-ac83-87b9d7c68f3a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "380f1293-52c8-45d0-8fa4-a1a9f801d3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90710c63-9429-4f6d-8a9e-0d2920c81789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98e912e0-b03c-4874-95bc-0e2228915f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c95f524b-b6f1-4fb1-a469-73c79809be29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e364a1a4-765c-4658-b104-e3210742520d",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "267e92e7-b08e-4141-ba4b-0a956cfe8568",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb80d30e-81c1-4449-bca0-c9ce198ec969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f65379e0-7852-43f2-aec7-7cdf3c2c1f1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5040ef6-b3ad-4ff1-a418-6c2461f46252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea111189-fb3e-4cd7-b79c-2cadbdf6b310",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d565f43-6b4a-4e14-abdf-23b13e058c8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf4baf5-2b24-4dac-848c-f1c62ff7d5ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60f7ced9-6769-4757-bbba-9277f854e316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8c98dec-7042-46d4-9b5d-a4533f5524bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f023f4e6-0886-4cf9-a817-c8618aaf7a58",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5818abd-6370-4b28-bc20-28d8dcb9ae21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b427846a-fb99-4c05-99e6-43a2a186c29a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeacfae5-51d5-4405-854b-29634e0641f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "614fff86-836e-485e-a4b3-6ad94b017e5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9e4a24-82fe-4e6a-adf8-7055fef97b33",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91791fd-a0c4-41db-8400-3077c22d43f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ccabb61-8382-4ba4-9a59-75014f030306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59447996-3b2e-487c-9c3e-e8edb9e4a251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc610a5-2e12-432e-9db6-49846fea3658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba7483a-70ec-4627-8ab4-2d6c6d20b873",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca806060-8915-476d-b767-2020b164af3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93ccd31a-5f10-4f02-8152-cf659371c199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdf2569-cbcd-422f-b298-a614fc991544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b976d8-f1d5-4409-8b3f-6ee09324d35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f85eef52-1ff5-4ea6-8bd1-644de10e245a",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded4b97a-83db-4b1f-a0f3-a5935b5e8753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57063345-aa61-4b71-be4f-72d2d0bf21fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d164f93e-13c4-4846-895a-d6ed43a8718f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "782148b1-76b2-464f-9795-5b47e8a9b9a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d92119c-f95f-4bd8-90cc-343ed034e8fb",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d02283-a506-44b1-b4dc-7c05e9f730a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41b29e9e-206e-4faa-b088-d9f3fc40dafc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63859da-9517-4669-9c2b-dd770fc96b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "118a27a0-1761-4126-a91b-90f5d7600478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19994c44-bb98-4e0b-8418-8ab299254c5d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f0c00a6-e68b-4b85-80f3-718949591645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8e82d0c-60bd-4147-9d05-2d67de8c25d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "814a92fd-71d4-4127-b8a0-f6e30de15c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "300dde32-fae3-49ab-a650-5866d9df9980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c763d79-146c-403f-98d8-c9e15c32d9cf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c4973cc-46d7-4a6d-962d-0b6f5dc97978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75916279-19e5-4d62-969a-9fce1d325d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c31bc2e-1b87-4323-854c-b76966807d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b12daecb-8f39-4fc0-a217-3c78e3d14988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ce87ee-6aac-49a4-aa55-8b82592fa83f",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508baf9d-dcad-45a1-9554-a3f588b11146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7943bbd-ceb8-4798-b3e5-f9fb88c686f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb79b9b3-098a-4e16-a519-35d6a0ff6924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fcab3a2e-646e-43e7-aca1-c0bfdf0206c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac5b12a-3aa3-423c-b836-a75caa8770f0",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc7f6f9-1a9a-44de-bf4d-3e1f85ab1eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d18c7f64-cbe3-4504-b6ef-9b262e4ffb01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083c24ff-7c56-4f1b-89ca-b762d4e93012",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4e14fc-9b4a-46b3-8177-d95f2a8708ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adfad76-6868-4af2-93bb-c8a504ea2958",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9b83ca-2d84-49da-b2cd-e5df2ad7baf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a37726-e8e3-4c3b-a791-b4911e4afc05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dcc1979-c01c-4c02-b5d1-a4ffd3bbbe28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d4cded-3494-461b-813e-809cfb017477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9b5f13-75cd-4faf-97aa-37150b6492fc",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b2a2bb-0c0f-40d2-b4d0-6fa56b001a53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d94377f-c022-4985-a1b6-c58a255a5d88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b45b51cd-446e-4e44-a3c4-fc0d58f7ba05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3554e5d4-a544-4aa6-aeb3-478059a803ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d5b429-fdc1-403e-8c9d-835ab026c406",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633bf110-8ee3-4205-8bfb-832166605a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4779f291-d57b-4921-9fbe-e7d0e47f49e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "209f77b3-4248-4608-8e7a-98d24fbd5244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aee556c0-71ac-4f73-8357-f9eca932c773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05354c75-a470-48af-b26a-2910f61c9180",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c05461-5a70-4bee-a7ad-4690ba601e31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c507dfb-cab4-413e-af5d-580a2dad6516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af4d8d3-c147-431e-a523-5bf02598231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dde252e2-5f45-4aaf-bc1c-7ee3c216acef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f102664b-a646-4210-82d4-56fd5e71cbf1",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da7064da-2f3c-4a19-8ae4-98d755ec41c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1aeb85c-601b-4f44-8a72-50ed2aa98a87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6710a25c-4d75-4db4-8ba6-324baa38a94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6f31cb1e-36aa-4ad6-a759-0366738c7c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1792e937-2d31-4f62-a995-5ba71338a0a7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15fce111-3172-4791-b315-bd529e7f8829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d555b8-2dad-44dc-8927-ece297a27d94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fb449e-7c3a-4150-b1e9-5c1b2bf8bac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "253e4dce-cb2d-4e09-ae8d-8a5a8fd5b736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9b50ad-d35f-4495-9803-f6189e16a1f5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f631eb-2acb-46bb-9da6-37d6490b6feb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "664ff2a2-56eb-40bb-b360-e4395fffba92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "251a2960-a0b1-4065-bfde-1983c121a6d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8077230-7b6e-4d37-b5cc-86d68535db9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fd49ffe-621c-42c5-9e82-0bfb963c811b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9a4e57-5697-4b1e-8777-04dd49930369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9a0d94-f88e-4a8a-9bc1-e0c37053cc90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e47bfb4-17b1-4f87-9bcd-96da885a667e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "347b3e90-adc0-4bc3-aef4-6a050d37a091"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c44a5de-81b0-48a7-b3da-07d41eea1600",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70da5199-02c6-44fc-8111-715544cbe07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8b1908-19ef-49f1-8ebc-fa155dd541a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a38b39e-4d7d-4ec6-978b-b4bbcd4c1a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "456ebd99-af03-4dcc-a102-b0865187d993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da21730e-a1aa-486d-bb19-a2c9315a1594",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcd2250-20cf-4b52-a767-0ccf4157e7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237f612b-1131-4729-a22b-586cc8946dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7454dc-3986-4f68-9bfe-3e65b2a526a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4337ff2f-aea0-43c4-a017-b6bdbddd083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "595e0c76-b1de-430e-b629-96bd1c885a0e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e1dde6-86bf-4ef7-9b47-c601bbc771f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cba92e3c-f487-4a32-af51-ebf3fb3088cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a29060-79db-429b-9294-729f98eeefb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd7cacaf-59f9-4935-a448-4522cd860c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9e43ea-230f-474d-b194-cd9f3efa534e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8484ea38-ed72-48d1-98a5-3a65149d5ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5848a531-9157-4568-bbc5-c1f85df7292e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79b88a-2108-41b7-b7ad-267671770b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0260c44-9cc7-4039-9f88-f65a3561f3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1d8ba44-f338-4c88-848b-01c68f09e70f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a70720a-82aa-428d-a53f-7d714d643ae7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64819ec3-7230-4789-bbb7-4142f9e3acdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a13eef50-a074-4027-aa86-b5c198cf76a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "99b7a698-fd58-49ae-b658-c7413746810b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b065c6e0-7d29-474d-a5d1-c714e14be4d4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda9dc90-88b5-4b85-8a3a-083e86c93f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd5e84c9-ed3c-4b51-9610-c2978aaecd71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4b85779-5fd5-4062-bb0b-7591af505aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "05cb7692-8fd2-4d72-9bb5-936ee5be6ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa9ddc3-df7d-4547-bdf7-f4afdb229434",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e724499-5bce-4edc-b872-61f84cb94271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4c6d75-9422-45be-8113-38881ef44439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb740922-5b0d-4d25-87a4-ea05d4463731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cabd14d7-2847-4b8f-89c0-3df0f7905355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c579081-71fd-4d45-af66-6adefcdc55c8",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a4bf19-09f8-4a6a-b711-372e5fc89d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcd2937-1ae6-4ae9-836f-d43249aac897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25707812-45bd-44eb-a1e3-0c13a5d62446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e029220-7391-4c38-8752-2fb9af19b421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5966674-9e6c-488f-b4e1-2bad880ec9a1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2516cb52-3ba3-4c31-a99f-385e26a0a566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "e37d86af-cec4-4aee-a33f-3e040f2e76ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4763a4c1-6805-4824-a8da-a98db55cd629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f827cca-aec3-4c04-ab8b-7301b22c2484"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9075ddbf-cf87-4600-aee6-20feb5899417",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a87fc8f2-2ff7-4b7e-b3f4-e1fb985d9f09",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "257b41ff-486c-4924-9853-2718b1c51e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "49ea023c-b06f-433a-b6b3-a2beac393d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee80106-88e5-46ac-b52e-16c572b82f16",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcaccdb2-2f18-4849-aabf-e46b4f9148e3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "42089cb4-4744-41da-b738-aef857499b1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6944c3d-4598-43a8-8b26-0c43785a4ba2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fdacc99-12d1-4637-9460-663dfeba44e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30ff117c-84c0-43d7-98cb-2faa8da0ceaf"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e3bbc3c2-c026-4143-9e04-e4298349fcac",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a0874f8c-e94a-4d6a-9743-d5ae8fc2b6e7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4973404f-dac7-42f5-884f-db06079fbb0e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fbe91510-8f59-49c1-bbc3-5673921b7375"
                }
              }
            ]
          },
          {
            "id": "e9d5b93f-5bd9-4418-86b3-73a9bc8092fb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e4f3409a-0fa4-4e77-891c-d2194803ebd3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "059fa1cd-cb08-40e1-bce3-71d3a962ed44",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e4aa17dd-f508-499d-821e-315eac997c23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db59d2df-5939-45b0-80c7-f708b0b60c34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6335da43-72ab-444a-b3bd-2bc38b37e3f2"
                    }
                  }
                ]
              },
              {
                "id": "e2a71a8a-021d-4386-87f2-e9de840a3f57",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c9f3938-87cd-4cc4-abd1-c374680b2590",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "daae2f6a-0caa-422d-ade4-83b1d7eccd43"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2f14cb4-144e-4519-8f4d-c647e2e36305",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "51af8093-3e40-47ef-b933-ef5ae52aafe7"
                    }
                  }
                ]
              },
              {
                "id": "6611899f-1df3-459a-aec3-426b765d0184",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "88b9d2d4-8fe3-4bc0-856b-48ff83398f37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "90180eac-4871-403a-b9a8-811b9f0a1d69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ce4645b-cdb9-4ac9-8b15-c11042308d52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "04467d7f-8e93-483f-9060-46ae73fc1ef2"
                    }
                  }
                ]
              },
              {
                "id": "d496494e-09da-41c1-87b6-63631a1c7a06",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d744823-971a-4e42-b9d8-75285c348531",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06310795-3dc8-433e-a053-8208109f0e9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "023372b0-4f3a-45ed-8978-14acf155e245",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "9b81a1cc-99bf-4e4b-9b7e-8115e75e6e9d"
                    }
                  }
                ]
              },
              {
                "id": "2969b66c-4ae7-4a66-8c55-963153ba354c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91b0733a-304b-42d4-acbf-931a760ef3c0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "19739aae-8e5a-4142-8633-0e33c46995cc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ad7b497-8445-496d-b32c-c661bc9b83dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "83f2077b-1d7b-48ff-aa43-d7de5f3af95f"
                    }
                  }
                ]
              },
              {
                "id": "414eaa9b-2512-4440-aca4-7b96f4cba8b1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b2901ae-90f4-4c47-bede-e8755c56f118",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "666eee97-e6fb-4f08-a220-bd19ce629524"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "df74aa7c-d7ce-4a9e-9c0a-0f0eace5bcb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a3aa691f-1716-49ca-a434-04b400a446c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ec5890a-b17b-45e9-ad49-1cd55c91f049",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5f5dce10-0858-4258-bfd3-fb0b37cec3bb"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "89cd5c07-95eb-44b1-93bb-94edd391458a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60c2f0bb-27ef-476d-8845-d6bfb8a92d84"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ab912e3d-fd32-4e48-be06-6d9522556227",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "cd0e3800-c537-47b5-902b-0879607f8650"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7036a6f-6340-48b2-bd20-6b53b2419db0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "76cbb9c1-0393-46b6-86ce-6d77d765bf95"
            }
          }
        ]
      },
      {
        "id": "1dddffce-5434-4428-8ec3-bc518461776e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e3d7d7da-c7e4-4ca5-89d2-b849a0aafe26",
            "name": "Negative Testing",
            "item": [
              {
                "id": "be48d2bf-d5f5-4084-a07d-dbea81898aa7",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "31bb3b6d-3327-42cf-bef7-e5b08c0265db",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9791ddc8-0455-446f-a565-86796818a9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0eaea71-dd94-40dc-8418-2810d4f5b99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bec04af-4ad8-44e7-ad66-aedd653c7936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7c1899-bfec-4a47-a306-3c2ec2e539eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9259511a-d964-454f-8258-e2a1df0d0309",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3494d940-3f95-4345-9633-bbd880dae372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b384d95-8a13-4917-b1df-997cba5f7643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f8e2940-a009-4cf7-80ba-5cf446836a15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cf55cb9-0e3f-4235-bc01-8587f36e01c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e15c5f-50d8-41b0-88a7-e2ec845a94cd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dbd9c3a-e515-4d9e-bad0-f39101d09d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fb881b2-0d52-4208-b173-6ffec6350d7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c84d87f-19db-4721-9506-634225677922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6add0e40-8506-4b1b-b1fe-50f8d596dc91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c904c11d-cfca-4aae-9a5f-bfede91382f6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daaf05aa-815f-461f-85ab-c60e44041c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9a3310a-7edf-4087-ad43-16cc99acf62a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7f0eaa5-e420-40b5-a2eb-00d99f4befd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e28403e3-9a18-4e58-946e-960171be1444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8939c0ed-283a-4af7-9702-10fcd759b8f8",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b4334e-11ca-4232-979b-01cdd0a750f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f6ef86e-4cbf-4099-8648-504cc3ada408"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e68a58-2e4d-41e1-a86f-6ec3bcdc3f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b31a6cd5-4ae8-4409-b4e5-f5a9352a6306"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d9e149e-4970-4d32-8e1d-fe8b0c58a581",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7640ce2-741e-40c8-ac42-ae869d0370ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4e37216-b8d1-4793-bcc9-c11b959e9170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a1df34-26b8-401d-b01b-cbbe47984999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b048715-a272-4eba-89d5-b730cdcc5722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1933fc2-3a5b-4b81-860d-e98032e50334",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0d5cca-c986-493a-b4be-5f70a0964c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b9e7427-2f17-4a48-b146-c98befbdd3b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9834167a-c6d6-460e-9db3-6df5d81f9595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfad5aed-b22b-45f0-a12e-e7d9d22720ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1518dc39-f749-470a-82cd-e0bab63600f7",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61f626c-8c41-48fb-9b21-ba269cbd68f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d6c4607-3749-445a-992c-44215fe9f1f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0313b0-0c3d-4609-b7f8-eb4cc231ee9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8da3cdaf-3312-4cd7-8218-3c64557cde95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267a050c-2df3-4491-b08e-5efbbf24fb11",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3d1c56-5324-458d-b702-a6ebe0e2857c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9d6e8f5-df93-46b2-9c33-72f687401df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201440e1-20e4-4c53-ad3f-cd3781d260ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bde9581f-6fbd-4f7f-8cac-2e58437b2b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4da91f-76a2-4e92-a25c-8eee02d2bbd7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417970c2-91ed-44d9-8ddb-e1eaaf771d42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ee69a6d-8f6c-4552-9633-b2279141eb05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "272e8a86-f003-4234-bb6a-7a86cfda039b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8e7c6ad-2d56-4d31-8ca8-128961bda089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17786a1a-131f-4653-9e9f-bdfb63872058",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7427e950-21f3-4d21-94a0-7e578d0760d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d9d48a5-008c-4d4f-9931-ecac10ad419e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58cf009-05b6-4a84-90ea-0f26606407f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d42a41dd-61a9-4322-b69d-25f2c72b4236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7db1dca-d680-4019-9b75-1264c52afbc6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e13b0365-c332-478b-acc6-71ba5466a6bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616fd80a-9534-4fc1-83b9-32d4549643e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1008b6-9c55-4522-b5d7-b19b5ce08db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b0ff1f55-1876-4d00-ae3d-443645be59ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1a3548-5818-449c-a400-5db30e64e567",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b9901f-c6ba-46d5-b0f1-40472df3fb35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9105f2e3-86a7-400c-82a9-dea92ebe9baa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7fba82a-b0dc-44bf-862b-559c8a12d0eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2b268d-6475-4565-a938-f3e184bd91c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a754602-6e2e-42b6-a561-52227e663543",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5567950f-e98d-46bb-a59b-56208979cb4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ae0eecc-6e57-44e3-9a40-7397a2af4d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7ed3e9-53e5-499d-9a00-deef55c85d01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ad3106-3493-4b84-98a2-44f219a36c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c86ebef3-f5a9-4e25-b296-5685bcddc5b6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e51ff01c-b0aa-4a7a-bcd8-f41de8cd0a07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5fa7a4c-aa9f-4873-b242-926f899397b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447a1945-8410-4401-bda6-1382c2163e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bc322bb-cf64-4bf0-9136-e0193a765bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e9b7ac-d0f4-4c03-8d21-0bf78082cb8a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a6641cf-0fcb-4431-9196-c28f0ee8b3d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82708083-ae60-4692-80d5-3fb9d583ac29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3e8bb41-d211-41c9-b6d2-80e113f71e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "95ecf69e-5092-4bbb-aaf9-ef69f4661a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca935bb6-e401-4448-b6cb-1555d1f2be6b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79537d2-3482-4d20-98e3-cc2da1d33038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0361fd3-2a5b-49f9-a033-2eb21f6fa8d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb5f0fc0-6834-4dd9-bb0a-ab9b34d8bbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "308c7488-84be-4ae4-abc7-a9e1af82b589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437c5620-30b5-4752-b27a-38b02633eaa2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e85d2581-12a0-4f41-b711-c0697e9a397f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a3da1c-6c19-4f44-ab2a-a952433d7d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "089b7755-dbf0-43f0-a856-7684abafed8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb7a969-85de-4e95-9c70-74250c79fd41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1d160cd-c9f2-4c07-8caf-8dc94795f4d4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af652301-f646-40d6-983d-49fe8933ed4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbd8783-246c-4a9e-a69e-0a3caccbeb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7154d80-22a6-4f5f-95b1-9ac9dd56808a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e7c504b-c9dc-4fe3-9156-d2a8249c6484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5609ab2-c67e-4f2e-b2cf-52a3ced32c86",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c157bb-e324-4e2d-8798-5b7b369e3c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d75ad36-27c8-4ffe-a3fb-99fc72cd85b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7eeaa2-5c70-4915-9060-198cd15d0ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70d9cfca-220c-46b3-b1e7-c1422ac873d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "506ec74f-b2c2-45f5-8b11-26536e556d17",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40eb0bc1-2cf8-48a7-b915-dc966ab0d113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d8584a-45b2-43c2-a798-077fa077766c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9331cf4b-1b19-4769-b90d-fb2b61bc2f59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec37a96b-1f2c-4a04-8d88-261da9847ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0266be8d-034c-420f-b09c-4201eeae0758",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8283cbf2-b2a3-4e67-aecf-f6bf8ff659d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1db75bc4-8137-4580-b0fe-2ed9898a72cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ffec27-5a34-43dd-ba25-4eda240383f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32dc87d8-af80-445d-a5f6-dfdd9e7f3927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13887352-3cf7-4d65-a77c-0f1def4f3dea",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0508aa2-59a5-4a28-99f8-fbe962aa920c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33956434-edb1-4f12-b0b7-1c03550d4e85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "799fc242-f980-4715-98ed-26891780b798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12b8f32a-e9cb-4d85-8095-1f433327f1d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a2e216-2fd8-4a2f-811b-2b4083c8067f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12d589b8-f533-4b84-aa25-a7f811c70ad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9ef6819-cb94-4cbd-aec1-36c2e468b7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf98da9-4ea4-49e3-a6d6-375926753c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3583916a-e10d-4d63-a965-b51ee47e7947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ecd0d5-7c98-4e88-9fda-67cd08edf5cb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84996c19-3797-4bed-987e-9dc31fa58c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c71be229-92df-43c3-839f-9fc33e18cf15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e972821-e0b6-4ea1-bb77-8ab63c22b4ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "474ef3e5-420f-4638-896c-f877c70778e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb83928f-c1e4-4177-bc42-5f374f7e8700",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe5eab6-7970-4cc8-afe2-a5d53ad62316",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d270062-411f-439a-a85e-4aa065647712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d8a4fca-35e3-4336-b6ca-a2fbc2ba9bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "551bec4f-8d32-442c-9e37-0d0128969ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a10bac-5ddf-4e4c-a8a1-0f73ce39a698",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba965291-6cee-4dbb-bb38-2dd15b4b7cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0acc4c1e-fa5a-4e45-8aea-a717647f26fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da754a3c-7832-4cc7-aa6a-7e8146f20ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c918331-1dbe-4004-9720-a61e2cb5f7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3340e15a-be05-4074-a198-b44cdaeca693",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e110d92-2b26-4d28-9433-4b4264902248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f79ec5-c455-489e-a4d3-67532b95a615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab41ba6-2df2-4c9e-943e-79030f21f685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "592dd213-1950-4f28-80fd-91ac1aee2282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0833cbc-fc77-4f84-b697-8e382f0f868e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf13254-0b98-40a9-acac-bb5371cc21d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1515f993-32b7-40bd-9419-fa0ca1e953f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45728058-223a-4e41-8db4-6ec084ff0cca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c801f23-e505-4e94-9798-24c65ed4dd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fb8d93-ebcb-4a11-8a6d-b65de671fd70",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137ced42-fc7e-46f5-aab6-d9e9a89b3bae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc158586-3f2e-4c67-af57-cf8eee5fa5b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ba9fb3-2aec-4ce0-9ab5-ce8114e3aa49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb40d2e-5146-498d-89c0-005f7be4c5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d18cfe-5e3d-4074-be34-19a96091fe69",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d43989-89f4-4f29-b3d8-28b550f8b91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c514d2-b994-497f-9e06-596a085c7b58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7c5d43-cbb1-427c-9b0e-8fd7b15d45ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "555e004a-734b-43fb-8325-4271fbc0d94d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "465973fd-74d6-4720-9b89-696e9e7d00d1",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f7a0658-6820-4a77-9720-4614f70c794d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c232cd82-079f-409a-9cc8-9d670c2a971a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07dd8a75-751c-4f6e-a6ce-42d4abe9d393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c47e62-b9ef-4c25-a11a-5443d5d4b4bc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8764c9a-549d-4a0b-8f53-233d7ebd4fe0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5b2a6b49-040b-4866-b71a-69a00f3b580a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e793932-1253-46b8-867b-01876aa19857",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa270d59-506a-481a-921c-51ae93ba80e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98de7a1-54fa-4e20-84f0-5080a317bcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9a6768ba-d471-4704-858b-74a0fe23e24c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b5db10b-3393-4ed3-a3cc-e4374d851cb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b97a27eb-8e12-48ec-8f92-3f6e7b0bc565"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5329ca6d-a465-4d2b-85ac-869525293f72",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "17e0fb38-a581-4ca9-a56c-54f4e7823074"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f883f213-d50a-4085-98ea-3c117d21b298",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "480b9dc0-3a76-426e-9e49-3636e0cc68bf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "01852609-9215-49d9-82d7-075bdf3b19d8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "869a9b18-505f-4fee-ae95-714ae7285049"
            }
          }
        ]
      },
      {
        "id": "4c0b330e-8303-4799-b81a-d6c9bd16c4f5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e81c822d-f91b-44e3-8caf-e6f615b125b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e24ed296-c44f-4459-a693-3d3b1df06516",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3d63c1ce-094b-42b3-9a46-7d71ae9a3b76",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76bb8a00-538a-4816-a30b-c68d4546357e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aacde148-845d-44e5-a831-3284673e4865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a4bf40a-45a9-4f6e-bf6e-f26f5a0181d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "21da19b5-dc0f-48b7-9e96-581abfac9e8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9901b675-8c6c-499e-952b-d079b384052c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "852733fb-3753-46ed-bf1f-bcba24abe7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a13a27d-e2d8-42ec-b64a-29b9cf588f50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d90270c-bde7-4362-90dc-6c2e8197142b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "115b4b05-f8e8-4d13-bb58-255e9bed3e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "911ba689-1550-4528-82ea-4b23f99d2630",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6513dd2-7f3d-4620-bb8b-1ee943114539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e44845-ffa8-4e70-a09c-4be4553bebc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb3f83a-4144-4d49-90da-32465acda47d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b0d33e-5c71-402f-b075-7564c6707924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9840dc7-75ca-4d38-b18a-f6cfbd171ab0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2aa94a4-adbb-4bb2-8757-c39a91d96a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6ff1391-4ac5-4efa-b33e-88d944bdf696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d845c533-f67b-4935-b8a6-5ad4ec61db10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f540c288-bae7-463e-b9c6-c6b5af559eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a65913d8-366a-4aa7-921a-a1c82e901b22",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b58ebc92-10e5-4f68-901e-4be5cffa6745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "815b2d33-07de-46a9-8fca-af9a92a3a886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f501d85-ba70-43a3-b92e-4d31efbe561f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "83486222-82e6-419a-881f-ac39dfde5167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8896eb87-c897-4a65-8a5b-01387c65c001",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7187f0cb-5126-46c7-b9ff-eee4a4adbdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272cff1c-5714-4e90-a480-99a6bb2a725d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1502b3c9-4566-4c99-a85c-e8070562dfaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b67a8630-78e2-4ed6-8ed2-0fbd2ed8a144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "494f23d7-e39f-483b-bf32-163e3b40e282",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2add20f0-25d3-4405-bdbd-f83a0498445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69221517-9db5-46b9-a372-4b6a8056d95f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7277a7-5992-4be8-b8fe-f3c9b85f000e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "19877403-f7c7-4b3f-b579-7716e5602167"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ace050a2-34c4-45c3-85ac-bf056a3b6597",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a330da-428a-4401-b7a6-05300a276e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30530cee-2a90-413b-9e47-af203bb7242f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c32f63b-d1d4-4f7b-9f4a-9e962bb6478f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "160ba276-7ada-47ea-8871-643d0e764305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c6b595-d78c-47f3-9f47-bc8b1ca62d29",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c3f2ee-2760-49a0-ac48-c0ad5c8cc71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68537b2f-f9f0-4af6-b737-ef35a4b674f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe462ea2-ea10-40d2-a959-01d92a3902af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bd953f0-49f4-4039-93ba-ef67d9e588de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a04b6a3-5270-4d18-a05a-2693a75a86b5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "005d78c2-945e-4c7b-a218-70b890b210cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c07126bd-b519-4bd2-96da-60b172b51576"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "773a66d2-b063-442e-8ff2-3c3514b9f2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb61fb92-fb64-4667-8eb1-8935c4e819be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30a93298-2eec-41fc-a4b4-8edabcd9e3de",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5430c7b7-1b4f-451e-a5e9-6d509d2dc655",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b8dfd5-b4bc-4e29-acbf-bf34b8b47dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec279d4-57fe-4f05-87e4-b8089ff5f53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "7471e993-0c23-4b20-be72-4f374605967e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8daf364-e53d-4a4f-a93d-1bd3f9a6c982",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "092b8ed1-01a0-46bd-9d4d-5d0ddf3ba3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f437e105-6b6d-4716-aaa2-4666b74dfb56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f8a7a06-6f24-498e-af61-f71c1ee2a3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34404396-d149-41ed-a295-bc429319eb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a81f5b-66e2-4f79-b16b-2834e3c3dd91",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c0f4fe-4745-42ae-b61a-76e328d95d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25b40a54-5a51-4338-b7d6-6a4655cef79f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ca01d8b-56da-4d37-ace2-5c70c88ff44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0ee212-2981-4ba1-9cc5-d7f75cde5916"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998556bf-5643-4ebb-902b-f315fa40214c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99143ec0-ed18-4848-9a12-bfe3873bfa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "103f7231-6cff-4fca-81d3-2b338ab18bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e65daea9-5d74-46a5-a2bf-92233fb0ae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "097a3b2e-1aab-40bd-890a-754d63ba2174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4232e85-4eae-411e-a327-c4e1357d0778",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92345273-8ec5-4ef0-828c-4db3a76b84dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5aaca745-9220-4eef-946e-7d0e4eeaf08d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b07f31c0-9766-45c1-9bf9-8aa2e1bb24a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f08c82d-c4b9-4948-bf62-15f609814d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa1267d-c619-45e0-bf31-16b1417db12e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39e2c7f3-6b4a-4710-a890-9af4fcc92775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3aa2f7a-bb94-4f45-860a-4234a7ac0999"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "444db1e9-f1d2-4722-8466-050027f17e25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fca96ac2-a329-478c-af64-e41356f50e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f4ab29e-5575-4c50-940c-577ff2826b8f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4fd3db-afb9-469a-bf7d-f771001ccb80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd17ff09-e573-4be2-b582-5f66b4cb674c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfcde10b-bb64-4ab1-af42-cf6b7706c290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa88c735-bbc8-4c86-af5b-efc2b363e088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19064da8-df18-4932-8657-e0df9e9d8c69",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3fe6862-2345-4274-8af1-7949a4c82412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fcc8a22-335d-4072-a85e-5456f64accf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9290c02-dacc-4ed6-81d3-4f687e0beb6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "eec58b8b-61e5-4e82-b69f-5c424bd97045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0bbd466-d973-48a6-89e2-eb424495e2a4",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa0a8d4-a3a2-4aaa-8100-8358e2e5465b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d87b28-2bae-46b3-b2cb-0f7781a7ad8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e6a2a7-2ece-417b-8a58-513ebeaf9629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e90f29b-56e7-46eb-b824-d4dddbab47bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212b9550-f0e5-435b-9e03-9898cc01b456",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e637647-0049-4e6f-add6-fde229cc5738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2fe9f8-c158-4cae-9df0-b2c4cfa4dd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65338caa-fbb7-427e-9e29-29438bc44b3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58c0fb05-ef15-48e7-a9c6-a4f2faf0b05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161cb3ba-a66c-4d92-8a0d-ff92de82ecfc",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "194e0655-556a-419e-9b9d-988453863c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c59537b-7a7a-477d-9154-1ef891ee3618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb562f3e-eeb2-4dfd-804b-c30b35e565b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f31fadb2-1945-4bc9-b680-652afeb7e1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c0a5b4f-262d-497b-98f4-0abd460d90e8",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f2d096-e7f6-4600-8d71-3f07915996b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f32e6c5-56f0-417f-9eab-4f278dca5506"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "308da1e2-389b-483d-bf9e-346ffc0357ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56a733a7-d63e-4fec-bc86-d67993fadd69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e63e0-520b-4166-8537-1f087f152972",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdb8e5d-6af8-465b-a098-85f0f6da53f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7d34d1e-b048-4a77-a3a7-0e75233cc38e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66aa761d-5e27-49d3-bb36-3e01cc680b17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4ce9dee-aa49-4f88-88d0-fe5d11f7e955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c75712-66fe-48d3-85c6-cdddd18b0a61",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b85560da-af3b-4ded-8251-fdf08ebb3ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35585f0-5d63-4cd8-aea7-829f7356a602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511fa0fc-f989-4684-b8bb-4bca3f67d7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46daad8a-7613-4a9d-8b7c-00b46d215621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8115875f-1f77-42ff-bc5f-ef9218c77d08",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b2504a-8476-43af-b09a-7a4399ee84bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97753e35-2806-4ed0-94e9-c948a3f32464"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dc7af1-ea32-4e51-9ea0-b0734aa74f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801cbb4f-7042-472d-8bea-9d11dbf83409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be9dcb92-af5a-4e5b-b13c-0ec1072d4b2b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e814014-2028-4a9c-949f-f98cff37b7a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cd08c4d-1b5c-4ee5-9bfc-311f32ac1a13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f52ad4-1d4e-46ca-a8d5-3eff384ca930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cfdcfaf-d1ee-46b4-8633-d949134fcc5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "990c2caa-5ac6-4b5d-ae7d-804ca8fc5f0a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeab7a60-9919-4cd2-a1c8-0f2d3730016a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7527c953-bd2a-4aaa-b9c0-6459ee001638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8157629b-1f01-4e50-a655-2d4ae6b41df9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43c4abeb-3ebe-4e50-8c94-6e6797d08852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "314c238b-3423-48df-9335-51d0761820d4",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e087302-2e56-4600-8423-07164c473056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3081dfa1-9d44-447f-97a5-ad7a49bc5693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a9141e4-b868-4277-a714-dd8ae3320621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e2a8932-d40e-44a5-bf6c-d2dfc1e483c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18dbad7-6df2-4f49-8fad-04ffabca94d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e6cf8a-a682-4b7f-bf14-c1549480cf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc9dfad-e17e-48ec-ad41-899e20da2a8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "369e819e-47b6-45fa-82b6-29b557a1b366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e548e4c5-08b7-4665-bef4-c263961ee3f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9333041a-a38c-49fd-9e0e-e84e2d5785b3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60880572-79eb-490d-8b44-645e7ed4ba44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de2445e-a8f8-4da1-b6b2-8d507bf2f672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0066080-2d0d-4f23-ba38-e5fa06a91629",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f834ee7b-1852-47aa-9d62-315ab9d5cf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c6a7259-e42a-4b0e-8979-7b863688e893",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11ae0a-108a-42c9-af01-fbb462d8ee5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "317481bb-9e32-4479-aa97-d81a01408de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bc1528-de16-4ba2-a922-11666b3219e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "042e608d-ab02-4b0b-9046-98b07ec2cbd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c01e1e-23e5-4222-b54d-4ed95f4a3bd0",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1587d675-acda-46eb-a37d-ab9966464f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ceb1aa6-c851-4e19-958e-b67d1cb52757"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba819ce-6059-4d4e-a922-fb9b9fb270bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "03d80b74-2e6e-41c1-9df9-84cc73d230e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96039bc9-ddfb-4261-a035-150c824287a3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "516c4b9e-1ccd-44cd-946d-876dac44bd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f936a33-2088-466c-bcb7-c88b090615d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aa27b5b-71ed-4dde-9061-ddcf5358ec7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c458bb2b-0fdb-4216-9345-fd312390bbf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f84419-bca4-496c-a5d0-5d75e6e4a04d",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92a7da66-348f-49e6-8859-14c5746910fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5190665c-0eb9-4924-b547-d31b60230b00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f612874-634e-4d80-b9e0-0045d9d631b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "697c5570-a6b6-4ef9-8ff0-b665f70d9e3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110f349e-57db-4dc5-8aff-f8bf3bc5b6bb",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8963a30-71a1-4480-b113-763e28edc8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ec15514-44f4-49c7-824a-ad16b599420e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ceb3781-1a79-4479-a0ff-f6ed8fe59983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c9505fb-b11f-4e20-9e7f-4e0126a1e019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba8f7658-7f5b-4e8e-be3d-b7e38ca69efe",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6696fa50-8651-4fa5-b5b7-a36be5ea8755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d4ea9b-8088-4ff4-b5a6-47939612eb9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fe75529-1cde-41df-a5fb-da1ccb4b9413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "584f68f3-0f29-404f-93cc-31280237d151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "307f7d4d-e703-4b80-a49e-d16d8aca8678",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc58a476-9845-48c8-b835-1978f98a12f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a352d31f-8099-4c25-9162-3da50de9186a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347623f5-12ce-4893-ae5b-c61373cb227d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d42115b-f72c-4989-ac90-07dd479b6671"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89bcd3ef-b5fe-422c-83f7-0da2593f4a89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c6fa79f-c73f-4210-b2ba-d6fbd8fcf450",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05001ae-f785-4948-92b3-20b957fef69a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "25bd127a-83da-4a34-93c1-0b380b518a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a3374f2-2439-4788-b358-5be034fd4524",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5e1b034c-e460-4205-8d8a-81817f7963f1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0d05532-23bb-45bc-b13c-15ee7e232c79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1683197-ee1b-4e6f-9fcc-87c408b95655"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7642001d-3d63-4e71-a284-a31ce09ac0db",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "574265d0-87a2-40a9-bd1d-d1c928bc5ccf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a43cec15-4303-408a-acba-212d47d8c8e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "aa7cddbc-afd8-4da2-a24e-5ef16323a94f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2b59700-8704-4307-9fac-bd96132c3051",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "064257ec-5c4e-4925-850a-c25ab76aee46"
            }
          }
        ]
      },
      {
        "id": "081a696a-b6c3-4d71-905c-f8333c462dfb",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5e735669-4855-40ca-a8cd-48e6c49a882c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "275faf86-c13d-4edd-ade6-f590b915490e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fdbb76d7-40e5-48b7-8e6a-25ac414bed07",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93e5eaac-c754-47e7-87b5-8d89299d977b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a535fa-2128-4881-9064-c5aec0454a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7af97722-d2c0-44e3-8099-bdfcf9efc3e7",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a97919d-1547-4e86-9a64-cea94353d99c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27638b2-f5a1-4e29-b3b4-e39cb41607a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de48e92a-5253-452e-bb1c-abf634d475de",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c0c0bf-3953-4124-99f0-6f0616eea0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6570228-620d-4ca4-abfe-399baedd4b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657b6f4c-f78d-4383-be9e-c432c50dff1d",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b10be9-9752-4e55-90ea-e5ea0178b9df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8c44f4-2d14-43a6-8e77-e25454ae25df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539862b3-851b-4ba9-bd86-49dae3c7784a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23c80a1-0aa7-4644-9603-9ee3963a72d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436dc3fe-da8f-4728-afd0-46cfa4f8a75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22f2442c-095c-4429-91ae-06e71e9f653b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd50d81-bffe-4931-8c4f-87fe4ba00408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22dee91-dfe4-4709-aefd-dda0151a6c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02118d55-b39b-4712-aa1c-5159abae3c9c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "445dcebe-6d85-48f6-838e-66ac3cb7a542",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "476838f9-68b7-4b62-80d6-4915a5dbbe47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535fb5b0-1053-49e7-9431-991410c574cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9400a3e3-a3b3-4806-9bd1-385cdc0b0b85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3fc458-5b10-4c74-91f9-12f3f018d4e1",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ece94d3-0b98-472d-95a7-938068bb02db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03fc1127-86f4-4372-8467-9caa27f1b655"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aea4db22-282a-49ce-9f65-952c9a03473f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc55cb41-6a9f-4f9f-b654-9b12d980420a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db40e722-f7d0-4be8-9df5-7b15320d659d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da69243d-0347-46c8-b303-92d197131463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e407497b-f1c8-422e-8e94-713ff98159d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07131354-91ef-4fce-bfa6-73a646ede17f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ded2d60-4bbd-4752-837c-ef71401bb747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee34881-77ef-4d0f-87c7-1c611774a0bd",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9cc40da-9560-4411-a6cf-b1972fa5b3a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d6db378-eefc-445c-b76b-53aff58d328a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f46ef02-373e-4059-a4de-cf262ac61b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35123c10-43da-401d-9e21-a0258667d721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5797ed-4b37-42f5-b05c-279c0f043bb9",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1853999-3e1a-474b-9bf6-17946c3cd08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc2e02-94a9-4758-b87c-5719a8cd5b70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "200226dc-ff6c-4c85-8719-b9d76092b8c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56c535c9-47e7-4acd-b213-0952ee2048de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab7f65e-6671-4b34-b368-c5adddcb0f97",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bff8ad8-0777-492f-8555-63b5892769de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14674410-ca8d-4b2e-95bd-f06fa7b4eeaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5748f2ac-6e7d-4e22-8cde-95280d48bd09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49f310cb-98e7-4652-8820-d80540ed1346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402e9a7e-1293-4836-b147-9b3b16d0ccf3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f34ed501-fded-41fc-a7d4-0bed0e5bd87d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ac237c6-7944-4c99-898e-9dc2de86ef63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd38758d-fed7-47e4-a9af-b4364418f831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09ae68d-59a4-4162-8585-55ee8bba1268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7123c8e-cb17-46c3-8ba7-0408b8358afb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7723896d-4577-40f8-828b-9463881ccf84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df5dc5fd-99a2-4ea1-b7f1-7607fd852b82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae987974-6014-4c42-9e2a-019fa2ec520e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28dc9d1f-be4b-4a4b-81fc-f53f32d6f339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598c718e-1911-4298-ad5d-c3b04d017670",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac06771f-af56-433d-818f-83852aaddd2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622a2820-7392-448c-af5a-c486fc588b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e1c0223-36e4-4288-b7b0-f7aa36f74a63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37019579-8c75-4a0c-b0c0-399fe125fbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b59ca3e-c03d-4e58-8f95-e5f7b449a925",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c89cf9-b23d-4ac3-bf0e-324d5fdb0420",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d06b84c9-e834-4d6e-b696-82ce35664bf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2a0141-474b-42dc-83ec-47512d6c84f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9591675e-6187-4431-9dc4-020cd57888cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e30a5576-2803-4f28-bb75-b8d7355780b2",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44bed56e-cf56-472a-926b-3365ccce6dd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3ba503-5359-479b-a570-0e3c0ddf153d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4de3806-4c52-4258-a24a-584dc7f54cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a15bec62-ba27-4c9b-a2fa-2f523f24c99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc34703-431a-40ec-96b1-5cf81a41f4d0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbd849d-77ee-4c53-8379-8801942dbf82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5779df-d5a6-4cea-b9ed-f4e645499291"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e309af-bf5a-4a63-b91e-87a19f796785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f38dfbe-5d33-4b96-8add-1cc902e6f163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f921bc7-51e6-43ca-afe1-1b2e15edf293",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8856a381-1597-4fa4-ba7e-5ccd713365ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7caabfe-0925-4792-927e-d5e8d6d3b986"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5688fe-f178-423b-b661-cd8deebdaa78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b94f04ec-964d-486f-890b-90bfd588e5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa75dce8-ee8f-478b-88a8-ebd69a6f61b9",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0929a2a2-9b53-48f8-97d2-cb283b9dbf07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7877706-596b-470a-8777-db1f768024c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8560fa1e-01fd-43dc-9fdb-0598c15a43a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce0df22-c196-4f10-a4a4-c6f1b7d5d7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a612bbc3-e989-43ed-b6b0-193afdfea927",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e439580-cd80-4057-a15a-a72599bbe4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b365fe6f-1b39-4459-b748-9b569b519a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8138f6c-f9f6-4d90-b419-e93825202340",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1c006bd-9d42-4cc1-9736-0d4fcb8b4e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262d826c-4d16-44d9-ac3a-79306e8ccdbe",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2b3f93c-12c6-4c71-9875-dccbeefd2411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49634d7-802e-4bae-a7f7-5f019c18f5d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1686c57-2f82-4e0e-b02c-3f6a366e7c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fefbe0c-3d26-4900-b2ea-04a961c7081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40db8ece-86c7-458a-9127-156469efea22",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132f2d59-4faf-4c6f-ac95-707d48040e0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3279e29-0b2e-4885-af2a-d33a7ef03a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5baf406b-ed83-4a25-9dd6-d27b287ae570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32aab9a-91cd-48dd-bf0e-8efc87eb6d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5be3bf-46da-466b-8157-5787786b9e2f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3219ac35-0969-4b2d-9912-fb518e4b543e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfb84239-520f-4ec0-a8db-3fb8c2102e32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e9c0931-1276-4e85-9645-78e9d63b8c3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73b6f14d-ed15-4992-81a2-a82d568c5016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3cec54b-4160-4ebd-87c9-8559e468dd5a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e63f019b-f2b4-4a91-b3d9-2f4aae7d4a2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db549da-6d97-4b10-a648-4fefa83123de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e1c22a2-1113-4d1e-acba-4572d55ebbde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93d971fa-d527-4ecb-93a5-b33e8dac39e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c745b3d2-a73b-48f3-bfee-c6bdcd267621",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adccf8be-dd15-4673-8435-62a44ca09412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3981476d-8c86-4d6d-8b45-85ee35c40f85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b52c49c8-7ea0-4e03-8f43-bc4a096c67c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89b943c4-2e34-42e7-8175-e8d555e26577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b926c7-f889-4f9a-88b5-f8c73c6e3251",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1fd196-de3c-476b-bf77-218d126869b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18802b73-72d2-4938-ae90-660647c2b13a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2081d8-0327-49ba-9ab9-76c7f148870e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d9c32a-88d1-4dd3-8668-5e372a03c6b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05bfcb1c-26e0-4500-a957-144cc382ab44",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f5cc7d-6804-41e0-9b8e-b7397976968a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a24beda-fef5-46ab-afb4-f3c8c16825bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de27b58a-56e6-45ec-9983-a093fa8f3abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ce9809-6212-44ec-a426-9d5c55dc7a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0b33d9-b6be-4854-8130-a8f719acd654",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935cf544-3d5f-4801-922b-5bfc04b3618b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9336d85-93d9-4027-886c-bd176f966420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614ba665-5e70-4d72-a02c-dcf57f7a715e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d5258d8-cec0-44c6-9721-4c722b8efdaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc827fd2-5b1c-4e4b-bcef-506b37ca1e13",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2f04dd-9be2-4c2a-ae9c-fed62a680d73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7d40f3-9855-4a41-987b-0089ffe7cdaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dd0d983-9fd3-4282-a620-299572ea5659",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3490ca6a-5763-4ed8-8122-c909784a096c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc6afdbb-804d-4d98-b5a9-3cdc31900ff2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef44f93e-96b8-40e8-9702-713dcdc782de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1ff6c0a-85b6-496d-9893-32dada969bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1377b7-0491-47cf-aa0d-da2fdfc03b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7fbf992-f29f-4a53-ba64-144b39a2c69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59017d49-9054-43a5-9a8b-d844145f8779",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28cc773-be8a-4e12-84e1-addb632bc99f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8342d79a-6ede-4d2e-a56a-1bc3654183bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ab9d48-3f3e-4477-b19e-374a46da6a29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee0267c-52b0-4b0a-ab59-f4a92b49827d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825682e8-610c-40f0-aca4-316ce3d2f482",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "693b5290-d2b5-4b25-84cf-afd8c9ab830a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ba0c038-a2c2-417c-a5db-c79854cbdb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a682df-7685-4385-85f3-3545cddf3e54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312f6c7c-dec2-4a7e-a748-977df7d94fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae1c0f9-dd5d-4917-93d2-5cd28f3f9ec7",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bf7ecac-1413-40ee-a36d-26d312f03e78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e132e5-3e4d-4b98-827e-a87db78043fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e39c2a6-a535-4a0a-9bad-22a71c6bb5a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0935df24-e324-4467-9a3c-49a3418e79c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b80a46f-5f7f-4ba8-802f-0d0a877068a0",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0581adc0-3b6a-4bc5-a392-8384107fc43d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12696523-7729-433b-bd20-331c4e7f61e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dd0706-0962-4606-b322-e7398b57ce92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60ccc057-8c05-48ab-950e-e591643d9472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0c5a084-1971-4f0b-bd81-204c4233f98c",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87491a8-a0dc-4d6f-991d-8313c980dd89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c05abb1-dee1-4588-92eb-cd27ed6cfd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28615e55-05ad-476a-b98c-309f5f166019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002bbef2-24f2-4940-9e90-54bf76193305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd9d496e-436c-4882-827b-7e326c6a5c34",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78faaac7-38ef-49e4-8bd2-92185194fa0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b360e27-3cb7-4a0c-a9da-d22a29dbbf18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c435f2-b80d-452c-96b7-80cf4d2e1f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ad3f43-3559-428e-9e61-89b004ef8e6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30649e3b-51ce-4dfe-8212-2be1c88d4046",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea6f05ea-06ca-45d3-b4df-7f39dc114796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34220c1f-fd43-4339-9f34-05d146ef3960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce19a4b-fa1a-4a28-be48-b1961edffa07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bfa29ac-8877-442b-84e6-d22d96dbb62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f80708-5ae0-4331-bfff-11f621774128",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76302111-6969-4f31-82cf-1d263794a671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751620f4-3e8d-49ba-bbd8-1881fac42261"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff92494-5c08-402b-b6ff-4975dc5726b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b49db9-6088-4f1c-9cec-c8ca35e4471a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31fa71e-a5f6-4511-b765-96fd2c168af8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9399dd-1590-465c-9e38-e73e2ea40c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2656482b-e388-4e6d-a613-d3bf20f7a880"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05ec0791-8859-47d4-9cce-4f2ce33187e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a33ccc0-977f-4c6e-8f0a-4c63934b45ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34896289-6e09-4483-9fde-2c192f434ba5",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4f0631e-d5bd-4917-9e02-835cfc71baf0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fae93589-b367-486f-9f40-0b865958c307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "027c6363-0ca7-401d-97fb-76e31a080d20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e53baa11-b65c-4e5e-8109-526ce15a378f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccdd217-1a40-4656-8b1c-624f7e64e2e4",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012ed4cd-0839-4c8d-baff-6cfafd13d457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbda153f-926c-4f32-8e36-42275995801d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "316c18fa-58a6-4e88-98cd-2acf763a4be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027f8965-df76-43e4-b640-633049b21a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a367f71c-65dc-4b71-88d5-1ea9830ba066",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08a9e379-581f-4ff2-adb1-aecb6c3517ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d929bdfd-b6d0-47d1-aaf4-0f820a82f113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "572add10-8f9f-4317-90b9-2b5ebfe6cba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29feb6d4-43c0-46f0-bd59-8c598112152a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6d1268-ef22-493c-a0af-b548d794e261",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83df409-0971-4000-86b5-8fc627e14eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cc386c-bee3-48a7-b293-9129e52aae9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32fed415-5773-4395-b0b4-dc1079cda832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bb4f42e-97d4-422a-8edf-1989a3695194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "808a7ecf-580b-4ff7-83c2-13b1e00933e9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a49e9f-89f2-4e0e-827a-53aec0a8de58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75848f59-e165-4ec6-bced-e6c00b422294"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32dbf0b5-a332-470c-8a25-f0afe92af81a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "737d39c0-cc17-49a5-9e95-0bf73f9eea5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ed547f-fbc8-4c5c-9417-7a1b29178bb3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cde4584e-1568-4e4c-bccc-4a554dc63771",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4213a090-15fb-40cb-8c8b-1b64fd909c36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dff9cb1-e1ae-4d0c-8db2-db9b09f80884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "746e3a25-ae38-49d5-980c-389b57e92979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e2141d3-dc77-4ca6-b707-1c6f23745586",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf8f93e-67de-46e0-894c-0e484641684e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f01090b3-c7fb-4163-a63d-5c7cc26db6ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d97f2073-6fa5-48df-b0a5-4a3b86976b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90319048-a5d7-4ae1-b716-46a4194ace54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e70fc4f-b712-4f3e-b6f4-d45e78f70d99",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f6e87f-a7d7-4572-8113-227543831303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f87955-91f9-4dc9-a4e3-e50d19912352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab3a221-647b-455a-b487-c7ba522ef98a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486e45c8-7197-41cc-987a-9364da6d154f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffbb99b4-7e3e-49e6-9b11-211946f8a097",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2b8f99b-a915-417b-8551-2befd68f97a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf90e4b-9874-4f29-ac09-1fc5f24ae44e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba88566c-09cc-472d-a4fe-b53df4408470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbed196-6404-46de-b258-b9f4b54429cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f08eb0be-1860-4627-a794-d24258933c0f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fa2504-db52-4a3d-97cf-078c0db8af23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9889899d-7854-43a4-8be5-6fccfa3bcb10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07dd6aa-4ade-49f5-8c83-8859d12b36e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "212a95b3-6e49-42d1-bcca-d76776d3f913"
                        }
                      }
                    ]
                  },
                  {
                    "id": "206aa440-4aff-4ece-8b5c-56d09dfcd03e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5e5d341-221f-4d16-8646-cda683554669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0ef143-a004-4c9f-abb0-898feb86c62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88befc00-837c-4258-8f53-e7a6b0d14773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce18a83-768d-4415-9e4d-4c4302c93b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b51d6b4-0ee4-4436-a97c-bc0ff06a6850",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4dee8fa-83b8-4f48-8778-4faccc090dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc1f7319-56bd-45e5-9d7d-8512310dba01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dbd8be-29db-4c16-9a2e-22e5ba1cfbec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85d51b3d-bff8-4d72-b9db-963f45dade89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b598f8b-2419-4094-a308-0c7d58ee0df1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66551708-76ce-4ed2-96eb-373e86bcb706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9a3a6ad-0224-4f86-bf0b-da1287fa7b6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b631c157-2a4a-4a2f-984c-b3e0ec0955a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58324d56-46bd-4df4-9a2e-d76032edc079"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95eddb18-7d91-42ec-a9f4-de4fdb0fc5c0",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a7c1a88-8106-479b-af19-70cba30d9663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9168581-8e9f-4bf5-b32f-f15096339e51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cf92ee-618c-44a3-a65b-2fcef970e096",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2cd5016-657b-4b00-bd66-59bf201c6947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e327cf23-a04b-49a6-971e-47051e793f6c",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6974db1-4618-46dc-8abe-079d71d2589f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17c0f543-44d2-413d-8e36-92fcaaac691d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91603fc1-a5de-444d-ae10-76d81a515ad3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f9a5e4-160f-4b29-bca5-51c489f78920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3906a185-f789-4206-aebb-e451050ddc65",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a0a196-2927-495f-9ec6-e7f60db0ce89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8373fd3a-ccc5-4394-8186-74e60253c23c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59f7064c-2cc9-431e-ad53-7f86d9f20c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c29be522-ef84-4178-bdcc-cb9c680095e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ce9451-ccef-4cda-9003-a111b6b1c4e8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046bb68d-2af5-4c9a-99d6-d27af2807cfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "733dffed-c4b4-4733-9713-c63b9b38939e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8960852d-d213-4d33-8819-1ae95ae9556a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "716a34f1-a348-4258-a165-681982514724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497218df-67e1-43ee-a166-10856ad08aea",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c71319-aa5f-4541-ac1f-248b10c1d527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11e9a029-563f-47fe-a9d7-49e709484d4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "146f0792-2f39-44a9-941d-41c7b5a520d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4be051f-3f34-43d6-82a7-b4fd0423b861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a2c78d-4986-445e-860b-85b316fa3c8a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7834c5-b347-4283-906e-f6f731c3bd72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebd0b4fc-44c5-43d1-aec6-414fc77bcfb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "908770f7-b6d5-4395-8be7-d78122f82f5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ecc643-24ec-45d2-8d89-c2dcd41dee5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fd5351c-67de-43ef-9c46-cf81663093c8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31addf35-37fb-47ca-9287-14c91fa24882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf92de9e-1368-4f48-9ff3-a09f2406b5f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abcfd34b-6a13-4c73-bf68-c2d6ed1bc042",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94ba525a-3c09-4662-b209-53d78962d3ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06144aa5-a6bd-49cf-97b8-7607376338d6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9035942-97bb-47fb-8ba0-78dd17cffa95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e5df8f-5d26-4ec2-bf6f-235340e20754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1a657c-67ca-47ef-a04c-ddbc720ca46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d555a481-4155-4569-93e0-d7198b573432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35657546-365c-4308-beb5-5ad37970310a",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d73c333-c7db-4c22-bc7c-98fed6f7f035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3342a79d-8761-41ad-857d-cfdcb2684a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5d466b-6f3f-45b8-aa41-1213586cf3eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae17ce0d-d9b1-47c1-a36c-d46c19755bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d4a6dc-8581-471e-bd3b-dce44fe1db27",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07604925-d944-435a-b4a8-23bbced8a6e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "952c6d7a-12a7-496f-a180-c93dedec2ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb75d46-4a87-4664-9ad4-9394316bd01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d2a1a8-55e8-4d76-8dfa-d9d6a803b362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e805070-4176-4f6e-acc7-2859e075e577",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4637808-bff8-4190-aa95-a25a05bd3b9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f2d303a-ddf0-45bf-bb09-72ee1c862597"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c7684e-68c6-41e0-b9a9-36bbfae3e4a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb6fd361-09a8-4190-b3e8-1abb2ec34823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bea3d1-5de5-4fd6-a69a-2f46b10e6528",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c87d639-4d5b-4f65-9586-7d8b372a5619",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b89b8c48-6c4b-41e9-939e-779ebce7ebed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a94e4d-ec8f-4ffc-8c8c-ff21409131b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "190909d0-544c-4e2d-bca4-f83a75aaa8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "001c248d-10a4-4e7f-940e-b0f76a255de7",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300ab6d-44a6-461b-ba20-abc7dffc557c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e5ad95b-5e3b-4ea3-812d-1bca3b73111f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41e5b882-7d7b-4c9d-9c0a-e58ee7836452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb07021-c2ed-4531-ba69-bff67b3fd7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f933c7d3-8c95-4172-b756-f0fba8323f4b",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56393fb-9d5e-46e0-a78c-c509e83b7149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d30e85-c92a-42cc-b0c0-b5834484f58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4b7d50-ea61-4de3-825f-059999e1225e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19acdf38-b630-458a-b4d2-1c499225f47c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b80f9e-3570-4a6f-a2b7-cd423d5a132d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26698907-1163-4a95-8007-02bba1f2dba1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f69e429-ca93-42ec-ace9-be5542bf778f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b98e7dd-122c-4db6-9c2d-6a77fd4353a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eaec11d-27f6-456d-92fd-e9100b1ed7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9800a6-1bef-4bb3-a0f7-7bf6896024b2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaefb6c2-1c1d-4722-adbb-501ea6a27225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5b8fbd1-e5b1-448b-8531-d42fecdc60bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa054563-ec2b-4dff-b5e9-e01ef7ad8425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00aa7e09-5c43-4a3b-98f9-5bf85156c58b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a2a4a6-fcff-46a9-bfd5-e5601f95fd63",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc9ff05-0def-4e06-9c8b-2cee01d6747c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3e8554e-68e0-46ac-8a26-c755680fda02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b54e49d2-107d-493b-b852-074a834d48ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29b18064-6fab-4e9d-b95b-697773cca64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4937b054-2a2f-4e6f-87fb-d872184d6d0b",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b01155-b4f4-4136-83d1-0f29edea13a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5975f72a-fa59-401b-8fc2-516361bf5d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284ecdce-4a79-4c9b-808f-2a5d59078c02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "000d9855-58db-40c0-a4ce-f1f13e47c224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3239e4a5-6110-47bf-bbd1-a2ff556044d7",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2612a4e-d560-4c56-8d97-38390463bb25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6fe6589-4bd1-4746-8f7d-d9ff6b769267"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ee85d0-579f-4221-970e-dab88bf54130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1112566-2ca4-47cd-98a8-2b09f13c644c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbfe92d-d3e9-45a5-90f5-0cd5bc726c23",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d33304-a543-4518-af0c-10fd4644759f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ad85c5-74dc-47fb-b82f-120d691c7b43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fc66beb-cadd-4fe5-896d-482e3a8907ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46e8fe61-9e44-4f8f-8b96-77c0272930d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3da9c93-62e0-4e16-9395-08b0b729622e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcce2835-4733-4487-ad0b-b7ea1f66c299",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "092d04cc-6264-40f9-9409-bce09414fd38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffdc529-90b7-4bff-ada3-0b418cfb7cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e26b3d41-9503-4f88-8d13-96032a305a5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c2c66b-9542-42d3-9ea9-ff1d35b179d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b11f785-56f5-4ee3-8419-6d40eea94758",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f65fff33-1f6a-4614-ac13-8f169b4e45fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d91a5a-42cc-4932-9878-1ed6f54ded97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96a1b570-0f47-43c5-ac06-110d945fc0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf9354d0-12ff-43d1-ae83-038c2b174d39",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de73d66b-f2f1-4987-92b6-26a886ab5226",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "65a877ea-c415-448b-ba4e-f6797d5816e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4089b488-67ce-4706-9c1e-4ccdfef0644b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c673d2e-0c34-4cc3-b9fc-414518f871a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ad957c3-c0c9-4294-a3d0-d0dc63bf1b58",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1e198d-a420-43bb-9c68-21491f139f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "792a8063-061b-4af7-86b0-c949b654ed40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6554ff-36ea-4b3f-8414-387af9b827bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ab856ef-da48-43dd-9a81-44a5d0a51c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315e95e3-345c-4a70-b95f-67c975c15771",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4d35f5-a66c-4d3e-9665-0a31caf54876",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e565d9a-6065-4cc8-b96b-de5b6e1700fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b9116b3-247b-483b-832f-57b5e772657a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9edadf4a-05b5-46c8-bcc8-d60452ea9824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7faad03-4308-4269-b7fd-6f52061c449c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ec8d3b-4e72-4b36-b984-b3e41fb9ee27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f56aca82-1de8-4d1a-8a1f-c5658d1824be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30f7a83a-47b4-4e41-a842-5196c19d2c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "924d65cf-3595-4a40-bce7-7e629ea2e67e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "516ac3ba-42da-4d10-bb5b-43095398b56d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47206926-3b04-439c-8d35-e5fea8c36487",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50545320-2e87-46b0-b478-03229d753798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03aada42-fa3d-4936-959a-9a11094ef13d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cea35d6-f1d3-4519-83af-1a069dfe3b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8cfc490-4eba-4adf-aeb7-ee7bde8fc1d4",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d388b1-4417-4da8-afc6-071c3b5c1625",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cae34a4c-100b-41d8-b3a8-df5c4d92d23e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd1f5c7-a353-4345-95e5-7183bf63222d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3d02896-3be7-4ed4-9d4d-20ae9878a8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0912f652-9175-42ce-b9bf-96e79a98db19",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fbfc7d-c494-4033-a205-ec3691f2d828",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b75d73ee-d490-443a-ac65-91781ca2d382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75eb5fb6-26f8-41b6-aa18-bfe33b2c8a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d88884-1da9-4db2-82bb-dabed3a08d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c592307-9d7c-4c1d-8be2-d7a373068a82",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d94a2ad-929a-42c4-a328-8bfbfc2f26e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4cd4c91-efec-411d-8722-2b6e777ae689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788682a1-a938-4877-9868-516e396b6c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95c50909-6731-43d3-98ba-779fdc56df12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a13930c-2303-4f72-9b23-9f459d8e573d",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6170a5c-5e07-4017-bcbd-1c68b6d2d77f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82403043-88e5-40ae-8aa8-13dff14cc60f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150a945b-2902-428f-8b87-396876caeafb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4dff52d1-c0d2-4a25-9e9e-763fd48638ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc87365b-a3c0-4495-9e23-28a2bac06aa2",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3edc96c9-6263-4830-a043-7d31ea779c74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d8dc0b8-fe36-4081-91ed-cf836509869e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08cafe0b-29de-419d-9257-cf2cf81fbfc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2614f3-325d-45a5-b9f9-48531748b487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72e7cd37-86d5-4dc7-9a80-39622997fcc6",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76dad19-e119-4033-95dc-74642471a6b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f6aafdf-9667-482b-81c7-4bf1f73798c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47d2312e-e1f9-4b70-b9cd-84b9c94bba63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ae623f-4947-41d5-9265-020af29eaac4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f823f3f4-6886-4bf1-9807-97951849b044",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b0f542b-bfc3-47b8-a8d5-d4b369d2d4e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85cdc6a3-5bbb-42aa-bda4-b5681c68ddb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6ff8a0-26ef-46fd-8d1d-70bdde44cb7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16fee825-b703-43ac-b678-89f4d2ba3c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249085f7-fe78-47a0-a113-96883aeec484",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b9302e-8f21-4284-a482-5c2395414048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6700d4fa-a330-40ab-8bba-61ecee2ce659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c76e4c59-2506-4927-99c6-7792a4806d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bdc313a-696b-49a1-813c-a93eda7e46dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44c4a9c8-137b-4a02-bbbf-cefe3161739f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b405004a-abb8-4651-9c41-1044b29c1ac7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "780101d4-bce6-46b9-9311-af5a834e9ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f81840-deae-487c-82ed-cd23730ee27c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2430b1c-ff24-419b-88e8-a689760fa250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bda3bbb-5d9a-4d5e-8359-c51c0bb94bda",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1474d7-8dc7-46ff-abc2-0d22975019a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f3325b9-ef31-4f72-aeaf-a587d66bf81b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69fe85d-b29b-45a6-9c22-f4edf2af8e75",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff64e9d3-211b-49f8-9794-7feeec8169b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c6051f-65f2-4517-928b-9c77024fabbb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05298ce0-8501-485f-ab21-c21aa12e5334",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31d61303-43b9-4591-9e21-bb20d82dc577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2497be-676d-4932-80c5-1101240c02ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6501fc18-48db-4566-ad6a-dd4b768ed211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c659b5d-3467-47d1-8a1b-3d1c8490adf1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e998bf-cd15-433c-846f-8d6a81e8ba37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c932728-0435-4c05-8a8e-9e56a4e90000"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cd434fc-74c9-4858-a9d5-3bd49d9df502",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada88f70-d29f-467c-a0fd-84dfbf0b89c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a5c5f6-2beb-4f7c-994f-9eb3468c2c4a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a4c6e4-69c3-4de8-bea4-e15d5e9f5691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b58a92-dccd-4ef0-a639-9d3aeb2c44a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc017c51-c849-4077-ab36-13818c50b7dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "308c10a0-6f9f-4aca-a8a7-cb0fb8bd9903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91296b99-b17c-42f3-a172-905c1ee0693e",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e415b0-f026-4ab5-944b-ae50593e1e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cb83baf-921e-4f06-8477-212ba7059a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5304a9-fae5-41db-95ae-7b31ea796a00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146a4a27-931c-46e2-8a5b-b5290f726d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9534a559-8539-4955-8b61-099506e493cf",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3397fbd5-d65a-4945-be89-fb3e0e5b0394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f700e96-c392-48c3-9df6-9c6ed8f7ba0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b4b9284-d8d1-4158-bd60-9369f7a7e1d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8ea3b29-5521-46aa-98c6-1cd994c3991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fda2f9b-8688-43af-b197-36bd2f56c27d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f0fbe0-ad24-4718-82e7-678ed35d252f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6851f9a9-0937-45e6-a344-c15690d5c870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5f39286-8ce4-4021-91b8-4269ffe0b2d4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67732e3c-71b0-4f6e-b9d3-b1e68b9e1ea0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "941964c6-7862-4c7a-80cc-43fcad459933",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5077d567-a4d4-4c1b-841a-7cdc4857089a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e17909d-2508-4398-8b76-8b913fb30eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93318f3-cf06-4bde-b5be-782d8a5eca8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9eefbd-cfe6-441c-a260-11f9a4a8571f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad609547-0fac-413d-ba58-86304c2573d8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e84af323-6b54-4a38-8819-1f84e958acfb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b1c47949-5108-4046-8e74-46fd3d2756ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ec7dd82-258d-4476-8434-591181aa5337"
                    }
                  }
                ]
              },
              {
                "id": "db49c322-85ef-4aaa-be28-62f22dc07843",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "638200f0-6947-424c-a74f-d4de15ab54bb",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dacbecc6-f3ef-41b4-9f6b-2f1db32a02fa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "4163c95b-8942-4069-b485-25cb901d289e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6e67f11-6f60-4906-be14-215d33f153c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "67f839e2-32e8-4b54-9b10-b597ecd964af"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a410d50b-5469-4c4e-9060-455a6b7d29eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bc3db644-b8d1-4a8f-a5ed-24a734516ba9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbfd166c-e586-426c-acfe-9079530401d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70867507-5cbe-40e9-bab1-25f4e3766e68"
                    }
                  }
                ]
              },
              {
                "id": "fda4da46-ea16-409a-a19b-92c7a4c71ad6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "eb06fa6d-e6b6-430d-bad8-424f4fa8230d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3a2b6d-f5b1-4c3b-bb3e-9695f5cc2af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "530db9c1-2bb5-4c93-9dba-51157a24a031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e78f3a-ed3f-44eb-8301-93444db6f5d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f728c97-2a7d-4f36-9f8d-d7ea82773857"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bd24aa5f-2451-41ac-954f-0552ef53187f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4f63e0d-d9a9-4b8e-84df-e145f69ca330",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "28a84d48-0f4f-45ab-ad2b-9961e0572063",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1b5e38d4-5c40-42de-8d8e-4aec793b4235"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccfc62df-8e60-417c-9bb5-c1551f34d7c2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2ce3b17c-95aa-4cb2-bbd0-9cd86e23d50c"
                    }
                  }
                ]
              },
              {
                "id": "8f92b73d-f3d3-46c3-9552-150f85818989",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "13a98c54-932c-4d8c-a0a8-8a37d93bd3a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "807bc3a6-3fdd-4735-8225-45c543bf1757"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f96cf19-67be-431b-abbd-a7272cd7edc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a1811b8-9d4d-4999-aa77-fe6385c1ac26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c7a1e2c-759a-4fba-a24f-4468ba28dba6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b5b8b1df-2ba9-402a-9e3c-44acb6155611"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e6210ba-bb05-4f88-8e16-e7634d95eca5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abf81297-addf-4e97-83fb-61c16b6cbf4e"
            }
          }
        ]
      },
      {
        "id": "5e013a28-35c7-49c9-a5b1-0b9bc3310684",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a5d73b99-00a3-4398-bb86-b9231c56c4d6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d40d2241-8b7c-4037-a093-4f4da40f848e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "74ffcfb9-77b5-43b9-a0c4-f48a0e27b125",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc7c23d-40f1-44ae-91d5-8420129f46d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "3c144701-e75e-40ce-8b84-74306f8b6bf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddb2c732-05c7-4f6e-b6a8-087ae049a782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "12ab6e39-739c-4057-8b29-7c39c01cd0d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ae5b203-3ae9-456d-aa44-fa2ccfcbcc64",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71b8d24e-d2bb-42db-b21e-df83369a511d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "720b4d19-fd96-4803-a039-3109f7c1378e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71c02527-8217-4b3c-b005-43745a3618b5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eef04444-14f4-4fd6-9643-71e4c8f84ddb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "cb43e662-3471-4944-87de-e934e2dd09db"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8a25906-1596-4a54-aa48-b0e8f6cd8ed7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9e66e7de-3c2b-4157-8e88-9061692295b1"
            }
          }
        ]
      },
      {
        "id": "80248dc3-6196-47a2-88f3-a414b3dd4d89",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "cd594261-e43c-4137-a2b5-173f56b2446f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2e293b0d-913c-40fd-88c3-3666cbe81c33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f7a119c-cb97-439c-9ad3-509b33d8adc0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "384f42d8-220d-44d1-ae03-9db97e747b48",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17f19d93-b252-430c-9001-56ea4dd6037e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "462cb12a-c3b4-464b-995f-82e2a86fae03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b2b956ee-54be-434d-88a5-e02923cf3127"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12c65276-c11f-42f6-8b99-e0c80ea390dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a79edc37-16bd-4338-9497-0776430f01ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fb31d88f-d087-4f63-96b3-a4a26eefe3f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49ddbde1-c30c-4ebe-8aef-64f01845a0f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29917c35-c3af-43cb-a3fc-9a2775933e78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "446b67bc-26d3-4dcf-b504-e46dae68a470"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "83e8f4c3-c4c2-43e7-876d-c26098e640a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b74ddc1e-4feb-461a-9681-54d2160e5234"
            }
          }
        ]
      },
      {
        "id": "4444466e-04b1-4295-8b24-4dd1049b4dac",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ec3215dc-09c8-430a-8062-decc9ea6a1e4",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dc9f6674-45e7-4067-bf07-95a63eb6e5e7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7cfcb415-7726-47ca-be69-a9f3795ded40",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae27717-1aa9-499e-98d0-159dd85cdab9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "786bf03c-c658-49b1-b1b9-94f40a84d043"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e999602c-fdfe-48cc-892a-b063ab850d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4385831f-6e2c-4834-83b8-d2647c0d7637"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "329a6d98-1e84-42c8-ac53-2f687c6f50fe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac1e835d-7896-40d9-b0ad-907a54cdd172"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "01ee41ce-8ffd-4399-9ae4-955bf8ffe9a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16c9b121-e5b0-485b-9992-7fa5905ddba8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "43b0828a-693e-45c9-85a3-c9215b76b2e5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "efa77efe-a9aa-4a4c-b269-91687453b948"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a4d0452-3390-4063-8a8d-d00ed2d01044",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0088412c-4b6a-430d-ac4d-0bd1870788c4"
            }
          }
        ]
      },
      {
        "id": "e2d58648-dcd9-4cd3-a8c7-d180d83ecd9a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5bf609a3-f97d-45ce-9428-53eff51ac17b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5ac76524-f60c-4109-9c4b-974d7c92c75d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a477cfc6-b5e0-4cda-92d3-fbd7420e2319",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b72f1924-4ef2-46e2-8f1c-51453560ebb7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa72f23f-edda-4525-bd76-9b3cafbf2e61",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 19
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 226.1514084507042,
      "responseMin": 13,
      "responseMax": 7193,
      "responseSd": 456.9405086922495,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690245843133,
      "completed": 1690245921606
    },
    "executions": [
      {
        "id": "df40859a-de9a-4bfd-9188-ff05abe4a535",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cbe07fec-1042-4eea-8ee0-9c8c70598a82",
          "httpRequestId": "45f02dd9-3cce-4e69-a6a0-68b22e4dc21b"
        },
        "item": {
          "id": "df40859a-de9a-4bfd-9188-ff05abe4a535",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "41a4259a-b13f-4298-a68a-16b98bb52a8f",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 0
        }
      },
      {
        "id": "51446ab1-3a2e-4c1f-8319-07312b5f45f4",
        "cursor": {
          "ref": "6bba1e34-2367-4ed8-a73d-ac95bd25ace7",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fd10a4ea-6fc4-4a91-936e-73cb332c6900"
        },
        "item": {
          "id": "51446ab1-3a2e-4c1f-8319-07312b5f45f4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "91a94366-104e-4e9b-91f3-5b64933b36fa",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "ba8b0bf0-b06e-4aa1-a579-a6da30fb0f07",
        "cursor": {
          "ref": "c8af5754-5194-4668-a25a-7bc9f4c711c1",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c41209f1-b593-40f1-99a1-c2e973d02439"
        },
        "item": {
          "id": "ba8b0bf0-b06e-4aa1-a579-a6da30fb0f07",
          "name": "did_json"
        },
        "response": {
          "id": "9b0dff13-4114-4b31-b262-bdb4ebae323a",
          "status": "OK",
          "code": 200,
          "responseTime": 1321,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6ccfdf-5614-4f41-b5bc-846abc016b39",
        "cursor": {
          "ref": "559c2609-7725-4d09-b854-f5ed0eac1485",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06b06ce7-0b06-495a-ad97-d4ffa2c834cc"
        },
        "item": {
          "id": "ca6ccfdf-5614-4f41-b5bc-846abc016b39",
          "name": "did:invalid"
        },
        "response": {
          "id": "70b83818-1694-418b-84b7-3bcfc34bfd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca6ccfdf-5614-4f41-b5bc-846abc016b39",
        "cursor": {
          "ref": "559c2609-7725-4d09-b854-f5ed0eac1485",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "06b06ce7-0b06-495a-ad97-d4ffa2c834cc"
        },
        "item": {
          "id": "ca6ccfdf-5614-4f41-b5bc-846abc016b39",
          "name": "did:invalid"
        },
        "response": {
          "id": "70b83818-1694-418b-84b7-3bcfc34bfd94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abda41cc-f317-45ca-9793-81b46d9280b5",
        "cursor": {
          "ref": "7dd1a32d-3a10-409d-a81e-00869a31d4e4",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "798ce734-df14-41a0-a154-d2add6553b69"
        },
        "item": {
          "id": "abda41cc-f317-45ca-9793-81b46d9280b5",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "c8383525-50b6-47ed-8ecf-acbf4b20691b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 411,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95696ecb-9a8a-4ec5-9729-b8c2898276d8",
        "cursor": {
          "ref": "6566b6f6-5dc8-4d94-9186-0802bfc2147e",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d4643d51-ba2a-4705-8e29-aacb49475261"
        },
        "item": {
          "id": "95696ecb-9a8a-4ec5-9729-b8c2898276d8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "33227379-b5df-42b7-87ab-fdd84f1c3ba2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 259,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a1129c-f8d6-4036-a4e4-ce612e111766",
        "cursor": {
          "ref": "d2117e4d-48a2-464d-b4e8-75ea822a65b4",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "fdb09cfd-e1c9-4d5a-9d29-de1c8579891d"
        },
        "item": {
          "id": "55a1129c-f8d6-4036-a4e4-ce612e111766",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "090a0e4c-5bf3-408e-8158-cc5fce744232",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "099ec93b-3d59-4db2-a846-7a462d09a59b",
        "cursor": {
          "ref": "569d19f8-0a59-4567-b0e4-f287127ccacd",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "591c2956-e146-42f1-a348-2331b6e7d4a0"
        },
        "item": {
          "id": "099ec93b-3d59-4db2-a846-7a462d09a59b",
          "name": "identifiers"
        },
        "response": {
          "id": "f0890056-a27b-4451-9c89-febe77541ca1",
          "status": "OK",
          "code": 200,
          "responseTime": 1222,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c1ffb5-340f-4595-921b-4f6be668f093",
        "cursor": {
          "ref": "a6fd58e5-ec8d-4f02-9c8f-a549a4534c22",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "334b7a53-4bb8-4484-8423-fa597a999631"
        },
        "item": {
          "id": "06c1ffb5-340f-4595-921b-4f6be668f093",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a04e9578-09fb-4207-9569-6a5b1b53739b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e60c671c-b255-4aae-afbe-8f38719796ed",
        "cursor": {
          "ref": "9b309422-2598-4182-811b-d35bee0c264c",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "e57bd145-7599-4dd1-b9a3-e7374aa3c955"
        },
        "item": {
          "id": "e60c671c-b255-4aae-afbe-8f38719796ed",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "271623e5-0db3-47bd-95b5-1253f857ff81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 976
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18f1e1d1-deec-4fd0-a519-d40c56d055e5",
        "cursor": {
          "ref": "6489b190-95fb-4759-9bc7-78d132b336d5",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1b8f29ba-00ce-465a-8dd9-b1492f1637f8"
        },
        "item": {
          "id": "18f1e1d1-deec-4fd0-a519-d40c56d055e5",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "a824f767-c9f5-497c-ad92-ae420e531f27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 984
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2fb8b5-6fd0-4388-b475-7138fa1b04f8",
        "cursor": {
          "ref": "cb3eabcc-ab19-408c-be4c-fd5159dd6d53",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "51f478aa-f2cc-43ba-aeed-f75acf4410bb"
        },
        "item": {
          "id": "6d2fb8b5-6fd0-4388-b475-7138fa1b04f8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1a17e25a-6c5b-420d-966e-c1fce0f3d1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 981
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cbd50d6-e62d-493d-8f42-a95d6cd0601a",
        "cursor": {
          "ref": "5fdd1cb8-46bd-4423-b3fb-3a7f915e6a4d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "5323b20a-13d7-42cb-88ac-bda3b0033d7a"
        },
        "item": {
          "id": "4cbd50d6-e62d-493d-8f42-a95d6cd0601a",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "de1683e6-2af1-4850-9b91-0daa53239949",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c3ab71-78c1-4ad9-a701-a1b80d1a2d3c",
        "cursor": {
          "ref": "c3d966f7-b2eb-49aa-9a34-7742a6bf9b82",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "1dafbc4c-a77c-4f96-8361-636fc2c7ba0f"
        },
        "item": {
          "id": "28c3ab71-78c1-4ad9-a701-a1b80d1a2d3c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "960c9bd6-c6a1-42a6-81fe-9b158ccebd82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1030
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f916bc4-2216-4582-a7c3-c83fbd62bed0",
        "cursor": {
          "ref": "ffb37e78-cc24-4503-b52f-3bd6ced7f401",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c3ff2ada-1050-4b92-bea4-ba61753fd5f5"
        },
        "item": {
          "id": "4f916bc4-2216-4582-a7c3-c83fbd62bed0",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "36d2efa9-3584-4699-aa65-ee15129072b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17575336-3276-4aef-9133-f3bddc928be7",
        "cursor": {
          "ref": "b77e9668-172f-4479-ae13-3a82bc4fc4f2",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "118d9b6c-96d5-4d59-a102-a48ddcd35159"
        },
        "item": {
          "id": "17575336-3276-4aef-9133-f3bddc928be7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "13472c39-e6b9-42fe-96af-407d2246b159",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1068
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa463c3-4ed5-4c4b-b675-0a5b7afaa3a4",
        "cursor": {
          "ref": "86066a3d-1569-41b4-a30e-f65c81af6c1e",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "983a86d3-a455-4c85-9dec-5ce4af882a25"
        },
        "item": {
          "id": "9aa463c3-4ed5-4c4b-b675-0a5b7afaa3a4",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c8af33e6-c5d9-4706-9166-070028efc64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616c7bb5-6cdb-47c9-b551-d83b2079c3d7",
        "cursor": {
          "ref": "866b5091-c394-47fc-9d38-e73873b8d13f",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a85eefa3-cb34-44ad-95ab-b8d859755acd"
        },
        "item": {
          "id": "616c7bb5-6cdb-47c9-b551-d83b2079c3d7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "5c7899cc-ee20-47e0-b322-969f44a8be20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07901cf7-3788-4d3e-b947-5e01cf42017a",
        "cursor": {
          "ref": "5ce3a597-4ba6-4cf9-9469-fedadb216aee",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "66e6d1c7-b189-4350-b377-8b8b83b469e4"
        },
        "item": {
          "id": "07901cf7-3788-4d3e-b947-5e01cf42017a",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "040a51c0-e1cd-4731-9aaa-5fb89a7001f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1036
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a8b7cc-434f-43d2-8657-e5d3751395b4",
        "cursor": {
          "ref": "90adef14-19a2-4337-a036-4f910bab6609",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "63f35646-3b09-4120-b766-8799c2714b7c"
        },
        "item": {
          "id": "f0a8b7cc-434f-43d2-8657-e5d3751395b4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5d5cb035-f78d-4ce6-b074-e66f8cf6f7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1077
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd434a55-05e1-4668-8673-3aab2d13efad",
        "cursor": {
          "ref": "e60992a5-e36f-4bc0-9fd8-5bab3d11c976",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "fa4c5c8f-b148-4461-ad5c-a25ae4fbd523"
        },
        "item": {
          "id": "cd434a55-05e1-4668-8673-3aab2d13efad",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e07f72c5-0c63-4ee7-8792-0820aa89f97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1092
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0571be-9f29-4bdd-80eb-8fc5bd953fbb",
        "cursor": {
          "ref": "ce33167d-a7b2-4128-ae6f-53e878825cd9",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "9232fb79-63e1-44b6-b3e2-dd55de4a298c"
        },
        "item": {
          "id": "6c0571be-9f29-4bdd-80eb-8fc5bd953fbb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "092ac381-08a5-4246-830f-f0674078fce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1048
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d02707e-1f79-4e08-842b-8a4cc77e47bb",
        "cursor": {
          "ref": "a5169366-7ed0-4f61-80f7-d218407bc4a2",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "132b62d8-691c-4da6-8c03-43a576574c6d"
        },
        "item": {
          "id": "6d02707e-1f79-4e08-842b-8a4cc77e47bb",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "66a76c59-319b-44e6-8d6d-fce5511f65f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 1045
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88aa570b-ed83-4b05-af49-bcf45fceb2d0",
        "cursor": {
          "ref": "176c804f-e8f0-4b4a-885a-53e876d91307",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "de8b5b87-f596-4e79-bb26-a401347f191a"
        },
        "item": {
          "id": "88aa570b-ed83-4b05-af49-bcf45fceb2d0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c78d0c64-f66c-4d0b-bae7-3fcebeb54b01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 1047
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4426c8f5-1738-491a-9af7-de25d0e01aa6",
        "cursor": {
          "ref": "0e2210e5-8298-4295-9ab0-74deccfba3da",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "2219edbc-d27f-462e-916e-59afc960bba6"
        },
        "item": {
          "id": "4426c8f5-1738-491a-9af7-de25d0e01aa6",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6089e110-d57e-4526-82fb-f291bb349211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1097
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ec5dd2-0bc3-4271-9d9a-e3f4bcd59093",
        "cursor": {
          "ref": "b4ac8e2b-d2b4-441d-a605-22e40eecd5bd",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bed3029a-af73-429d-ba7f-aae0ad377944"
        },
        "item": {
          "id": "32ec5dd2-0bc3-4271-9d9a-e3f4bcd59093",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "7961141b-1935-4e3a-9cca-beb917b5e473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c88a1c4-f792-4386-9168-5734c4710b15",
        "cursor": {
          "ref": "a15ad87c-a4d4-4f18-9b7a-0cbf8b5ce8af",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "988e8ea2-8c45-49d2-8018-a7f4eec63e97"
        },
        "item": {
          "id": "2c88a1c4-f792-4386-9168-5734c4710b15",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e89eb925-7a77-47c8-8d79-57fba42e0cc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1020
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dca1935-1508-4d9b-a2d2-9383966b4e56",
        "cursor": {
          "ref": "0cc2dc1c-bfd2-40b0-87ba-02c4a6c61b19",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "8d200512-8e36-4efe-b191-6044d6914a30"
        },
        "item": {
          "id": "8dca1935-1508-4d9b-a2d2-9383966b4e56",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "91e024b4-6cc8-4f3e-a106-4b176d0703b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e784bcc-73b9-4abb-bd54-c2cb7aceda3f",
        "cursor": {
          "ref": "5ca2c5e9-92d6-4bca-825f-93df383dbaed",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "a86411e2-eb4a-499f-bd1f-0a985915ece5"
        },
        "item": {
          "id": "3e784bcc-73b9-4abb-bd54-c2cb7aceda3f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "afb59645-650c-40f7-9161-7810aed331e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1019
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb27da37-9159-4238-9178-cd2ab2f86357",
        "cursor": {
          "ref": "8e3c4b56-d8be-4509-8bb6-5ca011c7137f",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "c5871f33-b835-4abc-b5be-0780cf5aaa79"
        },
        "item": {
          "id": "cb27da37-9159-4238-9178-cd2ab2f86357",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "26d2044a-d771-4b56-a5e9-7580202c39a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1017
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ace78e7-0104-44ce-85c9-4b620cc1841c",
        "cursor": {
          "ref": "915081a2-8ecc-42d9-9e97-90ace5f9ca32",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "44cf1f70-a60e-44ba-85ed-fa69a7e9fc41"
        },
        "item": {
          "id": "7ace78e7-0104-44ce-85c9-4b620cc1841c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "474f39ca-9f87-4bb5-a8ed-ccff1baf7d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6157c61c-37d8-489a-b31b-826e533dbd53",
        "cursor": {
          "ref": "33653f7a-6566-4f68-9858-232aeeccbfdb",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "4143d022-e3cb-4a65-8fd0-8b6a7865dfbc"
        },
        "item": {
          "id": "6157c61c-37d8-489a-b31b-826e533dbd53",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "f62b9c6f-3fd4-4e04-9b24-d2e2ab93e88c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a31c1b46-570f-46de-9e1a-f3c87ef36154",
        "cursor": {
          "ref": "17adde06-0b47-451f-b89a-a767e2479bc4",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a92a63c4-36f9-4d0b-8e49-a77f16fe058a"
        },
        "item": {
          "id": "a31c1b46-570f-46de-9e1a-f3c87ef36154",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "9afe5ca3-dbf0-4443-bec9-8bea9f561e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1434f563-9ca3-4583-9b25-23610f5a67b5",
        "cursor": {
          "ref": "381553ef-fda2-4bd3-9b2a-9b99a748ca2a",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a55ee23d-4b49-43a5-9f74-dee40b0fd3c4"
        },
        "item": {
          "id": "1434f563-9ca3-4583-9b25-23610f5a67b5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bb21210f-1694-400b-83c5-a6c068449e3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c931524-065b-4694-9042-9ced8ff9df94",
        "cursor": {
          "ref": "eb6105ed-3d79-4fe2-9717-5e67ad8ca537",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "755589bf-a68d-4046-a257-98b9876a4c84"
        },
        "item": {
          "id": "9c931524-065b-4694-9042-9ced8ff9df94",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "505f23bc-b95f-45f2-a937-f2d7ca71fb29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5639d9d-3220-4621-b063-a5f662c7aa4e",
        "cursor": {
          "ref": "0b595679-8899-4e62-9518-c60867bcecc3",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2b04274f-5f6d-45f5-a9f2-4b73604711d8"
        },
        "item": {
          "id": "c5639d9d-3220-4621-b063-a5f662c7aa4e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "42684834-76d7-457d-82cf-3283ce115a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dee700d-1ab4-47eb-8aa9-bc909f04f039",
        "cursor": {
          "ref": "0e4c859c-a8a9-4664-b0e6-eece260a2f48",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "be179f5e-1959-41b5-8891-367eab86c1f0"
        },
        "item": {
          "id": "8dee700d-1ab4-47eb-8aa9-bc909f04f039",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "2f3247c8-265a-46d1-92e7-abe03cfd725b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1052
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a043f3-b54d-472d-a7b6-ab331b9f4523",
        "cursor": {
          "ref": "2748e4d1-f5c5-4130-9a51-1e47db6fd0f8",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "1ada759c-174c-4e6e-ab09-1898ffb0fc03"
        },
        "item": {
          "id": "c7a043f3-b54d-472d-a7b6-ab331b9f4523",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "9d414719-47c2-4873-ad41-dc3fcd17e8b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0349ace0-78bf-4d84-8744-547ded2d9480",
        "cursor": {
          "ref": "d71acac4-d14d-4de9-9250-08acd69f7bcd",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5ce49a3c-f7a9-4a2c-a1cb-32cec77437ef"
        },
        "item": {
          "id": "0349ace0-78bf-4d84-8744-547ded2d9480",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "da6fb9a7-76dd-4b37-9089-300e6e00918a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7af55c9-93ef-4ebb-8fa6-ae2b99777de2",
        "cursor": {
          "ref": "a401293a-6988-421c-8dc9-88361667eb65",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "d159bc69-e7d4-4866-a38f-43fa4c7d4338"
        },
        "item": {
          "id": "f7af55c9-93ef-4ebb-8fa6-ae2b99777de2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7c511176-6573-49b3-90cd-858b5284789f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eca0bda-d9cd-428f-8aba-cdb1fb58498b",
        "cursor": {
          "ref": "e1867d6b-03ad-43a9-bab9-6f56c13a0294",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4a02805a-c918-4bd4-ba30-9b177b3b1922"
        },
        "item": {
          "id": "6eca0bda-d9cd-428f-8aba-cdb1fb58498b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "03c1e7fd-7a00-4687-94d5-26289a834118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9374c75b-5766-40fe-ba7d-92e264aa31fc",
        "cursor": {
          "ref": "35f38263-e8c7-4d07-8476-09733ad82397",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b68a2f45-b34d-4617-80ff-80162cdc7ea9"
        },
        "item": {
          "id": "9374c75b-5766-40fe-ba7d-92e264aa31fc",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "42c102dd-5d90-4872-86bb-96d8e1de5c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fc4cd7-0fe3-4980-bfac-f99f2db28caf",
        "cursor": {
          "ref": "fa2bcce8-9ab0-4cd4-baf6-b55671c53bf8",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "d8cc02c5-c611-4216-aa68-392e3ef763c4"
        },
        "item": {
          "id": "29fc4cd7-0fe3-4980-bfac-f99f2db28caf",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b6f4c54f-6413-4f23-9a6c-3e70d0a2e720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1808
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d88351-89a0-47d2-a67a-3081f984515e",
        "cursor": {
          "ref": "c0ec52d3-2d66-4f80-ae02-11fe0beb87cd",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "ea991eeb-3e44-406f-8af8-7cdea641e602"
        },
        "item": {
          "id": "c0d88351-89a0-47d2-a67a-3081f984515e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a11cad4c-6890-4583-a439-19cabf2b1825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 869
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e1ac75-ad27-4d1a-858a-ab4db4f86137",
        "cursor": {
          "ref": "272b1591-73aa-4170-9bad-c6aee3657ded",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "68a10599-4932-4314-b6ed-a6cd69bcc2ce"
        },
        "item": {
          "id": "33e1ac75-ad27-4d1a-858a-ab4db4f86137",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "3b40db86-d65d-4010-83e6-83106b0744ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54684624-6d71-4d71-adb3-7d9ef69e960a",
        "cursor": {
          "ref": "15c83022-4d87-4919-a613-8940f485c29d",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "27cba2ca-2a51-4dac-8b70-06c32cb20db1"
        },
        "item": {
          "id": "54684624-6d71-4d71-adb3-7d9ef69e960a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "35dc382e-5f77-4003-8ee6-2f7c4b8b5708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ad1db7-ac62-41b8-962a-7a074dfce2f7",
        "cursor": {
          "ref": "697befbc-cc11-40a3-b7aa-4b8d28fbd0f4",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "0ab7969f-4c9d-4bf2-bf13-1239b8f4de6b"
        },
        "item": {
          "id": "97ad1db7-ac62-41b8-962a-7a074dfce2f7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "6158a56f-714a-46cf-b0c5-1e66bea04e08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 1745
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d26c35a-19d2-4c75-aab2-8d572b8df303",
        "cursor": {
          "ref": "c3d9e175-f941-4f20-9f52-29f84e6b1963",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "decf4593-7101-40d6-8eef-068526a24552"
        },
        "item": {
          "id": "9d26c35a-19d2-4c75-aab2-8d572b8df303",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "bdf8210e-b6f7-486f-9089-0c5ad4191675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1663781a-15d1-4b2c-a6f1-5185dd595b8c",
        "cursor": {
          "ref": "7f5d0834-b532-4dea-94fc-4105c6703dd8",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dd2a60f3-872e-4a0f-aebd-31440092f9e2"
        },
        "item": {
          "id": "1663781a-15d1-4b2c-a6f1-5185dd595b8c",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5c2060f2-a02a-45f8-b2ef-d9ed258c13c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f4bcd2-6a9d-4bbb-94ac-2d7e44f3ef4f",
        "cursor": {
          "ref": "fa1b7ef1-2a8b-4229-95fc-0bd606cfe002",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "fb3ad8b3-c594-4287-a604-3d9099046416"
        },
        "item": {
          "id": "33f4bcd2-6a9d-4bbb-94ac-2d7e44f3ef4f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a7e5ccbe-fa7d-4088-8adf-621a0463353b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 2147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12891dce-bdb0-4762-8107-6be7901f10ad",
        "cursor": {
          "ref": "6f5c8900-afa7-41c9-bcfe-0b68469b74c5",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "60fe3390-1157-45b9-885f-b26e63013efd"
        },
        "item": {
          "id": "12891dce-bdb0-4762-8107-6be7901f10ad",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "e8dbda00-bff9-4332-8d2a-6e8cc84745b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77a3651-8296-4aa1-87e8-43259089432b",
        "cursor": {
          "ref": "d97e67e4-8357-47f6-87c7-b0235ea22803",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1bc89893-1225-41e4-9558-fdfc8278aef6"
        },
        "item": {
          "id": "b77a3651-8296-4aa1-87e8-43259089432b",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9fb5ab71-5d00-49a4-bc65-71a0a0f44770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1035
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8736127e-d6f0-4229-b42d-e607115811f1",
        "cursor": {
          "ref": "70ec5d85-a110-4d7e-987e-84060bfff66f",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f76a38b9-667a-4d38-b210-d3e322787175"
        },
        "item": {
          "id": "8736127e-d6f0-4229-b42d-e607115811f1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2140bdda-fbef-413e-8497-3c10a764a55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 1059
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ccf506-b361-4b7a-92cf-87970f1daa4e",
        "cursor": {
          "ref": "69bb3735-95bf-4515-80a8-4f4529e11278",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "08ecb2a3-3fdc-410a-99e9-7e94a60b6ed9"
        },
        "item": {
          "id": "99ccf506-b361-4b7a-92cf-87970f1daa4e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "91ef962c-986d-407b-b266-404996cde546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f84ace27-d233-4d92-bd64-7eec42bb29ef",
        "cursor": {
          "ref": "86667e02-aa3b-416c-a788-eae28747afee",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "64b44f83-5ade-433f-bdbd-492b07b865a5"
        },
        "item": {
          "id": "f84ace27-d233-4d92-bd64-7eec42bb29ef",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "99a8f8fd-2847-4605-8f28-8191dd208903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e92b3b5-4405-405b-87a3-0bd32b5ba9fd",
        "cursor": {
          "ref": "5d90327f-f225-4e9e-9482-3a3a0228e40c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "6e47396b-c496-4ce8-9134-ece62ff7ab70"
        },
        "item": {
          "id": "0e92b3b5-4405-405b-87a3-0bd32b5ba9fd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5d50bd28-6302-49e0-bdc3-4f754a15a69e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1039
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a41afb-8ef3-4e1e-89a7-51052433ac4d",
        "cursor": {
          "ref": "a62ff286-ffd9-49d0-9a63-898cd45180ab",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "c38e41c3-3cc1-4180-adcb-55011728490c"
        },
        "item": {
          "id": "37a41afb-8ef3-4e1e-89a7-51052433ac4d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "3c369084-0ac4-4055-a5b6-f1e0efdfb276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccbe95e-79e8-4245-b8af-c6a486b54c18",
        "cursor": {
          "ref": "21a12513-04f8-476f-b26f-a75b032fe710",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "52f28ae3-df44-4444-ab64-75cdb0ee9ef7"
        },
        "item": {
          "id": "2ccbe95e-79e8-4245-b8af-c6a486b54c18",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "82fd0c53-a4eb-49d1-a0af-de9f3c7a26ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1090
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85d286f9-b541-4f99-8e65-0c951591b710",
        "cursor": {
          "ref": "8f9d2931-89b7-4032-94ab-ac2fa7ff7572",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "854aaecf-aef1-4b74-bde4-d3951382f592"
        },
        "item": {
          "id": "85d286f9-b541-4f99-8e65-0c951591b710",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2fb501db-72ef-45cd-ab43-4614a9c006be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e0804ab-6029-4931-9da4-18ab48faa3d0",
        "cursor": {
          "ref": "003c5d1e-1d1e-48ae-8ac0-01b06e292336",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ffc13bef-037c-43bf-9eac-66a4e8e83edd"
        },
        "item": {
          "id": "8e0804ab-6029-4931-9da4-18ab48faa3d0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b705b7ab-b2e2-4b55-a316-6f88ecea3d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c77737-ea33-43f4-8436-25e89271ad7b",
        "cursor": {
          "ref": "3318544b-b1f8-4a41-9484-75056af715d8",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "718015d3-b6d6-4783-99e9-962b24add15c"
        },
        "item": {
          "id": "43c77737-ea33-43f4-8436-25e89271ad7b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "595c487a-c248-493a-932d-abf29d0874af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b0cec0f-90b4-4c7f-9144-0a48d53a055c",
        "cursor": {
          "ref": "676754bd-4c31-4c54-9ea3-b27a330cfec8",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f8b1691f-773e-4777-9d9b-96d555daff84"
        },
        "item": {
          "id": "3b0cec0f-90b4-4c7f-9144-0a48d53a055c",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "526b99cc-cf8b-4207-a7d8-a4213e3778f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4146b0fd-5f7c-43a6-bf2c-6d03de5f1b96",
        "cursor": {
          "ref": "2fd88a1c-b412-451f-a193-30e92a3e4bd8",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "720ccca6-c8bb-4466-8876-5d3f3534db14"
        },
        "item": {
          "id": "4146b0fd-5f7c-43a6-bf2c-6d03de5f1b96",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "66a99fea-50c9-4b43-a479-010f0f288c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f73986-fb6d-447b-bfb7-2e33d3dda240",
        "cursor": {
          "ref": "117331c9-9262-4495-ad4d-cfa3c7babb9a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "af7dd6a4-8b12-415f-bed2-dfceaf5ef8f8"
        },
        "item": {
          "id": "58f73986-fb6d-447b-bfb7-2e33d3dda240",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0c169509-e2e6-4f4c-abf5-f0b49e1c24f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a74d91a-6140-4c61-b0e4-a2054118828d",
        "cursor": {
          "ref": "ad402da3-28d6-45d5-bf68-edd07462132e",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7aa03f81-7127-4459-bd9e-ef1bb0ff6ee5"
        },
        "item": {
          "id": "1a74d91a-6140-4c61-b0e4-a2054118828d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b68e0613-245b-4c82-9cfe-d263f1b1b1d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9028632d-f1f8-4429-a654-35968cc3c909",
        "cursor": {
          "ref": "db18e241-147f-49a0-939c-db198b334c1c",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "62747ad4-c24e-42f1-944a-c9cde68c5571"
        },
        "item": {
          "id": "9028632d-f1f8-4429-a654-35968cc3c909",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4873f922-f22c-4a05-a597-f59f70a35c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d41be5b-64f5-4050-80aa-3de512295391",
        "cursor": {
          "ref": "def51623-8df8-4bcd-8a6c-58719f693d13",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b637792b-4ef5-4eb5-a29b-e69bfd6098a7"
        },
        "item": {
          "id": "8d41be5b-64f5-4050-80aa-3de512295391",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "96de10ab-a697-40dc-a787-d3aafbc055d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b6606ad-9ce5-458f-90ba-135e6bbd9af5",
        "cursor": {
          "ref": "a475e067-5bf4-4b75-826a-2cc5f772f80f",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "6f6946b4-0d70-407a-8267-65ab9d23a902"
        },
        "item": {
          "id": "3b6606ad-9ce5-458f-90ba-135e6bbd9af5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "53e7bd8b-eb0f-4646-9967-55db555cd969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bf96683-d052-468b-9e38-e085891ebb42",
        "cursor": {
          "ref": "f6712f6d-25c7-45df-bfa1-99696373edd1",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f0203049-be96-4352-b109-1491e32b8d2a"
        },
        "item": {
          "id": "5bf96683-d052-468b-9e38-e085891ebb42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "973aa26c-3c96-4687-a5b1-1a96caacf9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65e7f6cb-b71d-468b-bca3-8e7919c9009c",
        "cursor": {
          "ref": "63a0c81a-4303-4375-826e-4ff7ff564756",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1e3a81c6-b094-42fd-975e-52cedfbbbfa2"
        },
        "item": {
          "id": "65e7f6cb-b71d-468b-bca3-8e7919c9009c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "74911ee8-8396-420d-ad11-90e347696403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1010
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf340d2-0a28-4e40-ba46-423d2ba00886",
        "cursor": {
          "ref": "4880ff24-34ff-43df-be42-a4e4547ac078",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4915a20e-756a-44e6-b25e-1e6f503181a8"
        },
        "item": {
          "id": "2cf340d2-0a28-4e40-ba46-423d2ba00886",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "11ff3801-0be0-4445-8cee-fd8ed0603b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6cd68d-389f-407d-ac83-87b9d7c68f3a",
        "cursor": {
          "ref": "b5c20cf8-3527-4980-81c4-fd33320fea86",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "160ada76-134e-453d-a324-df8092c484fd"
        },
        "item": {
          "id": "2c6cd68d-389f-407d-ac83-87b9d7c68f3a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4c4338f6-2a8e-452e-b9b0-990a81621180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e364a1a4-765c-4658-b104-e3210742520d",
        "cursor": {
          "ref": "da6ee43e-feaa-4c3c-9573-d1736b5751b9",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1e361c83-d7c3-44e3-8fe2-f7e770d1f0a4"
        },
        "item": {
          "id": "e364a1a4-765c-4658-b104-e3210742520d",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "4670a5b4-6daa-4052-83de-acb8adf50c29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea111189-fb3e-4cd7-b79c-2cadbdf6b310",
        "cursor": {
          "ref": "a623425f-5d6f-485f-a0af-d319f2780086",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c720d605-2a08-45d7-9408-f058dcef89c3"
        },
        "item": {
          "id": "ea111189-fb3e-4cd7-b79c-2cadbdf6b310",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "02c9487e-0523-47d7-bce0-860d7bfe9357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f023f4e6-0886-4cf9-a817-c8618aaf7a58",
        "cursor": {
          "ref": "8643c994-0630-442d-bb2c-f64b561ea6ca",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e2e5d101-a806-406a-92c2-c745a22e71f1"
        },
        "item": {
          "id": "f023f4e6-0886-4cf9-a817-c8618aaf7a58",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1bb3169a-6dfc-4f0b-8bb8-632f4ea17fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 988
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9e4a24-82fe-4e6a-adf8-7055fef97b33",
        "cursor": {
          "ref": "4b76ad83-a635-45dd-b7e6-d197d8845535",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7e8375a9-eb22-45b0-8897-2a971dd31e97"
        },
        "item": {
          "id": "3f9e4a24-82fe-4e6a-adf8-7055fef97b33",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c897f3de-3741-411f-867b-65d4c62650e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 1025
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba7483a-70ec-4627-8ab4-2d6c6d20b873",
        "cursor": {
          "ref": "95731a16-7916-4b50-8169-1b756d39254a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "b61700a3-4d2f-4681-bb8d-0e67a6274fca"
        },
        "item": {
          "id": "bba7483a-70ec-4627-8ab4-2d6c6d20b873",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e410650d-3e5a-4ba4-8450-a06c6623919f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1267
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85eef52-1ff5-4ea6-8bd1-644de10e245a",
        "cursor": {
          "ref": "4a9e1562-3be9-4036-93eb-98dbcbc8d61c",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c1e82837-21e8-4022-b51d-8c2f12d57dde"
        },
        "item": {
          "id": "f85eef52-1ff5-4ea6-8bd1-644de10e245a",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4f41a82f-ecb2-4386-8f1f-62a55401298f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1248
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d92119c-f95f-4bd8-90cc-343ed034e8fb",
        "cursor": {
          "ref": "cdb2d5a8-68fa-4ec1-ac43-1e6b41ba2e4c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "9b30ed79-efab-4115-a53d-5b4b7b2485ef"
        },
        "item": {
          "id": "4d92119c-f95f-4bd8-90cc-343ed034e8fb",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "50288d49-73f3-43af-8000-ed2c1649a049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19994c44-bb98-4e0b-8418-8ab299254c5d",
        "cursor": {
          "ref": "6014beec-0352-4c1c-affd-eeca7b68c1bb",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "49a080cd-53ae-4bd1-892e-3a107494684f"
        },
        "item": {
          "id": "19994c44-bb98-4e0b-8418-8ab299254c5d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "68ffcc00-912c-4e55-bb75-8a63246b489f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 235,
          "responseSize": 1247
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c763d79-146c-403f-98d8-c9e15c32d9cf",
        "cursor": {
          "ref": "ce16ed80-1cc7-4c14-b342-5f8787cb0c0a",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "796d991b-1923-44ee-9dc9-21aa59cd4c1f"
        },
        "item": {
          "id": "4c763d79-146c-403f-98d8-c9e15c32d9cf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "364c023e-c4f1-4bd7-b01a-c2954c667637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1245
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ce87ee-6aac-49a4-aa55-8b82592fa83f",
        "cursor": {
          "ref": "94bc0125-40f0-44f1-94fc-b45edf4ab00a",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b0bd0bf4-211a-423f-a80d-b7148b19d141"
        },
        "item": {
          "id": "c3ce87ee-6aac-49a4-aa55-8b82592fa83f",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2edd61e5-4fa1-4061-877e-04ac4c121275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 1116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac5b12a-3aa3-423c-b836-a75caa8770f0",
        "cursor": {
          "ref": "152fb544-c205-4881-9807-cc3c335608c6",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2969c798-ada2-4163-b81f-6b646c884e24"
        },
        "item": {
          "id": "9ac5b12a-3aa3-423c-b836-a75caa8770f0",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7c3f5c2f-a47e-4614-9ea3-337a85ec51ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adfad76-6868-4af2-93bb-c8a504ea2958",
        "cursor": {
          "ref": "0079b3dc-ab11-4205-a2c9-db7cfeb753d4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "f4b889b9-3c7e-4159-987c-f57cb018f5be"
        },
        "item": {
          "id": "8adfad76-6868-4af2-93bb-c8a504ea2958",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f50bd293-18f0-4305-8757-c42438abacb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9b5f13-75cd-4faf-97aa-37150b6492fc",
        "cursor": {
          "ref": "71affe55-088c-499f-8c59-c5aab0dbae13",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "caaa8817-62ed-4901-9d95-cf5073820b8f"
        },
        "item": {
          "id": "1f9b5f13-75cd-4faf-97aa-37150b6492fc",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "99129840-35c2-4ced-8226-4eeacbf7887e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d5b429-fdc1-403e-8c9d-835ab026c406",
        "cursor": {
          "ref": "1cf77673-1e65-4540-96ec-60d1b247aaf4",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5bdf15bd-c426-4b82-854c-c6bf7e11dbbe"
        },
        "item": {
          "id": "48d5b429-fdc1-403e-8c9d-835ab026c406",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "43eb16d7-121b-474c-af28-981d3f4026d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 1064
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05354c75-a470-48af-b26a-2910f61c9180",
        "cursor": {
          "ref": "381f777b-e2fc-4766-ae25-2a359c0c9194",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "75e31539-3151-4b06-a2fa-e01b0df10f5f"
        },
        "item": {
          "id": "05354c75-a470-48af-b26a-2910f61c9180",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "8b31dd0f-a629-419e-81e6-1166a61e4781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 1062
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f102664b-a646-4210-82d4-56fd5e71cbf1",
        "cursor": {
          "ref": "14d5d33c-fcff-47a7-928d-4e4da8e3f8c8",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ca5ab1c-b841-4181-b49b-7ed16c57bce8"
        },
        "item": {
          "id": "f102664b-a646-4210-82d4-56fd5e71cbf1",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a306880b-261e-4f99-8b16-0ad065cd73e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 1115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1792e937-2d31-4f62-a995-5ba71338a0a7",
        "cursor": {
          "ref": "d60c3661-5b4a-4a3c-9b1b-b5ca132bada7",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "584319e0-cafc-462c-92c4-abebb93a8112"
        },
        "item": {
          "id": "1792e937-2d31-4f62-a995-5ba71338a0a7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2fa660fb-67af-49e4-9507-e7c5a4cce34e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 1105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9b50ad-d35f-4495-9803-f6189e16a1f5",
        "cursor": {
          "ref": "f8258e53-8371-4375-ba8e-da793bb58060",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "3d8ad334-6dc2-4b21-af99-37fa08f6c524"
        },
        "item": {
          "id": "eb9b50ad-d35f-4495-9803-f6189e16a1f5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5d14c6db-bcea-4322-84d8-a0c22a44cc5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1087
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fd49ffe-621c-42c5-9e82-0bfb963c811b",
        "cursor": {
          "ref": "8c70c87e-8ff0-4d0e-bea0-d2fde219ca03",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3854eb38-674a-4601-ae97-dd373ec9f248"
        },
        "item": {
          "id": "1fd49ffe-621c-42c5-9e82-0bfb963c811b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fa41a68f-7762-4adf-9024-15846b6fefc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1084
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44a5de-81b0-48a7-b3da-07d41eea1600",
        "cursor": {
          "ref": "85d6a358-3395-40f4-b379-0bf63933ee50",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9403a06b-ea68-445c-aa08-1ba72d54d506"
        },
        "item": {
          "id": "2c44a5de-81b0-48a7-b3da-07d41eea1600",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "7ce5e2c7-c7d3-441b-bde2-6767d8499597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 1086
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da21730e-a1aa-486d-bb19-a2c9315a1594",
        "cursor": {
          "ref": "68a23a3f-9b79-421e-bdce-fc089d97702f",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c7af8482-64c2-4713-9737-ee1005a7ac33"
        },
        "item": {
          "id": "da21730e-a1aa-486d-bb19-a2c9315a1594",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2f3be069-9d0e-4aa7-b45b-0e8b3a54abb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 1103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "595e0c76-b1de-430e-b629-96bd1c885a0e",
        "cursor": {
          "ref": "5a46e017-f1d1-4d8e-aaae-3c5d37ca4757",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "de75815a-6163-4f0a-b5f7-1afc90b157bd"
        },
        "item": {
          "id": "595e0c76-b1de-430e-b629-96bd1c885a0e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "9e784130-f20b-4426-9089-4f65c0899cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 1121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9e43ea-230f-474d-b194-cd9f3efa534e",
        "cursor": {
          "ref": "76a328e7-1260-406e-9d9f-4a3c929db746",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0f483243-06d4-4beb-9b96-8d5863b2d54f"
        },
        "item": {
          "id": "3a9e43ea-230f-474d-b194-cd9f3efa534e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "96f1cd7b-16ee-4e14-8245-73171dc036a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 242,
          "responseSize": 1379
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1d8ba44-f338-4c88-848b-01c68f09e70f",
        "cursor": {
          "ref": "9c1eda7b-762e-450e-8c2c-07f9a8c81002",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "6db05778-ffdf-4ebd-8044-af0e23f8c7f8"
        },
        "item": {
          "id": "b1d8ba44-f338-4c88-848b-01c68f09e70f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "20869095-4a79-4057-8c99-c8e24883ee77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 1361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b065c6e0-7d29-474d-a5d1-c714e14be4d4",
        "cursor": {
          "ref": "ec83f573-474b-41ba-aa57-e7573c7f134f",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "8b470ea0-872d-4403-a23e-c4ca18d155a7"
        },
        "item": {
          "id": "b065c6e0-7d29-474d-a5d1-c714e14be4d4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d1fb24dd-fbbd-4e36-bfaf-d2900841bf35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa9ddc3-df7d-4547-bdf7-f4afdb229434",
        "cursor": {
          "ref": "0489ea01-91ef-4b9c-8f5d-e70f6cbba87e",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "944971f4-d2a3-4101-99ac-2207ac787b7c"
        },
        "item": {
          "id": "5aa9ddc3-df7d-4547-bdf7-f4afdb229434",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "7fbda61e-5708-4a9f-b489-51c43393e612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c579081-71fd-4d45-af66-6adefcdc55c8",
        "cursor": {
          "ref": "e2ae2d48-febf-4b03-abb2-ce1cc9ac6dd6",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "11dd151a-fc40-4c7a-bc45-c0f7180a043a"
        },
        "item": {
          "id": "8c579081-71fd-4d45-af66-6adefcdc55c8",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a7ccaeff-4f7c-409c-bf45-0132445dfc84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1358
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5966674-9e6c-488f-b4e1-2bad880ec9a1",
        "cursor": {
          "ref": "88d37671-0e74-4663-9a85-950def52ed82",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ee8b3c27-0879-45e6-8ecd-de5ab6dc782b"
        },
        "item": {
          "id": "d5966674-9e6c-488f-b4e1-2bad880ec9a1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f77fc56f-509d-4553-9139-a8db5e307b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 247,
          "responseSize": 1184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a87fc8f2-2ff7-4b7e-b3f4-e1fb985d9f09",
        "cursor": {
          "ref": "5cc1eae1-4590-447c-9f41-a17261952af9",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ddea709f-69f4-4113-bb6c-28a869d652c9"
        },
        "item": {
          "id": "a87fc8f2-2ff7-4b7e-b3f4-e1fb985d9f09",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d4fa898f-8151-42c8-96dd-d8fa999806c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4f3409a-0fa4-4e77-891c-d2194803ebd3",
        "cursor": {
          "ref": "e48fcab2-3fd1-4de8-989d-ad9de89cdd35",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "deb2ddb3-b450-4d4f-8c15-70201e415f87"
        },
        "item": {
          "id": "e4f3409a-0fa4-4e77-891c-d2194803ebd3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "2102307b-d2f4-4859-912e-98f21ded1955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:102)"
            }
          }
        ]
      },
      {
        "id": "e2a71a8a-021d-4386-87f2-e9de840a3f57",
        "cursor": {
          "ref": "ae728fcb-0a0b-42fa-ada6-af245c43d0a5",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "effa3962-4bac-4270-82e7-7e1bbaad4c79"
        },
        "item": {
          "id": "e2a71a8a-021d-4386-87f2-e9de840a3f57",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f07b11ae-fa6a-4488-99c3-e42c8e599609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "6611899f-1df3-459a-aec3-426b765d0184",
        "cursor": {
          "ref": "589f1e39-b753-47f8-99a4-d0889286f9d2",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d1af33a8-eb89-4b5d-96dd-3a0dca8284e8"
        },
        "item": {
          "id": "6611899f-1df3-459a-aec3-426b765d0184",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "39f70a42-98a8-4ff4-8219-f329e87e3869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 903
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "d496494e-09da-41c1-87b6-63631a1c7a06",
        "cursor": {
          "ref": "50c6ed92-bae9-41ae-9734-9b943f718dd4",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "26d4e5c6-74c6-4203-8a25-0fac1c0b7cd9"
        },
        "item": {
          "id": "d496494e-09da-41c1-87b6-63631a1c7a06",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "2c12b9e1-207f-4125-9e61-3f3b49889e8d",
          "status": "Created",
          "code": 201,
          "responseTime": 7193,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2969b66c-4ae7-4a66-8c55-963153ba354c",
        "cursor": {
          "ref": "4c38f441-3892-4dd1-a042-390044460d8e",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e1d3e54b-5ae2-4bc0-a0d0-26c04d7c3b05"
        },
        "item": {
          "id": "2969b66c-4ae7-4a66-8c55-963153ba354c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c9eaf5f2-983e-4536-8a4b-877fbbd47f04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 273,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "414eaa9b-2512-4440-aca4-7b96f4cba8b1",
        "cursor": {
          "ref": "e0caa1b4-38bd-4434-b543-51160ec35dda",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "1b55b822-4c68-426d-9917-689b23b7e824"
        },
        "item": {
          "id": "414eaa9b-2512-4440-aca4-7b96f4cba8b1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "95fc4843-856e-4a07-bcad-616af223df45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 1190
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "31bb3b6d-3327-42cf-bef7-e5b08c0265db",
        "cursor": {
          "ref": "68316661-ef0a-44cc-943c-9a8508a6c430",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "626b42cf-a94d-4ff4-8adb-67d437671f3d"
        },
        "item": {
          "id": "31bb3b6d-3327-42cf-bef7-e5b08c0265db",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e379976b-1a0a-4b20-a47e-991c5a0ef4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9259511a-d964-454f-8258-e2a1df0d0309",
        "cursor": {
          "ref": "bed2255c-619f-4b86-b149-7723a9bf62f9",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6ea42af9-187f-4b8e-9395-f75c977fba9c"
        },
        "item": {
          "id": "9259511a-d964-454f-8258-e2a1df0d0309",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2a212c13-e7fd-4a9b-8d14-20c019d64ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 258,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e15c5f-50d8-41b0-88a7-e2ec845a94cd",
        "cursor": {
          "ref": "4b653ee9-b4e1-4f2d-8fe6-78a77013944f",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ebeb253b-d3d8-46ac-be06-942faaedebdf"
        },
        "item": {
          "id": "a3e15c5f-50d8-41b0-88a7-e2ec845a94cd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1e2c386e-6fad-4972-9af1-3f20cc0efa60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c904c11d-cfca-4aae-9a5f-bfede91382f6",
        "cursor": {
          "ref": "abbc0d4c-770b-40de-8028-86955070d1f2",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "75d1a2b6-fb38-4e32-a2c7-be3589f82fa6"
        },
        "item": {
          "id": "c904c11d-cfca-4aae-9a5f-bfede91382f6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d8dbf92b-b87d-4acd-be62-bcfc564294c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8939c0ed-283a-4af7-9702-10fcd759b8f8",
        "cursor": {
          "ref": "47b7f35b-a172-414a-9df1-b2b17db0d90d",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e73e812f-bcf0-41e1-83d9-4f604490cb61"
        },
        "item": {
          "id": "8939c0ed-283a-4af7-9702-10fcd759b8f8",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1049360a-a452-4f60-ac1c-250ed913130f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 240,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d9e149e-4970-4d32-8e1d-fe8b0c58a581",
        "cursor": {
          "ref": "0d8c6f01-3731-459c-aec7-0903834e5211",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7b81c115-27d1-4ca2-8fb2-c8dc68c5158d"
        },
        "item": {
          "id": "6d9e149e-4970-4d32-8e1d-fe8b0c58a581",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "44672256-4f8f-4398-9943-01f6673e4f91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1933fc2-3a5b-4b81-860d-e98032e50334",
        "cursor": {
          "ref": "77571b0b-45ed-47c7-a43f-61ceecacc2f8",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "a40c537d-c15f-4ae5-85ef-d010a657364f"
        },
        "item": {
          "id": "b1933fc2-3a5b-4b81-860d-e98032e50334",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1ba1bcc0-9a24-4726-9b2f-e1922981636f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1518dc39-f749-470a-82cd-e0bab63600f7",
        "cursor": {
          "ref": "32356999-21e3-4efc-bdee-1ffdfdd63ed3",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2580298f-9d22-468c-a70b-5afd86f13741"
        },
        "item": {
          "id": "1518dc39-f749-470a-82cd-e0bab63600f7",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "38cda6f5-7cc8-43a0-87ac-4bc652855a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267a050c-2df3-4491-b08e-5efbbf24fb11",
        "cursor": {
          "ref": "36e596ae-d93b-4141-8376-49e368c4f3ce",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9ebc45d7-40e4-4dce-80c0-cd17adfe3091"
        },
        "item": {
          "id": "267a050c-2df3-4491-b08e-5efbbf24fb11",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c2f4ba53-f0b5-4fe5-a6ec-247ce3fcbd02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4da91f-76a2-4e92-a25c-8eee02d2bbd7",
        "cursor": {
          "ref": "abce771f-2db1-4766-a67d-975a10910e63",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "caaf5eb1-4f5f-4a86-bef3-c3b3d7bcfe45"
        },
        "item": {
          "id": "1b4da91f-76a2-4e92-a25c-8eee02d2bbd7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7dd9933f-db40-4881-942b-33d24cd6a7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17786a1a-131f-4653-9e9f-bdfb63872058",
        "cursor": {
          "ref": "af51d16a-7a0f-4cb4-81c7-4e930dd40077",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "80e101cc-70e0-4cde-b09d-644ca0d2f675"
        },
        "item": {
          "id": "17786a1a-131f-4653-9e9f-bdfb63872058",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9d4b0ace-23e3-4e9b-947e-a6dc34569c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7db1dca-d680-4019-9b75-1264c52afbc6",
        "cursor": {
          "ref": "0a2969d1-2887-4790-9655-0256eda929e1",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a97e16cc-9744-45c6-a999-4d24ff211eae"
        },
        "item": {
          "id": "c7db1dca-d680-4019-9b75-1264c52afbc6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6af77612-3f3f-4c44-b60a-c6f100e580b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 246,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1a3548-5818-449c-a400-5db30e64e567",
        "cursor": {
          "ref": "ec3b1eaf-81f8-44fb-bf5f-5185755c1ae8",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e615499f-1e46-442d-a16a-4104366cb4c3"
        },
        "item": {
          "id": "ad1a3548-5818-449c-a400-5db30e64e567",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8f061f4d-abf2-4442-8a35-c33e69eaa8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a754602-6e2e-42b6-a561-52227e663543",
        "cursor": {
          "ref": "6ef3d52d-bb63-4140-9753-776325bd98de",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b36f5f7d-fd11-4f76-8153-6dd8aa0a7217"
        },
        "item": {
          "id": "0a754602-6e2e-42b6-a561-52227e663543",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c5dac4fa-3b4f-4cb0-96f7-2d4367ddc673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 255,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c86ebef3-f5a9-4e25-b296-5685bcddc5b6",
        "cursor": {
          "ref": "8bfc7549-ecbb-42aa-be6c-da720870eb7e",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "20129d20-8046-4df7-b601-a392d90f1d00"
        },
        "item": {
          "id": "c86ebef3-f5a9-4e25-b296-5685bcddc5b6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "85fc41d0-0bfa-4e55-8d8d-b11410beca84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e9b7ac-d0f4-4c03-8d21-0bf78082cb8a",
        "cursor": {
          "ref": "4ef5627d-e2fd-4896-9956-7824127cd4c9",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "a1fa0b49-0bde-49eb-a50c-6e045f811f5e"
        },
        "item": {
          "id": "a0e9b7ac-d0f4-4c03-8d21-0bf78082cb8a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "484a7597-29f5-411c-80cd-cadaed832a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca935bb6-e401-4448-b6cb-1555d1f2be6b",
        "cursor": {
          "ref": "be961cda-0f39-4895-a005-eee1b2f5ddef",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "09039884-f663-4014-82d1-283d617ddeb7"
        },
        "item": {
          "id": "ca935bb6-e401-4448-b6cb-1555d1f2be6b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "98bc9b37-2c5e-406b-9f9c-b1b2ecd2d5cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437c5620-30b5-4752-b27a-38b02633eaa2",
        "cursor": {
          "ref": "b1dd30ad-1cec-4e51-aa82-2aa92d66f309",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1f811be3-9214-4193-aca4-68e85e371db2"
        },
        "item": {
          "id": "437c5620-30b5-4752-b27a-38b02633eaa2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "36428cae-8444-4e62-95b7-5c7f72924c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1d160cd-c9f2-4c07-8caf-8dc94795f4d4",
        "cursor": {
          "ref": "ff275a59-e3a5-4f01-82d7-c311566d75a6",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "64bffab5-1568-4068-ab44-a944484941ff"
        },
        "item": {
          "id": "f1d160cd-c9f2-4c07-8caf-8dc94795f4d4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "94674431-dc68-4e0b-a917-edb45a7a4606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5609ab2-c67e-4f2e-b2cf-52a3ced32c86",
        "cursor": {
          "ref": "b9778e21-ff29-431e-bc88-e3bf488bd84d",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "08c04cc2-17b1-457b-91dd-7af92805545f"
        },
        "item": {
          "id": "a5609ab2-c67e-4f2e-b2cf-52a3ced32c86",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e137220b-4571-47f7-8787-6e1ebfdf5964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "506ec74f-b2c2-45f5-8b11-26536e556d17",
        "cursor": {
          "ref": "a7b86939-9f27-4fc7-b6ad-15b9a9d877b7",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1381d2ce-23c8-4d13-90db-c5d4efdb1e8d"
        },
        "item": {
          "id": "506ec74f-b2c2-45f5-8b11-26536e556d17",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "27dc1f67-6bf4-43e8-a32e-64fb141117b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 257,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0266be8d-034c-420f-b09c-4201eeae0758",
        "cursor": {
          "ref": "230350ba-c598-4d69-8713-49787eb4ee42",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "93a5b86b-316f-4a8b-bfd8-2472b7436104"
        },
        "item": {
          "id": "0266be8d-034c-420f-b09c-4201eeae0758",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b7798386-7013-421d-a2cf-0be6763f59e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13887352-3cf7-4d65-a77c-0f1def4f3dea",
        "cursor": {
          "ref": "1bc0abd3-0499-4684-adaa-d23ac820f89e",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "555e4b1a-983e-408e-a694-db6112eddd95"
        },
        "item": {
          "id": "13887352-3cf7-4d65-a77c-0f1def4f3dea",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "79c92e85-c7af-4906-a581-f43c8aaa65d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a2e216-2fd8-4a2f-811b-2b4083c8067f",
        "cursor": {
          "ref": "cbefe5e4-742d-45ba-a2f0-cb2041996f91",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "fcdf5fa2-b8b4-4efb-a77e-567adf7936fa"
        },
        "item": {
          "id": "a8a2e216-2fd8-4a2f-811b-2b4083c8067f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d78fed47-af9c-4950-9df3-6e583bb43c0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 269,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ecd0d5-7c98-4e88-9fda-67cd08edf5cb",
        "cursor": {
          "ref": "773ed597-147d-4820-bebc-4b0f6c0baa3d",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "1edd28f0-991b-4944-9299-264213d83492"
        },
        "item": {
          "id": "88ecd0d5-7c98-4e88-9fda-67cd08edf5cb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6f6161b6-470d-4356-8dfa-b40218f77646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb83928f-c1e4-4177-bc42-5f374f7e8700",
        "cursor": {
          "ref": "0323a40f-e31d-43a8-8990-4e9b0f5265d2",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "47ffe014-7340-42bb-8b97-f2d5b0dd17c8"
        },
        "item": {
          "id": "bb83928f-c1e4-4177-bc42-5f374f7e8700",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a66668e9-70ac-4d7c-9c7b-c1dc352aeb63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a10bac-5ddf-4e4c-a8a1-0f73ce39a698",
        "cursor": {
          "ref": "994b6a82-382a-4175-b643-6d84cdabde7a",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "58c151fc-7a41-4038-a4a6-be720cfde17a"
        },
        "item": {
          "id": "c8a10bac-5ddf-4e4c-a8a1-0f73ce39a698",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d0f568db-d78c-429e-b9ff-c09453398601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 243,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3340e15a-be05-4074-a198-b44cdaeca693",
        "cursor": {
          "ref": "2516a5eb-ad58-4502-83cd-8f8fe0ce0856",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "01a32afb-f606-4216-8e01-4ec3930b5807"
        },
        "item": {
          "id": "3340e15a-be05-4074-a198-b44cdaeca693",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d792ad77-00ce-4914-af73-42ddf719a287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0833cbc-fc77-4f84-b697-8e382f0f868e",
        "cursor": {
          "ref": "b6ce5b79-7df5-4245-aa3a-c9226a6c3b84",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "029f200b-2ee4-4d19-8071-fba66429c953"
        },
        "item": {
          "id": "f0833cbc-fc77-4f84-b697-8e382f0f868e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "56ad09c2-98a2-4e20-8b90-9002dd43c869",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fb8d93-ebcb-4a11-8a6d-b65de671fd70",
        "cursor": {
          "ref": "aeb0b6c8-6069-4032-87e8-4ef3508ca9c8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c6fa7a6d-8b94-4423-99ce-0c2f31e37570"
        },
        "item": {
          "id": "99fb8d93-ebcb-4a11-8a6d-b65de671fd70",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "061d6762-3c82-48de-870f-373ca81ac834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 267,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d18cfe-5e3d-4074-be34-19a96091fe69",
        "cursor": {
          "ref": "3e79ea89-7a9c-4b93-b465-f443da9b817f",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "aab64eca-a204-4b00-a786-309e037920af"
        },
        "item": {
          "id": "86d18cfe-5e3d-4074-be34-19a96091fe69",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3e87e76d-aada-40a9-bb42-091fc97be39c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "465973fd-74d6-4720-9b89-696e9e7d00d1",
        "cursor": {
          "ref": "54849362-90cd-4f8b-a852-9a817a8e4e92",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "dadf4f0f-7070-42df-83b6-f2a7b6940201"
        },
        "item": {
          "id": "465973fd-74d6-4720-9b89-696e9e7d00d1",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "2a6d0b23-e525-4d90-925f-e4ba7b8a8cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2a6b49-040b-4866-b71a-69a00f3b580a",
        "cursor": {
          "ref": "d2f17a82-f5bd-4f06-8eaa-01d9a4e853a6",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "98f9a723-cc51-4d14-bc96-99bfae0942b1"
        },
        "item": {
          "id": "5b2a6b49-040b-4866-b71a-69a00f3b580a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "65f995d2-4404-491f-ab7c-d0d730df6124",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d63c1ce-094b-42b3-9a46-7d71ae9a3b76",
        "cursor": {
          "ref": "49b9a8ed-0224-42f4-9be1-3f504f3d2a28",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d83e3c69-4ee3-4ab6-8ab5-4c1ddd9863ec"
        },
        "item": {
          "id": "3d63c1ce-094b-42b3-9a46-7d71ae9a3b76",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "36181b76-ac4f-470d-b8ea-ea701e675903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 264,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9901b675-8c6c-499e-952b-d079b384052c",
        "cursor": {
          "ref": "837da9d9-6bec-426d-8150-490d5bcb3d9b",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bec2217a-b68f-429a-b820-7091d8cf44a3"
        },
        "item": {
          "id": "9901b675-8c6c-499e-952b-d079b384052c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a2d19d8c-19cf-428a-925f-72e6bda99906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "911ba689-1550-4528-82ea-4b23f99d2630",
        "cursor": {
          "ref": "1d726cd7-4a8e-4100-9f21-d218f04314e2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "0ae7aeed-9891-4291-9d37-f8e23c7c668b"
        },
        "item": {
          "id": "911ba689-1550-4528-82ea-4b23f99d2630",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "279fc577-8453-44d6-a46f-4a726eb5ce06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9840dc7-75ca-4d38-b18a-f6cfbd171ab0",
        "cursor": {
          "ref": "efed7cc3-90c9-4161-a0ce-a184a2ceda4a",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "774546d0-c102-4468-bcfc-bacdc1ea62ad"
        },
        "item": {
          "id": "f9840dc7-75ca-4d38-b18a-f6cfbd171ab0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "09974e49-d074-40d9-bb48-2fcee083ef9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a65913d8-366a-4aa7-921a-a1c82e901b22",
        "cursor": {
          "ref": "68bae9ed-0e4f-4cd8-b2b6-9a85110bec80",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "05c9eb60-10a9-4c17-8a94-1281cf33e471"
        },
        "item": {
          "id": "a65913d8-366a-4aa7-921a-a1c82e901b22",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7d3045da-2b41-4735-af66-f80395aa9150",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8896eb87-c897-4a65-8a5b-01387c65c001",
        "cursor": {
          "ref": "365b009d-d431-41d6-9214-bee49a8f7730",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f02ed7ef-9c8b-4f7d-9f7e-c3fc421cd7ea"
        },
        "item": {
          "id": "8896eb87-c897-4a65-8a5b-01387c65c001",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8a7fb530-cbc3-4bb3-a292-5f73fe0e0424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 245,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "494f23d7-e39f-483b-bf32-163e3b40e282",
        "cursor": {
          "ref": "839f79c6-17c2-4f2e-8891-31bb24f71abe",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d5807931-bd5d-4211-be91-a90056ca8b83"
        },
        "item": {
          "id": "494f23d7-e39f-483b-bf32-163e3b40e282",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "92fcf2bb-9f36-4ecb-b7f4-515f8c165f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ace050a2-34c4-45c3-85ac-bf056a3b6597",
        "cursor": {
          "ref": "048a6e9f-0bdc-4c33-b9e4-b151cad8d302",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "031089a0-02a8-4f30-8a5f-d3a393e19bcb"
        },
        "item": {
          "id": "ace050a2-34c4-45c3-85ac-bf056a3b6597",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6ed77e03-e86e-4609-8e87-5416deedf8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 266,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c6b595-d78c-47f3-9f47-bc8b1ca62d29",
        "cursor": {
          "ref": "71442d6b-895b-48b7-b056-657789f3484e",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "94367931-634b-4660-ae4b-5be1d0f2d60d"
        },
        "item": {
          "id": "16c6b595-d78c-47f3-9f47-bc8b1ca62d29",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e497855e-59d2-43b4-ba95-b957e747fb51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a04b6a3-5270-4d18-a05a-2693a75a86b5",
        "cursor": {
          "ref": "bceb7a26-91a3-4135-82a4-ff9a0e4eb75f",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cc10ddba-202c-40fc-b142-14d17392145f"
        },
        "item": {
          "id": "7a04b6a3-5270-4d18-a05a-2693a75a86b5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "5632e21c-6525-4e31-8cf9-69223e6ca216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 293,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30a93298-2eec-41fc-a4b4-8edabcd9e3de",
        "cursor": {
          "ref": "511982da-64b3-4d6c-b0dd-f731c40f92b0",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f7c4461-7912-45aa-af4c-7c2237f83b8f"
        },
        "item": {
          "id": "30a93298-2eec-41fc-a4b4-8edabcd9e3de",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "222be3bf-9d5e-4c16-a808-f4fd7b6ca566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 259,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8daf364-e53d-4a4f-a93d-1bd3f9a6c982",
        "cursor": {
          "ref": "ec91354f-c9e0-4d10-8df8-bfccb6362ada",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "84f3cf79-e0aa-4cb5-8e24-ce72302e9435"
        },
        "item": {
          "id": "e8daf364-e53d-4a4f-a93d-1bd3f9a6c982",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9cf29cd9-9660-4b3a-af93-e1ba35236d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 244,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a81f5b-66e2-4f79-b16b-2834e3c3dd91",
        "cursor": {
          "ref": "21f788d6-bb35-40c1-9bb0-686bacecc667",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fe028496-f638-4faf-ad4c-3003326e700f"
        },
        "item": {
          "id": "94a81f5b-66e2-4f79-b16b-2834e3c3dd91",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c45110f3-5f35-41db-b0b9-9fed514cec1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 256,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998556bf-5643-4ebb-902b-f315fa40214c",
        "cursor": {
          "ref": "21624b39-18c6-456b-a1b5-51a2e6b4be87",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "4a9d860e-fba3-4af2-87cd-e5a74d9038ae"
        },
        "item": {
          "id": "998556bf-5643-4ebb-902b-f315fa40214c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f6e2706b-bd39-4c73-bb6b-89a2b9291bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 272,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4232e85-4eae-411e-a327-c4e1357d0778",
        "cursor": {
          "ref": "12760418-0e10-4acc-bbbf-afc676a32a34",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "3d469faf-6bda-49bd-94d7-b7367082fe05"
        },
        "item": {
          "id": "f4232e85-4eae-411e-a327-c4e1357d0778",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "19c3c343-3ef9-480d-9d69-0a5b0a1d0e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa1267d-c619-45e0-bf31-16b1417db12e",
        "cursor": {
          "ref": "2bced646-24b4-43c6-90c7-04e6733f4fae",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f7af3646-9b57-47dd-9616-7195c0c6ebd3"
        },
        "item": {
          "id": "aaa1267d-c619-45e0-bf31-16b1417db12e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e71ad940-eb48-4b86-8385-113399684337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f4ab29e-5575-4c50-940c-577ff2826b8f",
        "cursor": {
          "ref": "3e3b9ace-699e-402b-99b2-b570542beffb",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9880893a-f9db-4149-9312-1bf23c85c9ee"
        },
        "item": {
          "id": "0f4ab29e-5575-4c50-940c-577ff2826b8f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "437cc675-b529-4dbb-a024-46a69f509a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19064da8-df18-4932-8657-e0df9e9d8c69",
        "cursor": {
          "ref": "144b6488-ed7b-4cb1-ae3e-2473752e4dff",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e0771fbc-4c06-4d2f-8398-82e00900c1ac"
        },
        "item": {
          "id": "19064da8-df18-4932-8657-e0df9e9d8c69",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fd3d80f4-1bcb-448e-952a-67c177f871f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 254,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0bbd466-d973-48a6-89e2-eb424495e2a4",
        "cursor": {
          "ref": "56054e1c-a368-48f8-aecd-62bbf4ecf1b5",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f08b295c-386c-4644-9b63-f22b65382956"
        },
        "item": {
          "id": "e0bbd466-d973-48a6-89e2-eb424495e2a4",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1553edb2-7e49-42c7-a44a-bc13ec35342d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 241,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212b9550-f0e5-435b-9e03-9898cc01b456",
        "cursor": {
          "ref": "5a5285da-ef59-49cb-a812-50b8f8c395fc",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1cb2213f-fd36-45ef-ba56-9f426390228d"
        },
        "item": {
          "id": "212b9550-f0e5-435b-9e03-9898cc01b456",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "89a409b4-45db-428b-bd37-63a084785c5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161cb3ba-a66c-4d92-8a0d-ff92de82ecfc",
        "cursor": {
          "ref": "0fa03ffc-8b73-4c17-89ba-58f0e6c9ba94",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "decaf273-6026-46cd-836c-8182f94df52e"
        },
        "item": {
          "id": "161cb3ba-a66c-4d92-8a0d-ff92de82ecfc",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bb9dd604-2da8-49cc-b5cd-e26aeb1fba5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c0a5b4f-262d-497b-98f4-0abd460d90e8",
        "cursor": {
          "ref": "72c7c58a-7436-4f72-a70a-a118d9cd5eae",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "551c3787-44ec-4bad-aa80-a1435ae13022"
        },
        "item": {
          "id": "5c0a5b4f-262d-497b-98f4-0abd460d90e8",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cb3eedb9-ab79-4ff5-95f4-62c2cace263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 262,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e63e0-520b-4166-8537-1f087f152972",
        "cursor": {
          "ref": "461cf7d9-2524-4a88-a017-f908a8667aa3",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ceaad705-7061-4e2d-8c08-dcbf03bd8130"
        },
        "item": {
          "id": "929e63e0-520b-4166-8537-1f087f152972",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "aa8ccfd2-9445-4bc3-819c-9e24e6b170ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 250,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c75712-66fe-48d3-85c6-cdddd18b0a61",
        "cursor": {
          "ref": "7e130a1b-94f3-411b-abb8-5db0ca022258",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "5c2f9fea-d823-401f-abd5-a41d64931fb4"
        },
        "item": {
          "id": "e9c75712-66fe-48d3-85c6-cdddd18b0a61",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "38c2d4ca-4762-42bc-9648-b851c28b7045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 252,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8115875f-1f77-42ff-bc5f-ef9218c77d08",
        "cursor": {
          "ref": "95ec326f-ca65-4147-8035-161713364c04",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c01d86ba-6de5-4340-b65c-3fc551cb9604"
        },
        "item": {
          "id": "8115875f-1f77-42ff-bc5f-ef9218c77d08",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "00c15136-3b37-43c9-8bec-028305668c34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be9dcb92-af5a-4e5b-b13c-0ec1072d4b2b",
        "cursor": {
          "ref": "00e3794c-0ae4-4e44-b0ed-94834466c17d",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "3d65cc99-3975-49a3-8577-ca0209fd9c37"
        },
        "item": {
          "id": "be9dcb92-af5a-4e5b-b13c-0ec1072d4b2b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "07214136-128f-47d3-aff6-ce8e918afea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "990c2caa-5ac6-4b5d-ae7d-804ca8fc5f0a",
        "cursor": {
          "ref": "2aa00a2f-7feb-4e1d-86db-5ceab5f2d379",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f8f7421e-b89b-4c25-a05b-2cc36a20d5d4"
        },
        "item": {
          "id": "990c2caa-5ac6-4b5d-ae7d-804ca8fc5f0a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d8e0a036-fc89-4fa8-9833-4c3f027fb919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 251,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "314c238b-3423-48df-9335-51d0761820d4",
        "cursor": {
          "ref": "d0f14394-3320-4e31-a8b1-3b5e1fb470cb",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f99d28df-ca11-4471-b078-ef5b4d5f24f8"
        },
        "item": {
          "id": "314c238b-3423-48df-9335-51d0761820d4",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f2db15bd-2687-44cb-8bec-dac21c170a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18dbad7-6df2-4f49-8fad-04ffabca94d2",
        "cursor": {
          "ref": "8b3ba71a-6dde-4c43-8863-990ba0e7cce9",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b0ccb062-260c-4163-ab4c-03ef0fb00202"
        },
        "item": {
          "id": "f18dbad7-6df2-4f49-8fad-04ffabca94d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a0e1d765-ddd2-498e-bf0b-9e3ca45f18cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 276,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9333041a-a38c-49fd-9e0e-e84e2d5785b3",
        "cursor": {
          "ref": "13684b28-4e75-4106-a0aa-9484882b900d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "1acbf07f-c225-4451-a052-6b9b42a6dece"
        },
        "item": {
          "id": "9333041a-a38c-49fd-9e0e-e84e2d5785b3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bb2862b1-d645-42e9-85be-394f491ed098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 263,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c6a7259-e42a-4b0e-8979-7b863688e893",
        "cursor": {
          "ref": "2a7164d7-e970-4810-8da8-ffeb6b5fa87e",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d5e88e98-f617-4a2b-a32a-4fa15f2f831c"
        },
        "item": {
          "id": "3c6a7259-e42a-4b0e-8979-7b863688e893",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "201badb3-e3ba-475d-b88e-a8c52c9957cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c01e1e-23e5-4222-b54d-4ed95f4a3bd0",
        "cursor": {
          "ref": "43ff856b-489b-4f19-a28d-04f9de781041",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "71330f36-05d1-419d-9aac-7b9d807b42f3"
        },
        "item": {
          "id": "a2c01e1e-23e5-4222-b54d-4ed95f4a3bd0",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "870b21db-06be-454c-ba2c-c7d2ac80a899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 270,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96039bc9-ddfb-4261-a035-150c824287a3",
        "cursor": {
          "ref": "9a6893c2-e257-4cc8-955e-9df24fff5e8e",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "43df863a-7b43-4555-b879-c23711f81d49"
        },
        "item": {
          "id": "96039bc9-ddfb-4261-a035-150c824287a3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "7bf67966-4c89-40ac-a8b2-52bf6586cbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 260,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f84419-bca4-496c-a5d0-5d75e6e4a04d",
        "cursor": {
          "ref": "cd3b39da-1fa4-448c-b78d-0be4e0f9d2ba",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "804ae42b-7502-4607-bbc4-2f364a8cd177"
        },
        "item": {
          "id": "f1f84419-bca4-496c-a5d0-5d75e6e4a04d",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "52cdffcf-c8e0-4463-b1f0-0904b42e3825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110f349e-57db-4dc5-8aff-f8bf3bc5b6bb",
        "cursor": {
          "ref": "faccc1ee-9f71-43e5-96ff-b4131a1f1704",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "8ae805f8-4299-46d3-9257-6824e72d1256"
        },
        "item": {
          "id": "110f349e-57db-4dc5-8aff-f8bf3bc5b6bb",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "214e4d9a-454f-4c97-8a93-0790290a5ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 275,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba8f7658-7f5b-4e8e-be3d-b7e38ca69efe",
        "cursor": {
          "ref": "8d3cfc46-2bee-4dd9-92bd-b27c149d8288",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8e8a1b80-be96-4089-bad2-b44f10f0b6da"
        },
        "item": {
          "id": "ba8f7658-7f5b-4e8e-be3d-b7e38ca69efe",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "883ecded-6fbc-4137-b97c-bcf2843f0419",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 239,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "307f7d4d-e703-4b80-a49e-d16d8aca8678",
        "cursor": {
          "ref": "795e7c90-b2e3-43f0-b77f-53af8050042c",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "abdddfcb-5dd6-467e-a779-783a054f65d3"
        },
        "item": {
          "id": "307f7d4d-e703-4b80-a49e-d16d8aca8678",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "9e269c38-401f-42d2-bb50-1f5775831c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 253,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c6fa79f-c73f-4210-b2ba-d6fbd8fcf450",
        "cursor": {
          "ref": "f9db4d49-8bf6-403f-ae47-14f6a5e411ff",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9049d4d5-1614-4bc8-a500-f8f728f4c38a"
        },
        "item": {
          "id": "6c6fa79f-c73f-4210-b2ba-d6fbd8fcf450",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8054b3fb-c894-4c4c-9ddc-81660a843e5c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb76d7-40e5-48b7-8e6a-25ac414bed07",
        "cursor": {
          "ref": "422649e0-9f7e-46e3-a91d-6736c6c36500",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "73626df9-0934-4691-a956-cc43d8a0fd0d"
        },
        "item": {
          "id": "fdbb76d7-40e5-48b7-8e6a-25ac414bed07",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "f84a2ea7-91aa-4ff3-a4cd-19dbbe3e12ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7af97722-d2c0-44e3-8099-bdfcf9efc3e7",
        "cursor": {
          "ref": "e7d0738a-f007-4672-a9ff-52f4504d298e",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a6dfc388-0c68-4836-9388-32599ef17e54"
        },
        "item": {
          "id": "7af97722-d2c0-44e3-8099-bdfcf9efc3e7",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "c2e83f33-d59c-47ba-bdfb-1cdf6397f901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de48e92a-5253-452e-bb1c-abf634d475de",
        "cursor": {
          "ref": "6fce6eba-7402-4c23-8bb1-5ca6e2741f6f",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "16eb2e67-224d-4589-b621-af66dbbaaaf8"
        },
        "item": {
          "id": "de48e92a-5253-452e-bb1c-abf634d475de",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "55d15552-8feb-4316-b213-1d7028ef4b31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657b6f4c-f78d-4383-be9e-c432c50dff1d",
        "cursor": {
          "ref": "167076ca-2335-4990-baa7-006972de6811",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "72aa1038-8ec4-486b-80c2-16c28486360c"
        },
        "item": {
          "id": "657b6f4c-f78d-4383-be9e-c432c50dff1d",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "647a1cde-8edc-4486-b714-71642140f2dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "539862b3-851b-4ba9-bd86-49dae3c7784a",
        "cursor": {
          "ref": "5d4b5675-b0c8-454f-9b3b-d889c9c86197",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "bd7ebe99-3b7b-467a-88e1-e3eadfcfc876"
        },
        "item": {
          "id": "539862b3-851b-4ba9-bd86-49dae3c7784a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4020784b-76ec-4563-9963-eac4a2b020c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22f2442c-095c-4429-91ae-06e71e9f653b",
        "cursor": {
          "ref": "a3c4d5bc-9b52-459e-8244-4f68bd00baef",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b1150612-9928-4e36-9c49-7039cb980825"
        },
        "item": {
          "id": "22f2442c-095c-4429-91ae-06e71e9f653b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "27e4c9c3-3b8d-4fae-8636-64613ac242c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02118d55-b39b-4712-aa1c-5159abae3c9c",
        "cursor": {
          "ref": "1faedb37-4db3-437f-a76f-fc43b09dfb4f",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "8434cd1a-67e3-473f-8033-37c671de9662"
        },
        "item": {
          "id": "02118d55-b39b-4712-aa1c-5159abae3c9c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c05e384f-ffa2-4496-9ae6-413a48ae3fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3fc458-5b10-4c74-91f9-12f3f018d4e1",
        "cursor": {
          "ref": "999e91a6-01aa-431a-9668-f43cbb8e9351",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "af5705c7-90a0-4355-bd25-eff046eada96"
        },
        "item": {
          "id": "dc3fc458-5b10-4c74-91f9-12f3f018d4e1",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "647483d6-6774-4a5a-91f4-61c1c9b1d1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db40e722-f7d0-4be8-9df5-7b15320d659d",
        "cursor": {
          "ref": "c750e68d-930e-462e-a84b-cb120708843a",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "12c08371-d0c5-4a47-a354-3725cab16792"
        },
        "item": {
          "id": "db40e722-f7d0-4be8-9df5-7b15320d659d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "81886500-f1bb-4513-b66a-d020db43b5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee34881-77ef-4d0f-87c7-1c611774a0bd",
        "cursor": {
          "ref": "45df5c8e-4ce5-4993-9134-0d5b513750e8",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "be3f6bca-9977-4a0b-9335-bbc9f6c26ec5"
        },
        "item": {
          "id": "3ee34881-77ef-4d0f-87c7-1c611774a0bd",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4fdf9f96-c73b-4e24-8fb0-f4305939803c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5797ed-4b37-42f5-b05c-279c0f043bb9",
        "cursor": {
          "ref": "6f8699c4-953c-4e44-8119-cb6083757eb5",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "77cf73b0-6e38-480f-909c-8d041176173d"
        },
        "item": {
          "id": "9f5797ed-4b37-42f5-b05c-279c0f043bb9",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "a8f1e87e-116e-4da2-bf10-8d4a579e5725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab7f65e-6671-4b34-b368-c5adddcb0f97",
        "cursor": {
          "ref": "272769ef-f973-417d-a137-0c93581e67cc",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a905be3c-4787-45b6-868c-182afade8c5b"
        },
        "item": {
          "id": "9ab7f65e-6671-4b34-b368-c5adddcb0f97",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "77104485-066f-4cda-b14c-5ac5c7691d09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e9a7e-1293-4836-b147-9b3b16d0ccf3",
        "cursor": {
          "ref": "3d5318a6-5659-469d-8eb6-edf1fb2b7344",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "c73f1935-7268-4c1d-a96c-96f8cbd3d148"
        },
        "item": {
          "id": "402e9a7e-1293-4836-b147-9b3b16d0ccf3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a51d6469-6d77-4e3f-ba43-8427fc4fd3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7123c8e-cb17-46c3-8ba7-0408b8358afb",
        "cursor": {
          "ref": "82c8b7c2-62b2-4eaa-9362-c42cfd337ce2",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0219c3f9-6105-4532-b41f-bdcf49b6975d"
        },
        "item": {
          "id": "d7123c8e-cb17-46c3-8ba7-0408b8358afb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "e6cdfd59-291a-42f5-8d08-9e75a6d08445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598c718e-1911-4298-ad5d-c3b04d017670",
        "cursor": {
          "ref": "f6278fd3-a4e6-48be-a27f-f5a5e89ae239",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0d63e902-0187-44e2-ad35-84b009b4f8dc"
        },
        "item": {
          "id": "598c718e-1911-4298-ad5d-c3b04d017670",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b08b8f61-5d44-433a-93fa-3c4930b5ef5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b59ca3e-c03d-4e58-8f95-e5f7b449a925",
        "cursor": {
          "ref": "feb9abb2-adda-42a9-b9c0-4b28ce03ec23",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ab93d1c3-b01e-4c9a-9949-f008c076086f"
        },
        "item": {
          "id": "8b59ca3e-c03d-4e58-8f95-e5f7b449a925",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "625de92c-cfda-4707-8a50-baeb6f279c40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e30a5576-2803-4f28-bb75-b8d7355780b2",
        "cursor": {
          "ref": "48accb90-1cfa-4514-994a-e6e7ca791078",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "2621e492-204e-4ad7-9403-71543912cc1e"
        },
        "item": {
          "id": "e30a5576-2803-4f28-bb75-b8d7355780b2",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "be3ed29d-8e0f-49a9-9ee5-5f3c76a01653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc34703-431a-40ec-96b1-5cf81a41f4d0",
        "cursor": {
          "ref": "970d1b17-1308-4e9b-bf82-4727b1b8a983",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "2105c12c-8c9b-4420-a0ec-94823d87d020"
        },
        "item": {
          "id": "2dc34703-431a-40ec-96b1-5cf81a41f4d0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "277ea12e-92d5-485d-9f38-a57915d59f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f921bc7-51e6-43ca-afe1-1b2e15edf293",
        "cursor": {
          "ref": "75d5b56a-4d12-45e7-a030-6c6a9fc4f6ed",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2306e379-f6ff-4274-8db8-b3787497a472"
        },
        "item": {
          "id": "8f921bc7-51e6-43ca-afe1-1b2e15edf293",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fddf2801-8678-4a8d-83ea-b1b62750376a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa75dce8-ee8f-478b-88a8-ebd69a6f61b9",
        "cursor": {
          "ref": "e9681ddd-bc04-42a0-8f83-7d3fc00e5a89",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "19b5565b-fd7d-4d8d-bec7-b227856fcac9"
        },
        "item": {
          "id": "aa75dce8-ee8f-478b-88a8-ebd69a6f61b9",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "19ce0c28-92f4-4b52-b1d6-f7db9f45defb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a612bbc3-e989-43ed-b6b0-193afdfea927",
        "cursor": {
          "ref": "ff327f3a-ee2f-437a-86c7-0d7ce1db1b13",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "97cd8a64-6fa1-4599-86f9-0c67e7c40bc2"
        },
        "item": {
          "id": "a612bbc3-e989-43ed-b6b0-193afdfea927",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "cc365431-0226-4d27-b3aa-db91db93ca8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262d826c-4d16-44d9-ac3a-79306e8ccdbe",
        "cursor": {
          "ref": "d1f37c5a-4a4b-4814-b5f1-ec7d2372254c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "e3dafc9d-babe-48d2-a438-685b26a2a60e"
        },
        "item": {
          "id": "262d826c-4d16-44d9-ac3a-79306e8ccdbe",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "840ac2d9-2649-4f80-874b-3965d9258e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40db8ece-86c7-458a-9127-156469efea22",
        "cursor": {
          "ref": "3491d966-e30c-40d9-8c76-6ab88f78feec",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8a7a8fdf-47d5-4bc5-a67f-b3a3351defa5"
        },
        "item": {
          "id": "40db8ece-86c7-458a-9127-156469efea22",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cbe2de62-2a50-4745-a683-955ff8e73811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5be3bf-46da-466b-8157-5787786b9e2f",
        "cursor": {
          "ref": "bf999f01-f7bb-4aa7-885f-46359bda15e0",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "f2d72da7-f19d-4b88-a6d8-4c9b77948192"
        },
        "item": {
          "id": "8b5be3bf-46da-466b-8157-5787786b9e2f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "ca5fd251-9bc4-4010-a4d3-6f9997ed0dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3cec54b-4160-4ebd-87c9-8559e468dd5a",
        "cursor": {
          "ref": "71e64f2b-f7e1-4088-88f8-f02b1de5026e",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "707f7d21-e45c-4e88-89bf-7a9249176362"
        },
        "item": {
          "id": "c3cec54b-4160-4ebd-87c9-8559e468dd5a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0cdc091e-4fc2-4e55-8a22-3a98691feaed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c745b3d2-a73b-48f3-bfee-c6bdcd267621",
        "cursor": {
          "ref": "83178635-b4c6-4b25-a3d5-a62230237ffd",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b1e136c1-943d-45c8-9eb7-47b57941ecc4"
        },
        "item": {
          "id": "c745b3d2-a73b-48f3-bfee-c6bdcd267621",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ac79181f-c62f-4a3f-b8bc-48d133e80817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b926c7-f889-4f9a-88b5-f8c73c6e3251",
        "cursor": {
          "ref": "4e6772ed-bd5b-4111-96b5-aef007df0c6a",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2b27ca9a-3cff-4a7d-81e0-1ce2a6d2614f"
        },
        "item": {
          "id": "c2b926c7-f889-4f9a-88b5-f8c73c6e3251",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b8a297dd-199e-4071-83f2-fddbb12f10a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05bfcb1c-26e0-4500-a957-144cc382ab44",
        "cursor": {
          "ref": "e5556e84-13b6-460c-addf-cc41733ffc4e",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3def025c-02c5-471e-9da3-d6820a41fcb5"
        },
        "item": {
          "id": "05bfcb1c-26e0-4500-a957-144cc382ab44",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "2485330f-2a84-4e3d-b28d-5ac24be90a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0b33d9-b6be-4854-8130-a8f719acd654",
        "cursor": {
          "ref": "854c08d0-c804-4902-9453-2c408175cf5e",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e27b065f-2a00-40eb-8452-8e90ea7ca141"
        },
        "item": {
          "id": "ef0b33d9-b6be-4854-8130-a8f719acd654",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "21c93ac9-1f9b-405c-821a-a370a70f9646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc827fd2-5b1c-4e4b-bcef-506b37ca1e13",
        "cursor": {
          "ref": "b57aedf3-c704-4f75-a705-d7edb42d5f2e",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "778997d1-8ef9-48ba-8454-114687d0bd60"
        },
        "item": {
          "id": "bc827fd2-5b1c-4e4b-bcef-506b37ca1e13",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2c15dc82-432a-466b-b62d-b6c107a2794d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc6afdbb-804d-4d98-b5a9-3cdc31900ff2",
        "cursor": {
          "ref": "438b0e1d-bbc6-490a-bb32-99f057808d2d",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "3440c514-a721-4c09-b046-c2a79c39ca13"
        },
        "item": {
          "id": "cc6afdbb-804d-4d98-b5a9-3cdc31900ff2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "65fa6fa7-d7f5-4a9f-bd23-f752535721e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59017d49-9054-43a5-9a8b-d844145f8779",
        "cursor": {
          "ref": "34736cbc-c426-42ff-8fa2-fa5201193f96",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "0bb30de9-7c44-4818-afc3-a25b205d13fc"
        },
        "item": {
          "id": "59017d49-9054-43a5-9a8b-d844145f8779",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "fd5711d6-16d4-41cd-820b-45bbcc758452",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825682e8-610c-40f0-aca4-316ce3d2f482",
        "cursor": {
          "ref": "29f42049-2fcd-4a30-9284-578abcbc70ef",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "784669c1-bb3c-422d-ba1b-80692ff2fdea"
        },
        "item": {
          "id": "825682e8-610c-40f0-aca4-316ce3d2f482",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "7c93bac8-1222-424e-a7d0-222b5190dc2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae1c0f9-dd5d-4917-93d2-5cd28f3f9ec7",
        "cursor": {
          "ref": "e1ff2b5d-f61e-4cc6-9bcf-3730664a2d4a",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a0a6b677-e716-4c37-8205-43eba0b0bc5b"
        },
        "item": {
          "id": "eae1c0f9-dd5d-4917-93d2-5cd28f3f9ec7",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "82451f31-b23c-4acd-a5eb-af0c1681886c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b80a46f-5f7f-4ba8-802f-0d0a877068a0",
        "cursor": {
          "ref": "8090e6e4-6f53-4c34-a546-80f1e221ea9b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9044ec24-3ecd-4fdd-81fc-0abe5b01b8d1"
        },
        "item": {
          "id": "1b80a46f-5f7f-4ba8-802f-0d0a877068a0",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "38d099f8-95e2-48c8-b568-d2095a28a122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0c5a084-1971-4f0b-bd81-204c4233f98c",
        "cursor": {
          "ref": "b4c9bfbd-95c1-4cd9-affa-39690a81ec8e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "8f01b037-b507-470b-9093-176acf31b78d"
        },
        "item": {
          "id": "b0c5a084-1971-4f0b-bd81-204c4233f98c",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5a93d51f-9050-4ed2-9764-275184bd5a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd9d496e-436c-4882-827b-7e326c6a5c34",
        "cursor": {
          "ref": "b02c986e-dcc3-41c3-bbd0-b6acb431ba56",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6aac23a6-3eff-4f24-9f04-0b252652c6fc"
        },
        "item": {
          "id": "dd9d496e-436c-4882-827b-7e326c6a5c34",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b39fb3ed-ab46-4efd-bfab-7e5fe64aab97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30649e3b-51ce-4dfe-8212-2be1c88d4046",
        "cursor": {
          "ref": "1b2f4e89-aeb7-441a-a322-2eb594589875",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "45482d68-91d8-4e01-b6eb-3953f2ed3371"
        },
        "item": {
          "id": "30649e3b-51ce-4dfe-8212-2be1c88d4046",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e5ab543c-a51f-4d57-b51e-5b2f1f3118f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f80708-5ae0-4331-bfff-11f621774128",
        "cursor": {
          "ref": "1b798139-1855-44c7-b2da-a13d6445fe60",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "bd6a38d4-c12a-4fb5-a7a5-7e7535eb374c"
        },
        "item": {
          "id": "82f80708-5ae0-4331-bfff-11f621774128",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "6d49f498-ffc0-4b4a-afc1-d2036bd572e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31fa71e-a5f6-4511-b765-96fd2c168af8",
        "cursor": {
          "ref": "ff18b19f-bc9f-4389-8281-749b6de48257",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "05d80fc2-0d4f-4039-9ee4-c060eed8adce"
        },
        "item": {
          "id": "b31fa71e-a5f6-4511-b765-96fd2c168af8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "43f7cd47-0572-4f65-a5c3-0bf726d73065",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34896289-6e09-4483-9fde-2c192f434ba5",
        "cursor": {
          "ref": "809f45b2-d061-4a10-b9ce-d211f330c492",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "e83610e2-07ee-4803-8c61-a259638ca7c9"
        },
        "item": {
          "id": "34896289-6e09-4483-9fde-2c192f434ba5",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "336da6ad-8ad0-4f11-a118-98796c109764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccdd217-1a40-4656-8b1c-624f7e64e2e4",
        "cursor": {
          "ref": "e42d9e16-141d-447b-84cf-d6660f7aca34",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9835c0f6-f43b-4960-b652-bc0a77bcf70b"
        },
        "item": {
          "id": "1ccdd217-1a40-4656-8b1c-624f7e64e2e4",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "b8984755-631f-4839-9a11-a873f727644c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a367f71c-65dc-4b71-88d5-1ea9830ba066",
        "cursor": {
          "ref": "d14509e0-c3a4-4f45-b270-0705810046e4",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "58ea4236-b1e3-4454-8e7c-bea0945e92d8"
        },
        "item": {
          "id": "a367f71c-65dc-4b71-88d5-1ea9830ba066",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "bc1e5379-7588-4975-9269-71d02a97fe43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6d1268-ef22-493c-a0af-b548d794e261",
        "cursor": {
          "ref": "364c0f2a-6b0f-4c75-be40-96169709865b",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "856ff49c-05d8-417b-a143-c4e95f85c1bb"
        },
        "item": {
          "id": "3d6d1268-ef22-493c-a0af-b548d794e261",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "207e265b-83ef-447f-a503-7a55cebe19cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "808a7ecf-580b-4ff7-83c2-13b1e00933e9",
        "cursor": {
          "ref": "b3be8f1e-9632-410d-831e-1534702c84f3",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d132bb3c-4f1a-47b2-8453-03dbaccc8bb7"
        },
        "item": {
          "id": "808a7ecf-580b-4ff7-83c2-13b1e00933e9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8f483276-ca09-4c3c-983b-16f2d30407fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ed547f-fbc8-4c5c-9417-7a1b29178bb3",
        "cursor": {
          "ref": "fea986f9-5bb3-436d-b4f7-b1a972d64ed3",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "52c0dcae-2a6d-4900-8f79-45f6528f4776"
        },
        "item": {
          "id": "31ed547f-fbc8-4c5c-9417-7a1b29178bb3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7e4bdb31-f5bc-4f9b-aff5-4ece1a99518a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e2141d3-dc77-4ca6-b707-1c6f23745586",
        "cursor": {
          "ref": "7a68a8f4-f259-4ef8-9b86-f9a8b3199e7e",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "41bf2f1d-05d3-45f2-a39d-c71eddaaae5c"
        },
        "item": {
          "id": "5e2141d3-dc77-4ca6-b707-1c6f23745586",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "691248e0-d5ca-4619-b764-93af0a08330d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e70fc4f-b712-4f3e-b6f4-d45e78f70d99",
        "cursor": {
          "ref": "e555f2bc-dc59-43e5-883c-7aa4bbba0f40",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "696769ae-62f4-4caf-b9ec-a8fefb096f4e"
        },
        "item": {
          "id": "2e70fc4f-b712-4f3e-b6f4-d45e78f70d99",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "165af579-ff8d-4ec0-8a10-d0309b167322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffbb99b4-7e3e-49e6-9b11-211946f8a097",
        "cursor": {
          "ref": "6ac074d4-609e-43b1-8951-8ada5e9fbc5a",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "56c6ca52-0ebe-49ea-a404-2820aef6f011"
        },
        "item": {
          "id": "ffbb99b4-7e3e-49e6-9b11-211946f8a097",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "82ad48d7-bee8-4582-96f2-8a8bfad6b555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f08eb0be-1860-4627-a794-d24258933c0f",
        "cursor": {
          "ref": "76135254-4d1a-4917-b768-9ce4ac857cfb",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "078ff9e6-3a4b-4238-939d-e920ad8a2d8b"
        },
        "item": {
          "id": "f08eb0be-1860-4627-a794-d24258933c0f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "a1c08907-a7ea-43d8-bf27-408136413641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "206aa440-4aff-4ece-8b5c-56d09dfcd03e",
        "cursor": {
          "ref": "6790829d-d1a9-4bc1-aa94-6a6ef3f863fd",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "80b53c3c-3b29-4d9c-8892-4e23ccc8820d"
        },
        "item": {
          "id": "206aa440-4aff-4ece-8b5c-56d09dfcd03e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "8ba054de-cd0f-426a-8d57-4a574950538b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b51d6b4-0ee4-4436-a97c-bc0ff06a6850",
        "cursor": {
          "ref": "275a5df9-5c65-47be-bd06-030206a24daa",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "9b67d668-cf57-430d-b717-4747c16facaf"
        },
        "item": {
          "id": "1b51d6b4-0ee4-4436-a97c-bc0ff06a6850",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9a7dfae9-bed2-4662-b299-1a144808fd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 166,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b598f8b-2419-4094-a308-0c7d58ee0df1",
        "cursor": {
          "ref": "26c9ecde-d739-43e3-83d6-b6e0834a2a4a",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "89e2d509-74cb-4528-9879-0338041f41bb"
        },
        "item": {
          "id": "8b598f8b-2419-4094-a308-0c7d58ee0df1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d804b562-652f-4404-ba0b-fc0ffd9146ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95eddb18-7d91-42ec-a9f4-de4fdb0fc5c0",
        "cursor": {
          "ref": "59e9cfa0-a14a-4d1f-8d3a-853867e9c8ca",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7ff77baf-44b3-4f07-86e4-414691a323ba"
        },
        "item": {
          "id": "95eddb18-7d91-42ec-a9f4-de4fdb0fc5c0",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "caf4708e-0cb2-4468-95f1-5a678aa0f59f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e327cf23-a04b-49a6-971e-47051e793f6c",
        "cursor": {
          "ref": "250b98fc-c9dc-4902-9537-0b76b676d4dd",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "ef8ae024-733b-453c-a419-a4604d756637"
        },
        "item": {
          "id": "e327cf23-a04b-49a6-971e-47051e793f6c",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "318e9a85-a19f-4157-9690-12d254b803c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3906a185-f789-4206-aebb-e451050ddc65",
        "cursor": {
          "ref": "f30f0ad6-9fde-4f8b-8af4-1edfa439e396",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7a3ba8be-6c2f-4b06-84bb-3694252b5632"
        },
        "item": {
          "id": "3906a185-f789-4206-aebb-e451050ddc65",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "3947fefb-4670-4da9-a08c-e7672da883c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ce9451-ccef-4cda-9003-a111b6b1c4e8",
        "cursor": {
          "ref": "150cce39-a3b4-4016-b431-9d374398f100",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "aa8888a8-9cd6-4cc5-bcb2-ca5df8f3bf48"
        },
        "item": {
          "id": "21ce9451-ccef-4cda-9003-a111b6b1c4e8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "e081c140-980c-4709-b630-31a738755018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497218df-67e1-43ee-a166-10856ad08aea",
        "cursor": {
          "ref": "347a70fc-087e-4db6-8b51-833f8bb88939",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e7fc7868-407f-4ff3-96da-e0aca6548a6d"
        },
        "item": {
          "id": "497218df-67e1-43ee-a166-10856ad08aea",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "1124b1ff-1444-40f6-8808-9db6e420d626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a2c78d-4986-445e-860b-85b316fa3c8a",
        "cursor": {
          "ref": "86c4397d-c8f7-4cd2-9287-d6205e9059cf",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e5a1b2ab-88f1-4be1-85c3-2048b7d23af1"
        },
        "item": {
          "id": "22a2c78d-4986-445e-860b-85b316fa3c8a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "9b6959b7-1787-41ba-b5b7-9888577c9a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fd5351c-67de-43ef-9c46-cf81663093c8",
        "cursor": {
          "ref": "6a87aedb-0974-44db-9ccd-a228966a3d02",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "91645626-80b9-4b23-8eec-2c2e5c874129"
        },
        "item": {
          "id": "0fd5351c-67de-43ef-9c46-cf81663093c8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ce4e03e9-712a-42fd-bfa1-6f7527895a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06144aa5-a6bd-49cf-97b8-7607376338d6",
        "cursor": {
          "ref": "33f214c3-fec3-4acd-a2df-c13b5c4d8ddb",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a236cede-bcc7-4a6a-a4e0-40eefcca9a12"
        },
        "item": {
          "id": "06144aa5-a6bd-49cf-97b8-7607376338d6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "2728a51a-aa02-46d7-ac1f-4101034a9546",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35657546-365c-4308-beb5-5ad37970310a",
        "cursor": {
          "ref": "b2801715-3542-451d-bab5-85ddb2b25679",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "5aa36ad3-cef5-49bc-8d07-383b249be4ee"
        },
        "item": {
          "id": "35657546-365c-4308-beb5-5ad37970310a",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "383825f6-6de9-4969-818c-86c727fdd38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0d4a6dc-8581-471e-bd3b-dce44fe1db27",
        "cursor": {
          "ref": "f7867885-5748-4665-9997-ce13b883a560",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "36dff852-9eaf-4327-a6c5-6ca5b8404863"
        },
        "item": {
          "id": "c0d4a6dc-8581-471e-bd3b-dce44fe1db27",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "dc6330a1-198f-4ba9-acd4-b8fc1c879e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e805070-4176-4f6e-acc7-2859e075e577",
        "cursor": {
          "ref": "c01d606b-2ddb-4100-90ba-e5073177f0fe",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "0aa03c44-bae0-4cba-8f6f-d185e1110f0b"
        },
        "item": {
          "id": "6e805070-4176-4f6e-acc7-2859e075e577",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "7f67c87d-eefd-4bcb-8af7-c9a561725360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bea3d1-5de5-4fd6-a69a-2f46b10e6528",
        "cursor": {
          "ref": "4e806884-0e69-4be0-986c-de566208e14d",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "a70179fe-74a0-438f-896b-3974f2108d38"
        },
        "item": {
          "id": "20bea3d1-5de5-4fd6-a69a-2f46b10e6528",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6179de26-f0c0-45f1-9c37-2a16c7273671",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "001c248d-10a4-4e7f-940e-b0f76a255de7",
        "cursor": {
          "ref": "5c76afea-47d7-45cd-b8bb-f76600db62fb",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "653a1eb3-8806-4504-8acc-177128b0c752"
        },
        "item": {
          "id": "001c248d-10a4-4e7f-940e-b0f76a255de7",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a2b67cd3-08bc-4dd1-83a5-e915b9f00c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f933c7d3-8c95-4172-b756-f0fba8323f4b",
        "cursor": {
          "ref": "fe17a3d9-0db4-4acd-b36f-c04dd6c693ff",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "53077bbb-61a0-4ad6-b2fb-eee177b6213d"
        },
        "item": {
          "id": "f933c7d3-8c95-4172-b756-f0fba8323f4b",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7c189735-ed0d-47a8-a7a0-18d04b37cfd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b80f9e-3570-4a6f-a2b7-cd423d5a132d",
        "cursor": {
          "ref": "6bb0a364-9ecc-45e4-b2f6-a92cadf77835",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "806382ec-d8de-4e6e-986a-d4d03c02d341"
        },
        "item": {
          "id": "e0b80f9e-3570-4a6f-a2b7-cd423d5a132d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "92089805-250e-462f-9c08-09dfbaccdc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9800a6-1bef-4bb3-a0f7-7bf6896024b2",
        "cursor": {
          "ref": "316adc2d-2330-4c2a-bb35-4c9cdef9d1ca",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6165ceb9-7dd5-45f9-984f-db8767b69df5"
        },
        "item": {
          "id": "3b9800a6-1bef-4bb3-a0f7-7bf6896024b2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9c5f9acf-ecfd-446f-b8d5-82172e98231b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a2a4a6-fcff-46a9-bfd5-e5601f95fd63",
        "cursor": {
          "ref": "f3babe82-f75a-4050-ba5e-9864cdc658d6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c029e3ed-ddb9-4a62-bee8-636b0ee04bad"
        },
        "item": {
          "id": "42a2a4a6-fcff-46a9-bfd5-e5601f95fd63",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "682a17f1-9220-43bb-a64a-d1e989d12e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4937b054-2a2f-4e6f-87fb-d872184d6d0b",
        "cursor": {
          "ref": "8fde9745-7eef-4290-93e3-75ba398af400",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "d8a98fbc-e4de-4204-a1ae-9929622cd061"
        },
        "item": {
          "id": "4937b054-2a2f-4e6f-87fb-d872184d6d0b",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "4188c4d9-072c-4743-b0db-89e11207ecef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3239e4a5-6110-47bf-bbd1-a2ff556044d7",
        "cursor": {
          "ref": "057203e1-a3b6-41b3-9aaf-131f13512810",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c94f762e-4ac9-4a4e-bf6d-4b0e07797e86"
        },
        "item": {
          "id": "3239e4a5-6110-47bf-bbd1-a2ff556044d7",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4015871d-0fe3-4ca6-ad21-78af516cff3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbfe92d-d3e9-45a5-90f5-0cd5bc726c23",
        "cursor": {
          "ref": "1997fa72-2ada-4b32-9474-d966978d53cf",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "f3dd28bf-035b-465c-a96f-921aff8879a0"
        },
        "item": {
          "id": "3bbfe92d-d3e9-45a5-90f5-0cd5bc726c23",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "56f44d2c-5174-4259-80e0-62e72039474f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3da9c93-62e0-4e16-9395-08b0b729622e",
        "cursor": {
          "ref": "91c7dc25-dc44-463a-9937-4b97af8eb55b",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "2f7ccf56-7bf4-49aa-ad24-4227e14d3c2c"
        },
        "item": {
          "id": "b3da9c93-62e0-4e16-9395-08b0b729622e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c05d8df5-ec5e-4212-8ce8-5a8e30b1301c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c2c66b-9542-42d3-9ea9-ff1d35b179d9",
        "cursor": {
          "ref": "2fd4ab80-705d-4077-a04f-9af1d0b00028",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "fb3f1cf5-4a09-4ea3-ae91-55f2653dc246"
        },
        "item": {
          "id": "b7c2c66b-9542-42d3-9ea9-ff1d35b179d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4b1b4115-a2d2-499a-bcb2-0f833a138c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf9354d0-12ff-43d1-ae83-038c2b174d39",
        "cursor": {
          "ref": "cf20a169-36e9-4933-a103-162396248dcf",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "48885faa-6e52-403e-a4ac-066ae80ec16b"
        },
        "item": {
          "id": "bf9354d0-12ff-43d1-ae83-038c2b174d39",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "216ab555-b308-4155-841d-47c9f9f1af48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ad957c3-c0c9-4294-a3d0-d0dc63bf1b58",
        "cursor": {
          "ref": "2b6d5fb5-e6c9-44c1-94d5-9d8a10717461",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9e046038-18fc-4192-b0e1-e49dda5bb7a7"
        },
        "item": {
          "id": "2ad957c3-c0c9-4294-a3d0-d0dc63bf1b58",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "51afd612-e746-485e-a3f4-e41c8a96c2a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315e95e3-345c-4a70-b95f-67c975c15771",
        "cursor": {
          "ref": "d6cc81da-d983-4c07-9ea5-9856efac49bd",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "95f42a89-df78-46d7-b87a-914bb3e3de04"
        },
        "item": {
          "id": "315e95e3-345c-4a70-b95f-67c975c15771",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "70f1432b-7f60-43a8-97bd-da52cadfe753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7faad03-4308-4269-b7fd-6f52061c449c",
        "cursor": {
          "ref": "0313d337-c0d4-4611-9c76-78ac9d05d2bb",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "aad6228d-42ca-455d-918d-26c7a4cfee3f"
        },
        "item": {
          "id": "c7faad03-4308-4269-b7fd-6f52061c449c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "a0e7662f-daf9-42c6-bdc5-81264cadd379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "516ac3ba-42da-4d10-bb5b-43095398b56d",
        "cursor": {
          "ref": "5b73f068-c626-43c4-acce-b426d4b4bd38",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e89c5aa4-922d-4f0d-bfea-e95e56868493"
        },
        "item": {
          "id": "516ac3ba-42da-4d10-bb5b-43095398b56d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1f863449-ee98-45e1-9ddb-81e7dd81ad30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8cfc490-4eba-4adf-aeb7-ee7bde8fc1d4",
        "cursor": {
          "ref": "5da54a0f-5bcf-42d8-bffa-c4ff9fe45b6c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "a3b3dc05-0bfd-40b4-b0b2-72379dcc1202"
        },
        "item": {
          "id": "a8cfc490-4eba-4adf-aeb7-ee7bde8fc1d4",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d9cac017-8fd1-453f-823a-ad2bd4539bf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0912f652-9175-42ce-b9bf-96e79a98db19",
        "cursor": {
          "ref": "f9f8eb19-fc9b-4f01-bcda-57274e6aac9a",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "4c2cc32c-2b13-4216-9296-ded2095b6a96"
        },
        "item": {
          "id": "0912f652-9175-42ce-b9bf-96e79a98db19",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "d803a5ea-4216-4f09-8219-029b14864b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c592307-9d7c-4c1d-8be2-d7a373068a82",
        "cursor": {
          "ref": "777fffca-66f9-42b7-b5d7-9ba5280ebb97",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7f218f15-6ea2-4a61-ae07-d8f0077c42db"
        },
        "item": {
          "id": "7c592307-9d7c-4c1d-8be2-d7a373068a82",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b1b76898-1c19-42bc-9d7d-b56f95e5b571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a13930c-2303-4f72-9b23-9f459d8e573d",
        "cursor": {
          "ref": "9fe75575-9ef9-41ba-9c10-9f986f7189c6",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "94d4d77d-b771-4851-93e0-79d5173bf9ba"
        },
        "item": {
          "id": "3a13930c-2303-4f72-9b23-9f459d8e573d",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "400f7c8c-a6f9-4f89-97b0-d60b89fadeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc87365b-a3c0-4495-9e23-28a2bac06aa2",
        "cursor": {
          "ref": "f4d5cd9c-53cf-4f8a-b9ef-e6c34c4ac054",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f4ef3368-c68a-465b-8219-0f21f83ef147"
        },
        "item": {
          "id": "bc87365b-a3c0-4495-9e23-28a2bac06aa2",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "d32ca09b-5d4f-4d3b-92eb-0151194912b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72e7cd37-86d5-4dc7-9a80-39622997fcc6",
        "cursor": {
          "ref": "fabf4424-d2b0-4bc4-822a-1463a0b93fa5",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "77487b43-e751-4c3f-acf7-e59be69f7717"
        },
        "item": {
          "id": "72e7cd37-86d5-4dc7-9a80-39622997fcc6",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1321f64d-99d7-4f30-a8d0-129bfc9c16b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f823f3f4-6886-4bf1-9807-97951849b044",
        "cursor": {
          "ref": "17fa49fb-515e-4611-a286-eac76226aac3",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "899dd31d-792f-4bf1-ba35-a478e201b720"
        },
        "item": {
          "id": "f823f3f4-6886-4bf1-9807-97951849b044",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f025c0e0-4dd2-462a-bea6-202fc4ad319c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249085f7-fe78-47a0-a113-96883aeec484",
        "cursor": {
          "ref": "75e8caa0-ea20-4f23-9818-7bf5e98db093",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "47c222d6-5fd2-4584-9055-246e920d1e19"
        },
        "item": {
          "id": "249085f7-fe78-47a0-a113-96883aeec484",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "880d156a-5d13-4b31-9e95-7bd50caca1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44c4a9c8-137b-4a02-bbbf-cefe3161739f",
        "cursor": {
          "ref": "0e3e6448-5e4d-41c3-a508-868425b5826a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "bebe4164-1d41-476f-a0bf-c5c960c58892"
        },
        "item": {
          "id": "44c4a9c8-137b-4a02-bbbf-cefe3161739f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1cc7826d-8186-4765-8ad3-3965e4f4f41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bda3bbb-5d9a-4d5e-8359-c51c0bb94bda",
        "cursor": {
          "ref": "839a8249-d8d9-468e-903b-0f0cce0d8de5",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c7dae2aa-3cda-49d8-9f28-c3629a72809e"
        },
        "item": {
          "id": "0bda3bbb-5d9a-4d5e-8359-c51c0bb94bda",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "dee557a1-5720-497d-80eb-2b65537305ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c6051f-65f2-4517-928b-9c77024fabbb",
        "cursor": {
          "ref": "d9f29fe2-066c-4a40-83b2-df2b905765a6",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "590eb0aa-0fab-4c11-ab81-06097a3633bb"
        },
        "item": {
          "id": "35c6051f-65f2-4517-928b-9c77024fabbb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "36308d2c-c44d-4755-97dd-229241f0dee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c659b5d-3467-47d1-8a1b-3d1c8490adf1",
        "cursor": {
          "ref": "31f7cf7b-52ca-4dc4-8aff-8f60c76f2618",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "929db55a-8ad8-4be7-9abb-df7f0a68c24b"
        },
        "item": {
          "id": "0c659b5d-3467-47d1-8a1b-3d1c8490adf1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2f77bd89-67a6-42bb-83cf-85763e91784d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a5c5f6-2beb-4f7c-994f-9eb3468c2c4a",
        "cursor": {
          "ref": "387c34cc-983a-4912-b464-2bdd800f28a2",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1ad644b3-edd1-4687-8bd3-c8dc7c44a41b"
        },
        "item": {
          "id": "54a5c5f6-2beb-4f7c-994f-9eb3468c2c4a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ca008b17-4e84-4538-9e52-05c4c64cf19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91296b99-b17c-42f3-a172-905c1ee0693e",
        "cursor": {
          "ref": "9de593f8-9a84-47af-8a94-0e01d7032858",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "16dc65b4-4c77-405c-8213-4f47c26ee094"
        },
        "item": {
          "id": "91296b99-b17c-42f3-a172-905c1ee0693e",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "eddc7283-a2c9-4929-b63c-132cb5c5ed83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9534a559-8539-4955-8b61-099506e493cf",
        "cursor": {
          "ref": "0d3476ed-fa4c-40be-9f85-c1337f4da84c",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1e910409-377a-44d9-a292-258fd305b3f5"
        },
        "item": {
          "id": "9534a559-8539-4955-8b61-099506e493cf",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "77364352-a649-4e02-a5b8-0bbbd4e1d2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fda2f9b-8688-43af-b197-36bd2f56c27d",
        "cursor": {
          "ref": "668f37f9-91db-45ca-a97b-e14cc5561a7a",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8aa28aa9-3fcf-4ec5-9dbe-5a5aa4cf6ef4"
        },
        "item": {
          "id": "5fda2f9b-8688-43af-b197-36bd2f56c27d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "19469349-0c47-4ec4-a83b-71bb9360047a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "941964c6-7862-4c7a-80cc-43fcad459933",
        "cursor": {
          "ref": "3ac2f169-3515-4b20-b6a2-07be58df93ff",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "8703fae8-9354-4db7-b532-5cb6db9bc8ec"
        },
        "item": {
          "id": "941964c6-7862-4c7a-80cc-43fcad459933",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2bd2c092-ae79-4c85-920a-6c373f7c9101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "638200f0-6947-424c-a74f-d4de15ab54bb",
        "cursor": {
          "ref": "d2200c3d-73f3-43c8-9d28-b7470a8688da",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "d0121598-cb4a-4f44-b1cd-6d0db39658ff"
        },
        "item": {
          "id": "638200f0-6947-424c-a74f-d4de15ab54bb",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b07090dd-91ba-49c6-9459-3143eb997ae4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb06fa6d-e6b6-430d-bad8-424f4fa8230d",
        "cursor": {
          "ref": "a536d9ac-47f4-4678-bf80-639f4ac306fc",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "54567a8b-8470-428e-8514-ec6055856880"
        },
        "item": {
          "id": "eb06fa6d-e6b6-430d-bad8-424f4fa8230d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "25b549d8-8ebe-4aaa-aff7-dd8f0d139b27",
          "status": "OK",
          "code": 200,
          "responseTime": 101,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f63e0d-d9a9-4b8e-84df-e145f69ca330",
        "cursor": {
          "ref": "3e4f03b8-33c4-4a80-86f6-1d205a032cc8",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a1bc0c74-8ceb-45d4-8d4a-6e746ec90f93"
        },
        "item": {
          "id": "c4f63e0d-d9a9-4b8e-84df-e145f69ca330",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6e006b69-b39f-495f-b929-04bf69814447",
          "status": "OK",
          "code": 200,
          "responseTime": 1790,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f92b73d-f3d3-46c3-9552-150f85818989",
        "cursor": {
          "ref": "12fd5a0f-0523-4211-85a1-16dc89df5974",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "aa240441-e857-45cf-8732-f82c1811fbd3"
        },
        "item": {
          "id": "8f92b73d-f3d3-46c3-9552-150f85818989",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "775555d1-1332-4948-8dea-f5e0212d4026",
          "status": "OK",
          "code": 200,
          "responseTime": 1599,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ffcfb9-77b5-43b9-a0c4-f48a0e27b125",
        "cursor": {
          "ref": "1638557e-6ed8-4a35-a706-dc9315f5fc74",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "00c6df9f-e8a2-4574-b071-16907ad7d311"
        },
        "item": {
          "id": "74ffcfb9-77b5-43b9-a0c4-f48a0e27b125",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45b76339-6e0f-4361-b12f-cbb17dd5e508",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74ffcfb9-77b5-43b9-a0c4-f48a0e27b125",
        "cursor": {
          "ref": "1638557e-6ed8-4a35-a706-dc9315f5fc74",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "00c6df9f-e8a2-4574-b071-16907ad7d311"
        },
        "item": {
          "id": "74ffcfb9-77b5-43b9-a0c4-f48a0e27b125",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "45b76339-6e0f-4361-b12f-cbb17dd5e508",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7a119c-cb97-439c-9ad3-509b33d8adc0",
        "cursor": {
          "ref": "df494720-c9e8-443e-b31d-961be8a3d530",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "defab648-99dd-4109-af4f-e12422bc8ef3"
        },
        "item": {
          "id": "6f7a119c-cb97-439c-9ad3-509b33d8adc0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9504c585-6b1f-477e-864a-73f6b5943126",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cfcb415-7726-47ca-be69-a9f3795ded40",
        "cursor": {
          "ref": "c36a87ce-9b42-48b2-808f-84319f5f7b22",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8548c055-dfae-48de-9a45-f9314736cd12"
        },
        "item": {
          "id": "7cfcb415-7726-47ca-be69-a9f3795ded40",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d49631d0-4a57-447c-9347-952256a38bfa",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}