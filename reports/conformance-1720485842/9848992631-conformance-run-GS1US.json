{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "65378eee-7eec-462b-9499-0272a1888335",
        "name": "Clear Cache",
        "item": [
          {
            "id": "02091361-a50e-482c-8d36-a254e3c06dca",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a522a651-92de-4f6a-86fc-ac3c4d23c85e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "782ac971-f828-475a-b34a-e1cfc6c0124f"
                }
              }
            ]
          },
          {
            "id": "3ba2369d-b662-400b-836b-04f441fd488c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b4ddf325-154c-4171-a719-2885b8df932d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1cdbbf92-49aa-4b2a-96f8-c4de8f9cea90"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a9298cc5-c49f-4ca6-ad64-40c10ecb91e5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "f6ac7085-ffc9-49b7-8335-4e46bc77f584",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7044e24-5f54-4686-baf2-a7801fe4a15b",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5cc542c8-8ec3-42d3-a913-b658dec98e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9e49090c-1226-42b1-a76c-6ccc0dc1d73a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "df73e53d-81cd-4a85-bc8c-9d42bdef8792",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6d225a2e-59a3-45fc-af74-f438e70d9c55"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "09c84e37-47a8-49fe-9ed3-ea780ad5a4a4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "86fd3395-71bf-405f-8a14-9e312b16c67b"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e3d5239-64bf-4c00-8a3c-0bd923934d93",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "979f42df-de85-4af0-aa83-008a29585ed5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d07123c2-4c12-4393-a048-971bd065c1eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0e5789a5-e424-482c-b718-0867a6715020"
            }
          }
        ]
      },
      {
        "id": "39a9018b-9156-467f-90bf-aca801e7199e",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "98923c47-bcbe-465d-8d0c-ac8e5bb0beb8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "37807929-33b9-4f5b-b05e-bc30f37dc326",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f85f4126-ad9a-4fd8-b9de-17073cba93c0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a56d1e67-2e1e-4fd8-8d1f-28aecb4f8c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98c77714-deba-4027-9ab4-2d612160c37a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d9b5ca-10dc-4242-b79e-ea9ad2d260de",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d571d11-2a06-4757-87d0-db0573e70e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "003e36e0-0361-451e-a78e-e2bb7a54dc17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b47670d0-dafc-4b7f-9707-01521a28a641",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0659edd-f675-4e7b-bcc4-1467007763a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44cfcfb0-0e94-4984-97b3-8a2aeeaa9d2b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2b3327b-f4b6-4020-ad63-c01d97ecf924",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "18b88be9-52de-4172-ac27-dcac49ea38b7",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f73a0e4-c51b-4a85-beb3-df35a2cbdde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "20be16bf-8b66-4b4e-a963-f4e88e0cb5bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72f1897-c14d-47de-9ae4-2d878968ffd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c532ce8f-61b6-4146-8c2d-0ca4912f27bd"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "a5e4a3c9-31e2-406b-99e1-02c916988e85",
            "name": "Positive Testing",
            "item": [
              {
                "id": "68eeacf3-41c6-44f3-93e4-63610ffd82bc",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8319146a-50be-4807-955f-05959a868d03",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3e79c8d6-dbfe-4b05-a6c2-05e85fe84168"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3d231e6e-dcdd-4e34-a84d-17ca7960f1e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "653348dc-2270-4e1e-8a9a-dd587eb90e30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "71b2c069-b6c5-4d62-9878-8273528f6c56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "45271793-ac45-47af-8142-57a3d0c15f3e"
            }
          }
        ]
      },
      {
        "id": "833897bd-aed2-4d73-a1bf-4030edac8fbc",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "90c6659e-25b4-40f9-aea5-2510cdd442d0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cc07f0b7-d0e4-4526-a3b7-2ac1a30f0c5d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "75fd163f-f189-45d5-8738-c27ea6de383a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "191ad00a-7dc4-481d-9c53-30c7f4ba762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2aaeba0a-390b-446b-858a-f11a37a21588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770354c8-0ba0-4b49-bbbb-072f5c81cac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32c3dadd-87e5-4a6c-99fa-8e47fcf4ec23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590d7651-c509-4b1b-819b-355bec835b8c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e11329-49ea-4771-8908-55e762074bf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f55951-16db-4568-90a0-4dad6595b0bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9980719c-286f-47d6-9929-5232ef1cc866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e8f1566-f698-4906-b89d-399316f7c0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9606d53a-78cc-41ef-9fb1-4ea32f890c14",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b090e9c-7664-4a9a-a701-ce2d340f7f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9233cf61-06a8-4e5e-ab7b-103c1ae09a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e099a794-9dfe-43c6-8ac2-40af3e5a79e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a53cb12a-4e20-4475-9f49-05653d482d7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9b969e2-1008-4d03-ab37-1f6621ef610e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d63e092-6fdc-4f31-b90d-668d58913429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4143a30d-ca37-4bd0-af7c-b11cdfd64934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd0d777-ecc9-4463-a24a-bd026acced7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "607a6999-1624-4be9-942f-3a40bd3a387f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3f570d-ba59-4b03-907f-2becf7a3b11d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7595680f-35d7-4f32-b774-44d8790e0f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f610bbb-65ea-4f39-88f8-5d0fea8adac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2109548-af2e-4e61-8eb2-52bd4a74720c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d596b1e-91e5-4d2a-823b-aaa994a774df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8192dd2a-fc39-4ff0-ba27-195ad79862e2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6662e62b-28df-4b14-bed6-365c20f05fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b819102-4a12-4a6f-aa10-9a218dd46486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e95f7112-971c-4561-923e-42c402844f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ae3af47-b890-49b9-b339-f14b1087d365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e1d772-585a-4343-941b-a236c43ecbe6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b89a744c-b464-410f-9cca-ea637a99180f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bba989d-5be9-4702-828e-1d34abea1b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58e9942c-2b9a-4cf5-873a-6bfd05b8fb7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe5770e6-32e4-4beb-a7a5-46f8c91ef3ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fe138e7-08a6-4cd2-8be6-c896d07490cd",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b115ab7c-1d19-41fd-a8af-a28a212717b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dec76f56-92be-4ae9-860f-7dc67c537cdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08fc2e5-e61d-4772-af4f-32c2cc34b656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7be0cb27-427b-4f13-87b8-591e94e88041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e9fd176-e188-4353-884a-e2e752dc9198",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8058c4b-391a-4fc8-8b1d-8ce132435fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ad581e-0c72-499f-9fda-081b7d5fbf66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f617cec-bf6c-429f-80ab-72a53d7dcacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6aad1546-8fba-414f-8afa-c5a14014b3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bcebb76-a152-4e25-aa7f-6c9f657773b1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b10a72ce-2772-4a90-b452-fc455d87cd61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c3efb7e-9a08-422a-b70c-b4f7230d0c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a0d456-0265-4e8b-902e-9552c094e7e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b063123-21c6-470e-93f3-88121d6595bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeaaf144-bf88-40a4-8a61-e1065d0173c1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e6b0775-c229-4007-9e65-74d9c274c563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d22020f-25dc-4a6f-9454-dec7d0e49155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a37c1d6-a328-4dbd-9040-45bfa900b85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca8a93e6-2e2b-4790-9ea2-4c5dffe89fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0489f20a-a6aa-4545-abe0-aa9277f1c94a",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9135bf11-e46b-481f-af5d-134cb1eff8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1568e89a-98cc-4059-81be-a5d248d816b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8edee1ec-f712-47a1-990f-2ccb7ef851c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae28657d-7d7d-4487-a6cd-152d5dd4ba93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8cda8c5-3092-49fd-b966-b9db6447f49f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c148789-5714-4ae3-a9df-c7d684111e7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bbe9dd-4200-483d-8252-643531aba623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd2f1c6-0b1f-4158-8226-1c13e4b96d68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4dcda9a6-c267-48ff-ba23-1ce7a242243b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc04a6ae-3d18-4fcb-94ef-81df88efc9c3",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92fbc746-96ca-4a43-a6b0-d5c16537da75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c84be76c-85aa-4e13-af4d-709df0746ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31580bf4-94fa-477a-99c1-092bd44d1b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e566e27-25a5-4cba-85fa-81bf81814dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed9ee91-2107-4259-9a38-ebe014712865",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2657c73d-5899-40df-8062-237c6ce03af0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6677653-e93c-422b-b4b4-269945fec65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd4a0dd-829b-44ef-81bd-fe35d8b16fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b78c6321-0a7a-462d-81db-9fd4ac98fe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "183bbd0d-a106-46d1-a63d-511d53feabdb",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e275b2f-f015-4860-975d-6e52ff65efc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4040cb0c-e69b-437e-8943-13276d47b723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88af782-37ad-46f8-a4f7-ee03067a1ccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ea5ce90-7f63-453b-a123-c87be7ec39a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b57cf0-b7d9-409c-a189-931db0ba1357",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2465b1-baf7-4e95-92a5-22c12ff8b48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f9b0d0-b637-431c-a76f-b24f41df78a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9fcb36-0118-4c43-8145-9e725358f1d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "76a1a13b-57a0-4ea7-8de0-a5cfea8d6955"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b52de6-9f13-486d-83a7-619df59eedd5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2896ceb0-7b8d-460c-b416-551814508d12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d907d7d-f6aa-4a27-88a9-1928badce973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb354c26-7a68-45fd-bc5b-455cda4d34d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a41d0d10-112c-43b0-8a8c-db08be7de0c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696b58aa-55bc-4e5d-8877-0d19e30cbc2b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32d8563-73c7-4b5d-9610-c77799290e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a259bb24-3b1c-4c70-953a-802223e505c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeca80ce-13fb-46d8-b189-d691824c35f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a96304c-815c-4579-8ced-7161ce5d0d4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09086054-a196-4c63-8140-a14235d76f53",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05e85534-d9f1-4e5d-9b01-484a63bda0be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa5d8a5-5682-4dd7-857e-62889af3f93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f769babe-af8c-46b4-963c-ec7cd173a551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d16c2482-da27-4e17-8725-dbda75f8c81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b24219-177b-4670-b1fe-f2da124e48bf",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56252a5f-093d-40f2-bfbf-06a4410babe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb7b228-8d81-495d-b0ce-277f483ff6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01eeac7e-59ee-47f7-a46d-d71351d58a7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "812a7ec2-0db6-492c-b2d5-cf4c49997616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ca07b5-95cb-4d54-86e6-724d5de72998",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a2aa38-cb95-45e8-8737-63dfe7f6425e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3a0c599-3593-4959-9468-bece21af9077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aef8a60-910b-4dc6-8c45-6c17b363a7f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5c3f58-3166-413e-8bd1-35e1576a0802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2ea1b8e-402f-4bae-93fa-4ba599c1e812",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2d651f-99c9-4ba9-8952-3a56ac16759b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32887cf5-814f-4dcf-951e-0df6c5e3aacf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86374c3f-7a57-4a74-b9bd-1d87c591af48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe3e8f7-8ad3-417a-b836-88b740b2a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd176e88-7099-41de-bb4d-89e821166272",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d5ef34c-b920-4e81-a7ba-18f845d2a6cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9349f09-4ae8-4f01-b937-5701145ca650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ee507b-b9ff-4457-8f45-fa26be7634b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8635d6f-cda1-4cd9-8058-cf5c4aef8465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e70d5d3-8f21-4a22-835f-3b0a1908af53",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e374a124-c288-4893-ace2-b1f941effc23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e43c8bce-4dda-447d-afb4-1eebc2bef0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75edf86b-d51f-4674-bef2-52ef20cd13d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f19911fb-d037-428a-91c1-e2f1897e1abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71e61d2c-15bb-4b29-8450-487b472c3d46",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b732d90-bde1-4dd0-98a2-778179801835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646ec780-4d33-4427-b4ce-2513a888446f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af94bb21-1fdf-4982-806a-4b2257dca546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ca86f95-a988-4a8a-817f-e01635de2830"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8375357-9e4b-4c72-ba4f-843ac7c2cf80",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6696414-daff-43d9-a971-c969daf17624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22391aad-17b4-4b74-8850-46e7f0b5224f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3ff53e-9945-4b28-9d2c-5f56661f014f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2679f9d6-6d92-49e0-a43f-62fd4375b465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "654ceb65-c9c0-473b-b622-baca36b76044",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b78a8bc-0e4c-4229-b6c6-fd1bd84cf5a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfce4acc-67a5-4577-872a-932844a87e34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1431a5b-6027-4fe0-896e-1ad8979e9a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc9f760b-78fb-457d-947f-afebe1a4e5e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484266fd-8472-4483-a402-541e6f92bc27",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6be97db-0059-4c5a-b52b-9bf7d3c2ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "057f697c-0178-4d37-abdf-a35f08ce2eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a067eb84-d4a1-402e-b02f-eb1812285cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2df26236-d2c1-4d87-9132-2c959d566621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29965921-a624-4d82-904b-88a92b1f5101",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "276868b5-06eb-4c7a-9c58-ae9a3395ed0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cdb257d-8e8d-4023-8886-889681b4bb96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e04d4085-379a-4f17-b8f0-52333e3a4d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2f6022-6a26-4fc4-8135-0c3f4747da4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e920d49d-4d89-4537-bcad-9d3416873c40",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbd9c21-a9f0-4528-9b47-fbdbd5046570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c58eedc5-e7be-40a5-992a-a8a970079f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c79b97f8-b1ac-40f4-b39a-2a77e7ec0578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d35b73-d1d5-48cd-9871-3d28b6695445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0680643f-6ccd-4810-aec4-11c23d65af53",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b79f2948-a3aa-49e2-8365-4a541eeddba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f02105a-1aa7-4b91-b5f0-c94f012e933e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01e705cb-591a-46f3-86a7-06dc57053c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab970da7-9fce-488d-ba92-a39e08c4c997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17e449c-1f20-40f4-bd62-2ae199f9fe47",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2fe84a-e10e-4c0d-ac08-5b03c45f307f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a206bc8f-e519-4a15-88e5-cd4bfbd2d1fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56109e09-a20a-4729-8806-b75c6fd6033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d26d665b-5d5d-47b0-bb22-7551740b5397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7952296d-d65e-4bb9-9c47-d419b623f81c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc27b500-caf0-4d52-ad8f-ce837baadfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc608806-4041-486a-8305-74be2fa46b94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49867c1-8c0c-4f06-9a6e-1517f38d9388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc18ed1-cb13-4155-8d96-5cecf260361e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7686cd2-457e-405e-866f-b64380c0c40a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5c71ee-6794-434d-817a-c7e5f15207fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29a774a-59ad-4343-868c-0c5cee98f600"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da5065cf-b7b3-403a-931d-fa274eb3d21d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "225e8925-22d6-4a06-acfd-d81949608676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb15997-5c42-4eff-8d5c-df61a1cda4ca",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c24ea7-97fd-4fdb-a50a-701fbc1dd810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a4c9ed93-aab1-4c39-8c65-de62b6eb5233"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d21b5c-8724-4193-8593-64b567a35fce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4e063086-6641-44a3-b4fa-fd2d7b939237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92e6cbe6-753c-407a-a586-3fb68592c6c6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "093e88a3-4f7f-4fc3-b6e7-773f15d53a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c9b130-8688-4d1a-bb4e-082eeb972460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288aa6a8-d67d-415e-a317-6706ae585979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9d9fc4e-b81b-403d-ab19-6cc87527fc21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b1fdaa-baf9-4592-9012-ffb00b2f00e1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0646b888-d3a7-45af-9b06-a15e7240fce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0d9f7f-2e61-4470-af44-4b1f3225764d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53347386-8a97-44b9-a78b-e2028d393d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6839021e-f485-46a9-928c-1a50467bfa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aff78a-f71d-4549-be7a-96cd51a6ec37",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f45fc0-5fe2-4f8f-b538-1a21296039af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94a074d1-4c3f-401e-a69c-31d1b68d86de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e320e06-2418-4c01-b172-7460504d6957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "185ee1d5-bfd5-4575-886d-ee999658cb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a65038-e5dc-4abd-81a7-3cbf7b1e82c8",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7118307c-105e-4aee-8ff9-c227d604969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da3551aa-ec1a-469a-8bb9-e813d936d9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2d6ea9-da24-4dcb-9bf1-bd29bf6850df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be666722-6277-4f7e-8485-004608ba1489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcec7b00-4681-40fb-8166-3b2f552f4ad2",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4303be68-5560-4e4b-b09b-8df24fed807e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "302009eb-073b-4dc2-a07c-acfb330571bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a0bfad-f7cf-4c39-abcb-b9fa3cb1a50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "12133198-3dd4-47cc-b20b-600bccebd3b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50bd46cb-7a93-4704-a331-b0651e05c281",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2850714d-62c5-48e4-b62b-e915999f5f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e23dcaf-3036-4672-b7e3-d0f541cede09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7821f0b-ed3e-4c46-9bd5-8293fec1073c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "191e1cbb-91de-44d1-9ecd-a632b3f07bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a3ee54-3693-4815-8956-26177e1a6e05",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b39699f-194b-4435-954a-4c4c197c8cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd85fd63-b221-4b22-8d30-1d4feec52ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab2c8be-dc0d-4d66-9fc4-06c349d353ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7332c9fa-3c5b-49f3-9243-cf2bb1b85c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f59aff4b-e010-4b91-a306-8db6f722e3c0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fab883-5b7b-41e3-aec8-09c860192cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4af7889-1a83-4fec-a8be-76e90d2e62e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78cedf69-94d6-4f15-929a-54fe1aa7e410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "3cd9ed29-f5ca-4407-95cc-2a8ba4afebf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6ab7fd2-206c-4208-b16c-9dcdd39132eb",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1748d6b6-51ec-48fb-be42-44f98c0f893b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cfbfa6e-c3db-4eba-b4e1-528b022016c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ab31e1-f494-4140-9f0c-7325d213d3b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebfd1da1-1b55-4119-814e-fb36ae3f113c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5630a1d-0ecc-43a0-af1e-50d2e4796f14",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e114bf52-41db-4cc3-bd3e-5455b531b691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c86ca878-9a6d-41ce-8e1d-b457c229b9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f525e06-cec5-48e9-9069-02d2a56b3ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2f40ad3-17b7-4371-bc2d-0ffa45b09825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e78fcd11-f446-4aca-9523-dc7c6d300b1a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2aa0bd0-6fdc-499e-aca6-168e076220b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d55b66a8-6f92-45af-b5ee-3058e979ead5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dda251a-18eb-40b7-9ced-6be83b4bca1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f176ef7-5923-4faa-828c-5c6ceb1b7177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5543f9-6498-445c-805a-f6f47d35fa30",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c04df8-f978-45e1-ab76-ad495a1f0040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fe611c2-f402-4a97-be5d-c89c48b8da40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dacfd41-3b70-4b92-b43a-d26bfdac1537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc17264c-a5d5-4f76-a8f6-948cb8982dd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d4a8f4-4da7-47d0-b63c-dafe356f4a3e",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25b58b5c-673f-4be2-984e-7d4055560375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40181fea-4cfd-4bf6-81fa-ddd7cc367bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e59723-96a1-408d-af44-1f9076020da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f26bad1-36cf-45dd-af7f-82b6a266d64f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce56f539-047d-41da-8569-ba81aea7789e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34878784-ca00-4f62-b59a-cfa13d345a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be20c98e-f963-4282-a6cf-eaaa9b69cc42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81560afc-f79c-473a-b8d1-e933a95365fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb222a1-4e2c-48a2-afee-b8e1d1906c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab14c8e-a85d-4234-b42d-3ef3628c8b3d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93fcce8c-a8dd-4785-be29-883a7f2cde92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65e70df6-00d2-475a-8727-344bcd475bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718af99d-1720-4a1b-abe5-3f2677360a28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "050e396b-c93f-4b2c-af02-d329ba83cce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7e5447d-0661-488f-834f-2561658b0b5d",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfacd82-d5ec-4053-b2a1-db329c4f6c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b4aabf-b2d5-48f9-b22f-4ae79ebb1b3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f04f896e-d1f7-4981-9287-534bfb567245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fa6dbc9-7d70-4205-9752-6f17a55a92a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53904cba-722a-4335-b431-56b9c24195ff",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4cfa7d-345d-4acd-be3b-2b78639f5cef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19918a9b-2244-4f68-8561-fe7c4f93afcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c22717e-830d-4291-9dc8-5915df5c4a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc2cc0c8-7c95-45f2-a831-5ece7a183aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c337b6bb-ccce-40f2-82a3-758e8e540941",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b31827b-3b8d-4619-9e90-ad2a6cd0f9c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf88922c-ca85-4054-9cfd-e1c680f1b723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1c9d815-20cb-490c-a365-f84917c557aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a27b31-250c-4760-b435-63d083ee430b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc57c659-33e7-40ab-b938-e9f1494c6be5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee210323-ee05-4a25-b6bb-ff090f2c8fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81a28182-4246-4c5d-9efd-702edc502344"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f66b9d7-0d7d-452b-be63-b04a9d3199a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3da17f9c-21f1-454d-b866-af1054d83418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4591dcc-3b77-468b-a802-091dcb4c4914",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468a5a12-c940-4ea6-b2f2-e7070349caf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d875243-dbf6-4bfc-a7ec-a8ac4fd9abb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c05454-541b-4998-a212-ec4b8a5b2446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "dd9e084f-0d9f-4b28-b473-e9bcd2a59046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e7cd31-4f80-4c05-8915-51de7eab2187",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869b3e46-bd82-4b31-b422-21788f64b887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8318a30c-ba32-4566-a8b4-ddbd8ad46f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4f188b-c625-4580-ba8a-a9d8e75b9a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "42e0081a-718d-4743-b32d-7c2afae40aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da2952-8974-475f-ab61-d64eff4e716c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caef76f-a08e-4231-95a8-a0c99f71638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6496f3bc-bffe-4c50-b990-971b99cb80ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bed0641-a7d8-481a-a4b9-1e293e938a23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7103de40-6695-44de-ad15-f9d39fc79ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7239158c-fd60-4d94-95cf-54a2d5466c13",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461b7f13-9ecc-441d-a12b-1b85668332c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "247a70f2-3265-4d76-aa22-ed16e86a1530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae761353-bb90-4278-a6c5-c86a4fc7151b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5c87738a-8ab2-48db-985f-1d6df499eb73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d967216-04ef-41da-a163-8240512390ff",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95900d41-0a78-48eb-9e9b-04a3ece72863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd910c9d-5382-4f65-b3aa-ab9dfce67b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a341f6b0-2753-4fd0-91df-43f3d9b134b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c8152f5-a4b6-43bc-a2ac-b4a902f51fb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f80fb85-3de5-482a-b8cc-23db671ce514",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846918df-e94b-4ea7-bde4-22d851e5e5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa3809df-2418-48fc-9207-7976fceef63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa0ffd7-4968-4356-9a76-37c593b7bf3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6142aec7-14a3-49a8-a57d-6e12e779f9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92e8524-be1a-4da1-878f-6076b12e3134",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93af5ca0-71a4-4463-a824-fa3448d6aa8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a909577-e30b-4520-add6-a61ecb771292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8284f6-61e8-4c68-86fd-9985ab3c109a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5ab262-a4ce-4c06-acf9-daa9d5d5016b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1b406e-2a3d-4389-b225-dc33bd34a124",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1432566b-039c-4149-8c45-dfb7f8f0300b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0cdfd9-5adc-4cf4-aaa9-cb3946e57a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d15223-9bb7-4cbd-bd45-bcf9b13336fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f7ddb90-b8cd-4744-a646-c6b163906cf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfbb3547-5545-48aa-95a0-785fd727d35b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b731457-8dc1-4e69-91c3-ccf0e70b324d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "238c9448-d79d-4c93-9bb3-2589fd68bc35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7630b8-45df-49e5-903c-23023ca76af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6349746-7a99-483f-aafa-192f12d65478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d89611-875e-44ad-aaf1-d7a08e6c21ed",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a333fe1-7caa-45a0-afc7-5801656df37e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ee6658-117c-4ed8-ac4f-bf9e7aad0550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6940fb4-4738-4637-9f10-315902912d13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "946f2f7f-f906-4822-8303-9a4683a2cb2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a5e339-19cb-48e2-ab8e-984a504af222",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2db4f1c5-051d-482e-ba56-408a031ebf50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae69013c-ed78-4453-bd88-07e345c9955f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b877e02-ed8b-4231-9bdd-bf6527ddefa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eae1f34f-dd70-4146-bbff-f09b648442e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb2e96c-0a9a-4390-81e2-84c505738686",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f81cf190-4b4d-4e3a-8cfd-b532f6fcedad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41b7bd0-a91a-41e5-9769-495d6aa86ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed1275e-4d07-44fb-ba7f-1fc1f637569d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "521d743c-6144-4f1f-8f32-64b0003a95b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992099f3-0318-412a-bcc8-500f54f473ed",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb5d15fa-9e7d-4648-9fbf-36ed63fa9578",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cc89a3-968c-4f6f-956a-e79dca16d1e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a00f81-e6ea-47f7-9593-32ea1ad24259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa1ef41b-b05f-4732-8cf1-289b162cc9dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fbb7d94-a98c-4f42-b861-48b3d3dfe812",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb8021-3d34-476c-bda8-59971c06ffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6584c12e-d732-4f79-be0c-0b30d61948d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1b765f-bcaa-4237-8504-6afe1d8739a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfed289-71dc-49ae-a6b0-cd6550e678ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba052c58-b6d0-42c5-aec8-ffd5db70e3ab",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89376d4e-7cbf-408c-8060-2ee1b45bbc99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2febaf4b-e102-4538-8bcc-4f9b30122c89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40872d01-4438-4627-b877-c1d70f8e6499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "13b28457-03f8-4d7f-9b3a-777f7e95a6a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "345526c8-771d-4f7a-8447-dbf7df48862a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31dad11b-1ac4-4d19-a13e-b421327f36ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcba9361-6455-4a29-830b-948eacb58466"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be423c69-7389-4c44-8c77-c19620ce3aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8a17a6-ba5d-45f0-bdc2-406a2599fcc7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e318143a-4e4c-4aa9-b22b-e5604c73134a",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb37370-6502-4b25-b33f-c7a292788ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e7d1ec-a58d-42c0-b98e-3632161a2e5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18adbdf8-35c3-4692-9d4f-6fe160ae2724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9fac35c-ead1-42c7-9186-33eb8051061c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdaae28a-465c-4702-b5fd-d1d407a940d8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "229f60b9-178c-4f66-a99b-a08657c11ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c2bfa13-2368-4788-b46c-e4f377b1ce97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5245b4-5fad-44cb-9391-0519fc5c6da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ab770e-20cc-4f85-890a-deb8d8ddd62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203b550d-d93f-4566-8f2e-6d944c5b2c27",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea5ccf1-1e77-412f-bea7-9b1480c0d9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "467207fc-f515-4ed9-989f-51b65f174da8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26670ca7-41b8-4060-9540-5dd712fbb517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1e447fb4-b635-4126-b3d0-9acd1d69c9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77e1d101-9715-4407-a1f3-b6aaf827a56c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3509437-a78b-4fd9-91c6-4e33d765e0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9223912b-c1f3-4843-a3a5-f779e8628a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a7d76e-b3bd-48f9-85bb-8606fd8c9eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f99f229d-1628-4333-889d-4e94586617fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c52420d-f132-4957-abbd-b9f8def39915",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2394e5b6-8615-40a1-a0e7-376c4627afa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9260808-9ec0-41e6-ae55-b9ee95bb4c3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4a14ade-7d6c-4795-83f3-859e4f61c094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6a406575-ea2b-4b9c-b790-24e5137e2557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9fb614-a73c-490f-882e-84a9656e165d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d36d91af-b6d2-45f0-847c-50951b53f490",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aed956dc-57bb-401c-8cdf-ce3d75744645"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440926d9-91c4-489c-87f3-65ee76d9a93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6d999ff-accf-4b59-b024-2d28268341ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c9b6b8-caef-4626-86e8-00dff32c9978",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d81dfe76-46d6-4520-ac9e-0e474967ef7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d576e0e4-15b3-4dcc-a489-6e63a6cfe58e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4968877c-700d-4a98-8335-6caa6356ed0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d93bb902-42c5-4e17-bdf3-055453fd61cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf140c3-2dd0-40e7-a543-2b200b922fc9",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61a0ce6-90ea-4e0f-8a90-7226df30701f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbad7853-4fab-45e9-84a7-a3ce585f38ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44fcc5f-2a66-495c-b7d4-3f4be076b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e31fafaa-1fa1-4ff9-9355-c45c933292b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5679a6de-02cd-42dc-a839-3f68933ee19e",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0b581b-301c-4fe5-ba82-a8d2ff051888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92c81234-0165-4eb2-81c0-9adb96058664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9d4f0d-dd64-4ce9-bb7d-da4544bb83b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bb301efa-9a84-497d-a2b4-33f2498e25f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedce531-ced3-4724-833c-0dd125567434",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56cba95-8693-4191-b6f0-2b2b33b1279d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4dbd2c7-8a8f-4395-862b-e5c58c7d8359"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca8ba4e5-d23d-4336-a0e0-2edb161d4b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ce46df-393e-4258-bf31-cdd9f1e47166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "818a45db-8b6c-4f5a-96c6-2481c4e66050",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e803516-fee0-4f6c-9ce6-68bce0b262ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f266bef-c223-47f2-bac2-4754d1ee0a65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ff9d3f-b2b7-42b2-b52e-a4aa24eadfe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c0497705-93d7-4c82-8593-8f2f5eaab1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d7d4871-dac2-47ae-b5e4-c6660c9c792e",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d2c5ae9-5155-4496-8093-4f776770e2fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "866063e3-7c96-4491-a67d-07d179dbb015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205a3294-5806-4b14-981f-36625e5b4639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79dc8d63-8530-45d6-a5b2-801bf2e37840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155ce3ee-19b8-40e6-8d30-a55ed0c95105",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608f0d4e-a377-40e9-9143-701a3a76f030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d693713-2abe-42c2-8472-8990840a5ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497b5044-ea03-49b1-926a-96c38b1f6737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "03f01f26-417e-4842-a40e-6ed3efdaffea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e5806e-00e0-4c66-9c8a-0fb40dcd5408",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc44c052-9dc0-4da9-8683-8656138b0f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1409b1-4f34-4f22-8fd4-3c12bdfb7e42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7f88b8-36db-426c-a95d-dcaa5b77415a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "49f4e49d-eea1-46f4-93c1-6a3d1604f47e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6c1130-9ebc-41dd-87a6-6ebf0ca5830a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ca1561-678b-4ce1-abb9-fe07346c30ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53fc94e0-cd85-4a8f-807b-214feaea82e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e93291a-d48a-477a-a967-c395c61b539e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d09caa86-fe8f-4238-b51d-602646b5f758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6b8d11-7dd4-499d-83be-b58e03205e3e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46362efe-7cf5-4a99-bd91-14b446e920c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18cc883b-c49a-490a-a984-ffda2d3a59fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b214374c-5c5a-4853-80f3-ae23dd0f0e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae2bd97d-8c3e-42fa-8a7f-c178ca989b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8795553-12a8-48be-b9fd-cd2d9bcdef68",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc93f885-536d-47b0-a62c-18bc46c64fbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdef0075-16be-40e1-ab62-86edc2f28e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62149c87-c125-4754-98fe-db456fcf3c88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6400d912-769a-41ba-ac02-21d375786bd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d7c380-530c-425d-b44b-cd717f1bce10",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e7f30b-0048-4d19-a0fb-dfea08d56d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4a19a2-6de2-4b83-b72b-59863f8c259d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4038a55-7046-4ff8-bca9-524276fdaaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "133a9461-b259-4447-9778-ecac1428329b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04337a5-1d89-437b-a90a-bc467aaaa111",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc7a788-2849-4c7e-b87a-38eaccccf597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aff914a8-9b03-482f-9488-66940a130928"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40faf6ce-ad7a-4d56-a13c-412bb8967f44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb561a06-e374-4125-a5e5-df68b571ea33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84fc01f-9209-4d80-ac28-bbb0eb89a29e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "669f8aeb-7288-4860-96e0-758281b7f70b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f96da6-9f04-46a2-90d0-dfc4bbb12ef3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffcfb7c-3758-42cd-bd48-c3037bc74b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb31bc3d-3fc9-44e4-bac5-1b708c737baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4d2e2c-f723-48ba-b872-19667fb9dace",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf01aef-ebdb-45e1-9958-29062fca9751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "c61386ed-b6e9-4405-86ce-3034038a817c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2382d4c-582b-40fd-9a4e-71cfb4fa2e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ce6d819-0139-4e3e-a730-98532c02c7e3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8e5d2c72-4877-4f37-836d-f4cbc5c6f216",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a92fab5a-c1b1-48d7-877a-ca660fec0c0c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae4d48c-72de-4e08-8e27-586cd415bbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b071201-e1c6-446f-bbc9-5e8ef3346176"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ae0abc-a33f-4ec6-86f5-0396d599892d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18d91410-0722-40c2-b6ff-7afdc25b93b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7636285a-7b2e-4985-b1f0-affa0c509371",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "645359ec-71a7-4b78-aae5-c256270b3227"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a616a017-738c-4d8e-a9c1-d6cf7e486f67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38a97032-5f07-4d69-b581-76dc0d12add4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "56d50c6d-9d94-4359-b340-03205d88493b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a99d8d49-d92d-41a2-b1d6-00464708fde3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e140f441-a0b1-4f8c-b92d-638ec8f85e25",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6c586f03-a0dd-420e-83c9-a316661c1f38"
                }
              }
            ]
          },
          {
            "id": "62f26e1c-9410-4c68-88a4-8effec9c3240",
            "name": "Positive Testing",
            "item": [
              {
                "id": "97e260fe-7b1f-4591-9e56-0a43507f7015",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "dc3c5526-9aa9-46f4-9c69-5c818a693815",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114e861b-f0dd-4173-aae2-4a4d574d07b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "08efa426-bd5d-44e9-841e-4f0f9d0f7c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7c8df8-a0d6-4563-a5fa-e8276aa4e484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb5f8971-5af2-40c4-ba7a-79c570fce521"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e0c05cc-b4f5-4713-a473-aac002273eb6",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "540a5362-6942-472a-88cf-6b78f8c1a738",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e841c350-305d-4583-b097-a5dcecb35b29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "290eb104-2883-4b5c-81cf-f55bfdda44de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a3b45a9-782c-4b5d-b402-a9e0401a03f1"
                    }
                  }
                ]
              },
              {
                "id": "17eb2ded-ec14-4b23-8276-4b60aff2ddf1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c0420bb2-75f2-4944-8a3d-9dc7d0b5ea7c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7dca2d5a-f952-4813-a04d-b873eb865961"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ada0c32-02cb-4586-a9e3-d0d6530c64e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "56145426-6794-43c9-b619-3f57ca655e31"
                    }
                  }
                ]
              },
              {
                "id": "fca6775a-2d5d-4daa-acaa-3f9ecaa83149",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "46c728b4-8d2e-4572-a02c-ae89da39faf3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8f0fc08c-9fd7-4973-9401-7a8a25d98060"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dbb4df9-5c04-4a22-9a10-75599ebdbdec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8806f380-feaf-49dd-858b-31f39be32c20"
                    }
                  }
                ]
              },
              {
                "id": "e543dc3d-92a4-4ffd-98dc-82f7ffaa2aae",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6360c3ba-e062-4695-9e18-ce5e89dd3de0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32488fb9-435e-4ee8-aa69-0e63e2c0c758"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f16017b0-9183-4ff1-a6a4-0bc1006aa35b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "e1ea9c53-d694-4aab-8e70-4b2431f24146"
                    }
                  }
                ]
              },
              {
                "id": "d1c6ff4d-6575-451b-a394-bf03cb5cc8b3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6feb5b48-a242-439b-8656-452c1b0d18d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1bc0122b-1bb3-4af1-ac21-27c97537ab70"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4b98a59d-9f41-481d-a25b-073dc44e7eb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "34a0f22a-debe-41f9-b0f0-1a088db2839d"
                    }
                  }
                ]
              },
              {
                "id": "fa3020bb-1cd5-44e0-afcb-2c069be35fc7",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cf56d4f6-40da-45fd-84b0-7f61d180c5ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "15b4de9c-7886-453c-a617-cf076d919db1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ac3f57c-2493-4084-b87f-78302809fbe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "42ca4ee6-d83b-49c1-a4b3-20acd349f4c6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "05d144cd-1f6c-4b50-8046-a29df01fb1dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "65117830-b81a-4a19-a52e-a0723e3c958e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ce79e2a-94c2-47ee-8761-60e916c478db",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "75405c5e-60c0-4c18-b34f-dd18eac032ff"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f430efd1-433f-41ce-88a2-30794caa343f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "79c6ed71-1dd3-4a77-ad1a-49dfe6491e63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaf31bb1-c8c5-4b65-9c10-7ad924572e13",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "81c990db-487c-4bf3-8924-ed8e84148078"
            }
          }
        ]
      },
      {
        "id": "f18a4e43-3f8a-4a5a-84ac-9b766893a7fb",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e03acb1c-ba54-4bce-af56-1ce8df146b19",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff40291c-97c8-475e-abc7-185a5e5f51d5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6399c03b-139d-4464-b7bd-2b7cc7aae4bb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90172d88-4d82-4c6d-88ad-5d83ac31f628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d41ec6f6-ef70-4005-ace4-c334d19a38ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0973e8-9ff6-4abb-96db-e116cc635d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ef44c68-6876-49f5-b564-001024cd1381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "171beb09-7be0-4e18-8718-7512e322942d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76dd8bdd-acac-4537-814e-4c8bf8839878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3220f34e-1833-491a-bb6c-d2f332688138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a04df6-9939-40cd-b0ef-0fbf75d93dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "46ca02fe-cfb1-4d8e-a69c-de73c599ed4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d00128-232e-482f-ba0d-6fdbc71a2639",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a73a49d-3c6e-4f94-8b6f-1f1a817d20e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750738b4-082d-488c-bace-73edb76a6680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c456bb2d-8e92-4ad2-8d67-c662dbde04a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "87e5eaa4-af1e-4146-b29a-69dd94896d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6186619b-16a5-4b1f-b42e-dfcf31f68af5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f5d4d5-8e9f-45f7-9924-0ca8498ec9cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a049a80-1abf-41c8-9aef-e141d356a812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3502f923-bb9c-4300-9bd6-4d2bdd27d798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e02c3b88-c84a-4a04-ac0b-124b2798262b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0cdc7d-860e-41ae-8023-5fa6ba90fa4a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "638abdf8-0e46-4474-8ba2-207ff2c3c956",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d101b64-068f-4485-99fc-d8de1c793e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98d8be0-138f-4f20-9e54-d6f330523661",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f204781a-789e-42c1-8487-fb3c938982ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b609af-e59c-4cff-8bbe-f8d03a6bdcb0",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f850d67e-cfd1-4d2b-b5d8-901fedfe19d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e52b8a68-6303-4372-ad85-509ff4bf7877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6a541f-a6cf-4182-b750-20b35b6438a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd28c164-19d9-49c9-8283-c6f487d44c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f21c27-9e68-42c3-9f2d-633ec6b41df0",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62ae5f8-1246-4910-805a-ac5edac30bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faac0c44-fd07-4295-988a-74e9866a1c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d23d596f-54f4-4447-a700-db84d8591b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b7d14e-ef11-4e4e-8500-7ec6bf18bfaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051f1bb8-3530-42b9-bd48-ba88c168c8b8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfc6bd1-c2d7-4ffb-8ab7-bd742a7ea6f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6cd5f52-704f-4c09-9ef0-c4f5542b5d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba691531-541e-46c1-9de8-330ead03a9db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "367def6c-db6a-4cdd-8c0f-d44389fa0521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b682a77b-0ca2-4461-aace-feb59932ea91",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cfbe11-a5bd-420d-9702-39f8c0eaf11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54ba5c25-4170-4667-8694-c68d1b91d577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e39624-a733-4774-863f-74b8fcbf9332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "558907bb-05d2-494a-b927-97ce4fb6d677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcabdb61-9230-46bf-9db5-9bcd9c610e93",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2986fa-298f-4f7c-bde7-70c8e5740c57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3516eea-2e10-40e1-811c-6cd077d3a6c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e04ebe-dd31-40ee-bdc5-f5aab3a12432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9178c86a-4645-4c34-9362-55e424c635ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4d32a09-a857-4484-bc4d-85f4f9130f97",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "175e8694-599e-46f3-a013-5d3634bcb731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23bd795a-8e0c-4228-8955-2a4e47b2607b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "167d24ed-771b-49b3-bfd5-4da17fba849a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "b97f6ac0-3407-440b-bba2-99b6612d193b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79d598dc-1388-4de0-b0de-a1b78bc4b451",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263a8eba-858c-4474-878f-249246b14430",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa539fa0-a5b5-40da-9f37-684a1c4cec7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b7653c8-b0a7-4cfe-926b-44c122bf58ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7928f8bc-2e53-4133-9815-54d24a333400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7a44333-06fb-44cf-8d82-0e1585ce09bc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aecaec1-f21a-4d8d-8199-d897adf4c350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cccaea-f215-4cb0-938c-6f1321093c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ca260d-f5ce-4d17-b593-6b210656cc8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8904dfd8-f29e-4a4b-8bb5-0e83c3b4ccdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc87d41-5851-4893-9060-26002870ec34",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aecfd88-f693-432a-adb4-c36ce9108d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46f5b230-785e-4ec1-a563-53806b0f6759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0d5bf1a-8b9a-4d10-8d4f-d63193a2d291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "322b9d51-3a0e-4ad4-a0c5-675c4bc3a8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f44e124-5332-41ab-bd73-9989f9db100b",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e0356c-8e30-40fd-b1d6-de002fedc325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea678a06-9a5d-4ee4-9d0a-5d666e970213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc59b977-156c-4802-a236-d734ed73b327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc65aeee-c329-4115-9734-16afce9ab12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa1d5f6-d4fc-4636-a58c-3cc69389d5dc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d47c6c09-8629-4a71-87f8-4eccebe6d6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89df8792-d6d4-4704-a9c1-52b9d4b7bec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "841a67e0-51fd-4870-b26a-6c5088341898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "2688006a-bcec-4647-8306-8ffcabfda838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a45482f-67a5-44c9-88fb-bb40162fb752",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682c8f12-3186-401f-99f7-de16b75cbde0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c925f2d-cfb7-4f65-b6fa-e0c8b529880b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d8c78f-e755-4a90-b036-94bb93ade542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "5da89349-c18a-4b18-8dad-01cebc6cbe60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae2b822-936d-498d-a763-684d3e3033ed",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf5eb5c-f51e-4edb-898c-fa0a323e041e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906bdfe5-4447-4743-a1c2-1512e4a25bae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44c3b427-9a01-43ec-8448-27b45a25d20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "460d2246-3a0d-4332-a4dd-0195581f33ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a18ec968-d8f2-4b45-925e-81bb0440b95a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "887289f9-fbfb-45fe-b140-549106c855e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512779e8-3f6b-46c6-a9f6-230f8d024010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eb56ef-78bd-4be8-a50e-cd00f701ab33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ede17f-dbde-459d-9f20-b4da1b8e5d21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369c89a1-857e-4df9-b460-aacf46055a8c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eef9264-6bfd-4c5d-ab76-0ed1ede6302e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97c96f7e-058c-4e1b-b698-63332d3bc06a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f307ec2d-4503-4c66-a0a3-7e30999db08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43343e8-92c0-483c-98ea-9cbfdb3f0372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f2dca55-cf53-40e2-8687-187eb1a79214",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8a24d72-3c36-49de-af7c-493a3fb5947d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5deb3c0-c111-439d-b1ae-87d9eb8f7ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "373e3234-a1f0-42ba-9a05-fc8394b2c75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "685b1618-31a2-4d52-8673-17c0aa2b48ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ebaffb-1c21-4467-8745-a26b3cd0d25b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c456ffa-018c-4f09-a18e-5b64273e7d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33b96c7c-6c5a-4fe3-821c-55bed0a11192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3eb91a-eaf5-4900-b1b6-cc1e7e23d31e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8970b9f8-9273-4aa5-b24e-a298685d28a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd5427d0-6c25-4c37-b8fe-e302df9c9402",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93dfc1d-f935-4df6-abe6-7d367818df68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e587068d-5104-4164-b66f-d45f0666489d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d274266-cff5-468b-bb06-a3d58754f7d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b8932c-3fee-4d6a-9957-5ae021857605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3539af2-195c-4e04-b8b7-cd71daf65e1d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c538c0a8-8429-4830-8401-310b48ab2c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ebd0a6-e9b5-45c4-88dd-c79e799308bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77c4104-37e9-44f7-b739-48dcd58e7c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7af8d2ee-d7df-4c5e-be61-62d1d72472d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7860c732-a71c-4111-a6b7-246fc77d8886",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8d456e-138b-47f7-bb0d-6087dd02cf87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053dec88-d6b3-4df7-a11e-202712ffaab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c937209-2c15-4931-a2b9-b16db195eeea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c9ba87-f209-4f17-850a-a7fba5bfb401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c87029-6976-4365-b104-832a82b6f518",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc30a7c1-c05c-4150-bda1-a793d1cf98e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7b28adc-161f-4eb7-a4fa-ebf7fa4df091"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1310a951-424e-49b9-9ca4-982bb0843a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c868ad-caaf-4bee-9223-1b36f76373a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a061f15-55ec-4b16-b31f-e365c327cbaa",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0569c353-dfb9-407e-9cf8-c12a9ef44649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e10f38e-7cab-40ec-aa86-dc6c81a23cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a747b0bd-e10c-4501-ab70-10765510a684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d928af18-c831-4bad-96e0-21f37e4e5d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334b3bd2-156f-45f0-b0a8-0c82e738de60",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c87ffd57-dbe6-4f91-b362-df83b0d351b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "094dae8a-f3b4-4bba-bb37-7789aeaee0c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fffb87d-4b0c-4a34-85a5-d44c41e4cb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ad229f-1da9-4b7e-b852-f694f92059b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02cd6f8-1eae-4b8a-85fb-cc6fd0b96dcd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b6bd3f-2d80-487e-b674-cde7acb00266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c700a77-7e80-45a5-8967-1a0228ba480c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b35e63d-6996-4db1-80aa-393214f14799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5057028b-23fa-40be-9573-5626bbc45837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20369e59-59d5-4560-bbaf-66c825dedd1d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74df6193-4a1c-4326-b881-c27cce2655bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afe65982-078f-4a40-a8b5-df6a9026e006"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ce3f1f-4a5d-45c4-801c-e3729c217c86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b27162bd-ee8f-4e79-a148-eb2272cc46f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124309f5-393c-49e8-beb0-56fa5abb78bc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb26cf56-5a76-4481-b4ba-4d6ec83aacab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a5361e2-1d5d-4d5f-a938-c926d12fd887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec72ba65-cc8b-4df7-974c-06a31c1f5ac0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d36e39-2c4c-4e0a-9dfa-94bf970c171d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06a82a66-e940-4459-935f-7dcc9a7bf435",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05cabfe-1586-4717-bb05-c52f8ab7b93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ead3742-1c15-466b-b51e-ab12b496371d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29078b2b-4028-470d-a755-41f838b6ac68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46043038-f095-455d-aca0-abf092158288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e128a6c-1361-4347-b9db-d4a18502ce8c",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5810d2a-6532-41ce-9200-954cf12b6f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afde430-f972-4efa-9acc-aeb338eeb146"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea271502-3334-4467-bcc9-1405e59ad133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed11ec15-7a11-44f1-b4c2-6cd0f263f295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9e92bb-2968-4f8e-8432-671a60ce6978",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1954c8-07a3-4c61-bbce-879e9e49aecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d7ea68f-3477-45cf-a62a-4576204d5550"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0710ec4e-b9ff-4910-86c9-61cb8464dde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "002edc84-1ad9-4f4d-a527-5091434038c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "709df053-6bcd-4b67-bf55-c010217a5b19",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd79fb26-1221-4a13-8340-a58630dc8a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7d1b59-e6e2-44b9-adf6-338dc11cd352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82572ca5-7f6e-4b0e-b3e2-70b0dc66fe03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53eb437a-bbb8-4ca0-8916-e9b5a143b7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f4981d-e66d-4475-bec4-f132a5e9f989",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7ebf9fd-6251-4a31-a95e-0f39f5627808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2214e525-3d3e-4f79-a16d-2076c458cc45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3fcd59-f9e1-4aaf-9113-b716333341e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b5c53ee-ec48-4cf3-bae7-79eef77f4e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f000c1c-fe78-4418-a14f-ee295e5634d5",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1278d0a5-e68c-4c59-a7ee-6fa0e0323f3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23e9d54b-9b91-45b8-95a5-27a276dc8e0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5ba9456-55c7-4890-a33d-8f5d4e26af90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4d0726-c7cf-4bd6-b7f7-3fe8b9ef61e4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f3ef581e-37f8-4a1a-a439-0da872a7b160",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8aaf9ee9-4f35-4eeb-9cd8-8a2df3085e67",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5fd5b2e-38ad-4395-9803-d4c0f3d99220",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a4afeb11-2864-4f5f-a002-8438a26f04bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf97bd1-5db9-44fa-a6ab-c1ab1f435a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f19126d-f90f-4e72-9637-df2dcbb4ed31"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5f9fd85f-551b-4bc2-917b-f873669a4236",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70730734-23aa-4431-a3b0-a151add68775"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39ea2bea-fef4-4ce5-b05b-c477dd9ca8ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c9ecdf0d-b257-4df3-b5a0-1500b21c89d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2e1f1992-1572-441b-832e-5fd50a656fd6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68be7197-1acb-46b6-be15-7ebefadf4099"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "247e451f-674c-4c22-a12b-075aec8e5052",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b2b3983-75c7-4d31-81be-9fbb22aa252e"
            }
          }
        ]
      },
      {
        "id": "5fffc81c-6244-4db3-804c-7daa78a86fad",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "37158b52-6fdb-4365-bac5-605b02f93773",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a34b612-eff2-4944-b141-02513824e1a1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "642e9897-cf31-4aae-aff1-cde712cc9e19",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777c979c-9fff-4839-b9b1-49f231319bf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e12d0f-ea41-4dbc-9fa3-ee0d3d03bf6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3bec9a-4c02-4424-aadb-feab1f99e270",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83bb4a24-881d-4382-9589-1f1756c96b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1e7d3d6-7e79-4a1b-b1e2-a223d35afdd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f345b7da-3234-4ef0-99dd-826d0ce854c8",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0701fa9-5725-4ce2-80f9-95fe84cddf10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb62f502-a535-4349-87a9-e6e5020aa14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e32b4cd6-37f0-4b71-9d29-5b876223646c",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d2d79d3-1ed2-4ac2-869a-24704d2eff6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab8654b2-2774-4723-bf6e-e307a2a8fdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5de379bf-32ab-4f4f-b270-0a26cd87a96a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71673be5-86e6-4706-9314-a4c2453b9c2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe6a779-cda3-4b25-8bc7-d93c493c3dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e5b6dcb-acdb-419a-a53b-7c499c700d8d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "498ce067-fef1-4b60-8ec2-bd9fba6840fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b46b420-6892-4c81-b185-8d9208754946"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e13ea260-0651-45c4-8e33-1bbb3c68f034",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74729a9-c5d1-465c-b6c1-0b077bde4a72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c1b880-f785-4133-9f7d-52e135843fb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d031567-b884-457a-9932-cc653bfcba9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75cc0512-6084-48f3-bbc6-02c62a6fe3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d765419-cbff-4f43-95e3-b1c1f182362b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75e4667-106e-4700-9324-526534b88ba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00f9bc2a-b80b-4534-bdb9-522477b2101d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c48df8-887d-4f9a-a468-974b87b33ac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85c3ae64-9484-44fc-8044-3ac9cfb81d13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00aea454-cf6a-479e-b9c0-61f535b43538",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e12c16e-6290-48a0-a8b7-ef2768fd70bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4f0c29-445c-4854-a00a-4e12d7ef7a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293f43f3-f9b0-4241-94ac-297e1dd920e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e53b865-d6a3-4094-98b1-e5f30be7916a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f781a0d-99ac-453d-a3c3-4257611b1a55",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2f35d7d-2207-44fb-9288-4154aa769722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b18d3239-d46e-4545-85dd-8f3b88d0d23f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd334a32-ddd3-4b09-af55-d4ad4e8c0dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d61c280-80ec-436a-8896-672fb34d4f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eff256-4713-4364-b6af-e2f385ecca6b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49957df9-4bc1-4100-a59e-5e4aad124e34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8306d4a-0eb0-415e-a754-e8e77dc0ae3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c3c5f6-3f26-436d-bbe2-56ab71e639c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2f391d-330f-4537-b067-20ddda4a6178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcaab98c-59d8-4399-8d9c-38a0eef57293",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc1e6ad0-dc39-45dc-a5a5-bd7e50a71227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65477f7b-c884-401a-81ed-899d5e1038c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcddf5aa-3c75-43f7-b2bc-54ed9a198302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eec64968-d977-4874-ad9d-5719b5050e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7edb5f4b-4dcb-4619-ba80-569d2da5c26d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9022c611-f3b8-4846-bcc8-45cfb7feca18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c342ecf-98dd-4e01-bdd1-36fe975963d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bd4fbd-7d3e-4b62-9d1c-5449a1d7ee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b8ac3e-491c-49af-b862-a9bf7b53fd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15c2e7e3-344a-475e-97cc-2bcc014cb0f3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee750e-40a3-4f1b-8177-dc496eb3df0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6dbfabd4-a800-4f12-b331-c4b5e107eec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773bdb06-0d50-4bd1-ae97-f3641028849d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8413a74-4c5b-4c77-8c8a-f1de1deacac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6cd8da-8e7a-4fbf-b098-531015a985dd",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8498285e-6d2d-4684-b559-ec0687d75f2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4751571e-0ed0-4303-b765-fb931bb97223"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ca7e07c-fc6d-4a02-9707-52bfcd39dc7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "652273b8-d08d-4296-98cc-693f3a1a5d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a9c129-c5da-45fe-ac45-4a76e52a90c5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be1ae531-3096-4d68-8eca-96561db4deee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4792aa17-41bd-4162-802f-be59d6a1027a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5101f5e-8b9d-45fa-9fce-cbf592307188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd10b9f0-228d-41f2-a7a9-e5afc77e3272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb324ae-2a98-437e-83db-373679e8da83",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c252d99d-14df-47b3-8eb0-f2cba1b52244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccfea740-f6ac-4f95-a8d5-16b217aab0f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a09edfd-86ef-40ae-be56-9032dacaf3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1baedca-7a69-4907-8b04-e25f446b21ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11ce922c-7460-48fa-895d-a6ee701d4ce0",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723fd6b2-3844-4557-9174-5f7c5859483a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af7708a-7c51-484f-b011-019b9ef33254"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d95cdc4-d072-4808-8e56-56165ee3ddb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f8041db-e4f4-4850-bcb8-abecaaf2cd5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880bc180-5638-47cc-a721-6ae5e67eecc9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8dcea8-6c05-419a-8d5f-1b9be3bfa53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cabd873-f60a-4019-8218-452de95a2766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "458fb09b-d046-448c-9d5f-b42697c80f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26bf32c-2703-458e-877f-e38b20e6fb77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ff703d-d196-4b9b-9ff2-0faffd96622d",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec749362-d0f7-4ece-a0c2-dabc151d25db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "999b187c-1fc8-4737-b4f0-17a436400aa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf6b630-5211-4d51-96d8-ccc690244c53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c55148ad-d6dc-432b-904d-a94872c4cb54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bfe16d-4c86-4eb0-aa28-48c24f429267",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79a98188-1ba9-4ce3-a399-d0b59e7ac3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "434c6a7b-6947-4851-aa89-3fb3a0334bda"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4f70d9-5541-4e6f-8067-0a63cd1aa505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcb7ad6d-53a5-47fc-a36f-1cb26a31e56a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e27285a-7777-4188-a9ce-d2a9165e64a3",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1757b895-310e-4d5f-b9fd-f03f9e547be0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312ae17a-f5a2-4f04-8d96-914fec6aede1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "989ad276-88f8-4dd8-90a9-e1669f280f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95cfa656-32c7-40f4-9610-9e44fb3f807f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7f9199c-30bd-429d-8290-a5bab1f929bd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558efc2a-5c2f-4bd2-8602-ff3b50172116",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e02461ff-dbe4-4970-a141-f7fca5b4a6ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ba0f1a-eb0e-4214-bac9-f103faca59c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36d8ac6d-04e0-47df-8e79-4253a17769a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97700617-4118-42d3-92ad-2114c906b619",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af56c9c-4b2e-4072-9337-dcae872ade93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0bfc098-9a7c-4eb3-8659-54ae82e9f83e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "527068fb-ff46-4ee9-a655-bb481c37f21d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2494c6f8-8a2a-465d-bbc0-306bbeed5988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c9e8176-196e-427b-b05f-da8a49c56e26",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9b0388f-59c9-418d-8ad2-849c10b40666",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5932ec5e-49d6-4fd6-a2e2-e22dd904a7d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b051cd0e-3503-4c81-8f1c-1312070c38ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca8824e-5b9d-480d-aad4-560b63e29962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2082df30-b571-49e3-b736-486c83dae5f5",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3fc0950-2068-4578-a82d-5b733eb2fb5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a6780ef-13b6-4067-9bd9-b4fd606e9526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5016672b-93ae-4711-94c1-2f962ae3d86d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "099a5bb7-08bd-44a4-b619-a7370317015c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f657cb6e-ae15-4f8d-9356-0aef056fdb8b",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5662ae00-935a-4b2b-98d9-d740f45c65a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6bc5209-ecb6-4146-9bc0-5fa0282b9682"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f38ec2c-3c57-4c0a-b79f-30917480ed10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8455548-d45b-4e31-a4be-ed43f196ddc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92f06103-a72f-4ecf-918b-a372468d217e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce9ae5a-c411-41a4-8d60-34f91747306c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a0e93d2-40a4-4af1-b1cf-53eff938376b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c669a97a-841e-4e1d-b679-aa17416361c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0849ba-8f6c-4968-bf97-6234a2d5d7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b935b0-af44-4e37-80cc-98083b175a52",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b0b0d52-2a82-4b93-bb0b-f4f7ae679a4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2930ad5e-5160-4280-bffd-a40b25d90428"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "010c2cbf-1f40-4d1d-8c1b-ab739de1e43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c5fd24-00a9-4086-83bb-a5425288c366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e127687b-0bea-438d-9afe-70fa3704ce92",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc212b6f-9753-4c9d-84f7-8d6185fcdc31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78ec676f-beae-4f7b-8fd5-42f64bd353b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a23226-756f-4a75-8343-d2bfcb8ff8dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38211ea5-8eda-425b-87d4-92e00e9a5731"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb505552-bddf-4042-b1b1-fe147fc95c1c",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209f46e-86a5-4293-8e5b-37c44d58af72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02c64345-2196-4759-818b-e949717d7243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef27968b-6575-43a1-b730-88cf55416d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3781b146-7b0d-4581-93b5-15d57fbe1258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6870659-f50a-49a8-bb88-9688b50afff5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6d10565-c8d2-4959-ac71-b63a9e72f0c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1a4e69d-d79f-44af-bb7e-5faf0af2c092"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a37cc184-6e8f-4a7f-a6fc-f896ba9cb0bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58e2f30d-af75-4beb-8116-c6aaed7da06a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05a8034-db43-419f-9df7-67085c283d84",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d387e7d7-26f2-4951-888f-7f4fd37665c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36188449-8286-45e9-9033-3bf8c0759357"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703607e6-9608-4f56-a920-562507582539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f5c37c-0b8c-434c-886c-bb92b3a643cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d7713d-d9e3-4a7f-81af-b123d24d2c92",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0813d926-8646-4278-af46-d928bfd6e12b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f102cbb3-9f63-4906-bcdd-25eae6d9f44c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba8f22c1-e617-4f89-ba48-31354038cbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e703789-35da-4422-bf87-d7e99182fdbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289f9773-70c7-425e-aa10-48e637d3e6b7",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98dac316-313c-41b4-96f8-5801562e52ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c5a05e-f90e-44d2-89e8-41094cef6b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63bca202-a107-425c-90b0-38c9b206002d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bbf3fb6-cc33-401c-8f1d-3e305dfe36b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564a16a4-8724-4f69-97d7-e1675f2d7dc7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3946f93a-4222-42ae-9d2c-90c145173785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90143fb1-15ab-4806-a3a6-05e0db0cded6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50dab11f-f53c-4c01-8aa2-186d2dea943f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e4ba699-f988-45fe-875d-340cb9b1b2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c745fb-49cc-4d27-b4b2-58a288d0f7da",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c395159-a044-49ad-a7c0-a0633e1192f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5c5bd21-e79f-4c7c-b99a-63182514c492"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d20f91-c1d2-48bb-8377-d8a33b39287e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bda8da0-ea3c-4ab9-869e-a58998aa1d5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae99409-55a6-4b57-8b52-8c75a074fdf2",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66278638-d7e2-4994-a0b9-32d8672f3513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c327709-74e8-4495-af9e-44082703eb17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e22b2ae3-892d-4ac5-a6e6-e72cf2f326b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "daf7906a-a410-405e-8ba8-48c2f107e059"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf2386a-c534-4162-9c4b-39dfed8b376c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9135a40-667b-440a-99d6-849bf80a9d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "440b1613-fece-418d-a010-fc41fb9cef41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adbba14f-e8bc-4918-b884-7a98425ca7f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57964d4b-a7a3-47b7-a90d-87c9f6f7dba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d39cca2f-3f14-47fe-80ee-2d42e4d7fac6",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ae097c-8770-4b89-8763-2fc3bd247d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba6c68e-24f9-4a80-a906-7e87ca9c7f8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eef247bc-8ff4-4e04-b257-eb72d7afe011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d687b239-b43a-4648-93eb-1976402f8f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5644b79-dbc2-4dcf-ada3-f25e04a7011c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a151c92b-b48f-4964-adf5-c27f15328591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5810bbe7-7a71-4f2b-a29c-a5b3c7644084"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "919cef9b-24de-4660-bee0-3099875c1bbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e87ebd-ff37-4e22-9d4d-00cc11fd5667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a7aa7c-0060-425c-93ef-b9a40c462088",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2322e12-0d63-42b1-933e-70edf2260845",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "196f117c-d841-453f-ada8-3a1cda9c4071"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c960b8-f75c-42d4-ad62-1b53590e6fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24eda7d9-0898-4c7a-bef0-daf18a4349fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e2edfe2-b4a3-4285-95aa-013a49b21095",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4023e0dc-1e33-4d1b-b775-887ce93f34c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0199e1-2811-4820-ae9d-311b731bf9fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efec83f-13c0-4183-970a-50d95d074eea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c1b36b-c89e-4ea9-a7b7-419f5a0e0492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7e40a6-3e87-4c8c-8e90-8d341da50878",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36191027-7b1e-46d3-8790-892503204978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bd0c850-092c-4f1e-b572-727bf13479a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf1fedc-1604-4027-ab6e-a5975c782fd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2d5d14-cf48-4239-85a6-6c0bb90cdc8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71dbd85c-2e16-4202-943a-9970d4fcd6d9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3018c04-f2f1-4184-ad7d-f8743665edff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "380a2dfc-a48e-4d29-a2c7-378da07b54ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f486d594-d510-4bc6-a30a-8e2b45a62ad9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298d843f-08e0-4c31-b80b-78af4bd9bcdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37933c53-f574-422f-acdc-2906f9c5c561",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4c9bc53-916f-42db-990e-8ef154d2fcc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62540abc-7678-47b7-97f6-567b4fc44531"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3004d12a-fe2c-4a47-a86f-8cdcfcce51e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84f08039-6c41-4bb1-b313-cad01ac90081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1d5f7c-5e60-451f-8f2a-6d7111dbb38b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e65b12-ed95-49ae-ae9b-6a3f2893f2b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2496fe77-7791-41e7-a34a-556834475ae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0ed369-ea6b-4b2c-86a3-4bc1e39973a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26f4f696-125d-4111-8482-9796b573e008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07358f59-26bb-415e-8a97-3f2ce95e7f86",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5fb147d-1fe1-4970-bf62-7db394cbd8eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5d0ea2-452e-4619-bb16-2cb427578648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ed32be-beda-497e-bab1-4a85d70145f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec18c941-19bb-471b-9d61-71cb0f760784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e6e3179-10b6-43d1-9809-8c75b7eb4802",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cc6cb0-36bb-44d6-af0d-7086d52fadd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a454323-0ab1-43f4-817c-7453ef06bdd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a87ae926-a89e-4c50-9517-ed4f092083ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce40adb1-1e64-4e94-9df8-c1da7103d3e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c03ddddf-a384-4a96-a325-a7b63e952d4c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba2f0281-ec79-4015-a553-a3c8b1ec3a5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fd2d0c1-e16d-46ff-9fc2-adf2382b2850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "909873da-9ae5-4fc9-879b-ea3412ef0c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e022974-3863-4f7f-be56-d4a92bf755bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5579b88-056f-47c4-bb8b-dfd6e6b39ea8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5465edd6-e42b-45ac-a51e-77452909eafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a34a9c75-c801-436e-82c2-1b40e77d0a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd64559-9c8a-475e-bda4-62f5cdca8cba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c92947d2-b409-44c9-b9c2-0f696c32eaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3112ec5-6f4f-44d3-a43f-bf63b9b0328a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3cab4a-0124-4493-a097-638ed293dd45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f25be8f-0001-42dd-8619-94e78b994e84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47dc358f-cc8e-41a4-9a87-b6ec9eedb110",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1964e9f0-df98-49ab-8315-11b9aee98388"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031c8e45-5735-4fde-b5f0-5cc2b1efa8e1",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9236f304-1c21-469c-99f7-8d35daea954f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82955717-b39a-4657-ba62-98fd36763932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24667619-7ee2-40c5-a5c3-799d84fdfe13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef9d18b9-b507-4434-9f70-1273ff7b826a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3b24836-8c65-45d7-a6e9-8e1d68188cb7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9ee817-65f9-4c5e-9ec9-347750708c09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091c97a1-955c-45b5-a132-8929f762ed21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b231ced4-0293-45e6-bcda-626520ef0a8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f471ef6-a79c-48af-bc60-4f5f81cb45e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e37d1a-aeac-44d3-b584-318932d1942d",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41eadd17-7643-4b01-ac9a-825a147713d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac568b3e-67fe-401d-9b01-6795d5d45459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43a2e7a-32b0-4113-9550-5df2614c3c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c284b32a-a6cd-4f0d-b896-12f3f59f4f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52444fba-167a-4e9c-ab47-6b0c8b30ecdb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6228c111-7a80-476f-9fb8-74b73b13cae4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc3f3a3-e3c5-41bb-9b92-419c7af9d50b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f59d84-2342-4420-9737-e677a66bcc2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "375117a3-31c6-4386-846a-c90e7d22d123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec5e7ca-e254-4103-a20b-a537da5c4f91",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188314ba-f662-47f4-a6ce-56618b0234c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3773973-8c1a-4b4d-9554-a7a203f45bdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e7faeb-3b57-492d-90bc-0e0d44d9b028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "623ee1e9-0f1e-4371-965b-d1dff7bc7e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4adab6f6-927e-40eb-b7b5-e12eb01c1054",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bea219a0-81be-4345-9ba4-3fc6444410ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052a156d-2990-4ddb-8695-12ec54eff623"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee121ca-ccda-4116-a5aa-41ff68d330d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5000f76c-ed55-4109-b497-a409ac69f336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e80b6bb4-768b-4dbc-bf96-8ec699acc63f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1445a2a2-55a3-4627-baa7-cebd0d9a2a2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea15184-96d0-4e7a-8b8d-cf2d0b00e259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d14682e-adea-4acf-b500-9d91dd4a21c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adcd9d2-e79a-492a-898c-c6f915949b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b86d40d4-c4a1-419e-a593-1757c1095a66",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea0785e4-3d7f-4b82-9164-2f71c7aab9a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c005a5a-e1d5-4c03-a146-20c22c9d1577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8d5a8d5-3394-43fb-9501-0d93ccf0da0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e75995-8516-4d74-87a6-9821c009f79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70ee0440-42b1-49e6-b1d0-0c47735e817f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0276c3-0270-4802-8f8c-025ad293dbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "224c4531-655b-45ca-ab94-fdb1b3a71e98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd92ec60-fe1c-47ed-9c2d-42adba7f574c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c07240a-8843-4eac-97a9-2b28f9030669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "609cb64a-34ef-470e-9f91-b855edd874e1",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b68c90f-08b4-4401-8088-adfa02c75866",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5ab512b-c37b-411c-8e11-9009e539cf80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26f5b9d-a24e-4c50-8344-9a2a1f22458a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62624d56-cbd8-4a88-a74b-e28739f89f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b4eff9-17b0-45af-9897-e103a3dcde3f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ecab14c-dd0a-4ae1-bdbe-ab497428f74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bb79f3-521c-4aab-a6ca-56fcdfa97630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8697d69-3534-413c-b432-3b932c41749f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d110d8a-b53f-4b2d-b402-0905ab9449d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f98dd7-5ff8-4c06-acbe-33f40d39fc07",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a514585-f269-4b77-8a44-a9218ccf1b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a7d59ec-704f-4280-84b3-6fd5cc4c8c62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f40f27b7-0620-4e5f-b74d-ff778e66168e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af91b9a1-0277-4fd5-a92c-be886809b3b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc2a8a2e-9a0e-43a5-b14b-a455d74f1baa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32555475-b573-4774-abec-a14dee34a4cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25d5e240-0788-4f8a-93d7-acab647c5ddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc686bd-aefa-4780-bc4f-8ca6ef2e507b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fa0b1a-7b37-4eda-81cf-96bf30cdf1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a32305-b99d-4a3a-9fe7-3d7cf3fb3316",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1652e40f-5c93-458f-bd87-bb742a5bec9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be91a42a-ae45-472e-b512-ba526bf2f3d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa00850c-79e6-42e4-bf8c-314955ca7879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb97149-7d56-4444-92bc-062a757477c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1b16ad-f94b-4f3b-92b6-b01986b680ab",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880b96e6-438f-4f24-a9a6-d3b67744295a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e9bb92c-86b0-4d95-a802-4db8be4e8875"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5bd2e3-b79e-455e-864d-416a959cbe97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c62d44de-fd53-4ad9-becd-faadf1f6fb7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711dce57-c3ed-4dfb-836a-6f0d89b2e926",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2114a91-175b-4ccf-a94d-eefda151617b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f3a8974-25a1-41ca-a857-ee7ef46e0126"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d1c01d9-8b07-4aee-9f97-1edd5552e455",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83cc314f-7ba9-4ea5-8b76-af9c97c6f367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7097f768-d872-4cd7-bf10-68f94d562346",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca83a2b8-b107-47a1-b39e-2c205599fc0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9d3e2dc-dc6d-477f-aa61-7ea721f1208f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7f34d1-c07c-4acd-85ca-f7543027fd44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b0a15e-87c1-425f-80f2-304db8ebfa16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f3ebaf-5806-453c-9416-85e4859a46b0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "101f85da-1bd7-4a98-85d9-9a5b36ff41c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a24fd53-8aa3-45ed-a156-74412cbb7e05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d36669-6258-461a-b254-be9d29cfe9b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3cc7291-b3ed-40b6-b7c2-78acdeaf542b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc1339d-c240-416b-9595-2213a699a401",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23e0cdba-f760-46c1-ab50-601633d33e29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b079b8d-98fe-45b9-b2a8-a603aa5eaf7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08755a8e-484b-4a54-865e-19762b096708",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4232532a-e120-40c7-a1f2-4f27f9cf2846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a844b805-f78a-46bf-81be-190fea49f708",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084b5efe-9824-4fe5-9c16-ca533c367e7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6373533-d6ab-471d-a1d5-22659b0a6ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6550d2ee-f741-498b-9e39-9de958d17a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d02e2b-12e0-480a-9e34-c46dee5e07ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43507017-fbbe-4892-8024-16d46d93b915",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c800edd8-e56a-4844-9be0-ce9d705a1968",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b443dd2c-fc88-4381-9ab6-b5e890e8561b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8336f449-0647-412a-bd00-e781ee036762",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a93f86f-367f-4040-a8e7-3f2c52d096b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b53f0ae-4d17-434e-81d6-0b21dd8784a1",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "735b29d1-ec6a-4342-9ee4-4e99a8773b19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31bb62e5-0795-458e-9477-6c29c422b3c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6284d55-6ca7-429e-a141-a219f8567112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e751b771-f76d-4a07-9183-31488e80c738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf1b71a-c70d-456c-bd1f-b948a1be9269",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18b483e0-64b4-4eb6-9c58-7c807db5c380",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "107a0423-2f7e-4424-b051-56da66856ec4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ac6b2a0-6031-4d72-9602-cfc2eb621233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffe04589-7d94-4ca0-9179-743edf89ce4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c231d400-ddf1-4fbf-9e4d-37be9ad748ed",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8911686-29a1-453b-b2ff-6aa2e0c221ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f5f8517-ba97-4139-bcc3-981279726113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa9322e-bfd8-4e09-9227-bcd09a76e524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65e05bcb-e46c-4072-a0bd-6fd1b9249988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e08eca-29fa-4179-a2d5-e1de32bc31f5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c4e8fd1-fcad-49ff-953b-d9ad63e42c32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1063c55-829e-478f-a089-f27eb09329ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46123f9a-001a-4dc7-86db-c9588a6bc367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e90fe186-0a14-475f-ac88-fe4d32726c5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7ca577b-aa82-4a0f-a0f3-b40c19bd5deb",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "353e0e98-a687-4fe8-906e-9ffebc940c14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef7c56db-34e6-4324-b891-69e0d25ddf8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7761b32d-d0a6-475e-a4a2-b0f1efe98ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22ab9c44-1eab-42c8-87c8-58c8141b67f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734fa070-b2b2-41be-8ec9-6599b213cbe7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663eefcf-c798-4cae-9a5d-31026a9f4f3d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6615ef4-bee2-4d4c-a275-f653a1e4832f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b9fd36-122a-4b7e-9f4f-c156494db67a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eef285a-6faa-4cb7-9af6-39e40697c370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "726ab322-b646-4737-b016-b9aa2a3774c8",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a56b59c3-625e-41af-893d-b64dc4691849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e485d109-c0bc-4707-9802-88d1097521ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f2bda95-7b25-4261-b748-69f9ddfe8fee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a0f69fe-c9d0-4c6b-8a41-3e1bbc5257d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57d8b4a-97f0-4715-8bcf-f9efcb1b4a6a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62747b9-f4a8-4ac0-9d9f-eda3e98645b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c4e2a49-3644-42cb-ae87-4a33e7770909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8970d387-d66f-4266-af7a-67d2ffd59d54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64a031f-556e-44f2-a2a2-a972da6e814c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a029981f-1158-454e-9f9d-91484d688cae",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abb19831-e29a-4e81-ae73-41804d7a9a43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b62c0b02-830b-4719-99e5-54abea767ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a903c1-1d88-4309-9f44-db2fc6b02fc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f79e4c23-a150-4ac5-829d-61bb20483217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d040be76-6411-441f-971c-11e17dbf415e",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db79cd6c-28b2-40f2-a997-655ff3878a66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc09b20-06e2-42c1-829d-8cb5adfbce4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b67ffc9-59e3-4dbf-a1c8-9bc07d5a04a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00412d8b-ba69-445d-b32f-a1dc5ba3ef97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a3d2fa-7585-42f8-8ffb-bc062f5ce691",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72be504d-83e9-42f2-be58-88f18c68aa2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e2cbc8e-5264-4799-bcbe-825ce7461ced"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f195fc-1128-45bd-89b0-8684cc1059bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5700c5d7-5a4e-429c-a8e8-ce9ece66e130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bbedc0-866b-4550-ae55-08c7e2bb847a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62d4fb93-2a31-497d-b38e-0e8cf41f90e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0d93f1a-c41c-45ca-a66b-22c079b19a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "376add9c-95dc-4e6b-a224-cf7259307050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd1e392-0b36-478a-8f13-e0905b63b431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaf7983-47f1-4e88-b79b-bc906029e2f3",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42201cdd-2b68-4c8e-8d05-54d23eb64c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e8a107e-c463-4a32-be37-3bbfce26c47e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47568853-15bb-440f-a806-56b2e669dbfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16c65e08-293c-43a0-a173-cf9d9e1baeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6b9c8a-60fe-435d-aacf-9aa997e8ab80",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59cc7389-8ea5-4b70-9db2-18a598762d70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6ef98b3-9812-4164-9dad-1b37329641ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1008041c-03cc-4e64-a0a4-5f9ad79c08fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5b9941-7c1c-4949-8737-c15add346fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c379e7-c359-4345-8475-e0b6d29db344",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76249e1-fded-4d39-ad63-16a9dd5231aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27e10b67-5237-4b3c-99b2-0a8903de1b1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4878c660-6b6d-4a76-a1ff-b1015ce58058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e34bb612-d83a-4501-999f-e227b039f402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a6ef5f-48e8-4393-a274-6d46f0f520a7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e14b60-6bf4-43ae-88ba-5211001ab83e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e70de6b7-3c38-45e2-a707-1c253fe9ab6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7d4faf-0bd7-45ba-b0ed-3016d1306177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60a71e1a-c037-47bb-8e7a-b765ed9b6447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbd9fec-14ab-440c-b7a5-365697e37615",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1440e5-8547-4eda-be08-c13bb7e81664",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e370116-254a-43b6-a539-9c56606602e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcdcfbbd-5b86-4c55-a492-6458d09a4e86",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05aa843-e2a3-4e5d-b29d-c2fcc9e9f5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d029bb-f6a3-48e8-a5d6-8abe07ec8b3a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03d8115f-0a5c-49f1-a837-bfeea440baff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56d2cac8-eea7-4f7f-bf20-ed0dfd041a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113a5443-f6ae-49dd-8691-dedb682c0844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd40be36-5ea1-4e12-b1d9-30db56e7e11c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb4c4ba1-46e0-417a-8ee6-959fcc25ccd8",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a286f72c-d442-4e5e-9eab-9df350f12cbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9a90286-8ddd-40fa-be91-2dbfb180b560"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e476cff-ce95-41ff-b041-2aca53ca384d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f38ad61-7cb4-4346-8bc3-8318342e26ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f9176c-7af0-4b4d-9403-9bc2b74bc27f",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30c8fcf-761d-4e1c-8160-d130419ac394",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5d463e9-f0f4-451e-8c37-fc962ee14625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a323c77-f650-4e97-9227-6f6946b20cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0687898-5d7d-447b-97de-9a297a096ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2579c2-2d2c-49bd-b3fb-e57cdfbebcd8",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7405b0a6-4f32-492d-ae51-e827d41ef768",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d639454-aebf-4c7e-885a-3d262c3ad2f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14dceb0-7871-440a-b29b-b07688babc97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbffa80d-2ffb-4dc6-ad98-2f1020cdb65c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83a55948-2273-42cb-83f9-327ce331d237",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc62883-fcb3-4178-9776-d1dbbd8aed5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de29c787-f7d0-448d-bcc6-f33424659baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa0811e4-f64e-422b-b198-0f29d3d50907",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6db395d2-0e9e-4223-a926-5f3ef65889de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc94365-1b3f-478c-a303-e2c3d9dd3bae",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a84e8b8d-15f5-4256-91ab-2155fd994789",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea725bef-13c7-4668-9abc-e35cd9c031ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58630afd-1917-453a-b970-dfd8b513ebd9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1706cbb1-8f6c-4599-bab8-cc2fdb528a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568e27f3-d6bb-4b8c-8ec6-49b429361c7d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5939840-fdaa-4e2d-9dff-d22ce98c101a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d1b5e83-d961-43c5-a58f-41012c3bf11a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02c8fff-812e-4be9-8393-8b8d988d1562",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de213776-48ff-4c10-a7ae-c223d7d6b8a0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ead16899-4ec7-45e1-b8c2-795665b1cb42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "68d4c914-139a-4e36-b32c-fda9952e010f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "434055d4-b12e-4784-93c8-44fdc18895fa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "718dec7c-c921-4f0d-b6ad-e594814417f8"
                    }
                  }
                ]
              },
              {
                "id": "8b42c85d-d5e9-4865-87ce-9280e3669329",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b459cc44-7531-4a7d-b4d9-9026af70d2d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adc3b59b-6b1e-42e8-99f7-c9778bf5590a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "baeb2256-988b-4ac1-8eb5-85b7512e7acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e703dc0d-4457-4d06-b8f0-272854fa05bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "404cb9b5-00e4-4846-9e6a-0d48c7a432ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f98f2845-1150-4a59-93ab-df715528d7c0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c111f96-6313-4a29-8bb2-986dcb97c521"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "19b1f1a4-ad21-40bc-a2bf-77d0b2f3253b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71b49b74-6bf4-4844-b9d9-5bb627d7475d"
                    }
                  }
                ]
              },
              {
                "id": "71aa0bf5-87ab-4aee-84bb-80dd435ebdbd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "b04080f4-dd61-4c65-aaa7-bcfd849f78bf",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24efc34a-8222-4b8a-82cd-046847b5082b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "ead22c4e-72e5-402a-a313-3353ea84f224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1f59266-d781-4673-ad86-f366c38e8bc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "347d7636-9c07-40ad-8831-ec2d486f17f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ad116656-18f2-4152-a3fb-0ff01705a736",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf0bb175-6226-4281-b610-10aed3910d0d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b4e0fee-eb47-4acb-9a4a-e811b83f8c98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "56b0220a-df32-4b4c-9620-2ca60d0ade8d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "450b613e-e903-451a-aa6f-d2b2c78cbdd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6bd65583-b44d-43dc-b8a4-286a4d6c5bd5"
                    }
                  }
                ]
              },
              {
                "id": "968c44ce-8428-41b2-82e2-05b86902bcd2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9ae3bbd0-37b3-4340-96bd-ddc0d14ddfc0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "70eb5f6b-b153-486b-9eda-7804dded980e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ae70bab-ab80-4bf3-b413-f90978c9ecba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e17eadac-f531-44d2-bf03-a69d81627fd9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a42c6c26-c1ea-4d97-9715-e90868b416ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "96fa5940-f626-41f9-b7cf-f01d48aa5fe1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42862b5f-ea6b-4777-b551-ebd72b253eb4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "246895b1-1467-45bb-a36d-646ab7be992a"
            }
          }
        ]
      },
      {
        "id": "afd78b70-77c9-4808-b20e-0354ca24c162",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "e1bca317-e222-4aa8-8f82-e298bfb1c949",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1287a953-976a-4216-b781-bc5be5f930db",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f0ecbec-fc56-486a-a400-98979f8ee6d6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ead8c5-7575-4af7-bf81-5a545515fb11",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d28c1213-6527-4e48-aed6-b7f61f55f298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac79a75-f366-4f01-9db3-1d86e7063a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c361294-724d-4a3e-bf2a-16d72fb85170"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb1fe738-e6ca-4578-a6e5-dc88dde8ef5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f795eae3-8887-429d-8eb5-8cd41d8e9a45"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bd5de243-82e6-4a58-9d99-d5f9f133622f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "636b807b-c106-4b79-83eb-7f59c6cb427e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a940a2ef-bcea-4d51-a45f-bc9bc3abb464",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e6b28210-6381-4b7c-8041-5173651d9b34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9e591ab-cd99-46a4-ba75-78eb894390a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6b811b3f-6628-489e-a9ba-60fb100c0389"
            }
          }
        ]
      },
      {
        "id": "15723dff-8de2-4597-ba7d-3b29111f0e23",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2d5a3c64-c001-45fe-bf54-6dab4875dcaf",
            "name": "Negative Testing",
            "item": [
              {
                "id": "46b6310d-d12e-4a80-b4f2-f93bb3fd923f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1c134a6a-22c5-4926-b2d2-3d46d0dfbac0",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e6b51e-eb9f-4fc7-a263-88e7975b662e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6a2cd23d-219b-421a-a53c-fb24fe2d05cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae012968-f558-452d-bc10-3b8366d3dac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "25987c76-32ef-4efc-a71c-788df39d63de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4732639e-5271-4984-af7b-dbff168be23f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8613e410-a862-43cf-a2cd-f51b98d325d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c313162-41d9-4e99-b142-e935896e7e9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce8839b2-456d-45e8-8a24-f62c16ab6852"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b94ec0cc-e88e-420a-a803-31d6032a3e8b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbe7d5e1-4ccb-4f13-b0b3-428a7d2c304e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fa2d9661-b8dc-4e96-8cf3-ddb0929561a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc7f42b0-6928-4203-851f-746488e6f038"
            }
          }
        ]
      },
      {
        "id": "e95c3e9c-9e96-4f60-adaa-7984b1ba3527",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5af21deb-fe77-4bf2-bfc0-6fdd678afb47",
            "name": "Negative Testing",
            "item": [
              {
                "id": "387e6273-6f62-498b-99ce-266038c03c34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "244f5b22-3fa9-4cf9-8a6b-d670ace12f8f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49af427d-bd0d-4ba5-9635-8c92eff49ed9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6cdcd87-1af6-43d7-9bf2-6c8f71d21f05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2811bd2-eee5-4351-975b-e09e229cc014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9b2d425c-520d-4d14-ae65-28a0961f9873"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "24304f29-7f16-4866-b2e1-dad3aa2c5aec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dcbdf4a5-8809-447b-a63a-d838df894edb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7880b3d5-59bd-4730-a604-ba44b593998c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83364e6d-3a6f-4f94-9599-9edae15ba94e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20aa38c7-ff43-43ac-a0b2-09d0763f3189",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "829d8218-8020-4780-a7a4-78866c5ca26c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d46aa74-b78c-4f95-8b17-8afbe583c179",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8835f7eb-b7fd-4601-9dbe-88021a13499f"
            }
          }
        ]
      },
      {
        "id": "07b6c1f6-2d85-4c0a-adba-8f5919e29f7f",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0d7922a0-864b-4640-b280-234e49a3b2e1",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "52c53252-e133-4d23-86d3-064e43397607",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e28e5728-9d29-44ec-81de-27d41bc5ad2f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dc48f25e-a8f8-4c0e-9d21-55bd57530eb5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0956d4a5-fb9f-4905-a8b1-469d41a58ecf",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 162.12301587301582,
      "responseMin": 21,
      "responseMax": 14146,
      "responseSd": 922.4191003940983,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1720485548798,
      "completed": 1720485597993
    },
    "executions": [
      {
        "id": "02091361-a50e-482c-8d36-a254e3c06dca",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "cf92b354-86f1-4703-9d5e-fa2f755eec2b",
          "httpRequestId": "20a63493-e234-4237-9490-0bd24d9ad404"
        },
        "item": {
          "id": "02091361-a50e-482c-8d36-a254e3c06dca",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "e0418eb2-e9d3-40cf-8383-33704da64e9a",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "3ba2369d-b662-400b-836b-04f441fd488c",
        "cursor": {
          "ref": "7c99b4af-3a19-43f6-9234-c27d1aaddbc7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "51d7cdd1-8044-450f-8f71-b305e36c8b0c"
        },
        "item": {
          "id": "3ba2369d-b662-400b-836b-04f441fd488c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bba54152-e84f-4891-880a-5a4974280bd6",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "e7044e24-5f54-4686-baf2-a7801fe4a15b",
        "cursor": {
          "ref": "35699de5-3e19-4334-8997-d4c1886bff01",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "7cc7bde2-aa29-4a53-9293-4f4ec0fcb25c"
        },
        "item": {
          "id": "e7044e24-5f54-4686-baf2-a7801fe4a15b",
          "name": "did_json"
        },
        "response": {
          "id": "9d51af0f-de83-427e-a901-98e287545e03",
          "status": "OK",
          "code": 200,
          "responseTime": 482,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f4126-ad9a-4fd8-b9de-17073cba93c0",
        "cursor": {
          "ref": "3d637e15-702d-4e03-8cdd-567cc677f587",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d405c92-f809-4e6b-9560-f49659b2f80e"
        },
        "item": {
          "id": "f85f4126-ad9a-4fd8-b9de-17073cba93c0",
          "name": "did:invalid"
        },
        "response": {
          "id": "57bb77a4-e072-499f-ab0a-7fa8f7a3a370",
          "status": "Not Found",
          "code": 404,
          "responseTime": 469,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f85f4126-ad9a-4fd8-b9de-17073cba93c0",
        "cursor": {
          "ref": "3d637e15-702d-4e03-8cdd-567cc677f587",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "0d405c92-f809-4e6b-9560-f49659b2f80e"
        },
        "item": {
          "id": "f85f4126-ad9a-4fd8-b9de-17073cba93c0",
          "name": "did:invalid"
        },
        "response": {
          "id": "57bb77a4-e072-499f-ab0a-7fa8f7a3a370",
          "status": "Not Found",
          "code": 404,
          "responseTime": 469,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d9b5ca-10dc-4242-b79e-ea9ad2d260de",
        "cursor": {
          "ref": "27ec7cf2-6c33-42de-9941-3a93bf687918",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "69c20224-3cbb-47ec-ada6-6c9a4efdf5be"
        },
        "item": {
          "id": "23d9b5ca-10dc-4242-b79e-ea9ad2d260de",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "25ba9cdb-2800-45fc-b36e-77f8b90e9b20",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b47670d0-dafc-4b7f-9707-01521a28a641",
        "cursor": {
          "ref": "35f984cc-6fb3-4874-ab61-ddc3e79f3b01",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fcb8051f-47aa-42f0-8330-a554d0f89937"
        },
        "item": {
          "id": "b47670d0-dafc-4b7f-9707-01521a28a641",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b7993eba-ccde-4fcc-b905-1859de8d8047",
          "status": "Not Found",
          "code": 404,
          "responseTime": 101,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b88be9-52de-4172-ac27-dcac49ea38b7",
        "cursor": {
          "ref": "895f40d7-7d5b-495e-87fa-ede6e57fc559",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4bf4d59e-ed03-4495-a521-5278cbfda462"
        },
        "item": {
          "id": "18b88be9-52de-4172-ac27-dcac49ea38b7",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9a23e33b-aed7-4690-9541-4e5201ed8d69",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68eeacf3-41c6-44f3-93e4-63610ffd82bc",
        "cursor": {
          "ref": "94c36cac-9bf0-4fd6-aa5d-e19b9a59dcde",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "70b24809-a94f-4c1c-8787-3a4a0eaaa679"
        },
        "item": {
          "id": "68eeacf3-41c6-44f3-93e4-63610ffd82bc",
          "name": "identifiers"
        },
        "response": {
          "id": "a16e7649-b027-4371-b4ac-9338c95fa20d",
          "status": "OK",
          "code": 200,
          "responseTime": 93,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fd163f-f189-45d5-8738-c27ea6de383a",
        "cursor": {
          "ref": "f0de75e1-4204-4dcc-a499-083e6a57d852",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "afa70d04-62c0-4aae-9240-634453554185"
        },
        "item": {
          "id": "75fd163f-f189-45d5-8738-c27ea6de383a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a5a4246b-6116-40ce-ad34-10a250509e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 150,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590d7651-c509-4b1b-819b-355bec835b8c",
        "cursor": {
          "ref": "b97521a5-0775-4f9a-b224-ccb76ba4907e",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "f980fe74-c250-4fd6-9638-4a604dae514d"
        },
        "item": {
          "id": "590d7651-c509-4b1b-819b-355bec835b8c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "14308907-c9ab-45af-9c1d-c2df1ab15e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9606d53a-78cc-41ef-9fb1-4ea32f890c14",
        "cursor": {
          "ref": "5ba32a25-aa68-4b35-a8cf-2d59ec7cd7e6",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "80dbcfef-fb40-40d4-8fc5-ffc741678926"
        },
        "item": {
          "id": "9606d53a-78cc-41ef-9fb1-4ea32f890c14",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "fa5f3688-ce21-4142-92d9-f5ef2141f74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9b969e2-1008-4d03-ab37-1f6621ef610e",
        "cursor": {
          "ref": "b0a34684-f793-4855-8800-3e61cc6dba21",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "83a13dbf-7d18-4293-a26b-008b657a0b16"
        },
        "item": {
          "id": "c9b969e2-1008-4d03-ab37-1f6621ef610e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "79b04f59-ea3a-4ff6-a410-0e77dbf58489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3f570d-ba59-4b03-907f-2becf7a3b11d",
        "cursor": {
          "ref": "8cfd65bf-ad4b-4670-b2c1-e6afab4b5171",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "0a0ff6d9-9d63-471c-83c9-3dabdd1b5d93"
        },
        "item": {
          "id": "aa3f570d-ba59-4b03-907f-2becf7a3b11d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "2f95be09-7cbb-4063-8ba7-c466edaf263c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8192dd2a-fc39-4ff0-ba27-195ad79862e2",
        "cursor": {
          "ref": "a17e149f-9477-4d31-9930-66e52c9204b2",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5161aaa9-f90f-4d02-9cf2-9a769277634d"
        },
        "item": {
          "id": "8192dd2a-fc39-4ff0-ba27-195ad79862e2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9604072b-61f1-4005-a8ca-fe5fe31ca5bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e1d772-585a-4343-941b-a236c43ecbe6",
        "cursor": {
          "ref": "919cf3fd-a57e-4fd2-bbc4-8be65b0cd12a",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8600bd1d-6d52-4f8b-adc8-38e3d4a10048"
        },
        "item": {
          "id": "89e1d772-585a-4343-941b-a236c43ecbe6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "749ddddd-4a8a-4edc-8db5-2ee675570470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe138e7-08a6-4cd2-8be6-c896d07490cd",
        "cursor": {
          "ref": "ebb38523-4aa5-4822-a5e9-a8e3c2a87cc6",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "30ae3ac6-fade-4447-8628-b905bcb2ac1d"
        },
        "item": {
          "id": "7fe138e7-08a6-4cd2-8be6-c896d07490cd",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "1bcc1b91-16b4-4d6d-99d6-49d1666905a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 137,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e9fd176-e188-4353-884a-e2e752dc9198",
        "cursor": {
          "ref": "baca1dcc-6373-4a2e-a5e5-a5216b2f420b",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a4638670-f7c0-422c-a102-a4cabb72ef40"
        },
        "item": {
          "id": "4e9fd176-e188-4353-884a-e2e752dc9198",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "88c26848-e147-472b-83f0-17616f730bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bcebb76-a152-4e25-aa7f-6c9f657773b1",
        "cursor": {
          "ref": "e1e4ff69-21da-4269-82cb-26ba0dace6e4",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c17ca3ba-a758-44a7-88c2-7725cfd1f84e"
        },
        "item": {
          "id": "2bcebb76-a152-4e25-aa7f-6c9f657773b1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "3efa43c5-16f1-4ace-b369-9770bde474ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeaaf144-bf88-40a4-8a61-e1065d0173c1",
        "cursor": {
          "ref": "7c344bb6-8e00-4f82-8de9-d0821cd18649",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d9971868-58b7-4eb3-bea8-6cdca342dc52"
        },
        "item": {
          "id": "aeaaf144-bf88-40a4-8a61-e1065d0173c1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "775e0a69-4607-45b1-a1b8-ad1459096e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0489f20a-a6aa-4545-abe0-aa9277f1c94a",
        "cursor": {
          "ref": "3dbff8c2-c645-415e-a0e1-84b5497b6196",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4a8a8db9-b86d-4bf8-9ce7-5485a0e91ccb"
        },
        "item": {
          "id": "0489f20a-a6aa-4545-abe0-aa9277f1c94a",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3bee3c39-4631-4c38-9458-1eb5f8eb9855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8cda8c5-3092-49fd-b966-b9db6447f49f",
        "cursor": {
          "ref": "c2b3f8a4-f423-4ae8-aeaf-7caf2331f9a8",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "b047a85b-e94e-408d-86ee-99be885cbc26"
        },
        "item": {
          "id": "c8cda8c5-3092-49fd-b966-b9db6447f49f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "f43d1e53-d98b-4caf-a738-13c96d054c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc04a6ae-3d18-4fcb-94ef-81df88efc9c3",
        "cursor": {
          "ref": "1b97d908-a6cb-4239-9c21-05fae25fcb84",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "b06bc71e-66d6-4761-b252-3c66ce4bea1e"
        },
        "item": {
          "id": "cc04a6ae-3d18-4fcb-94ef-81df88efc9c3",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "f11af4b8-13c3-4f76-9c8a-f2fc992cba67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed9ee91-2107-4259-9a38-ebe014712865",
        "cursor": {
          "ref": "45b3ddd7-0f52-4759-84ec-c02a73ed52b3",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "512acf96-5a11-4e5e-8b71-08fcbe686e97"
        },
        "item": {
          "id": "0ed9ee91-2107-4259-9a38-ebe014712865",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3dc30db2-c537-444c-af22-6c0af64ae73a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "183bbd0d-a106-46d1-a63d-511d53feabdb",
        "cursor": {
          "ref": "ffbfa91e-6dad-4c9a-bb73-9b22a76f8f2f",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f8f7a956-98af-46e8-8163-73028f3d1501"
        },
        "item": {
          "id": "183bbd0d-a106-46d1-a63d-511d53feabdb",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "ad938466-f8be-467b-8a46-aa183d0e2b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b57cf0-b7d9-409c-a189-931db0ba1357",
        "cursor": {
          "ref": "0b189e6e-d6bd-4145-8fe2-738fe07f1524",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "72f0bb50-0919-470a-9ae0-42564497f9fa"
        },
        "item": {
          "id": "62b57cf0-b7d9-409c-a189-931db0ba1357",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8d402d61-d32a-42c7-9303-a67810ca7e46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b52de6-9f13-486d-83a7-619df59eedd5",
        "cursor": {
          "ref": "eb400e19-d3bc-463e-897f-bbd93d4b421b",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "865f2f4a-9603-4f00-a8ae-3f2f67a0645a"
        },
        "item": {
          "id": "49b52de6-9f13-486d-83a7-619df59eedd5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "91afee26-1761-4de6-8f12-503b9c816c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696b58aa-55bc-4e5d-8877-0d19e30cbc2b",
        "cursor": {
          "ref": "5517f8d1-b2ee-4142-b3bb-ad118a7bda0c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "33ad6108-aca1-41d5-9655-5fbc66367888"
        },
        "item": {
          "id": "696b58aa-55bc-4e5d-8877-0d19e30cbc2b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "c481835e-f5b8-4faf-94ac-5e25dff61d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09086054-a196-4c63-8140-a14235d76f53",
        "cursor": {
          "ref": "87ae969a-c784-46d2-bb06-21d53a620642",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7dca7b93-c3ea-463f-881a-bca814276056"
        },
        "item": {
          "id": "09086054-a196-4c63-8140-a14235d76f53",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "185673fb-18a9-42d5-b892-6ce53f0dba2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b24219-177b-4670-b1fe-f2da124e48bf",
        "cursor": {
          "ref": "a81b338f-97e0-41e5-8cdf-b3d2af4ad98b",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "557c7549-b1fa-4d53-a99d-781a69caf3f2"
        },
        "item": {
          "id": "40b24219-177b-4670-b1fe-f2da124e48bf",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f77084e8-2af2-4212-a64c-545b7f801031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ca07b5-95cb-4d54-86e6-724d5de72998",
        "cursor": {
          "ref": "6c33f8b2-e80a-4b3e-9af0-d79897247f8e",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "2abc135f-cb0b-4316-9747-a9c5b09f11c1"
        },
        "item": {
          "id": "32ca07b5-95cb-4d54-86e6-724d5de72998",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "40cc3644-bbfe-405c-9ae7-431c0df25f7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2ea1b8e-402f-4bae-93fa-4ba599c1e812",
        "cursor": {
          "ref": "a73ceab2-75ba-486d-89db-bfa7cf4a0cb8",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fd83de4f-9e86-4bda-95e0-ce8525a936a9"
        },
        "item": {
          "id": "d2ea1b8e-402f-4bae-93fa-4ba599c1e812",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4442799a-350d-4dd1-92c8-bc086bec4668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd176e88-7099-41de-bb4d-89e821166272",
        "cursor": {
          "ref": "f7e5a284-ce24-4fc4-8506-f8cbd445cce3",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "b31fdd17-dd71-4cb8-9431-b6b78534543f"
        },
        "item": {
          "id": "bd176e88-7099-41de-bb4d-89e821166272",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "ed7852f9-e4ca-4812-a54c-4df9637df1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e70d5d3-8f21-4a22-835f-3b0a1908af53",
        "cursor": {
          "ref": "066d7db9-c84a-44f8-8d19-9487088d92f0",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "87ab932d-67bc-4a74-b83c-f5c4fd6f56c5"
        },
        "item": {
          "id": "6e70d5d3-8f21-4a22-835f-3b0a1908af53",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "5ad60af2-a122-4cc7-b04e-ba8d3d07bda0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71e61d2c-15bb-4b29-8450-487b472c3d46",
        "cursor": {
          "ref": "b3988586-8141-4f83-b54c-1074201160fb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "72b17692-5afc-47e0-98f2-37d3cd4809ee"
        },
        "item": {
          "id": "71e61d2c-15bb-4b29-8450-487b472c3d46",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "fff63c70-8196-45ad-8222-93d7d76e8525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8375357-9e4b-4c72-ba4f-843ac7c2cf80",
        "cursor": {
          "ref": "f46cf708-8ec2-4576-97c1-19e3f41fb6c8",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "3f2a2907-46a3-4c5f-9a5d-6d3c3c712102"
        },
        "item": {
          "id": "a8375357-9e4b-4c72-ba4f-843ac7c2cf80",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a17a3959-5584-401a-b3ac-e30d194d8afe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "654ceb65-c9c0-473b-b622-baca36b76044",
        "cursor": {
          "ref": "2c77e597-e73d-487f-a5a4-3a86dd4eca14",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c55ff29f-5f21-41af-acca-e7c478e7db23"
        },
        "item": {
          "id": "654ceb65-c9c0-473b-b622-baca36b76044",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e4bdd18d-77b0-4bf9-b6b8-239f10817656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484266fd-8472-4483-a402-541e6f92bc27",
        "cursor": {
          "ref": "0145dbf1-046c-4fcd-bf6f-53afb998dddc",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "fd64594c-ace3-4714-91f1-fe16b2e6a39a"
        },
        "item": {
          "id": "484266fd-8472-4483-a402-541e6f92bc27",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "0295f3e1-56f7-4139-8883-a1a436c39da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 684,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29965921-a624-4d82-904b-88a92b1f5101",
        "cursor": {
          "ref": "05060a57-58d4-4f09-8a78-1e3c0eac052d",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "a94f906c-990e-4a68-9d34-df6621858eee"
        },
        "item": {
          "id": "29965921-a624-4d82-904b-88a92b1f5101",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef18bc2c-50c8-4a1a-b761-32deca65dc4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e920d49d-4d89-4537-bcad-9d3416873c40",
        "cursor": {
          "ref": "f0401c9b-f0d6-4bc9-9656-bcd1f0cb0c21",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "e41af76e-b902-4b69-911f-dad95c027777"
        },
        "item": {
          "id": "e920d49d-4d89-4537-bcad-9d3416873c40",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bf3b56bd-7f5e-480a-800e-b9b6b9d9f92e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0680643f-6ccd-4810-aec4-11c23d65af53",
        "cursor": {
          "ref": "c16e679f-7c4e-4b76-a414-b1b943c748bb",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ad115454-eecd-4e6c-acec-da7d3b2fd9a7"
        },
        "item": {
          "id": "0680643f-6ccd-4810-aec4-11c23d65af53",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "2380c941-fcf3-4087-84fb-ac2040aa73f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17e449c-1f20-40f4-bd62-2ae199f9fe47",
        "cursor": {
          "ref": "1b1c26ac-814a-4dbf-af67-aa5178f55057",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "072a8e27-7a2a-4664-b929-022ff94ce80b"
        },
        "item": {
          "id": "c17e449c-1f20-40f4-bd62-2ae199f9fe47",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1bc2f642-9774-4f76-91d6-ac33144a0ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 145,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7952296d-d65e-4bb9-9c47-d419b623f81c",
        "cursor": {
          "ref": "c87a3b03-2dac-4660-a0a5-0d9faade8908",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "497d13ab-8a30-42ba-b2b8-6c122d0d858d"
        },
        "item": {
          "id": "7952296d-d65e-4bb9-9c47-d419b623f81c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3e500d22-b076-428c-8176-bdfc51b40dac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7686cd2-457e-405e-866f-b64380c0c40a",
        "cursor": {
          "ref": "07ce8bd1-5a84-4e98-b839-f42513afb9e5",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2e5848ae-4706-4975-9035-7266f0dcfb34"
        },
        "item": {
          "id": "f7686cd2-457e-405e-866f-b64380c0c40a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "b63fab0d-5a2b-4a8b-aa1f-fdb07e035b10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb15997-5c42-4eff-8d5c-df61a1cda4ca",
        "cursor": {
          "ref": "d4a2fb1f-b923-4454-8cae-1b378f65630b",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "b6d3ecee-d314-4f0e-9ae8-b2d25c67ea65"
        },
        "item": {
          "id": "bbb15997-5c42-4eff-8d5c-df61a1cda4ca",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a4eca331-5f92-43f6-8883-116a574d5474",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92e6cbe6-753c-407a-a586-3fb68592c6c6",
        "cursor": {
          "ref": "deab04ec-8229-4b02-ad9f-6256dbe5d948",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "510e72a4-838b-4e62-a6ba-10f60511cf2a"
        },
        "item": {
          "id": "92e6cbe6-753c-407a-a586-3fb68592c6c6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fd623fa9-b739-4f02-b2ed-e44a8544b306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b1fdaa-baf9-4592-9012-ffb00b2f00e1",
        "cursor": {
          "ref": "bc1f3a45-c9ee-4cec-88b7-b584d6c9927a",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1ec4b13-835c-4727-9fd8-82883a021555"
        },
        "item": {
          "id": "a9b1fdaa-baf9-4592-9012-ffb00b2f00e1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "80aa8f82-47f9-4814-bbd7-f9a6e5ddc086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aff78a-f71d-4549-be7a-96cd51a6ec37",
        "cursor": {
          "ref": "a408d9cc-cecd-445d-a5b5-b8889ca95ab9",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c56e113c-d16c-43ae-8e97-cfd6d582f626"
        },
        "item": {
          "id": "a0aff78a-f71d-4549-be7a-96cd51a6ec37",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "35635a6c-4a80-49bf-a550-3667e5df97e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a65038-e5dc-4abd-81a7-3cbf7b1e82c8",
        "cursor": {
          "ref": "a6ae3054-acc8-4939-8b1b-7dd62ffeff36",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f3e7cbc1-d7b0-4361-9336-a2fe2731e3a9"
        },
        "item": {
          "id": "a5a65038-e5dc-4abd-81a7-3cbf7b1e82c8",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b69b9618-8cfe-4fd3-9858-7259d7bbcabd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcec7b00-4681-40fb-8166-3b2f552f4ad2",
        "cursor": {
          "ref": "83e844d2-f8f3-4fe2-bfbd-0d197803516d",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "a4af7458-2bbd-4ce6-a352-865c877b54a9"
        },
        "item": {
          "id": "fcec7b00-4681-40fb-8166-3b2f552f4ad2",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "64c99a1f-4ba2-46fe-ba2c-dad736ca64fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50bd46cb-7a93-4704-a331-b0651e05c281",
        "cursor": {
          "ref": "19473ce2-caa8-42b1-9d63-bc8cc42046f7",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1250e329-1e90-425b-a945-9c2725434bec"
        },
        "item": {
          "id": "50bd46cb-7a93-4704-a331-b0651e05c281",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8214eddd-fd3d-4a5d-a933-b586400ba5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a3ee54-3693-4815-8956-26177e1a6e05",
        "cursor": {
          "ref": "4502811b-72a7-45c6-b156-1fd7d4dc638b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2ed8da7b-4051-4b55-b4d7-df092b7e87cd"
        },
        "item": {
          "id": "e9a3ee54-3693-4815-8956-26177e1a6e05",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "b2b40572-0aac-4bef-8b63-df1956d16f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f59aff4b-e010-4b91-a306-8db6f722e3c0",
        "cursor": {
          "ref": "6da9cd23-e969-4957-9d98-b7c758e6ecce",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d5f55b2e-07d4-423d-9d72-397f5f612604"
        },
        "item": {
          "id": "f59aff4b-e010-4b91-a306-8db6f722e3c0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "67bd67ca-290a-4dd3-b572-242d63087851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6ab7fd2-206c-4208-b16c-9dcdd39132eb",
        "cursor": {
          "ref": "6ad69c27-3b27-486a-81b3-64fc0d301924",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c39f0cf6-dd82-40c7-89c6-e9e93744bb4d"
        },
        "item": {
          "id": "e6ab7fd2-206c-4208-b16c-9dcdd39132eb",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "529bec07-bf9c-4119-9cfe-6c62c695d80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5630a1d-0ecc-43a0-af1e-50d2e4796f14",
        "cursor": {
          "ref": "7e3b0d08-6a2f-4f47-a670-386095f815dc",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1ecbcb5a-e25e-4015-9d1f-dbb32fec00af"
        },
        "item": {
          "id": "e5630a1d-0ecc-43a0-af1e-50d2e4796f14",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3804cb2f-0e9d-4d54-a422-054d95484dc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e78fcd11-f446-4aca-9523-dc7c6d300b1a",
        "cursor": {
          "ref": "34ebd694-bbe9-40d0-b241-266762bdccfb",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7627d6f0-762c-4ce0-805c-b0c73cd6d897"
        },
        "item": {
          "id": "e78fcd11-f446-4aca-9523-dc7c6d300b1a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e98ef4ce-defe-46b2-a840-ba5417ee766d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5543f9-6498-445c-805a-f6f47d35fa30",
        "cursor": {
          "ref": "02e61fd3-8113-46b2-beb7-df2f3dbbe63c",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d723b850-eec6-44b4-8e42-45feb44214cc"
        },
        "item": {
          "id": "ea5543f9-6498-445c-805a-f6f47d35fa30",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "3db89f42-4507-43f9-b4a8-c31a02261557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d4a8f4-4da7-47d0-b63c-dafe356f4a3e",
        "cursor": {
          "ref": "048a1ae8-bbfd-47a5-a625-1b0f04c9e082",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "957b02c7-27e7-4b1b-bbe7-e2fc256c4190"
        },
        "item": {
          "id": "78d4a8f4-4da7-47d0-b63c-dafe356f4a3e",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "fbd60f0e-258e-4ab3-901d-14cbe5e7a038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce56f539-047d-41da-8569-ba81aea7789e",
        "cursor": {
          "ref": "31226c90-8ad4-4ea1-8043-2071a85b6212",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d70a207b-3eba-4da9-8beb-7e2a83b718e2"
        },
        "item": {
          "id": "ce56f539-047d-41da-8569-ba81aea7789e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "344a2652-e7a5-4f43-b4d3-a661d1c562fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab14c8e-a85d-4234-b42d-3ef3628c8b3d",
        "cursor": {
          "ref": "5cd0b7e8-5b05-487e-aec1-c73015bd14a3",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "28d35036-a56e-4ede-ab5a-6bfe84d0253c"
        },
        "item": {
          "id": "0ab14c8e-a85d-4234-b42d-3ef3628c8b3d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "bc2b6ba8-ef06-4b65-8b19-af9389ef06e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7e5447d-0661-488f-834f-2561658b0b5d",
        "cursor": {
          "ref": "1fc70438-d391-485c-b9aa-905a07b79d6e",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "708be5bc-e9ca-4f28-b8f7-6f817f47c35c"
        },
        "item": {
          "id": "e7e5447d-0661-488f-834f-2561658b0b5d",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "e52f47d5-0f77-49a3-97e2-a724158a7f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53904cba-722a-4335-b431-56b9c24195ff",
        "cursor": {
          "ref": "58e7a881-9da0-4513-8c06-d3d06ff21b60",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6f37de70-9525-4a47-94ad-88b45443a152"
        },
        "item": {
          "id": "53904cba-722a-4335-b431-56b9c24195ff",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "3b9bd266-dd35-4075-b1d6-cf58177c7a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c337b6bb-ccce-40f2-82a3-758e8e540941",
        "cursor": {
          "ref": "fd1fca87-3d67-4745-8110-31b8f9aed4fe",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "13007b18-9221-4442-a26b-6e800fa44e83"
        },
        "item": {
          "id": "c337b6bb-ccce-40f2-82a3-758e8e540941",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0a731695-cbac-4e89-9218-f70c1aba9985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc57c659-33e7-40ab-b938-e9f1494c6be5",
        "cursor": {
          "ref": "1b162397-7a16-4f19-97fd-787b5a4fd594",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "46abb437-e2c9-491b-a22d-906d1153b8a6"
        },
        "item": {
          "id": "fc57c659-33e7-40ab-b938-e9f1494c6be5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c1c766c2-ddaf-461d-beb1-38f360a6b045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4591dcc-3b77-468b-a802-091dcb4c4914",
        "cursor": {
          "ref": "984424ca-7633-4d70-8521-4ba9db87c7a5",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b5390cc4-4020-4dff-a5c0-ce7e1aa1f33e"
        },
        "item": {
          "id": "c4591dcc-3b77-468b-a802-091dcb4c4914",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b169db67-4a32-40a2-af5c-b3a862c4bbf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e7cd31-4f80-4c05-8915-51de7eab2187",
        "cursor": {
          "ref": "90766fa5-80ef-4a1e-8ee3-0bfdcdad1297",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5b3ead77-b5cd-4cab-a7f0-e2a2c4244a7c"
        },
        "item": {
          "id": "53e7cd31-4f80-4c05-8915-51de7eab2187",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f9ca4427-aca8-4aff-a2fe-a1e1a7d8ab59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da2952-8974-475f-ab61-d64eff4e716c",
        "cursor": {
          "ref": "805ac79c-29f9-4d64-a199-1c49884ec26f",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e7f8bac9-de89-40cd-b06c-1d734ac72851"
        },
        "item": {
          "id": "68da2952-8974-475f-ab61-d64eff4e716c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b04a6555-4367-42ab-bd36-af6e2f387761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7239158c-fd60-4d94-95cf-54a2d5466c13",
        "cursor": {
          "ref": "a180b099-e2f8-4caf-a0a3-78f3029c0e98",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "68ca59ca-053d-4055-9ed4-be61e7e36511"
        },
        "item": {
          "id": "7239158c-fd60-4d94-95cf-54a2d5466c13",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "eaa88147-18de-486d-a046-269c934aa15f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d967216-04ef-41da-a163-8240512390ff",
        "cursor": {
          "ref": "30764bb7-3f77-4bb4-9fea-4acbe5d70c73",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "8c054f51-45d3-434d-bc15-fcba28014b6f"
        },
        "item": {
          "id": "8d967216-04ef-41da-a163-8240512390ff",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "878ba372-b6da-4589-962f-275d1658172d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f80fb85-3de5-482a-b8cc-23db671ce514",
        "cursor": {
          "ref": "abd182db-fa85-4a8b-82f6-3f67ebbc8f2a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "88602915-f54a-49a7-a8ff-0613629b3dd1"
        },
        "item": {
          "id": "6f80fb85-3de5-482a-b8cc-23db671ce514",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "3cc059d7-0991-496f-8bdf-9fd3c2388059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e8524-be1a-4da1-878f-6076b12e3134",
        "cursor": {
          "ref": "e7048906-7121-4c3e-bbda-86d1d2205760",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a821922d-ca96-49c4-bf7b-64e617d48c16"
        },
        "item": {
          "id": "f92e8524-be1a-4da1-878f-6076b12e3134",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "29668237-dfa6-43c4-91ed-fc553f8d1809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1b406e-2a3d-4389-b225-dc33bd34a124",
        "cursor": {
          "ref": "9a699d3d-6196-4078-b1df-7f00daa19bf6",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "6be2b195-4268-4664-a71f-367bbc9063f1"
        },
        "item": {
          "id": "4a1b406e-2a3d-4389-b225-dc33bd34a124",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b82a534a-0dba-4be5-bc73-ab911dad8d62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfbb3547-5545-48aa-95a0-785fd727d35b",
        "cursor": {
          "ref": "d89dc2b0-76a3-4844-b078-bb749921f40d",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ae1a043b-6dc3-43ec-9aa9-d5c4c9649eb9"
        },
        "item": {
          "id": "bfbb3547-5545-48aa-95a0-785fd727d35b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b3380f00-9c0f-48cb-b4a4-6c4fc1f06385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d89611-875e-44ad-aaf1-d7a08e6c21ed",
        "cursor": {
          "ref": "cee5e9ac-7ee6-4ea7-8e88-eff09ccbd41a",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "02974fd0-f365-4f21-af1c-04a0830932f0"
        },
        "item": {
          "id": "c4d89611-875e-44ad-aaf1-d7a08e6c21ed",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "e1c52f61-2617-4873-9add-9141fd0eebc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a5e339-19cb-48e2-ab8e-984a504af222",
        "cursor": {
          "ref": "dda274b4-20de-4cff-99ab-bfb9858b9e90",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "1e53aa98-d9b7-4354-b2e3-7ece455d96e0"
        },
        "item": {
          "id": "84a5e339-19cb-48e2-ab8e-984a504af222",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "183fb1e8-5059-42ee-8a20-05621cfa306d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb2e96c-0a9a-4390-81e2-84c505738686",
        "cursor": {
          "ref": "3a5a7d0e-d4ea-4b8c-a8a2-c3deb89c8ae0",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "148992a8-9ac3-4ad8-8c73-d2e957ed8f74"
        },
        "item": {
          "id": "ecb2e96c-0a9a-4390-81e2-84c505738686",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "818f346d-37f3-47ab-baad-cf5a1d19e847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992099f3-0318-412a-bcc8-500f54f473ed",
        "cursor": {
          "ref": "ba65a5b0-2736-458c-bfe6-ec826f051cca",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b9d1193e-1d41-4f87-b0d0-8304a4823759"
        },
        "item": {
          "id": "992099f3-0318-412a-bcc8-500f54f473ed",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "500d635b-3e82-485f-a9d8-53d4bf5cfcb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fbb7d94-a98c-4f42-b861-48b3d3dfe812",
        "cursor": {
          "ref": "4f387be1-97ed-4d57-af3a-60186e8c1871",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8734298f-a0db-41c6-b65c-f64ada3eca1a"
        },
        "item": {
          "id": "2fbb7d94-a98c-4f42-b861-48b3d3dfe812",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "9025a7f6-b0f4-4e3f-a112-2eb64ca78a54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba052c58-b6d0-42c5-aec8-ffd5db70e3ab",
        "cursor": {
          "ref": "13df6765-5c90-466d-8fe9-81ebb36ade33",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3ef51f1c-b085-4575-922c-8e2ee89954a1"
        },
        "item": {
          "id": "ba052c58-b6d0-42c5-aec8-ffd5db70e3ab",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "a71f9535-2d90-4707-8635-1f7560341d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "345526c8-771d-4f7a-8447-dbf7df48862a",
        "cursor": {
          "ref": "6c921dfd-f58a-4e05-a258-1fd2e0e45cc4",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "5861b21a-1e68-4d71-8798-7c1dcfa306cd"
        },
        "item": {
          "id": "345526c8-771d-4f7a-8447-dbf7df48862a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a7ee5c54-b327-47d6-9033-89b40a8042c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e318143a-4e4c-4aa9-b22b-e5604c73134a",
        "cursor": {
          "ref": "55ee1110-cd46-4363-be02-6cd0f2b5455f",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "06ccb2cf-3c57-4d33-b0a3-49402b01fff8"
        },
        "item": {
          "id": "e318143a-4e4c-4aa9-b22b-e5604c73134a",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7658c0c5-9e04-426c-8feb-82d66a9a01d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdaae28a-465c-4702-b5fd-d1d407a940d8",
        "cursor": {
          "ref": "06b387e6-0fc7-400c-a82c-baa73fb49a9e",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "201bcd3f-6d50-4bf6-b445-733bd3453c92"
        },
        "item": {
          "id": "cdaae28a-465c-4702-b5fd-d1d407a940d8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "da020fd5-7a4e-44ca-947e-b292d20a4447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203b550d-d93f-4566-8f2e-6d944c5b2c27",
        "cursor": {
          "ref": "b741082e-dd4c-42df-9055-1adcecdaaa0a",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "9bd8fafd-444a-4573-b1d0-36af021d0798"
        },
        "item": {
          "id": "203b550d-d93f-4566-8f2e-6d944c5b2c27",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3d1b15c4-f368-4329-ba75-1670f9876dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77e1d101-9715-4407-a1f3-b6aaf827a56c",
        "cursor": {
          "ref": "a99eaf84-72d4-4e4b-8795-8ac062da0003",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3a62475d-50f1-4da6-9973-165cb44e6722"
        },
        "item": {
          "id": "77e1d101-9715-4407-a1f3-b6aaf827a56c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1228f294-7a22-47ea-baed-b64f80f25387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c52420d-f132-4957-abbd-b9f8def39915",
        "cursor": {
          "ref": "76f31699-aebf-4cd6-851d-ddb4e363c03f",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c103ded4-694b-4a22-9eb5-22e057903bcb"
        },
        "item": {
          "id": "9c52420d-f132-4957-abbd-b9f8def39915",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5fb94ab2-b7bf-4353-91ef-733db29ee1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9fb614-a73c-490f-882e-84a9656e165d",
        "cursor": {
          "ref": "5624e9a4-5bfe-4328-96b8-2300b5ffbefb",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "e826fe98-ad7f-48d2-b2ff-3840fefac39c"
        },
        "item": {
          "id": "fe9fb614-a73c-490f-882e-84a9656e165d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3b69322e-6169-4b93-a8ea-7aa7e82ccd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c9b6b8-caef-4626-86e8-00dff32c9978",
        "cursor": {
          "ref": "9f2942ba-1222-413e-a20a-ce3e8cc25d4d",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5eecc960-16c0-43e4-a386-2e0632b8df62"
        },
        "item": {
          "id": "f9c9b6b8-caef-4626-86e8-00dff32c9978",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "fac01db0-7c79-4b8c-9319-3ec260838383",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf140c3-2dd0-40e7-a543-2b200b922fc9",
        "cursor": {
          "ref": "3949470f-e807-4eee-8744-03af6d38164c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "762394cb-ed93-48da-bace-7601efdc685b"
        },
        "item": {
          "id": "8bf140c3-2dd0-40e7-a543-2b200b922fc9",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "62104849-1a07-4cbb-a9aa-9677e6937d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5679a6de-02cd-42dc-a839-3f68933ee19e",
        "cursor": {
          "ref": "9cbfbf0c-0095-4418-817f-b5b129b28bad",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0ba7884e-cce4-4535-adbd-42bc9d86936f"
        },
        "item": {
          "id": "5679a6de-02cd-42dc-a839-3f68933ee19e",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "24116e4c-0ef3-474b-a735-d9b001dc8dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedce531-ced3-4724-833c-0dd125567434",
        "cursor": {
          "ref": "98e9dcb0-f3c7-4d67-9551-09f2795bc149",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "735ef510-fb47-465c-8d5c-2b8996117bee"
        },
        "item": {
          "id": "dedce531-ced3-4724-833c-0dd125567434",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "63cdc0e7-b3e8-4da2-ad9e-a718040125b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "818a45db-8b6c-4f5a-96c6-2481c4e66050",
        "cursor": {
          "ref": "fd029ac1-1db1-4954-a898-9ecc9b16ce4e",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "7f19cf47-247b-4972-a3a5-6707a4a82442"
        },
        "item": {
          "id": "818a45db-8b6c-4f5a-96c6-2481c4e66050",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b5f22c6d-de43-4ec1-8cde-dd8498c5ea94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d7d4871-dac2-47ae-b5e4-c6660c9c792e",
        "cursor": {
          "ref": "068ae094-9e6d-4ac1-afe8-34d9f9823007",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "31952dfb-45a7-4a25-a44d-a140665a03e5"
        },
        "item": {
          "id": "2d7d4871-dac2-47ae-b5e4-c6660c9c792e",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9961dd83-2b52-4de9-a36d-0fd30b2c079d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155ce3ee-19b8-40e6-8d30-a55ed0c95105",
        "cursor": {
          "ref": "da3db987-6ff4-4404-821e-1ff5980b1ef5",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "272d9f84-0667-4cea-b0a4-6cc4a33a75f3"
        },
        "item": {
          "id": "155ce3ee-19b8-40e6-8d30-a55ed0c95105",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b151b7fe-435e-4fd7-ab7e-818ee4695b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e5806e-00e0-4c66-9c8a-0fb40dcd5408",
        "cursor": {
          "ref": "bda4a7be-f9e0-4ac1-b97d-d2c58885aef7",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "27985040-f36f-4f1b-bf52-61403bb421dd"
        },
        "item": {
          "id": "50e5806e-00e0-4c66-9c8a-0fb40dcd5408",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "51bd601a-5ab1-459c-8b56-c54bc61ac3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c6c1130-9ebc-41dd-87a6-6ebf0ca5830a",
        "cursor": {
          "ref": "5c8dc8ea-0a4a-4a54-9f00-c27792744ffa",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd346079-440f-47f0-88c9-2814aa66ab9e"
        },
        "item": {
          "id": "8c6c1130-9ebc-41dd-87a6-6ebf0ca5830a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "5179b9ea-2ba5-4650-9343-54dee9460d2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6b8d11-7dd4-499d-83be-b58e03205e3e",
        "cursor": {
          "ref": "dab079ae-3440-4bed-9857-ca0c7dd15344",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "baa0e2f0-cf6f-4192-851c-4be0ed6a4a8b"
        },
        "item": {
          "id": "ec6b8d11-7dd4-499d-83be-b58e03205e3e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9326859f-fa40-449f-ac56-b05013f47b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8795553-12a8-48be-b9fd-cd2d9bcdef68",
        "cursor": {
          "ref": "f2c7f8ca-f13d-4b3d-a176-7af64d43735b",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "48ba2dd7-2acf-46c0-b7b2-7da2bdd3e593"
        },
        "item": {
          "id": "c8795553-12a8-48be-b9fd-cd2d9bcdef68",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "8ea5d8aa-041c-4318-ac63-257fed9f5ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d7c380-530c-425d-b44b-cd717f1bce10",
        "cursor": {
          "ref": "5dd93850-b222-4a05-9153-961dc5b100d6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "11f2251f-585c-4b89-941c-7a00dc900dd0"
        },
        "item": {
          "id": "f8d7c380-530c-425d-b44b-cd717f1bce10",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "1a1fa8a8-c5f6-4ef5-be97-44f7bcf2d4c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 157,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04337a5-1d89-437b-a90a-bc467aaaa111",
        "cursor": {
          "ref": "7eaa40bb-91a4-4924-b6fa-1097d664c16e",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5b7a8eb4-5cee-4948-a9f4-2d08f2f7a820"
        },
        "item": {
          "id": "f04337a5-1d89-437b-a90a-bc467aaaa111",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a9eb06a5-d332-4291-9ba7-289771c1cef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84fc01f-9209-4d80-ac28-bbb0eb89a29e",
        "cursor": {
          "ref": "27dd462d-36d1-4267-a618-6038cc1d1134",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "627c336f-5317-4fd6-86e0-7524fe1a383d"
        },
        "item": {
          "id": "c84fc01f-9209-4d80-ac28-bbb0eb89a29e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "1d6702c6-45ca-470d-94f7-da97d299b01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4d2e2c-f723-48ba-b872-19667fb9dace",
        "cursor": {
          "ref": "3e6abe45-ecf1-48ab-91fa-1ba8db01b7b7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0910739c-59f7-41f5-83bb-029458ae47f0"
        },
        "item": {
          "id": "7f4d2e2c-f723-48ba-b872-19667fb9dace",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "84fff154-110a-435f-895b-96c677ced98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a92fab5a-c1b1-48d7-877a-ca660fec0c0c",
        "cursor": {
          "ref": "947d23fe-24ff-4bd0-931c-a95016e36125",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "277c9613-91d8-451f-88b8-513f006e85a0"
        },
        "item": {
          "id": "a92fab5a-c1b1-48d7-877a-ca660fec0c0c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "98b7a880-33f6-4a44-8277-811c21095aeb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3c5526-9aa9-46f4-9c69-5c818a693815",
        "cursor": {
          "ref": "88ea2981-affe-4822-96c8-f70b18bb81fb",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "61dbad96-a2d9-4a41-ba46-b2c5aff04694"
        },
        "item": {
          "id": "dc3c5526-9aa9-46f4-9c69-5c818a693815",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1afeeaa0-6a15-452b-af62-644e5f5405c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "0e0c05cc-b4f5-4713-a473-aac002273eb6",
        "cursor": {
          "ref": "a09990cd-391a-47da-abe2-09410285cb25",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ab4287a2-c7fa-424e-85ed-ed9e1742618a"
        },
        "item": {
          "id": "0e0c05cc-b4f5-4713-a473-aac002273eb6",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ee8dcb1d-2c2c-4df1-97fc-6eb99162d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "17eb2ded-ec14-4b23-8276-4b60aff2ddf1",
        "cursor": {
          "ref": "b8732740-2a74-40aa-a53d-0023795e6aba",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "73b79038-8504-4825-a493-7bcc34c583ce"
        },
        "item": {
          "id": "17eb2ded-ec14-4b23-8276-4b60aff2ddf1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a0318051-b831-4618-9724-8959f4c21927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "fca6775a-2d5d-4daa-acaa-3f9ecaa83149",
        "cursor": {
          "ref": "f28d9e28-5b36-4741-9e42-1eb72e843aed",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "617e44f9-88ca-4ef5-800e-f72575217e9e"
        },
        "item": {
          "id": "fca6775a-2d5d-4daa-acaa-3f9ecaa83149",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "528eb4a5-f7e6-4a04-9959-3c3026782742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e543dc3d-92a4-4ffd-98dc-82f7ffaa2aae",
        "cursor": {
          "ref": "5b981cd3-7596-4dc3-93e0-fc63a39ff9f3",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dfd80b9a-4912-4ba4-93ee-d72a5c1eaaa8"
        },
        "item": {
          "id": "e543dc3d-92a4-4ffd-98dc-82f7ffaa2aae",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e354c504-bdc8-46d4-ab63-a9fe9c51225a",
          "status": "Created",
          "code": 201,
          "responseTime": 14146,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1c6ff4d-6575-451b-a394-bf03cb5cc8b3",
        "cursor": {
          "ref": "efb70bcc-2613-42a9-ae21-72b1fbf7566e",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "eaf46ea2-5bf8-476a-a8ab-44ea95b1fa56"
        },
        "item": {
          "id": "d1c6ff4d-6575-451b-a394-bf03cb5cc8b3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3690c482-5055-4e8b-b32f-830e4d11d046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "fa3020bb-1cd5-44e0-afcb-2c069be35fc7",
        "cursor": {
          "ref": "36a158d6-7802-437b-abde-e28dcfae9e8c",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1110b9e9-41c0-4b04-bb2a-de3bd65b99df"
        },
        "item": {
          "id": "fa3020bb-1cd5-44e0-afcb-2c069be35fc7",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fc0da79c-b466-4596-bf6e-65e8ba7b1339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 120,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "6399c03b-139d-4464-b7bd-2b7cc7aae4bb",
        "cursor": {
          "ref": "5973b99c-e41a-4e5b-8d29-c6fedfe9066a",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ae2ccf6a-b05d-4306-8d4e-88943093fc52"
        },
        "item": {
          "id": "6399c03b-139d-4464-b7bd-2b7cc7aae4bb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4dd4ea68-3c1f-4b42-997b-31e6a1000250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "171beb09-7be0-4e18-8718-7512e322942d",
        "cursor": {
          "ref": "71229c00-de70-4931-adab-141aedf184b7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2b5d5bf7-d9d9-40dc-895d-94db3242bd58"
        },
        "item": {
          "id": "171beb09-7be0-4e18-8718-7512e322942d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e30a38cc-4145-4c71-bb5d-43f382bd65ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d00128-232e-482f-ba0d-6fdbc71a2639",
        "cursor": {
          "ref": "af0c0ef6-7cbf-411f-ba2d-54e877496877",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "75bd7c39-486c-4469-af98-68347750fc66"
        },
        "item": {
          "id": "89d00128-232e-482f-ba0d-6fdbc71a2639",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d6df7b41-4b2f-4dae-9d51-59fe23c0be1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6186619b-16a5-4b1f-b42e-dfcf31f68af5",
        "cursor": {
          "ref": "567ac57a-1c18-4202-9c17-7b3117a7fe36",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "55846670-1d5c-41fb-9015-4e28bf204a20"
        },
        "item": {
          "id": "6186619b-16a5-4b1f-b42e-dfcf31f68af5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ba8d12ef-f7af-434f-bbf6-298325351194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0cdc7d-860e-41ae-8023-5fa6ba90fa4a",
        "cursor": {
          "ref": "454bbaba-5115-4025-b174-9e293a2e21db",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a66975a9-a0f3-45fe-9947-5529379d1d90"
        },
        "item": {
          "id": "dd0cdc7d-860e-41ae-8023-5fa6ba90fa4a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "780296eb-dba1-48be-af32-e4ea8569d717",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b609af-e59c-4cff-8bbe-f8d03a6bdcb0",
        "cursor": {
          "ref": "dc49eea2-fff0-4ebd-a1b6-8ec3e19e7f7f",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "6afd2c90-5147-46ff-ba9a-142292b75902"
        },
        "item": {
          "id": "04b609af-e59c-4cff-8bbe-f8d03a6bdcb0",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "8c9d5375-3428-4613-a41a-4da421573f4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f21c27-9e68-42c3-9f2d-633ec6b41df0",
        "cursor": {
          "ref": "fafc7bee-7bab-4048-9a48-50a8909d0138",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "43a6c9a0-6524-48f5-86bf-02c9b8301a1a"
        },
        "item": {
          "id": "63f21c27-9e68-42c3-9f2d-633ec6b41df0",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "571c04db-aec1-42f8-b019-b9ded5140be5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051f1bb8-3530-42b9-bd48-ba88c168c8b8",
        "cursor": {
          "ref": "f7434e89-db7c-40cf-9214-45e9c2cade46",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9c4417fc-aefc-40cf-9ae2-d36bf1199a5d"
        },
        "item": {
          "id": "051f1bb8-3530-42b9-bd48-ba88c168c8b8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "ebf63691-5913-4012-8164-b72817524e5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b682a77b-0ca2-4461-aace-feb59932ea91",
        "cursor": {
          "ref": "b57f9e46-0037-40e8-8a35-6b293fc249dd",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "c75eeec8-45a3-44a1-9080-cd27e1f7c930"
        },
        "item": {
          "id": "b682a77b-0ca2-4461-aace-feb59932ea91",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2abb31e8-16a1-4f42-9212-86bc9dca6069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcabdb61-9230-46bf-9db5-9bcd9c610e93",
        "cursor": {
          "ref": "d6b40c3f-8627-4111-8e86-d6c69df3ad33",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2da148ca-cadc-4605-a16c-de65f008ba15"
        },
        "item": {
          "id": "dcabdb61-9230-46bf-9db5-9bcd9c610e93",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c6822a8d-a0e2-4ae4-a106-3363b2e93db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4d32a09-a857-4484-bc4d-85f4f9130f97",
        "cursor": {
          "ref": "a4968692-74e0-4f12-a6b4-9c31e8a7faa6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "07b86278-fa8a-4b80-ae51-8b1c92011f4a"
        },
        "item": {
          "id": "f4d32a09-a857-4484-bc4d-85f4f9130f97",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b297b947-4f8e-413d-b0ea-c05207b47db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79d598dc-1388-4de0-b0de-a1b78bc4b451",
        "cursor": {
          "ref": "a1750311-146d-4c64-b661-fcf46321f4b9",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9b28dc7e-948c-4767-9cd1-45a65af17247"
        },
        "item": {
          "id": "79d598dc-1388-4de0-b0de-a1b78bc4b451",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7d662a1c-ca2a-4354-8b43-4382f38f868a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7a44333-06fb-44cf-8d82-0e1585ce09bc",
        "cursor": {
          "ref": "f913aa95-538b-4566-906c-45cd5f067fe8",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "2d85d577-220e-40af-ac2d-0f8a2f159036"
        },
        "item": {
          "id": "f7a44333-06fb-44cf-8d82-0e1585ce09bc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9812df28-c0c0-4462-9610-bc7e610dda41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc87d41-5851-4893-9060-26002870ec34",
        "cursor": {
          "ref": "30a26d62-a43b-42a1-89f4-5165644f9e6a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "05c7ba43-9d5f-4d31-a5db-121bd80b2e45"
        },
        "item": {
          "id": "ccc87d41-5851-4893-9060-26002870ec34",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "535f2fbe-0e6c-4b55-9dc6-4de31c3ec62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f44e124-5332-41ab-bd73-9989f9db100b",
        "cursor": {
          "ref": "e39444e3-b326-4b08-8344-b3d40eed6459",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "be1a6177-f06c-4bb2-a898-895f15645916"
        },
        "item": {
          "id": "5f44e124-5332-41ab-bd73-9989f9db100b",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "08ea3a0e-558c-4d20-b470-075cb6b6912c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa1d5f6-d4fc-4636-a58c-3cc69389d5dc",
        "cursor": {
          "ref": "32add8c6-2e9f-461c-afaf-88da1a2eb0ce",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0726f4a3-7b19-499a-bb5c-d1f069050a2e"
        },
        "item": {
          "id": "2fa1d5f6-d4fc-4636-a58c-3cc69389d5dc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fa9a4a2e-5eef-4267-9535-0d0fd8d7c9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a45482f-67a5-44c9-88fb-bb40162fb752",
        "cursor": {
          "ref": "bd97687f-0b85-42d7-96a7-ffd8594e4011",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "73f05bc3-55b4-4db1-8a6c-b0d59c3949ed"
        },
        "item": {
          "id": "4a45482f-67a5-44c9-88fb-bb40162fb752",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e7a32e90-9946-4d60-a9b3-13da02ddfb32",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "8ae2b822-936d-498d-a763-684d3e3033ed",
        "cursor": {
          "ref": "bdc4f892-6650-4cb9-aa2c-b188b603a008",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c626c8be-5dc4-4c10-8617-75662628c890"
        },
        "item": {
          "id": "8ae2b822-936d-498d-a763-684d3e3033ed",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "db394b4f-781c-42fa-b229-4d612a7c4a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a18ec968-d8f2-4b45-925e-81bb0440b95a",
        "cursor": {
          "ref": "1ff76262-25fa-4b61-a61d-a2c8a0988057",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3357bc53-71b1-4d2e-bd84-a6cf738b9973"
        },
        "item": {
          "id": "a18ec968-d8f2-4b45-925e-81bb0440b95a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e3e80326-b829-4aab-9140-2e67c55d8354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369c89a1-857e-4df9-b460-aacf46055a8c",
        "cursor": {
          "ref": "499663be-ccc6-4ede-a451-c8631753ba80",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "c854b2d0-06ca-478e-add7-f51189017a05"
        },
        "item": {
          "id": "369c89a1-857e-4df9-b460-aacf46055a8c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e50d6307-6c2e-488e-ae0b-e8e8c00668cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f2dca55-cf53-40e2-8687-187eb1a79214",
        "cursor": {
          "ref": "af360e17-713c-4621-8804-23c6245944c4",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9da588ec-7cb8-4b3c-a141-271b6e39e5b1"
        },
        "item": {
          "id": "6f2dca55-cf53-40e2-8687-187eb1a79214",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ce322e85-abf5-4096-9d69-7eeb20bf15b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ebaffb-1c21-4467-8745-a26b3cd0d25b",
        "cursor": {
          "ref": "fed87acb-2d70-44e6-a6e8-861e9f8de59c",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8cde479b-c4f3-4b78-b276-dfb375c5d7fc"
        },
        "item": {
          "id": "d4ebaffb-1c21-4467-8745-a26b3cd0d25b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "233a118d-7145-4ea1-bd74-3e61d94b8b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd5427d0-6c25-4c37-b8fe-e302df9c9402",
        "cursor": {
          "ref": "3d1682a6-6989-4674-954d-c2320198ba25",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4f2a170d-3dce-4ae9-a700-bcd1f05da06d"
        },
        "item": {
          "id": "fd5427d0-6c25-4c37-b8fe-e302df9c9402",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7d62a81e-5efd-4046-9724-47ced57c1093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3539af2-195c-4e04-b8b7-cd71daf65e1d",
        "cursor": {
          "ref": "565413c2-1ae5-4a13-9506-c91f892d676e",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c0bde895-d286-4602-b8d6-148a387f9d27"
        },
        "item": {
          "id": "d3539af2-195c-4e04-b8b7-cd71daf65e1d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "5943e8e9-f60a-4881-adf9-abdefc104619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7860c732-a71c-4111-a6b7-246fc77d8886",
        "cursor": {
          "ref": "5b68ce7c-d514-47ff-860a-0657ec1ac5b2",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "821b56b9-12a3-4afc-8b9b-7cfee785e135"
        },
        "item": {
          "id": "7860c732-a71c-4111-a6b7-246fc77d8886",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "d1232f2b-f5de-4f93-affe-9edb2889680e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 74,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "69c87029-6976-4365-b104-832a82b6f518",
        "cursor": {
          "ref": "94fd7be7-38fb-4fe3-95d2-02a642a77c91",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "73f0168a-96a1-4d6d-a4d2-72857620243c"
        },
        "item": {
          "id": "69c87029-6976-4365-b104-832a82b6f518",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b48a14c8-c835-4d4b-a3a7-7c1afd903fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a061f15-55ec-4b16-b31f-e365c327cbaa",
        "cursor": {
          "ref": "de3d4d3c-2149-4679-b60b-2c17abc168ae",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "622230c9-166b-47b6-aa33-9730a18b2327"
        },
        "item": {
          "id": "0a061f15-55ec-4b16-b31f-e365c327cbaa",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "e63a6d8f-ea45-4021-9dac-d08501e8034a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334b3bd2-156f-45f0-b0a8-0c82e738de60",
        "cursor": {
          "ref": "84280cc2-2ce0-4951-ad95-d547ccdbcb9c",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "aa016c2b-0652-4e8e-a7c8-fce8babab913"
        },
        "item": {
          "id": "334b3bd2-156f-45f0-b0a8-0c82e738de60",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ff846dad-5779-4a25-bea2-9efa566f980b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02cd6f8-1eae-4b8a-85fb-cc6fd0b96dcd",
        "cursor": {
          "ref": "5140ea7d-8167-42df-b64f-a2b5e29af8e3",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d26a2a04-55bb-4b4b-a920-766ddee84fc3"
        },
        "item": {
          "id": "f02cd6f8-1eae-4b8a-85fb-cc6fd0b96dcd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e99e3509-8d1f-43f3-9d20-a1375f313d68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20369e59-59d5-4560-bbaf-66c825dedd1d",
        "cursor": {
          "ref": "16bcd45e-feaa-42a3-b1e0-2df55f1b5826",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9d07e898-e9fb-40ab-b5b4-f0d89b915a3b"
        },
        "item": {
          "id": "20369e59-59d5-4560-bbaf-66c825dedd1d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "526250b9-6f3c-4f5e-ab9b-c304be5d698e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124309f5-393c-49e8-beb0-56fa5abb78bc",
        "cursor": {
          "ref": "7a24d621-5194-4d3a-a895-2cacedb65d1b",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6b4c130e-d9ed-4056-b5b2-2f8ee73f0cdf"
        },
        "item": {
          "id": "124309f5-393c-49e8-beb0-56fa5abb78bc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e058861e-36fd-498f-a3a1-43ad5eef3467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06a82a66-e940-4459-935f-7dcc9a7bf435",
        "cursor": {
          "ref": "55823165-b604-4d11-bbe6-6f93172c8573",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "964eb56b-3416-4e5c-a707-583e3ea5a175"
        },
        "item": {
          "id": "06a82a66-e940-4459-935f-7dcc9a7bf435",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "145241e0-2b6e-4417-afc3-d21e0f7380ab",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "5e128a6c-1361-4347-b9db-d4a18502ce8c",
        "cursor": {
          "ref": "5433b605-10e9-43e4-94f5-93f884db90b9",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "05a82a48-0ecf-4775-92eb-2b6c701ca993"
        },
        "item": {
          "id": "5e128a6c-1361-4347-b9db-d4a18502ce8c",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "fffe2032-dbab-42f7-883d-d64aa286c3d6",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "1b9e92bb-2968-4f8e-8432-671a60ce6978",
        "cursor": {
          "ref": "f9212f18-5cae-4987-bf7e-5e3c72608041",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f000ca6e-6840-4bf2-ac34-297469f77c74"
        },
        "item": {
          "id": "1b9e92bb-2968-4f8e-8432-671a60ce6978",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ca2cf9dd-fab5-45ca-b1ca-3f3d9e85e36e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "709df053-6bcd-4b67-bf55-c010217a5b19",
        "cursor": {
          "ref": "2c9b43f9-6a38-4b87-b06a-b57cf330474c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "4bc3850e-48a1-47a3-b284-b7d99f6aa4c1"
        },
        "item": {
          "id": "709df053-6bcd-4b67-bf55-c010217a5b19",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3d28ae8a-3f79-4966-96d5-b5cda39c2a51",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 108,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "b7f4981d-e66d-4475-bec4-f132a5e9f989",
        "cursor": {
          "ref": "6c1ce5e8-9ca2-48b9-bc51-e65f3be7616a",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0a0f1a98-99c8-4021-842b-717c12985c62"
        },
        "item": {
          "id": "b7f4981d-e66d-4475-bec4-f132a5e9f989",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "79e03bb1-e20c-4a9a-9a3a-a3e260b73ec2",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 71,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "4f000c1c-fe78-4418-a14f-ee295e5634d5",
        "cursor": {
          "ref": "ef3a7966-17b6-4782-8cd3-61392171777c",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "0c64133e-68c3-4b0d-970b-2e2686433deb"
        },
        "item": {
          "id": "4f000c1c-fe78-4418-a14f-ee295e5634d5",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "21173c5e-823d-44dc-964c-3e094404358b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 87,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "8aaf9ee9-4f35-4eeb-9cd8-8a2df3085e67",
        "cursor": {
          "ref": "b56aba1a-573c-42ff-9acf-d337151c269a",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "1832c145-afec-484b-99ec-05b3b2ccb73d"
        },
        "item": {
          "id": "8aaf9ee9-4f35-4eeb-9cd8-8a2df3085e67",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "17962334-dea2-4344-b9cf-82531df6312b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642e9897-cf31-4aae-aff1-cde712cc9e19",
        "cursor": {
          "ref": "8c3b405a-f976-4195-902e-af521c792368",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f8f7ad34-b361-4d50-a52c-bfbe078e8826"
        },
        "item": {
          "id": "642e9897-cf31-4aae-aff1-cde712cc9e19",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "54b51682-8ff7-41ad-93e3-09b97af681fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3bec9a-4c02-4424-aadb-feab1f99e270",
        "cursor": {
          "ref": "d89c788b-cc9d-4235-81d9-a5711fabb908",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "76e6ae7a-3528-4a41-9ea7-29459cb0bf7b"
        },
        "item": {
          "id": "4b3bec9a-4c02-4424-aadb-feab1f99e270",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "8cb2b2cc-d442-4a3a-a8d7-dce077160dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f345b7da-3234-4ef0-99dd-826d0ce854c8",
        "cursor": {
          "ref": "f6de143c-b096-469d-918f-d14afe6d6557",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5b23d660-5e88-4d69-8b46-ca1e853f6cf6"
        },
        "item": {
          "id": "f345b7da-3234-4ef0-99dd-826d0ce854c8",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0f79cc16-af73-4b68-b056-61f04b989f1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e32b4cd6-37f0-4b71-9d29-5b876223646c",
        "cursor": {
          "ref": "7548a82d-a90f-4e60-a978-6f8defba06f7",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d5c96a61-a216-4d2f-8f04-f5ceb23e7dd9"
        },
        "item": {
          "id": "e32b4cd6-37f0-4b71-9d29-5b876223646c",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "475aff89-ea93-4a4a-aaf0-310bd87bc50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de379bf-32ab-4f4f-b270-0a26cd87a96a",
        "cursor": {
          "ref": "82970b79-13e9-4092-a60e-8230f2322eee",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3f26899f-3926-41f3-b581-80c3c778b62f"
        },
        "item": {
          "id": "5de379bf-32ab-4f4f-b270-0a26cd87a96a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "8840d6a2-0f7e-42b7-b647-c9209ad6e300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5b6dcb-acdb-419a-a53b-7c499c700d8d",
        "cursor": {
          "ref": "6f4602b3-281f-4e16-9007-9266198a7958",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7452a6bd-5363-450e-ac09-6a9858d0dd29"
        },
        "item": {
          "id": "6e5b6dcb-acdb-419a-a53b-7c499c700d8d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "409cd43f-0f79-4962-965c-66f32970ccc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e13ea260-0651-45c4-8e33-1bbb3c68f034",
        "cursor": {
          "ref": "02febaaf-6fea-41e1-af15-596025a4182d",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "eb45d0e2-5dbb-4920-be38-d54844b7f840"
        },
        "item": {
          "id": "e13ea260-0651-45c4-8e33-1bbb3c68f034",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "58c3cc0d-068d-4b4b-a9ab-917673d6ab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d765419-cbff-4f43-95e3-b1c1f182362b",
        "cursor": {
          "ref": "68dec063-9ee7-48eb-ba88-d8fd955f3636",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e2a4d987-95c0-4f7f-affd-5d301abe2191"
        },
        "item": {
          "id": "7d765419-cbff-4f43-95e3-b1c1f182362b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "adbb2bf4-6de3-414d-b4a6-24b86272fc70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00aea454-cf6a-479e-b9c0-61f535b43538",
        "cursor": {
          "ref": "02049bfd-65df-4055-bcb5-f4486ece6fd7",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "9bc08109-4b7c-4924-a213-4571b2352230"
        },
        "item": {
          "id": "00aea454-cf6a-479e-b9c0-61f535b43538",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "87c64833-debc-4e41-bfd5-9326187a1dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f781a0d-99ac-453d-a3c3-4257611b1a55",
        "cursor": {
          "ref": "e6693b8d-7bd5-4249-ac4a-bf350a67f0f6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "7dfe81d1-8bff-48d7-8c85-bf2b2e44471a"
        },
        "item": {
          "id": "9f781a0d-99ac-453d-a3c3-4257611b1a55",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "bb0c3ec0-4ed7-4844-9359-e6b49e105e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eff256-4713-4364-b6af-e2f385ecca6b",
        "cursor": {
          "ref": "9fe8cbf0-b30f-4a13-b965-54e7ccd83ae1",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "93e456f6-6c5a-45ac-8cab-d0a3f5f03fda"
        },
        "item": {
          "id": "47eff256-4713-4364-b6af-e2f385ecca6b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "4a68e9b0-5788-4009-8abc-7dafc1398afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcaab98c-59d8-4399-8d9c-38a0eef57293",
        "cursor": {
          "ref": "2f1a398f-9749-42fd-ac03-73f0b1d14896",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f8ee5900-f167-45cc-b608-2d90b06273fe"
        },
        "item": {
          "id": "fcaab98c-59d8-4399-8d9c-38a0eef57293",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "94e85760-e857-4eb5-9383-56614cd14e63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7edb5f4b-4dcb-4619-ba80-569d2da5c26d",
        "cursor": {
          "ref": "574d4b8f-482a-4b80-b25b-67f51eda3f33",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "61bf1489-9898-4c29-9139-398e7f4a5281"
        },
        "item": {
          "id": "7edb5f4b-4dcb-4619-ba80-569d2da5c26d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "df8e89c2-ac12-4a73-baaf-f4288275d69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15c2e7e3-344a-475e-97cc-2bcc014cb0f3",
        "cursor": {
          "ref": "94489bfe-3940-49e5-8ce6-d7716c3478cd",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "d641205d-1153-483a-8472-048adab24443"
        },
        "item": {
          "id": "15c2e7e3-344a-475e-97cc-2bcc014cb0f3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "24b44709-be39-4444-98a7-38b0e652fbbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6cd8da-8e7a-4fbf-b098-531015a985dd",
        "cursor": {
          "ref": "acada148-40d2-4585-83ac-ca4629617990",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a4ab6e96-c876-4757-83b1-d9f888b7d667"
        },
        "item": {
          "id": "7f6cd8da-8e7a-4fbf-b098-531015a985dd",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a7dec567-6e2e-4131-9217-c5f8481afe4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a9c129-c5da-45fe-ac45-4a76e52a90c5",
        "cursor": {
          "ref": "d58d9088-0f1c-47fd-a2a6-ec7fd8b807bd",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fb1965cd-2fa7-449d-8cc7-04a069adf9ef"
        },
        "item": {
          "id": "b5a9c129-c5da-45fe-ac45-4a76e52a90c5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "20a8c188-7a80-4723-b90b-f37a71767e30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb324ae-2a98-437e-83db-373679e8da83",
        "cursor": {
          "ref": "b606f516-c355-49f2-9fe1-82f993b7d434",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "8eb1717a-bb40-4a55-963f-4b4c6891d18b"
        },
        "item": {
          "id": "4eb324ae-2a98-437e-83db-373679e8da83",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "c7736332-94bc-4c78-bde3-df7f79c186f1",
          "status": "OK",
          "code": 200,
          "responseTime": 100,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "11ce922c-7460-48fa-895d-a6ee701d4ce0",
        "cursor": {
          "ref": "b15c9985-369c-4949-9468-443f87ff3c53",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8647439f-836b-4ef0-a71f-8ea52e5ca173"
        },
        "item": {
          "id": "11ce922c-7460-48fa-895d-a6ee701d4ce0",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8cf10676-102c-4f2f-b763-414af0b840ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880bc180-5638-47cc-a721-6ae5e67eecc9",
        "cursor": {
          "ref": "c813436c-71b0-4cc0-9b01-1d0dbb3e530d",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "bff03d8a-4335-4db8-a9b7-b50569d0bafb"
        },
        "item": {
          "id": "880bc180-5638-47cc-a721-6ae5e67eecc9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "02fffb1b-2557-44a9-81cd-785e69811c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ff703d-d196-4b9b-9ff2-0faffd96622d",
        "cursor": {
          "ref": "bb1a603c-e5d7-4aef-b668-3bb45072740d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "34308969-fd3f-456b-9daf-2612f8374c7a"
        },
        "item": {
          "id": "a8ff703d-d196-4b9b-9ff2-0faffd96622d",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9e1e6086-7740-446f-9683-2dc9cc730c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bfe16d-4c86-4eb0-aa28-48c24f429267",
        "cursor": {
          "ref": "4bea46b8-7af9-45c1-b4e2-63ad935df1de",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "dbb9ead2-6b9f-4d46-97bc-c437c92c8489"
        },
        "item": {
          "id": "87bfe16d-4c86-4eb0-aa28-48c24f429267",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "1d8e76e2-c984-4871-ba2d-bde96f2e9464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e27285a-7777-4188-a9ce-d2a9165e64a3",
        "cursor": {
          "ref": "fc85abd9-6675-4684-92f8-1a2b0fad2df7",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1528ffed-2a67-4f07-b455-f1a4e69dae34"
        },
        "item": {
          "id": "9e27285a-7777-4188-a9ce-d2a9165e64a3",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "352dc769-d7d7-4503-a0f5-2726361b03cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7f9199c-30bd-429d-8290-a5bab1f929bd",
        "cursor": {
          "ref": "dd879c94-bfb6-430e-a1b0-1f482178bee9",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "b2afbe93-30f8-486a-abb8-ae81ea6c1f6c"
        },
        "item": {
          "id": "f7f9199c-30bd-429d-8290-a5bab1f929bd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "cca4b211-8938-42ef-95df-ed73d8a9e0d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97700617-4118-42d3-92ad-2114c906b619",
        "cursor": {
          "ref": "0b468d7d-de32-45d4-89da-f60d9186644d",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6e895fe4-90e7-4290-9f46-75e0f5474a5c"
        },
        "item": {
          "id": "97700617-4118-42d3-92ad-2114c906b619",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2e07a33d-9edf-49fe-a009-474260b2f4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c9e8176-196e-427b-b05f-da8a49c56e26",
        "cursor": {
          "ref": "f59119fe-70fd-4366-a3b3-39b8af0693d8",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "44343386-8340-434e-b713-d299f21a9fab"
        },
        "item": {
          "id": "5c9e8176-196e-427b-b05f-da8a49c56e26",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7f244209-e1b3-483e-97e4-aee1eb10b956",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2082df30-b571-49e3-b736-486c83dae5f5",
        "cursor": {
          "ref": "aad9b459-ba69-40b7-ad21-dd35c4f9b0a4",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b5d5b08f-d722-49d3-b17c-b0c0c380156e"
        },
        "item": {
          "id": "2082df30-b571-49e3-b736-486c83dae5f5",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "1ce557f9-1d72-404a-b5bc-b4eb7cd8f4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f657cb6e-ae15-4f8d-9356-0aef056fdb8b",
        "cursor": {
          "ref": "e7a1bf67-c82d-49f5-8405-597be9ab3992",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bbb77809-96d4-4a62-8189-09bae68001d4"
        },
        "item": {
          "id": "f657cb6e-ae15-4f8d-9356-0aef056fdb8b",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "c75abf9c-b1a6-478e-bfc1-dd7258ef231d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92f06103-a72f-4ecf-918b-a372468d217e",
        "cursor": {
          "ref": "b08251f6-b327-4025-9654-64b82e222bfd",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "992d1139-4f9c-408d-8e65-1d5ef04086aa"
        },
        "item": {
          "id": "92f06103-a72f-4ecf-918b-a372468d217e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e09c6df2-a655-433c-8b56-5152b0e4fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b935b0-af44-4e37-80cc-98083b175a52",
        "cursor": {
          "ref": "679ad8b2-15d9-4e14-94fa-fdcccc92aacf",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "17b46d3d-6621-4118-ac5d-4a77c0e06177"
        },
        "item": {
          "id": "57b935b0-af44-4e37-80cc-98083b175a52",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "42f80dbc-ab61-48fd-acc6-e914e1997034",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e127687b-0bea-438d-9afe-70fa3704ce92",
        "cursor": {
          "ref": "642d2e32-e25c-40c2-9a33-8144cb8f9af3",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "42914f96-8611-4f85-9f0b-f20f978e616f"
        },
        "item": {
          "id": "e127687b-0bea-438d-9afe-70fa3704ce92",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "62665afa-11d1-45b6-829a-428ce9abf203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb505552-bddf-4042-b1b1-fe147fc95c1c",
        "cursor": {
          "ref": "173b9608-b076-46c3-9833-56b70933bfaa",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ecec5a76-6034-4d32-8da0-d232f8cff78c"
        },
        "item": {
          "id": "fb505552-bddf-4042-b1b1-fe147fc95c1c",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "82b2ada2-b2d2-456e-a969-f5b0b410e6be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6870659-f50a-49a8-bb88-9688b50afff5",
        "cursor": {
          "ref": "617b0985-7abe-4486-98db-fd64048093d0",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "a4a0c14c-fda9-48e6-8e9d-248316b64068"
        },
        "item": {
          "id": "b6870659-f50a-49a8-bb88-9688b50afff5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "a30e7209-842c-47a7-9924-6aaccddf6534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05a8034-db43-419f-9df7-67085c283d84",
        "cursor": {
          "ref": "066968b1-d7fb-4003-9c80-b4f20d7bd1be",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6a2ddec7-e0b0-4b4d-b36f-5d1d8459c30e"
        },
        "item": {
          "id": "f05a8034-db43-419f-9df7-67085c283d84",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5838fa1b-6580-4a2e-a60c-6473c0b2880f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d7713d-d9e3-4a7f-81af-b123d24d2c92",
        "cursor": {
          "ref": "4319248b-d079-4f27-af53-318b46a619ac",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "34fed15e-221b-4415-9e58-1006b998340d"
        },
        "item": {
          "id": "c1d7713d-d9e3-4a7f-81af-b123d24d2c92",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "8bc4f809-3857-47d2-9a59-11aa02939c8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289f9773-70c7-425e-aa10-48e637d3e6b7",
        "cursor": {
          "ref": "d1cad2dd-edc0-49ff-b3b7-06e00a3ad925",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f82656dd-21f0-499c-be6a-286f63a27b0d"
        },
        "item": {
          "id": "289f9773-70c7-425e-aa10-48e637d3e6b7",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "ace04451-700f-4124-a799-1c42483776b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564a16a4-8724-4f69-97d7-e1675f2d7dc7",
        "cursor": {
          "ref": "444cd2de-7e2b-4c0f-b1e6-a68b65e03c0b",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "51d238d5-4c4b-4297-a732-b5369d17365b"
        },
        "item": {
          "id": "564a16a4-8724-4f69-97d7-e1675f2d7dc7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2350ff25-d503-4f33-b1e5-43acae00d44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c745fb-49cc-4d27-b4b2-58a288d0f7da",
        "cursor": {
          "ref": "83a0bf67-a047-4cce-adf1-cc3908ad9aaa",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "87837a9e-4766-4541-990c-a6121c568b6e"
        },
        "item": {
          "id": "30c745fb-49cc-4d27-b4b2-58a288d0f7da",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f44d3d69-150f-465f-9aea-a911f454fb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae99409-55a6-4b57-8b52-8c75a074fdf2",
        "cursor": {
          "ref": "ba7ca3bb-6768-4518-bdb9-deebd70e0097",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2f92882e-23b8-4fb4-8698-b40c12c3f233"
        },
        "item": {
          "id": "2ae99409-55a6-4b57-8b52-8c75a074fdf2",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b7a0661d-3815-4e83-aa05-39a1f138c37d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf2386a-c534-4162-9c4b-39dfed8b376c",
        "cursor": {
          "ref": "18573322-ea03-4a6b-9da9-904beff45f13",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "360291f6-2af8-42d1-b553-cc83f3993462"
        },
        "item": {
          "id": "0bf2386a-c534-4162-9c4b-39dfed8b376c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "66c6b035-43b2-4f19-a499-7ef4af9ef847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d39cca2f-3f14-47fe-80ee-2d42e4d7fac6",
        "cursor": {
          "ref": "b9283f27-e85c-48b6-bc42-634659aabe8c",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "0222f9e1-c801-4164-ae95-788b4677e43d"
        },
        "item": {
          "id": "d39cca2f-3f14-47fe-80ee-2d42e4d7fac6",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d1f3f3f-37b9-4101-8ac2-0003d53c938c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5644b79-dbc2-4dcf-ada3-f25e04a7011c",
        "cursor": {
          "ref": "68e42732-f444-43d6-8805-a00467cb7cfa",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "389b5fa6-4501-4eef-81c5-3f45e1134975"
        },
        "item": {
          "id": "f5644b79-dbc2-4dcf-ada3-f25e04a7011c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "314d3a87-6cfc-42fc-adbb-536fbea396c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a7aa7c-0060-425c-93ef-b9a40c462088",
        "cursor": {
          "ref": "a5cf05ce-3a8b-4ee5-9edc-2536f1581782",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6e51067f-2d05-44c3-b666-4073b018f3e9"
        },
        "item": {
          "id": "68a7aa7c-0060-425c-93ef-b9a40c462088",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c9815c6d-b547-438b-be06-9588f8663171",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e2edfe2-b4a3-4285-95aa-013a49b21095",
        "cursor": {
          "ref": "0fceb696-7a5a-42e6-8a6d-a7899b6001da",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9e402352-5941-4882-8876-f247c62af398"
        },
        "item": {
          "id": "0e2edfe2-b4a3-4285-95aa-013a49b21095",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "475b5df8-04ef-48f8-8730-b010de6f8785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 143,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7e40a6-3e87-4c8c-8e90-8d341da50878",
        "cursor": {
          "ref": "6a0e5a85-57c2-4932-ab07-00d371c338df",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bbe88cfc-e0e4-4456-8cae-5457d1b0c812"
        },
        "item": {
          "id": "6b7e40a6-3e87-4c8c-8e90-8d341da50878",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4c00a922-ed60-4d64-9cd3-99db1fb1194e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71dbd85c-2e16-4202-943a-9970d4fcd6d9",
        "cursor": {
          "ref": "0fdfd672-3d6a-4680-93b7-29dc35cbb7ec",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "ddf5404f-21b2-4f51-a432-48c9ca89553b"
        },
        "item": {
          "id": "71dbd85c-2e16-4202-943a-9970d4fcd6d9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "fbeff335-7c32-4a05-a443-a1c485122efb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 425,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37933c53-f574-422f-acdc-2906f9c5c561",
        "cursor": {
          "ref": "deee1f7c-945b-4965-a486-11272e8d43b2",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c1ef70ba-88aa-4993-820f-192abdf76a92"
        },
        "item": {
          "id": "37933c53-f574-422f-acdc-2906f9c5c561",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "c2a6b0aa-7961-4c29-9576-744f852f3468",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1d5f7c-5e60-451f-8f2a-6d7111dbb38b",
        "cursor": {
          "ref": "90f44c71-744f-4f85-a953-1a0caec473d9",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6583251b-f2b9-4428-9291-88a4d2db3f66"
        },
        "item": {
          "id": "0a1d5f7c-5e60-451f-8f2a-6d7111dbb38b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "94bbf1b3-c520-4324-837d-775c849817fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07358f59-26bb-415e-8a97-3f2ce95e7f86",
        "cursor": {
          "ref": "f3619bd6-bfcb-42f6-ab56-1cd0377ac337",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "e398cdf0-e46f-4d7f-9be5-70bff623d839"
        },
        "item": {
          "id": "07358f59-26bb-415e-8a97-3f2ce95e7f86",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "aa0ed345-2fd0-415e-a8a7-8098e9cd5a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e6e3179-10b6-43d1-9809-8c75b7eb4802",
        "cursor": {
          "ref": "fcd90c05-d3b0-4c7d-95ea-61cff47d998a",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9234b6b0-e8f1-4706-a913-9ff911dad8c8"
        },
        "item": {
          "id": "8e6e3179-10b6-43d1-9809-8c75b7eb4802",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "48319c6f-313a-4a09-aaa3-e2320e0b0fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c03ddddf-a384-4a96-a325-a7b63e952d4c",
        "cursor": {
          "ref": "1a93f9e6-289d-47b7-a76e-05dbfb3db638",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a89d9a88-02b0-4313-b406-52ccc76ca0ec"
        },
        "item": {
          "id": "c03ddddf-a384-4a96-a325-a7b63e952d4c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "01dea5a1-017d-44d8-a091-18e970e46cba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5579b88-056f-47c4-bb8b-dfd6e6b39ea8",
        "cursor": {
          "ref": "beae23df-368d-4914-907b-21ff9ed6f2a6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "7d3e16d8-a40a-4f51-80a5-96ff6bb09cce"
        },
        "item": {
          "id": "b5579b88-056f-47c4-bb8b-dfd6e6b39ea8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "67341c9c-a4a9-48fe-a8e6-f7b2e2027e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3112ec5-6f4f-44d3-a43f-bf63b9b0328a",
        "cursor": {
          "ref": "3e1da5ae-f4c2-4762-97a2-f2b520061f6d",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "f4405d3f-9456-4481-b7e7-4660c9027e7e"
        },
        "item": {
          "id": "d3112ec5-6f4f-44d3-a43f-bf63b9b0328a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4aef3d01-8e95-4c6b-9777-b5a603cc52f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031c8e45-5735-4fde-b5f0-5cc2b1efa8e1",
        "cursor": {
          "ref": "010bc1e7-035f-49e1-9efb-b8b9942c1afe",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "a2cb5e63-8c7d-4381-8b2a-d2c3a43d49c6"
        },
        "item": {
          "id": "031c8e45-5735-4fde-b5f0-5cc2b1efa8e1",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "180b0728-5279-433d-af02-0c162fe91c69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3b24836-8c65-45d7-a6e9-8e1d68188cb7",
        "cursor": {
          "ref": "2e64d8e9-fb73-40f3-8f21-67450d3e791d",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6469b038-c465-41a3-9311-7be9e3ca32ba"
        },
        "item": {
          "id": "f3b24836-8c65-45d7-a6e9-8e1d68188cb7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "03c42c78-133c-4e15-87ad-0a428c7e5258",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e37d1a-aeac-44d3-b584-318932d1942d",
        "cursor": {
          "ref": "90b9cf26-cff8-4014-977f-5e9f71d280f5",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d664f2b5-fc40-4229-b504-106df17578f0"
        },
        "item": {
          "id": "a1e37d1a-aeac-44d3-b584-318932d1942d",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1dbddc10-3160-48bd-a46c-a654917671fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52444fba-167a-4e9c-ab47-6b0c8b30ecdb",
        "cursor": {
          "ref": "597ce79f-f943-41db-9f53-77d4c57221ed",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "0d914147-139b-4374-92fe-572ed935f39f"
        },
        "item": {
          "id": "52444fba-167a-4e9c-ab47-6b0c8b30ecdb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "90b8809b-3e11-4478-9749-fb5e8b043cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec5e7ca-e254-4103-a20b-a537da5c4f91",
        "cursor": {
          "ref": "c5fcd17a-eb22-49b9-9212-fcebc4ee43ae",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5c6c1d30-2f9d-4f2e-8284-bbc0b32e4841"
        },
        "item": {
          "id": "4ec5e7ca-e254-4103-a20b-a537da5c4f91",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "c3c7e355-2444-4eb1-8529-039511a7e20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4adab6f6-927e-40eb-b7b5-e12eb01c1054",
        "cursor": {
          "ref": "6ff94658-be65-4b53-b261-658bd54dd50f",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "66f232b5-47c6-4608-b111-3969a0954bea"
        },
        "item": {
          "id": "4adab6f6-927e-40eb-b7b5-e12eb01c1054",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4a212f2f-999a-4f45-b6ea-d4d8ebaf2df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e80b6bb4-768b-4dbc-bf96-8ec699acc63f",
        "cursor": {
          "ref": "55c260a0-79e7-48a2-8e43-bb696eb77eb4",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "f1e2e077-5e8c-4ed9-a22c-96febbd30258"
        },
        "item": {
          "id": "e80b6bb4-768b-4dbc-bf96-8ec699acc63f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "61a2fbaf-e74b-4310-84ca-bb41abd7791c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b86d40d4-c4a1-419e-a593-1757c1095a66",
        "cursor": {
          "ref": "106b5439-847b-4cf1-8b0a-2d8c64c356fc",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8f7e9f08-a17e-480f-b33d-0bbb7f1c4199"
        },
        "item": {
          "id": "b86d40d4-c4a1-419e-a593-1757c1095a66",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7237847b-80a7-4d5f-80ee-747ab9561b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70ee0440-42b1-49e6-b1d0-0c47735e817f",
        "cursor": {
          "ref": "f370a5ec-b7f5-4d31-a308-13e0965ffae3",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a648415e-3395-4daa-8245-a213ef4a3884"
        },
        "item": {
          "id": "70ee0440-42b1-49e6-b1d0-0c47735e817f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "88861ff3-a17f-420c-9070-f62ddd599e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "609cb64a-34ef-470e-9f91-b855edd874e1",
        "cursor": {
          "ref": "a2569ac7-5f74-4bba-9d18-47097be19fe5",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "df4ccf09-85cb-4c4b-86a4-7e8b67cce77b"
        },
        "item": {
          "id": "609cb64a-34ef-470e-9f91-b855edd874e1",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f613d49c-5cd7-4011-8137-bf3c063ed713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b4eff9-17b0-45af-9897-e103a3dcde3f",
        "cursor": {
          "ref": "5cd1cd61-ebd5-4ff7-a2b5-1fee1a618bb0",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8afb4536-1557-4729-9dc5-e5d991b10fe7"
        },
        "item": {
          "id": "48b4eff9-17b0-45af-9897-e103a3dcde3f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "80bb3883-768c-4e8e-b209-97564165c9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f98dd7-5ff8-4c06-acbe-33f40d39fc07",
        "cursor": {
          "ref": "91c9b5de-82f7-4452-84ff-df79d2f059d1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3e7562db-2cde-42f8-97c1-d96cc1a26a89"
        },
        "item": {
          "id": "b1f98dd7-5ff8-4c06-acbe-33f40d39fc07",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b7790dcb-6e3f-460d-8b4d-a1a011155e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc2a8a2e-9a0e-43a5-b14b-a455d74f1baa",
        "cursor": {
          "ref": "81718e65-0caa-4e82-b13e-ea3d16f1ae22",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "07984487-01fa-452c-8241-eb6e1dc57876"
        },
        "item": {
          "id": "cc2a8a2e-9a0e-43a5-b14b-a455d74f1baa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a4e0ac8c-308c-4d4c-b311-88c67dd265b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a32305-b99d-4a3a-9fe7-3d7cf3fb3316",
        "cursor": {
          "ref": "accfde23-d6b3-4430-8768-c4903e1d3136",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9dfd1be7-b07f-43f1-b207-9dc3acf3c046"
        },
        "item": {
          "id": "00a32305-b99d-4a3a-9fe7-3d7cf3fb3316",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3890e46f-0635-43be-986d-7bc90009f757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1b16ad-f94b-4f3b-92b6-b01986b680ab",
        "cursor": {
          "ref": "624d6f6e-6240-48bf-bdad-dac9a86bb567",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "563e9cec-228c-4166-8c4e-79449336739f"
        },
        "item": {
          "id": "5d1b16ad-f94b-4f3b-92b6-b01986b680ab",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f2a3095d-c5ac-4fed-bcba-d4b974ecc872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711dce57-c3ed-4dfb-836a-6f0d89b2e926",
        "cursor": {
          "ref": "ede84306-777a-4b64-b063-721a81dac937",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "235df9f8-a7d0-47dd-a0e3-2d474665a462"
        },
        "item": {
          "id": "711dce57-c3ed-4dfb-836a-6f0d89b2e926",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c4d8a4d9-c864-4d50-9f85-021c13c9577c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7097f768-d872-4cd7-bf10-68f94d562346",
        "cursor": {
          "ref": "fe69bc78-36d5-4316-aa54-023b5f8879bc",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2b3b23eb-5ff1-47b4-be0e-7fd3ca3d0a3e"
        },
        "item": {
          "id": "7097f768-d872-4cd7-bf10-68f94d562346",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6f96878e-c7a0-43cb-939e-048f4482e1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f3ebaf-5806-453c-9416-85e4859a46b0",
        "cursor": {
          "ref": "75c32095-3d01-401b-b4e8-52593297168f",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "fa61d7fe-82ae-4edd-aeb4-a490576936fb"
        },
        "item": {
          "id": "f9f3ebaf-5806-453c-9416-85e4859a46b0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0dbf4de1-d953-4741-992e-386faaca7442",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc1339d-c240-416b-9595-2213a699a401",
        "cursor": {
          "ref": "b6113ba6-1bdd-44fc-a28e-5341c89df41b",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "f7296cd3-9db5-4165-b812-3f907a77f4ba"
        },
        "item": {
          "id": "cbc1339d-c240-416b-9595-2213a699a401",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "863caa25-c583-44b5-a9ec-f7838d2f2a8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a844b805-f78a-46bf-81be-190fea49f708",
        "cursor": {
          "ref": "24e84df7-f117-40c9-9684-cb151343c395",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fc2e8d2b-c41d-4335-abc9-82150060d020"
        },
        "item": {
          "id": "a844b805-f78a-46bf-81be-190fea49f708",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "999b5a0b-dae0-44b4-be41-3e6c83647c5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43507017-fbbe-4892-8024-16d46d93b915",
        "cursor": {
          "ref": "712161d6-ef3f-4716-87e6-21ca0566672d",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "8fc43061-94e9-4eb1-8656-fbe90c984dc0"
        },
        "item": {
          "id": "43507017-fbbe-4892-8024-16d46d93b915",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ea233bd5-a491-4b0a-bedd-d80328f5a01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b53f0ae-4d17-434e-81d6-0b21dd8784a1",
        "cursor": {
          "ref": "7f306f60-24b8-402e-a4df-4767b5635e1e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ecc183d9-194c-40bc-bfb5-78f5d05773cd"
        },
        "item": {
          "id": "0b53f0ae-4d17-434e-81d6-0b21dd8784a1",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7178d268-9607-4d85-8245-518ecbf3ca6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf1b71a-c70d-456c-bd1f-b948a1be9269",
        "cursor": {
          "ref": "ff37d5eb-bbed-4fa3-8d9c-127d86ad67a4",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6e45fc37-5d17-4aa4-b6a0-815e6de5d0da"
        },
        "item": {
          "id": "dcf1b71a-c70d-456c-bd1f-b948a1be9269",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "76c92824-4369-479b-abc2-9a5996e974f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c231d400-ddf1-4fbf-9e4d-37be9ad748ed",
        "cursor": {
          "ref": "26e787b2-0e1b-41d5-ac62-3162de461e6c",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "fe304ac9-e14d-429b-a041-fb8e23eb3212"
        },
        "item": {
          "id": "c231d400-ddf1-4fbf-9e4d-37be9ad748ed",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5949a269-e0cb-48e5-a5bc-a0871d379727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e08eca-29fa-4179-a2d5-e1de32bc31f5",
        "cursor": {
          "ref": "4f1e6af2-3f9f-491e-9af7-add3b146bdf5",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a1d3cb56-6bba-44fc-a506-5f5161567d5d"
        },
        "item": {
          "id": "79e08eca-29fa-4179-a2d5-e1de32bc31f5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a93a68fa-cf57-420e-998b-7dff63c3d868",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7ca577b-aa82-4a0f-a0f3-b40c19bd5deb",
        "cursor": {
          "ref": "52af70dc-43fb-460e-8a66-3d3782c7969d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a8a9e6e-5a16-4cea-881e-1309e17d5ac6"
        },
        "item": {
          "id": "d7ca577b-aa82-4a0f-a0f3-b40c19bd5deb",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d858d7dc-37e6-46f8-8681-0a91643d4977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734fa070-b2b2-41be-8ec9-6599b213cbe7",
        "cursor": {
          "ref": "9dc13f51-75b6-41e3-ad79-dc21e642971a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e4b962a6-633a-4426-bd89-15be6b186b85"
        },
        "item": {
          "id": "734fa070-b2b2-41be-8ec9-6599b213cbe7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "03af22b0-29f1-4c9c-89e5-30710bb855ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "726ab322-b646-4737-b016-b9aa2a3774c8",
        "cursor": {
          "ref": "3658cbe8-ea31-49a9-aecc-613abfd032c4",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "01bb1a05-5eeb-44a4-a54f-0a4fa63be8dc"
        },
        "item": {
          "id": "726ab322-b646-4737-b016-b9aa2a3774c8",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ff2db441-59eb-4a05-a326-5a8a0f5e2f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57d8b4a-97f0-4715-8bcf-f9efcb1b4a6a",
        "cursor": {
          "ref": "e2458731-2230-4d19-95b7-25d0ef46432a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f1eaaad2-6b34-4764-9958-45b77a631bdc"
        },
        "item": {
          "id": "c57d8b4a-97f0-4715-8bcf-f9efcb1b4a6a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "685ecaa7-ee4b-4551-bac2-413f83b3f9b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a029981f-1158-454e-9f9d-91484d688cae",
        "cursor": {
          "ref": "0315a4ac-ade2-44c2-b502-4034f748cfab",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "b7fb0c09-3d0b-4088-aa96-e748daff69f5"
        },
        "item": {
          "id": "a029981f-1158-454e-9f9d-91484d688cae",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "85df20f7-736c-4793-823d-d6a3421578d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d040be76-6411-441f-971c-11e17dbf415e",
        "cursor": {
          "ref": "d6806f42-7c4e-4bc0-a2cf-3d2e90414527",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "80eaf4a9-0dc0-42b8-a872-6f709ec8b325"
        },
        "item": {
          "id": "d040be76-6411-441f-971c-11e17dbf415e",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cbfa0943-8ab8-4388-bbb3-5d502e4d9efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a3d2fa-7585-42f8-8ffb-bc062f5ce691",
        "cursor": {
          "ref": "150b2d5a-0269-4576-91b3-670f4c6b9102",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "09991e02-ea84-4f9e-890f-ca7e53baf1ea"
        },
        "item": {
          "id": "60a3d2fa-7585-42f8-8ffb-bc062f5ce691",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "50b673bc-c2cd-4fe9-9f38-00abf83e9674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bbedc0-866b-4550-ae55-08c7e2bb847a",
        "cursor": {
          "ref": "d944ac05-7310-4db1-994d-f0fce5118f26",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b4fd0b59-8182-479b-955b-ceccd33b6272"
        },
        "item": {
          "id": "a0bbedc0-866b-4550-ae55-08c7e2bb847a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4f9a0c02-f7b1-4d05-b21b-ce3dd7cd6dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaf7983-47f1-4e88-b79b-bc906029e2f3",
        "cursor": {
          "ref": "2f1c46f4-6c0e-45ca-bcde-938539f6cabb",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "992873ed-e96e-416a-bbd6-5ae7250baddd"
        },
        "item": {
          "id": "dbaf7983-47f1-4e88-b79b-bc906029e2f3",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2684ed9d-f940-420f-8ed7-79386b644dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6b9c8a-60fe-435d-aacf-9aa997e8ab80",
        "cursor": {
          "ref": "06c0e5a1-9301-4c25-826c-123da1855c73",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "cf0493f4-bdeb-4988-83b8-3bc7b48f2daf"
        },
        "item": {
          "id": "cd6b9c8a-60fe-435d-aacf-9aa997e8ab80",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7879a05d-1c5e-436e-ad56-1ab2481e62f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c379e7-c359-4345-8475-e0b6d29db344",
        "cursor": {
          "ref": "40479b48-2218-4f91-9926-ac927a0ab3af",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "44d4f6f9-47b0-4e42-b41f-96ba3ef5faaa"
        },
        "item": {
          "id": "f3c379e7-c359-4345-8475-e0b6d29db344",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5d4602b8-e3bb-4f40-b0f6-dfa0a6371db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a6ef5f-48e8-4393-a274-6d46f0f520a7",
        "cursor": {
          "ref": "e0e305ba-ab09-44bf-a1d7-e16d20d1634f",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "590a10e9-ed87-4a3b-a3a6-8d98af5a0b15"
        },
        "item": {
          "id": "d2a6ef5f-48e8-4393-a274-6d46f0f520a7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "edef1394-da11-4625-a536-53c089a93540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbd9fec-14ab-440c-b7a5-365697e37615",
        "cursor": {
          "ref": "31596ab8-d2a0-4672-a1a1-4634f6916672",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "00f7f137-e255-4196-b3ba-928883930735"
        },
        "item": {
          "id": "1fbd9fec-14ab-440c-b7a5-365697e37615",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "10047580-370b-4230-88b9-6ea5079f17c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d029bb-f6a3-48e8-a5d6-8abe07ec8b3a",
        "cursor": {
          "ref": "eb0feb7e-c29c-45e0-8265-b73182cc7f8a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "f7e8c84b-f5e8-46db-8100-9f36e3d320bc"
        },
        "item": {
          "id": "f9d029bb-f6a3-48e8-a5d6-8abe07ec8b3a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c0aae52e-e938-4e9e-a8ad-6423f77a1753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb4c4ba1-46e0-417a-8ee6-959fcc25ccd8",
        "cursor": {
          "ref": "d00734d9-65b7-4405-bcb4-1ea88342b5dc",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "59a700aa-2b91-4701-bd27-317021093c7b"
        },
        "item": {
          "id": "fb4c4ba1-46e0-417a-8ee6-959fcc25ccd8",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f47d7461-228a-449f-ac02-d6dca2e658eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f9176c-7af0-4b4d-9403-9bc2b74bc27f",
        "cursor": {
          "ref": "456d397d-3046-4b42-aa0b-f811ab8ad431",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "17c24a25-dd6f-4d60-a97c-1a30a79db06b"
        },
        "item": {
          "id": "64f9176c-7af0-4b4d-9403-9bc2b74bc27f",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "396e98b0-03a6-4579-90f4-b00d8d6cdea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2579c2-2d2c-49bd-b3fb-e57cdfbebcd8",
        "cursor": {
          "ref": "7c3b057f-02c5-4460-9da4-c79065da2136",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e5361adb-9268-4f58-9980-735941408322"
        },
        "item": {
          "id": "ac2579c2-2d2c-49bd-b3fb-e57cdfbebcd8",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "bcdabdb6-7b50-4eac-ac75-b75760e8d9b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83a55948-2273-42cb-83f9-327ce331d237",
        "cursor": {
          "ref": "b091b751-a266-46ab-8696-9da635af841a",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "197ffde0-cc5f-411e-a362-baa2cd49eef5"
        },
        "item": {
          "id": "83a55948-2273-42cb-83f9-327ce331d237",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7ba071e4-26b1-4880-aa4e-8a541fcd5003",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc94365-1b3f-478c-a303-e2c3d9dd3bae",
        "cursor": {
          "ref": "a5ac12b4-34e8-4e9f-878c-af2be331e097",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4525fc42-f911-4046-b9f4-0e686fa0c7cd"
        },
        "item": {
          "id": "2dc94365-1b3f-478c-a303-e2c3d9dd3bae",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "072e5239-bcdf-4f6e-bb35-8f4f7b9dc688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568e27f3-d6bb-4b8c-8ec6-49b429361c7d",
        "cursor": {
          "ref": "c0847438-4c8c-4756-b781-f395aae80b56",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "699dba01-b65f-4897-8bc4-7ae3934068e0"
        },
        "item": {
          "id": "568e27f3-d6bb-4b8c-8ec6-49b429361c7d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7bed7874-b1e9-412f-856a-d16fc3a57bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b459cc44-7531-4a7d-b4d9-9026af70d2d8",
        "cursor": {
          "ref": "c7b77b36-5316-4dd3-b169-0283de46cfe3",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0e9603b0-c483-4f75-9d99-7a0c99efc6a2"
        },
        "item": {
          "id": "b459cc44-7531-4a7d-b4d9-9026af70d2d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "2eb66dd4-358f-4c87-8df5-3400b090d02d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b04080f4-dd61-4c65-aaa7-bcfd849f78bf",
        "cursor": {
          "ref": "871a065a-7107-43f3-9aaf-c8f7c9b6ea5b",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1d12b405-bf49-46bf-b720-00780161a8d9"
        },
        "item": {
          "id": "b04080f4-dd61-4c65-aaa7-bcfd849f78bf",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "725e9225-4883-4e1c-96d4-55757a941eb3",
          "status": "OK",
          "code": 200,
          "responseTime": 90,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0bb175-6226-4281-b610-10aed3910d0d",
        "cursor": {
          "ref": "35e9c082-bc4a-478b-974c-057d82f98a1e",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0b9df44d-ca3e-4048-a67d-6e4e8d44d512"
        },
        "item": {
          "id": "bf0bb175-6226-4281-b610-10aed3910d0d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "b3c0ea23-917d-4c7e-a65b-22491a075d87",
          "status": "OK",
          "code": 200,
          "responseTime": 2707,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "968c44ce-8428-41b2-82e2-05b86902bcd2",
        "cursor": {
          "ref": "f3cbd2ae-d5a0-4cef-96ec-eae21b7f0d8a",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1b089c74-30ee-4804-aafe-f7e8655bef7c"
        },
        "item": {
          "id": "968c44ce-8428-41b2-82e2-05b86902bcd2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b7026740-aac9-43ca-8ae0-1d0121b01acd",
          "status": "OK",
          "code": 200,
          "responseTime": 3080,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0ecbec-fc56-486a-a400-98979f8ee6d6",
        "cursor": {
          "ref": "68ec97fc-9cbf-43d6-a8cb-16e37beb3829",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d028b4f5-939c-43cc-92d6-18fe60ebba00"
        },
        "item": {
          "id": "4f0ecbec-fc56-486a-a400-98979f8ee6d6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b3e5db31-c21c-436f-b9ea-52859adb6f3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0ecbec-fc56-486a-a400-98979f8ee6d6",
        "cursor": {
          "ref": "68ec97fc-9cbf-43d6-a8cb-16e37beb3829",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "d028b4f5-939c-43cc-92d6-18fe60ebba00"
        },
        "item": {
          "id": "4f0ecbec-fc56-486a-a400-98979f8ee6d6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b3e5db31-c21c-436f-b9ea-52859adb6f3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c134a6a-22c5-4926-b2d2-3d46d0dfbac0",
        "cursor": {
          "ref": "0ef9b3b4-c4bc-480f-b571-c87d01a69a86",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3301aed4-30c7-477f-88f2-07b09e587534"
        },
        "item": {
          "id": "1c134a6a-22c5-4926-b2d2-3d46d0dfbac0",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "2f48bc27-cef0-4dbe-b9b9-033761f9652b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244f5b22-3fa9-4cf9-8a6b-d670ace12f8f",
        "cursor": {
          "ref": "d708444a-374e-4426-81da-351f003463f7",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "edf71aa4-23f7-4d87-af8b-94cdd1889087"
        },
        "item": {
          "id": "244f5b22-3fa9-4cf9-8a6b-d670ace12f8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "64cf80f3-7b8f-4bcd-9acf-7c890c1fe8e8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}