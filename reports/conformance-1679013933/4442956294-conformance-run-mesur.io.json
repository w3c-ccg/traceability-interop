{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c48dba53-6c20-4b9a-898f-aeb0483efe10",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d7c7770c-97c9-4c59-83b6-1be162c1aaa9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "079ff466-e049-4ec7-a0c0-ea2d61844105",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ab8e8c41-f05d-4c0c-ae9c-aefe5ab1512b"
                }
              }
            ]
          },
          {
            "id": "ae3148ed-2f51-458c-83b0-b4fa64c53d14",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "91b555d3-153e-440c-bd9f-2d6ccc399220",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "25a50bf0-0910-4719-867c-89eeef66ef65"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "77595549-8039-47d7-a6f0-d5cb751c5f81",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c3745046-ee71-4282-b057-0ed2a3b09297",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2f69acc6-faeb-4c7d-ad9c-1cf062889b4e",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d0b1ed3e-e08f-4a08-a435-58cc4818feef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "32be1fba-874c-4795-9b1a-7f67eca250f8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "369c9c86-e363-4922-a3d2-11e24d0a90b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf217d3c-8394-44e8-92ba-111fa6bee8ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7d804538-289f-45d0-9d69-fcc82eabbcff",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0aaca172-ff28-44f2-99fb-4288fe587c47"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8e0a0f8-0eeb-4a40-bccf-ac7d3e54b5a1",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4cac9ce7-540f-40ca-856c-989b37086fab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a61c56b5-fee7-45e5-bd6b-16dc71f3301e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eec54938-c05b-44f9-a6b4-9e1beba06376"
            }
          }
        ]
      },
      {
        "id": "062e71ac-ed9e-4281-b61f-2f6f48e345c5",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c5d7463c-4f4e-4c3e-9fdd-0dabf92c4611",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71f00c48-ab63-4b1a-9aea-6acb1f8ab002",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81913698-4a84-41c0-9220-fac0b31f7331",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e6ae81-580a-4e54-9e1c-adf11fd53065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6670b91e-9d57-4050-9ea6-b71c84411e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d577b53c-93c5-4495-a089-f0548b3d9608",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b16c56-013b-4c1b-b693-bf3c14fd1aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35a49e56-8cff-4810-b0ea-1b3e149c4dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2372c5f4-d92e-40fb-89da-ee3edd05cf86",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82b3857b-e99a-49ca-984d-a21062f58626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26dbdbbd-9606-4253-8547-ac10729af639"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "adcaaabb-00eb-4e77-a813-5a0181738852",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "27ffc4a0-9b2f-4c43-9e79-c1872dd24734",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "911e1491-afaa-4dbf-9569-809d146fc6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f55d60ec-95ae-4a2c-bb32-9058f99f3580"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "633ddad1-4142-4231-9beb-532f31c01893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecf99a5-ac75-48da-b4aa-5c46a25c5eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91136ad6-53a6-48d4-93a0-1d4f140f73ff",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5f5fb12-ddf0-4c4d-84e5-58f04037d843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f3383b6a-f61f-4cdb-a4ef-b815f8c4addc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "703fbb85-cf19-4dfc-9c9a-e13c13260cc2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "010208ef-4040-4039-b85e-a0a21f548957"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e96d4619-af15-4e9a-a012-8e94788fd3f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1efb02b0-67ee-480f-a196-04ce587d820a",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1337f409-f408-4e10-9731-396d838a8259",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1222a995-1a0e-4a73-9cf6-3168a2e3315a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8168b5a8-6ffe-45ff-b7c0-43828a8d288b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "6b97499e-1049-4148-a5bf-1f7ce0c34195"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "970935d3-6b27-4e4f-bd2b-71e62dc74354",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1f16d836-e58e-48ed-a163-b9b262036dad"
            }
          }
        ]
      },
      {
        "id": "4b48ae7f-d192-43aa-a991-65ed68d3da73",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "1c376d1c-b325-4b59-84a2-59a5ddd2591f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "934f4cc9-3fcf-4a04-b2f4-e3951f64ed65",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "dc02277c-306a-4fa7-b1b6-9177d7bbfcb0",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe211a1-95ec-44d9-9a2a-bddc82641f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "472a6053-bdb1-41c5-8408-49ca91d94f61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf4d61f3-91e8-4399-ac09-060117e8a413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78a0f112-838c-48e7-baaf-f1571fc614e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf1d32d9-e009-4248-a24a-db6a1f71a814",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6725b801-b02e-42ff-8774-74b39d80f82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eba7073-801a-48c3-a6f2-d0113758556a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a2af5e-ac49-463e-b851-e70d55915ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b01a927b-9261-4037-a3b9-50da2d0eb0a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8ea1115-0db3-432f-9434-fe7ad26c0717",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c02a4bc-0102-471d-930b-7d635867dfe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8070b6-6304-4ece-a0ef-acfbe9bf5d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8367062-0b1f-461c-ad9a-ece3f402c9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7208f807-11c4-4ffe-b04a-35531e51c034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bce1634-78c7-4b05-bab9-e7e1596ccea6",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3404afc-2e6e-4261-ad90-abb92a0d7d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb110c7e-d63a-4ef0-8509-04e7a57fdc3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c34e0cad-c126-4a83-a3d8-ac7e1460d5a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "728cc517-651c-47fa-aed0-31d8ea2cb885"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64258895-993a-4d89-b737-1ffe6d1b0b18",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "081afe57-1775-4c35-8d94-e1f0de4e958b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8d11e8-72bf-4558-9c0e-53057f33c132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8981da63-b9a3-4a26-a23f-ccf2a28783b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dcca47f8-9a2a-4243-ba84-21923cda7eea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "541ced0d-8e4f-4654-9bf6-9fc1c5fb0797",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca2abd1-a408-4db7-896a-f49f77f15300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52c34f5c-2827-4201-8905-5bdc70d59071"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37707dc3-f00a-4012-8ab7-3eacd5b62bff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2bb78417-d208-4903-b0a8-978effb8fe05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338300bb-3c3c-42d6-afcf-fdc73e84b959",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23e4ef4e-47c7-44e2-ba12-caf93c0f410e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "723ac3aa-7ccb-4d00-8b7e-2e456efa813a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a369c7ad-8942-452b-8f0d-440f40537ef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abc279dc-75ca-4f72-adb9-32806d2dd1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98a03691-483a-4095-b3e9-48d03e6f71ed",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08f85a6-7bd5-446c-b986-929e982df626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f632ae59-f2d8-4976-82cd-eb8bac18717d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31412a0-fbd1-4aa0-92fb-3a8f068a55fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8bcd5d87-036a-4ca3-8a06-fa07a139165d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2839f4eb-09ac-431b-95d2-8d1f2abc7b16",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5786a424-06f5-4501-8423-8548bfdc1893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f507dce-c42b-472a-b036-25ddc1c48888"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c4020cc-e14b-4035-acca-99f0266d54c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8382f92d-8a9d-44e8-9114-99988d30c0ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b05bc08-f915-4e8a-907d-bdc6a67bac4a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "879b1335-e032-4555-a4fa-58faa3d65a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55034a4-0f61-4662-b61a-a1486d7aa27c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86c4cf4a-da97-4b53-a9c7-c3dca12fadcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "523501b1-bbfe-49db-b8bf-9f80c17e8c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c79aece1-dee3-4eab-aba0-e5e8998ac470",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5f7de69-e4be-4025-909c-3202f26dc04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693bc761-b9f4-4cf9-8a59-82f2f7d4405d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623ff218-1ff2-472c-9be0-1fe493604218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a936481-1e7e-4673-8ca6-2874a96b2a56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cbd97c-22e4-471e-ba69-566e8a5b0a47",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "691f5f1b-cdcb-4232-83f2-63a8d911b5de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f2dca6c-eabf-4633-ad52-ac2e9936e2ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b66355f6-465f-4953-90d6-fafce799b873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e84219dc-f265-4714-912a-8fa0d4a47ac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd819946-6b9c-448d-b6f2-056e82051227",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0340ca8-b452-4abd-8542-d0419d362fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acbe77d5-7f82-4081-85d7-5230cb853a08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d2cadb7-4adb-4baf-83e2-fdb3c0478475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fffc59c-6c8e-45af-a1c4-8c6a8e48f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfe1a61-350b-4484-8436-052029037478",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab7c00a-1f8e-4386-81b7-7adf632c3832",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63304a12-0f89-4beb-814a-2b270d63f404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16e2864b-e219-4d57-a84d-b63914941d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2aad779f-a59d-4265-adb2-eaba11f23e68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "293fb344-e3dc-4cdc-bac8-ecdbf0e69d1c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8123e169-d98c-46e9-9eb6-a5a811bc75d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b685f7a9-71cf-4e1d-82e0-7780bae8cf5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d27d73c-654a-4368-a4f8-28401acd8f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18a902e3-a705-4024-987b-bf4361bf34dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9625b2c6-aec9-4580-b6a5-074b6dd2de82",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f10daf7a-2f0e-4c18-91e1-c04a51894b12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7d42cd-98f9-4657-8907-4bd057024f52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71629750-6144-4f9c-a3b3-f8b3e4a8ddf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "993efdc4-0739-4157-a5da-fa049bea57cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737ea63c-1a4b-4300-96d2-ca34508f6d3c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc6ead97-0221-43d0-8f31-b4aaa671aee8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3803ea88-e43a-4bfb-835a-1bab15e789bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64fbb80b-60b7-47b5-89a6-79a59a0f7b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "87f6ff97-64b6-4472-a650-b3a543f611ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d587d48-7819-4734-8287-068b847de8db",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c899c910-a23f-458a-bd5e-2fca62a63ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1f50a79-ab95-4b07-92e4-b7b5b078bc19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c999269d-f18e-46b9-83ca-315004fe72de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8560bd51-8f91-4ef0-85ab-a967bafc8590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a963a943-e895-422f-a3cf-dca2871d8ddd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d15e74-3811-4905-80f7-53422c7d99bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95bfd10e-1d75-4022-91dd-37d75ec2ee34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe032bd-7f06-4db5-816e-973aa855ba20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4fc542-b94f-4fc9-9bd9-5851652e4529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d00d104-507a-4876-85af-46a2045e8365",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c58d17b5-c660-47b4-8268-ef660e409f52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532e6947-f807-436a-b2d8-90223f7e7f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ae3832-d791-4e9e-b6b2-7034c4db923a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7c24054-47e9-4ebb-b606-a41679ec6712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66bf34de-1ccd-4e56-9376-345d195d66d6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8bac09-fc00-498b-a81a-8db269d0c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cf7149-e45a-4056-af51-b6808c0defc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582e137f-f35f-4d58-8d3e-27e040d40aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7da5532-8a3d-4b58-a922-dd654bc45e60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0764bf-4354-40c6-8b86-c565fc2e1cf5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "064210c8-f758-4a62-941b-da2b40d0dd25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b617c5ce-7611-4bc0-8a35-dfc8af39eae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "218f04a8-cac0-4ab6-9965-a067db813a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1646c89-6324-4ae2-9db0-34199c1a5a4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f5dbea1-f52a-4814-9486-4829fc8e1ace",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2a1e44-7ebf-4583-92bc-15646b3b0d92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5864f656-3262-4a54-bb5b-dd96b31a1e7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db17b2fa-3f54-44ea-b04c-fa9bb3b36063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1a0e2f6a-b614-4ced-9f95-e8f94b553a58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1e00cf-9799-41a9-8275-fc6e7ca51ec9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f379488b-9286-4c58-9611-34d54fb6dcf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea95ecab-2c02-48b5-9e1c-e2729437022f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d74139-9f70-42db-8c4d-82be4cf57354",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f5269c-e8f2-4b0d-8004-1ccc054a759d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b089b2e-c5e6-4135-bd4b-e3c57033f568",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7b1df48-39b6-4cf6-af9f-fc6a205a7222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e55b7aa3-3cb1-403a-aed7-550525fb9a7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68cd1317-fd77-4015-a31b-a7559cb521bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "161cad48-8b53-46e1-9d33-1070e78b4d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a8b386f-e73b-401f-b877-ac58736624bb",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71b5bab1-749a-4610-9bfd-32677ff1a7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50d2b94a-20df-4788-a6a8-1f4958d32c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f519f550-f835-40ad-862a-f0840158ba11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2289a5a9-71d8-4880-90e4-3f3442b881e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c574b5-4f28-43bd-8e49-12f2ba1bda93",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7261641-0f94-423e-a686-f7c209312cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6834f1e-7cbb-4955-a628-0f2e2cf8df72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471902cc-1851-4707-b781-016fc241da74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd15c546-99d8-4f3f-9311-3552b4032671"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567b826a-4509-44c3-adb5-225b8e12b188",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d917f585-2875-4dc9-9e7a-6d88472d4c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18e76521-e318-4f20-abc1-a95848d95d77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26485938-d2f7-4817-bfd6-0f2f919c819a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fc1e66c-a2a0-48b3-9779-cd682d70d4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365a0d21-9469-4107-abd5-50a73ba1c1f5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bddcb61e-3571-4e84-90e4-46d5958d5ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e880531-2e6d-4637-81aa-34fbbb21164c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5229caed-a08d-4ac3-956c-e362e297130c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2bf7043-95b8-449a-af46-521eadb69a79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b194e1-c852-4d34-9d27-c717eb5c99cc",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d81507-8416-4d0f-a7c4-6f44e459beb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef76824-999e-434a-80d7-06bb91f23521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67d45f19-fa09-4831-8eaf-06ac39bcc1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "31ae8741-5df2-4964-a321-e04f169421e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52813867-cb9d-4745-aac1-5e603a5f0708",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "601670a7-b663-4829-aa17-2633d2b6aa02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ef8524-4036-4efa-991b-d5fa635b6545"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9c0dd4b-b525-4228-8528-58283cb191d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "151e4a39-3167-4140-b612-ef577b1fb8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "849f292b-c41c-4aaa-baa6-e0cc65482eb0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ea322c-221a-475c-b59b-6cfb945c9304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "893cad25-9b98-4b37-a336-0dee43322640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bc089f-c8bc-4e1c-ad64-98a6e259490a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "98f5c7c3-8f53-4bcd-8e19-ad753b469834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825cd2fc-bf1e-437c-9e76-de724f0ca758",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d187b9-4c39-4545-a860-29fd7b7de409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbab4de5-2aee-495e-8959-94ce9d954b24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcfbfac5-c4d0-4aea-bea3-93233c722682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "961a24ca-9e3b-4dc9-b026-c8484a810a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca73851c-ff7a-433b-9251-6a0670985fac",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cff01c-2aab-412b-a185-e0deb527823d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fe2978a-65fd-4087-88a9-8d20988cf8db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec93bd00-ed3a-4865-afdf-0a721498e11f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "566f29ae-58ff-4400-9a13-784b28e061fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b22bcb-e27d-4bd4-aa0a-169dd290f62d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b51ae9-a5dd-411e-ad3e-29592574698d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495dffd7-d374-410f-b6a2-9b7126f48c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301fb4d2-de5f-4be6-b539-3ceb4752c5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e10e821e-130e-4c51-b574-4f38db6fe6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8b27949-8601-4450-95de-fbaced1e627f",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6668fc65-02c4-4adc-9b41-247375e4eedc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f0bb96a0-748b-408b-a9ac-a753eba89d0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b74ee62-4a27-4b1a-8871-e68c367d124b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "99d50474-aca3-4494-b9fa-2b2672693e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310701f1-2d76-408a-8f12-227fa602b005",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c4cf90-c039-4ece-b38d-199cb32bd185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137125b6-c34a-4467-9651-40bed2fac72e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b6ecd1-274c-4e0e-9d63-6eb024f80ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b49d9e5-6c3a-4334-9a29-77068a26a005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9763446-5e01-47d4-b484-0e8f77414bb5",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3037b101-5f69-4907-a997-e3249abd8b07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37898cb6-6bb7-433b-938f-95fb1b089cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b235ba4f-42b5-4d65-9812-a6be3747b688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3976d7eb-1679-4b20-9cfb-560b104b500b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dae214-438b-4519-8756-917766ad9463",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74843b6d-d670-4e99-ace7-a7abfa47b809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb46c94-7355-4850-81b1-55c0bb6bb455"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4796a77e-bc89-49ee-bc49-1535e5a4d57a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "46099b05-1747-45ea-98fd-3af130d9cc46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929ec5da-d28e-4a06-842e-1f0917d6ae11",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d70f6026-9e9b-44c5-9f47-4809eacac17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7604c5b-23db-49ba-907c-e2fd7b77beb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e55674d-0ecd-48ea-a3c5-5b79da646a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf000328-e5f9-4be3-a379-6e67fbb5bc8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a131a8d5-289e-436b-a38e-d01ca0f64245",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cdc9c74-a29c-4675-8f50-24637b17b16a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28a4f28b-7363-489d-b74c-1f20afe5bd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533bbc13-84b7-4ea2-b0ab-34fbdedda960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5d49047-d3f9-4e36-9c4a-e58409f4e224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e31bacfd-8b7c-4330-b81d-a9adc07f9a47",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4779c465-f3c2-4cb9-8b66-fab5c06a0610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93834cbb-997f-457c-acd8-aa5b28ef7924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f72bb34-98f3-4e23-9fb6-18ce6b4643fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "27132952-1d85-41b0-99ff-3c21cc0b6463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d57460c-2087-4921-b648-2115a60712ab",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4187f203-68a9-465c-9c99-57d5a7695179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50fd80c-c3f9-4b75-a115-8846ed596a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10570329-f182-49e8-9955-674ede4b41f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c1fe2c9-c43e-4903-a436-27914a501751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb0d786-0762-4266-8971-3c914a7e1772",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "272e53ac-4f5a-4ba1-b050-a5731e31be4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5030276e-8fa6-4120-bb09-6686c260c777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a31e305f-dcc1-497d-a00a-22e6c7a11236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fb5f1a-330b-4da5-afb5-25a9616b0e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70e55f7-9e05-4923-ac1a-831eed12dd2d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3189de77-2281-4b88-8c0b-52d762c70e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55f7040-bd3c-4053-9054-5ae9c979a0aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b235274d-f087-4848-95c5-e47fc0eb7220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e7b393-aaa0-4bfd-8a47-fbab90f3d33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec4a972-51c6-4359-baa4-bce73b174f45",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9930c261-9b7d-4829-ac91-194fa9031943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06ce2474-7619-4037-993a-ede44c370f5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ac367d-0074-4064-9d7d-5ff72f949e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7446fcca-f227-4463-9a61-9b2ed84aaaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d55cd1f-600b-4433-987a-f43bf6ff4e0a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b98e5a-6c69-4c4a-a8bc-6e410e3cdfb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a779436d-1a42-4d29-bad0-5c38bc83c530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e28496-8e5b-42e3-bfef-24156d58ab36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52a5ec3d-9be1-4e76-a28f-634d3e5277b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac407f95-a7da-4ac5-9632-f24959862592",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c47be7-3143-4c55-b733-676c2afb6922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2fc01bd-baa9-4377-bd5b-b57133a629ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8f4e1a-4aaf-4f26-bb0c-cabfa3f7d202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c2eb28c-a943-44ac-b4ab-5894802d9e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965b3710-1372-497a-9c77-0f414012d10d",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8fc7e1-edaf-4d32-a94f-4f1fe29dc04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fe55acd-1487-4734-bb33-91092c13e2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4174e6-52ea-4447-951c-3be6696d3ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fef22cb-d05b-4536-ad85-2ebbe3f7531a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dee89668-a129-4cb2-a910-405a13220051",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f178a56-3b40-4ba9-b6da-ba1449ea4564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c675659d-d480-4553-bfb5-0a3bff051d51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbe84d3-512c-4590-9174-6665fd81a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c1d85464-297e-4482-9b3c-281062a4a063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdab2bb-a9b3-43aa-800c-728394fcb19a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea52cab4-9543-4bba-87d0-b01f68117383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "885938e8-ec97-4859-95c3-e6b83f2fe337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae776890-2cd8-4009-b70e-a53e289ed625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "49b4a3bb-32a7-40e2-a5e3-836b9a1673c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c8ef6c4-f479-4220-83ce-353141261c0a",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e422472-0888-4e88-86cc-33aafc0ef0a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d909f59-78fb-489b-87b8-77c326669702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf1e248-60b9-4be7-a39a-f81ace28dad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5deea5c4-5641-47e2-b7f5-3e8a0d016dea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cc825ee-e044-44d1-a181-cf6e688059fb",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c47d2d5-124d-4851-9007-cfc5f98fb18e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d972e8fd-9a7b-4d0a-ad69-ef62d2970964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f09a2f9-c5ce-4e1f-a659-08a6bdd3d229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e83bc7a6-2674-4b1e-a7d1-0055934ecd19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "587df2ca-87b4-4d0c-a38e-4d9c7298a4a8",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20407529-69ac-428b-898d-a2be10b8c9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1d7e33d-1286-45f5-87c1-6c2222af2c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20568444-36a0-4cd5-b8f3-ecc0e7fdef6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68af2791-d777-4574-9d2c-7599c567f68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbaf132-ed01-4b04-b41c-89b874bd669a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33164b0a-b4a6-4cf8-9bfb-3aa5fbc688ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d49ba06a-0feb-4ff2-93c6-9f5e57e70028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d579c5-1ba9-4374-867c-989498535eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc875bab-58b1-4d65-9921-9eb9c3eddb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3691b52b-9aa9-4501-8a37-6b3ba524a2d8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1a7d88-6ee8-4dda-885c-efbabcc3a7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93773af1-5469-458c-998d-78331881d0b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b0c982-0831-4982-98a8-fbfb365b9dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "68bbb90f-8ab9-4daf-a0b9-f6f62208de7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e57180ab-f3b6-4994-b9dc-e60a3ffeb66f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58fed5e-30d8-4b1a-b58e-3dc4fe49f6ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eef2984-dbba-4ae8-8aac-247b98d8e1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "275cebe8-8cf1-4cd7-867e-82fdf71fede2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddf56e4-bcc1-49f9-a5df-c6fcae5b0ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8e3e821-a1fe-4610-9811-a9726a097e16",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da3b3b5d-9b5c-41a1-9d60-69945a02d4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2fa856f-44aa-4f31-9558-6e35a008f0e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d889f890-b512-4e04-bf44-2c8e208f3d9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "291a792c-1a11-496b-9db6-143dbe9400c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8837115c-9bfa-4d86-9e59-79f69c950c5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73d8f10-5a39-4874-ae1b-4b64edb28024",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5dfadcc-b91e-4fd0-98f4-4c3ab3ab9160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc542c49-81a9-47b3-8c7a-7056a32ebf60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0474a45-7afe-4e67-b5fa-c072f237f80d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c91477b-57da-4dd7-ba08-1a0e7742de2f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c36744-fc03-4b68-bffe-f9dfbd276e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d446ef9e-443a-4e73-a23a-a25db3f805c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9579c013-24ad-4a33-b9f5-129a6fc87959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "028aedef-9c9d-4ddf-9635-c552cbe6b605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4896778-5ef2-4c79-9f5b-c22e32eef585",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c1c85ea-5dfa-4e2b-9bc9-78a8332b7a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87cb8bb3-bce2-4b62-b805-2443e25ccc5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c842161-6fcc-4adc-a5de-c0b3412a94bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4e527f7-6b9a-4c1c-a637-b894983f2ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc00037-d466-4a73-8ad4-cfa981f5237a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b83598-a4f3-411d-a56e-b1b25c924638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8981feda-4ad0-4e5b-989f-184f91ec5200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd966fe4-be4f-42bc-9669-83622d24284b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5540c5f8-6364-4632-8098-bf7206935450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef88fb97-e4b0-40e4-8b1f-b905bd298f51",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1522a040-595c-48b0-b0e4-4872500ba555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9b4d6d-a64d-49a2-aabc-8b2e34379e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b98200c9-b533-4795-9127-d142a1e0c499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1808544f-b2db-45b2-ba11-38ea3a73393d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeb25ef-e813-4d8d-abb5-08a6b794ebe0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de00ff7-29a1-476b-8ed6-7f74a342fb63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfa60899-e2fb-44e2-b92b-cc49b922b6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02330433-2da1-43c9-9590-b9eaaa374cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6d942c1-2866-4f1c-87a0-136b48986bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84edac6-d0e4-447d-8461-2fe6cc88fa8a",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c2dafe-cce8-4548-8a65-4ef3cf2c527a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1999f407-e38d-4e62-9815-ebcd244c7d05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e9de3fd-a1b8-400f-8ae5-3437aa927cb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4dd1c4-1a62-4f5a-ac4a-c5e933fa3e36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cc6de8c-d85f-4643-a1f8-a769e88b05e5",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b9f8497-346e-44c9-9b54-3691c7fb5733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b762497c-5f72-4d8e-9ca3-c96f4e02d1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b972c7f3-3bc8-477b-9d31-d3755e9983fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30d77e96-3707-4d54-8c2b-082b5d0f7d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e71f3c-b6ec-414c-b4e7-7d9024c56754",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5650f4-04a7-4fbf-ba00-1306c363b917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02597aaf-63dc-4e53-a2b0-0b735bad059f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593ed820-3a5f-4d41-8ae9-5072e69c5434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b05d2aed-4f0d-4e7e-9b0d-11f0e8066400"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0783e62e-630f-4f04-a471-a66d15e9dbdc",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2245b808-7c92-49df-a634-675e27bcfe9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "195321a2-0a63-46b6-9dc0-4c796f303fd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efef578-4285-4bff-88a6-10ca6fdfb6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "1482390c-de3f-4cbf-97b7-8319801ff690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62067a0-7a9b-4d5f-8b72-d3cf4ba5626c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dab37a7-0551-4439-9de2-4ff23c1834d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "563978a7-d37e-4032-9f84-35291d9c7b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a00f2bb-da42-4e53-a8eb-fe4a3d4dcb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "518768fb-2434-4c77-a4ee-903197bd2b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1860166b-90ca-49e8-9b6e-c447ac04c33c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7230d35-6540-4604-a7c4-b9f0871dccab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1066567a-e08d-4dc9-99ff-f626b491eaec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc47897-9a5b-473b-9fe5-9aa44c815341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfe34d71-e9d4-481c-a59d-1a3fed054649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bc4d52-2244-4190-b92e-4c179c3b8aef",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b93e972-8f9b-4b3b-96fd-b6bc329a9f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f1ec21a-ecc3-4cb3-b874-eb3255a39add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1d7a5d-cb5b-4de4-8bd1-0edad0089ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6bb4f01-684d-4bdb-bd2b-2d4e6bdb1492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde6f63b-4eae-478a-91d0-20510a319709",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "978610b9-c41a-45ff-8a1d-cd2e0cb1b09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1beb8c7a-ac85-43c4-bb0e-0521fce9bd06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93831428-0e69-4930-b796-a5c9ab6e24e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec8149f-42d2-454b-8576-a1fada4d1365"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e690f202-8d48-40d9-8919-b960a049c94b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9199c507-aba5-4857-b494-0fb907361d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392ea6ec-429d-4b2f-9d9d-4ad19f47bbe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3906b30d-a152-4023-bac7-7a6bc3830ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7fe4892a-869a-4f8c-ad31-267bdfa48d74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e5f0bd7-eb6f-48e1-8ee0-9bd5fcb96f73",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8865eac-0505-450e-9ad6-2dfa9a89e46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eac9a73-ce3f-4e03-bef7-c1c7d129cffe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4b1cc7-a741-4846-a1f4-65e47b2c4cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4697990c-8b7a-4d33-aef0-1f6a38f6f36a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41217cec-d002-443a-86d4-2c3c1517564b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "457bad1b-34fc-46ea-ae9f-0755ff914aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86997743-5864-459b-a0a8-b1b98974a93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd9dd76-1970-403d-89e4-2bfc85051e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bf460e-7e6a-4d9d-b492-9ea715822369"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb60800-de25-4095-a8d9-1db4ab44738e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338dca22-efef-4bb5-a97c-f4f8390d935e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2834de22-682d-49eb-a978-ec052cefb6b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e1a541-5273-4493-a775-e714b651db97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bca5a0d-1fef-4d71-987e-dd0e4f124f48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "446de32a-fb88-424c-bff5-dc58690d6cc5",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "681a8de8-5783-4aba-8b8d-d6bbfd5f687e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "608e919b-806f-44a8-981b-06c2e7a6a78d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48c43411-020d-4bce-b4c9-713ee67428a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d34a2ed-b85b-47e5-977d-4711b77f092a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97175813-ef75-4d19-b45d-408d4cf26626",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaa5335-e8a1-4783-92d8-1f283b9b8bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3847cfd-cb9a-46b4-98f4-ede534ee355a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba418f3d-f1d7-4816-a0df-19b5959fb3f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63077f65-3164-4f34-a02b-746b3101b687"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e9bff87-4022-43d5-be13-0bdb6174ae95",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97228c07-4e2d-445d-bea7-a6621552a78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35cc5ed7-90e2-48d7-b5a9-f6597ed5f96a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a89a1a-30e7-4016-adf5-973d669120cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50f5cfda-723b-4a98-87d5-ae946495f317"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe1194d-dbc9-4bf0-974d-c674fb304cc6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87bb61af-1439-4870-9478-384a61fd3f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b28529-cef2-4e15-8563-d768f71f9c0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76db1474-a159-4921-9b62-c666bfccb93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7425aac-e86c-4c94-8d73-6354262d2a4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e4b027a-7521-4a7a-955e-f9931621e424",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24f1eb0-90de-4b24-8502-c4195166375a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bf827b2-c7bc-469a-8234-4f87f57ba7f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b471527-e218-4183-89a6-ae06a539c6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "85be880a-4a9f-40dc-8f8c-7540e04542f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "353b197b-ccaa-439e-9738-77dbf216061e",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0fbea7-af55-404a-a183-29b518100046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8c84bd-c99c-4d29-9683-3e618b196424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99170ba-f9be-4960-ae1a-88871f6bc1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "20e631aa-107e-4126-a89a-8ee16474d5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc70ba6-2513-4e84-bd80-b2ce5c2f90f1",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69beb390-8ba5-4d0a-8476-95d219398136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4795948-187c-4e68-92cc-63490a545ee0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f45c067-88cd-42ed-b0a0-8664cae7d3ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b160d410-240c-413a-a931-774e455b40e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88493f96-6b7b-48b7-99aa-4f6d291a8ac1",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07ea362-213e-4196-bfc3-e0d1b504e8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc3a9cb-44e6-43a7-8d19-2852a60c67ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c69c2f-2ba1-4b7b-bb78-54d3cbb11d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be10c7de-123c-4a64-8875-b5c1a1e4ce0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9cf1b4a-748b-44df-93bc-6ee055b7cdde",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7386d47e-b5d4-4eb4-8c3d-41e69c5045f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c7875f-9acd-4b32-a7ad-22c29c46696e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "400204f5-9386-400a-ac7b-dd68b87ed763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1400b1e9-9576-4afb-bdae-cc8e07e76871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55229d85-6bd0-4e3c-9bd2-bef5a5f912fe",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a9a78a5-a3b0-4e16-83c6-cae4b3f75b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c9f7770-69b1-48c1-9be4-aaf5789b423a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd0a21a-36b8-4875-b10b-9ab65fb747bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0273929e-da2a-4d27-9355-7b446d1c12ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b133d802-2945-4512-8001-881500f3a0f6",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ac06412-334f-450b-ad2c-73b0c1620cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e9d2152-2332-4d39-94b8-2b18c25714a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b7153a-c8b9-41a3-a452-27a6e00aed61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d45517e-2edc-4709-bc8c-2861af6128e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb27f0f0-8468-4846-88b0-5f100a0ebbd0",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4204a3-e065-4765-9d4a-493932c2764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3446976-cfe1-4c11-879d-823c1955acc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e86f1117-dc1e-4dec-87df-1aefd4c079d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3586d945-86ac-4d57-b694-0aa0a5bf9769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a0e415-65fc-45d2-9829-f5ab8dbd9259",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00bdf8b0-df86-403d-b974-5f1ae140991d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf13bf7a-e2c4-4654-a6e0-8c26b0f71ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86562c0-7b2d-4982-9e56-006e5a201505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2ac79f-459d-43ce-bf8e-9c88fc6c49b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47d24c5-37c7-466d-8d8c-85b370a74253",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461a6bb8-2363-4095-b9bb-e56e5fac422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bf254fb-dc16-4f96-931e-a4667968b54f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79d4d4b-c160-417c-8d15-79083ccc8ee1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "31cd1880-4f2a-4e90-a287-660e7158ae59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31c0af45-5873-4e04-a46b-b544c06eb845",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650967dc-5257-472f-8e29-cc3fddc6db47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "587a3dcc-872f-47c3-8fe1-5a0512278e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be04c93-b246-400f-99ee-ea422ba812de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "75713fd0-e318-441c-83f8-bd987b577d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4f75a3-b16a-4797-9670-6cc28cd53250",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1252f6-5bd4-48ac-aa54-2a3a8128a3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f8871393-4c9b-4d91-9591-6e36e1bc37e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3cd4ec6-deb9-4b10-b47b-ff4fd135cf1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ef2c545-0c4e-41ac-aa42-2239bc09649f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "242c5346-ddd5-4786-9d63-4ecc2da6f27e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5bcba15a-4788-41d5-94b0-265e8be75263",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35bb9514-3460-485e-91be-fa10ff46824a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1bd5783-3e9b-4398-8072-f10de0f31cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e9cb98-d46b-49fd-a55a-715d523d21bd",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ae67e94-25c7-4542-a256-2db49a013a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad40e5b-e87c-43fc-8480-33697972ded7",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ae83156-bb33-4904-89d5-a97d656a2c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2234f2b8-c67b-4f90-b271-00b7d62291c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504d9494-f388-4a9c-8f38-559a2b270f29",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5b3e21c8-178e-430d-8293-c03590b02c14"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1d32019e-b4fd-4f6c-98dc-d49467e24cd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b144150-5e61-43fb-b55a-f9ae7856bb30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73bebb0c-095d-4a79-8472-704050845e25",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f3ee1a2-c156-4fd4-bb7c-fc635dc0fb7f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "955f1407-7f18-41e6-aa0e-127a4e6e0b0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "58cead45-0c10-4a80-814a-eb62173e50b7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f171a3f9-c22d-493e-b5a7-16402fc4a513",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7fdd44ff-0e89-4a7e-9f11-89feb6f8f102"
                }
              }
            ]
          },
          {
            "id": "f5fa945a-fccc-4cf2-a68e-4672f2c993e3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7453c6fc-ca84-48bb-a132-9aa796dbeb8b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1da9596f-22e4-4047-b554-3ae3f919009a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fafa8209-b346-4d52-a140-9221aa8d94d4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6d552c2f-a5a8-464a-852b-928d0611dd77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "59798e52-64e2-47b1-bbdc-393afbba329f"
                    }
                  }
                ]
              },
              {
                "id": "082fbdc3-2ad0-4702-a901-e363d26b8437",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd7585b7-69a0-4bd8-a06a-cab5d0e49c96",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8b5d2f32-0d1d-4bef-8295-162e304e5265"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5981f98f-526d-4a74-8fe6-f63dcc72fdc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "197d11c0-bc22-459c-aaaa-b86b0f12f667"
                    }
                  }
                ]
              },
              {
                "id": "b54df3a1-b5eb-4fcc-9f64-374179086b43",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cef5f82-3fac-4bc3-a21b-27d219682d97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "669f9225-0b65-49d7-9a03-5b2037905aa2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "30a1590b-ba93-46a1-851d-63cb00df853f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1dedd864-9aa7-4dc5-99b3-d5abfbf21ffd"
                    }
                  }
                ]
              },
              {
                "id": "ec9dcaf4-91ee-4e03-9cdc-6a8672e10224",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bea8a5f7-c7ef-44c7-9994-4b513b7021da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cde7073f-0744-456e-b887-7fcd25d19291"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "98d175f4-fefe-4229-a7ee-8ce8908fb539",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4b244717-8296-4c76-9d80-50ec39b2edc6"
                    }
                  }
                ]
              },
              {
                "id": "0c46866e-3a9b-4538-9cd7-1ded47ca490b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "224288a7-4cf1-4fae-a094-f15b5c48aca3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "67e08d4e-5aca-4e33-bb72-df84efa538bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "143efc17-b574-4047-81ef-b33c43982dc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d6bf1f49-8e70-492c-a7ee-bab7f853f4d8"
                    }
                  }
                ]
              },
              {
                "id": "b52e8883-edb3-44aa-84c7-04dd1fe6866e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "896bf477-4237-482e-9b07-1e2388452ad4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "34a8534d-0c8c-406c-bc50-1b1c6100471d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6f62505c-0c64-43c6-b62f-ba9ce073ae06",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8dc77a2b-0001-47fe-86f8-f5ff16fd1ccc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5c5d3adb-6927-4f87-b91e-149f2e54a829",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "abbd0a8d-8d98-4473-92a9-af48890e2b8b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a09f0c0f-6190-4dbe-91f4-72ee3e0e1162",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8a72c36-ae91-4bab-b611-bca944bb9f4e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2ddfd364-e41b-4f85-bb95-7f3d5d98663c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0b681ada-a9fd-459e-9b40-168042bcdbe5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eda871d1-5e8a-4af4-b593-9f0bcc2e4cfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "400b939c-6cbc-4286-8806-6e28dfab78e3"
            }
          }
        ]
      },
      {
        "id": "156d1b6c-0a50-461e-b98d-633781d5ae1d",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "974f86d9-7cfd-468a-9fdf-36b6da197753",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f831b6af-3ca7-44eb-ae20-3c62a2d43059",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "430a2b77-c383-41e7-b823-dfe216fdba77",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e9c109d-4f5b-4efc-9b98-e4b854d3bde7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "512ac76f-0fd1-44e8-9550-444291d8d914"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "618e5c41-3db0-4fd7-a7c1-a0173e695c15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "df764d76-02ba-4137-b4f0-64be756b5632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c2adb9-c609-4fbf-960e-ad528c01173a",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26698e8-df1c-48dd-8fb5-8157a6badcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2090a6-1d91-491d-81f6-96135f68203a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "474999d2-9b47-449c-99a5-da8d29925f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe8d9550-2e48-4c44-ad57-31b5353ed534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "662cf3b0-e965-48ee-bc08-0e7ddf3190eb",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4d9135-79de-4125-b8ce-a02d7bc45e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0b96b39-5478-4497-9053-2462333e234d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f149831-c961-41a5-9753-f7039cecb3ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f492b42-d10d-419c-9643-1a3bb7262943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30724f1-2272-4b5e-a4bd-d31f4aa02152",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ff01ea-c838-4abd-b480-40860053e193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8cd82cd-7e7a-48b7-bd2f-3714a778cb93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0091d720-4989-4dc6-99a6-45da48c7efea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b34cd494-5f15-487c-9656-e6a83e71b3a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3867bd72-c38e-4e7d-a363-50a431419142",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63610622-2f73-4a80-b224-b8d1e23f883e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4baf7309-96d7-484c-a40b-9a808262ed72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a589544f-ca6f-4e0e-bfce-9face5041021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c26dbc-12c0-48b8-8e30-75e2ce58f82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a26a0fa4-cb90-424b-98ce-634dabc4d0c4",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029a1014-7610-4edd-ae83-33f9a399ef4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c005abe2-250f-4a20-a6e8-5f9699174ba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edcfd852-045d-4309-b89a-edc2871017cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fd92f0ab-9f4b-4b9f-9f63-9d3a43e32f31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb4a2ee-5e37-4c80-aebb-10eb75c23911",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0159cf1-6bc3-40c0-87a2-14982cac2572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b42d117-c83e-4f92-9e10-5c33164673a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010b42ed-b8a1-4d8e-8cfb-d175b5489f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fd643675-f107-4242-b953-9b3b12829d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db80309f-5602-45c6-83d2-6f165d05de22",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8807412b-2624-46ab-874d-d948aa8c9678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bca0578-0846-4612-a3e7-af72256b8cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd87245-3c17-4edd-a97c-9e3a8b06e640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9359ba0c-41c7-4493-b2a5-568fb68c02ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ef8df2-267a-4e0a-be9f-e9bd1bb4b3bd",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e62d42-55ff-4934-8ab1-9721e26a27f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1afe91d-a122-4cfc-9b54-ef0124da8ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80873237-1a95-4d47-a930-aac10d60f9de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca53bc8-54b6-4abc-844b-a0a3242313b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b74475ed-65cb-44f6-afa5-7d6c9d201974",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e5babd-6c11-47e5-8682-ee0b4484ff79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f627618c-acb8-4f7d-a1c7-ab616d2b872f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4814b76-78d3-479f-bda5-3b8eb7439cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "293ba564-c03f-446e-896d-b8cc99a40175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6c2c52-672a-475a-a692-ad9c8767f5f0",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2168e1d3-40f4-4783-85ad-9921cd70c97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19d05367-e6d0-431c-8118-ac6481ab73be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172278aa-fbfc-49d0-afb5-8f366564a13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f0401fd9-1a5d-4801-8046-5e94a017a21a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97310ad9-162b-4104-96ae-41c2e24748f9",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed9f0d3-702e-4243-be2b-2b2140929b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3747e47b-a1a8-4ac4-a3b6-f6b3452bfa78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2220b1eb-27fd-4c02-903e-cf2d52f5a4eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e5314085-f0d0-4e31-a452-6188af4f45e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3a5a72a-14cd-463d-abc8-8a8fbc58eff7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee8d3a05-2193-4545-9f35-41c87db67bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "511628e7-b247-41fa-bc33-5754a1e91f20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c512ef94-f7cd-4798-998d-7ce356d9ac11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd56652-fdf6-48a3-9565-1c4967009de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c5db47-cf5f-4d50-a349-3003e69580a8",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c582488-ab13-491e-9f9b-6d33c41ea163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62c5a9bf-d30a-4c84-ba8e-78f149e2964e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c530d7d-5fc1-43bf-b843-0894345055ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "873b4540-e5af-4168-82c6-5290551ffb4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "318f591a-6e0c-4aa5-b0d3-821adc421913",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00850c56-ddb7-4578-9ccc-0e3d6569699e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f48a553e-74d1-4711-987c-859e81b93e73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "febcad66-adda-44c7-a7b2-d0b0c759e272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "592eb2f0-27a5-487a-9006-a4e9de43ce64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d7859b-79c8-4c5a-aa03-5fb1b278bc4b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d699eb0-414c-46e1-8e07-d8a10374b8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b8e0928-2e87-4117-8dc6-0513f46e6e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3789fab1-6fd8-4364-94a2-ea05beb962bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9370f2ae-dde4-40d4-bdd8-ba1654d26a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c627eab-429c-4da1-a840-44c2c721632d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ffc5ed-c57f-4243-8dba-2628b3b9ce4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a1856c-d6a4-4824-a877-3074232fb6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20fce4e4-55ce-45a1-a558-545745c79d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8aea551a-2784-4500-bfe0-b29aee48788f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae9d4eb-f64c-4e61-8143-30d74f2de9d9",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811e8144-aaa9-4b2c-a2e9-6ee96df0bd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62b87674-5957-4641-9be9-e51d09eeb8c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce9ad9c-ed67-4f55-b8e4-b50647ea292f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21becd36-7ec6-4277-ba58-2766c17ebad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a81239b-b937-4bdf-8d6a-607117f7f415",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16bc8d77-e8dd-42de-bde7-f120ff52ad41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f444ee6-e39c-40a2-b2c3-ef1197f7c4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a86a4035-31ec-4312-9658-9cd52cc213ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "066f5908-77ea-42b9-997e-f287e2915a10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c6a06b-1f41-4fed-8a35-e4c46707c471",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce5f5826-59bf-4c20-9784-9c502f2770f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a8670f5-2f31-4e43-aceb-7c9049b14526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f23844-d018-46e8-b768-d5ad5fa583a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2105a4b8-ee3c-45c6-b6a8-571b8541bd0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06742fdb-836e-4215-b238-9170d5b52853",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55774e38-514a-4bb9-a426-e85df8faabd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4436802a-806d-4adc-97d2-80115c8cb52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7cc0970-a9e0-4bf0-9f00-5da23dd15ecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9f1eb35-492c-4d6a-afc4-ee52d12c3ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8734c27f-579d-4412-94fb-32da8eb3bcc1",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5cae8d-7c63-467a-87f3-414493571638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd06c661-3b94-449f-ae3b-f8b4da4f23ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a46e4d0-69af-41bb-885f-1787598ef4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e7a27f1-b750-491d-98b2-088f3f65e691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2fc3fb-82f9-403d-981a-004086e64604",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60a2eb25-1bdf-4567-a0d8-61618e8b30bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a32e3a2-d88b-40b8-aace-82fead6f43cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ef1501-99cc-4e86-b74e-48b57d7e8079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8f3a569-9e7d-4169-a5a2-93dc875a61ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e99ef71-2b64-451d-8491-65ecefc9643f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51623e0c-06b1-4376-9fb4-7b1979678b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc1f00a1-7c82-427e-94e9-8726781f39b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a006e6c5-7307-4907-9c61-69eda2509b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6476b11e-7122-43d1-bbf1-62cf98c8af32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5dee9c3-fb77-45d9-bc14-3e85b68f87a7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2356cc-d22c-4338-899f-65c9e61e5d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b32e6507-8197-4276-a152-ad6608a83e7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba3d167f-3e2f-4e74-a27b-b731dd9af230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2901c2cb-9cb2-4053-a107-40126cc0b7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5dd13f-8639-408d-afdb-a187cbc2b874",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5b426e-7b94-48ee-9305-f829f2b78fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00548e1-8e7c-4489-9785-7dbae5b080e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c274d56-6d85-46f3-beb2-d7e67bc35f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b081fe-7ca0-435a-8a02-9c7d6ec56e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd44a61a-41c1-492f-b3c6-93eadd2ce942",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59fa78e-d7a1-43c1-8f64-3a8a9f05b936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "810a007c-e3c7-4d08-9706-d21deeff1e10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c562f515-75d4-4097-a5af-bfa3e1ff80d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c93a5aa9-86c4-4433-b05c-28fa8b326e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da6f2bab-e445-4155-b5e4-2fa0d7e6a406",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f18f2c1-40d2-4957-80de-c6430e652eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "defb788e-872a-4dee-86b8-6582e2b9bf7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f245d15-8e2e-428a-9f45-9d76379756b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a51495b-3891-46a4-8df8-f0e7dd26bfb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ddb6de-3bf8-4cdf-96a9-1cd835827f10",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd924d2-9f09-45e2-a8e2-ed6c8a64c7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f277eeb-19df-4f8f-87c0-441edc83cf23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d8d312-8355-492e-9573-a622361d776a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6a11113-d39e-41cd-8038-3f4046153fcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d21cd49-b811-4806-859d-6883b45a4964",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e69bed58-eddb-4f0a-9027-aad4deaceeb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ead8d979-9a04-4281-be26-335c266f2ccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9671ee-92d4-49dd-8162-9546eb33fbbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "749833e4-d98e-43c5-bf88-efed8c845115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a152b66-1040-4c1b-86bc-045f3ef7e77c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860e2e92-3e57-48e4-b5b7-6353176a98a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4cedfb-5fdd-43fa-a399-9d500c9e6ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492ea1a5-bea4-4306-9475-04f7e412a04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fce690fe-b22e-412d-91a5-014d5ace995d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bd78c86-0e1b-4a59-b720-03b6462c3f31",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76a43b9d-e38d-405d-92f6-c4b8a9d013ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea8508e8-cabf-49d2-b433-6747cab16ceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78c4f3b-2b8b-4cb7-a06f-8e42c95f61ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "332fb970-903d-4a51-b5e3-3a5496302b0a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02e0dc2c-4775-467d-85f6-ad7941a4e4b8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "184e552a-5f88-4389-86b1-ecf6cf88076d",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ba068c-3398-4a86-9121-0a010cc6a7ed",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b0e2ca-c793-4a04-ac1c-ac9c74975ca1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91217c4-040a-4029-8e3c-1e793cc4aaa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "585b5cfb-d66f-414f-a1a5-eef17756442e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5735fd79-1583-488a-a7a7-342a4847a566",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dab46780-3ea7-45c8-8a25-1f4259d8937e",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a4c9fcb-01bb-487f-bd13-60756202afe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6898dcf4-c108-4d76-8c88-442ba58ad151",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f36e1061-8c7b-4a10-8501-7e2a96d193b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5eeb1987-7f3a-49cc-9f2d-d8bc4dd1d8f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71139d85-5d30-4d54-b290-56e8909a0514"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e1bd3f55-8dbe-4904-b048-ba3b11cac95f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a9f359d9-ab87-40ac-8de1-a03f54e65a1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "87a2da79-f4b1-4e6f-a9c6-fd2d55f3627c",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e68868c9-fd43-47eb-8738-c45676244fb5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "03c15f3e-4468-4e75-92e1-f036d9426692",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9a8a793b-f4c8-440c-9097-cf0d501a3d66"
            }
          }
        ]
      },
      {
        "id": "43b35fbe-45b2-44f9-aa18-8adad2107cda",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "70b0d057-57fd-4245-9866-3f0b175e2264",
            "name": "Negative Testing",
            "item": [
              {
                "id": "005be99e-0e06-4d4d-9b43-209af2495900",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b1fe67d0-5b38-4ad3-bd92-463afa9cdca8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa47c50e-dcca-4455-9702-c37072765cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40b772bb-1db5-4385-a3e4-b71369c0fb42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c11d7ff6-c949-40b6-b41a-188fcd60c3dc",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c22cce6-9548-424c-a52b-2a7ab7a11423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39455ae8-0b7e-4782-bf21-6fa7751a6999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a9b72cd-1d56-40bf-910e-da5dcb6f9ca5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4757346c-2d7d-4b83-b94f-7ce30b131e07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5119fd99-53f7-49d7-ac75-2aa3a8efe704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c21187b6-9c58-4a8f-b2df-0cd3f0e3966f",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e374c0-c48f-445e-ac05-5c63987685e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e3bfb6-7a8b-48c2-806d-fb12fa13f5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e39767d-bab3-459e-b94d-3621fef5a072",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35002824-3275-4080-8e3f-2f27f7f083c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a114434a-be15-4ca9-be44-96d22333c661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac493e5-c8c6-497d-b9a7-be845928d199",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731364c4-6e14-43d6-ad24-801c5bdb5cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711cc6d9-688a-4469-8e99-f3b23c1ab3f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "738c11dd-44b3-4337-8e9f-5ba99232876d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b0b127-b68c-4820-a63e-12ddc9a84271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846295aa-273c-4543-8731-3e315c5c7506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c0e40ed-b774-4c47-b087-35bc5c26a2e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3847ed0-eb4d-4b4c-be0f-c2450d10f2ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3c5bad-9ba3-451f-8489-75019b120e71",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe71652-fee3-4b5d-969f-5f10b90e0503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b566a19a-088f-4a2c-b4d7-da53b6323113"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "297a666d-1183-49d1-9606-75f6ac9e8f93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da598608-2b65-4565-9187-17d1f772c850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da59b480-18f2-4a22-9775-55a0903650ae",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993e2e2b-de57-4401-a0eb-0b81210ed565",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "148908b4-dc78-439f-872e-0c9c722b9117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c237e7f9-2b5d-4799-ab23-0b59dfc2fa01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bee368d-e839-4e51-8ae0-3e7eb2020962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f481ed-0a79-4aa0-9559-bfcb8a96e18b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10560df0-8298-4761-ad33-6fa9ae567f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6455ac6f-ebc4-4aab-8fb0-3790c3d55cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "609d0820-5e62-49aa-87cb-5c6ea7a71c1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0816f5d3-8613-4896-ab63-10ebc6968c52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bc5269b-e9ec-4610-b7cf-4622f976fa2e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382266a2-b48c-4ab5-86a2-b77b6e83e8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a35b0a4c-5ce5-4da1-9ee5-a883dc57d867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516726b1-4ae0-4bed-b1b6-6f7ff2ca6990",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6922ca12-6a2e-41e3-96db-f824c39be3b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab7ccc6-2a89-4303-bc1a-2e56b243cc95",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9601712b-4c50-4261-af07-e02383202c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ec66c9-e89c-4ac7-887f-0e0abde65b8a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43402277-c796-414a-99ca-f660db27f061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1092ffab-a487-414d-a786-5b125418b6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb917f7-d41f-445d-928a-058b570c6361",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f397348f-3b23-4a4e-a27a-e3660829c784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c75c33b-1038-40df-9cc1-fb1fc63a84cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "850eacac-29c2-45f7-992c-0c9e3691c3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70516c13-e36e-4346-bed1-9208bf3f5920"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c8162e-860d-4afe-bed0-9a0a090ee39d",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2935918b-2584-4e24-9b95-0d1fd8077d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88a4d190-a53d-4f61-8b98-ab66f0c69aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cd9a8f-e114-47ef-89c3-d302c6033ab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "404d3a53-e757-4bef-bf09-765010f5c109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b04d6b-832b-4293-8a4a-372108e49e96",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e9a5937-c15e-4a2b-a052-a5f81ce5dc49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee6889cb-0992-4e12-9540-923b55a1b638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0381c9c-81aa-40d4-af2b-7bd7a3e9d0b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d48c284-b9d1-48e9-8dcd-4e15e2555005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fece5ed-810f-4d3f-8c66-c42c21deb762",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc3f7c1-e995-4094-b4e4-9ec3f9c0a306",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b5c029cb-2bb2-4537-afe0-437e3a883ebf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca39c6a2-826d-4ebd-aaf6-a80a840349b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6234c6-1435-4409-b3c2-ce202ea89dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb0f1718-468c-41ee-a594-95e9cd7258f1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20038489-614c-49b7-81bb-0150607b71a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bfcd8c3-561c-4be7-ac3f-5b845d478d66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb4722e2-2588-4a2b-9c1e-850944197a3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d99328-b092-44f3-8826-636943ebc716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2670d2e4-2a04-4661-89bc-f42438405122",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c051c2e-f50d-488e-b9c3-9406962fd620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706435b2-fc22-4e35-a2f6-321ad08b6034"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39c19fee-d8e5-404e-839d-e0177343a2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abeed51e-b71e-4c60-b15d-730845b0b1a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ac5efb0-d400-416a-bde2-804b26202319",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e424fa6-f1f8-4809-bc85-81a0837ee6ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8721e9-d410-4065-9390-edbf1a4b388d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68b7f73d-2518-4493-b590-f75b5af15ba6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afc0d663-4af2-4de7-bac5-065af03f2cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab88e58-e1f7-4f40-a5bc-5e59cd6cad89",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e444a763-8845-409b-9e36-75d512d61693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6280a814-a039-49dd-b039-b3e489eddf07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1937f0-83a0-41df-bfa7-8b1e878178f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540fea88-024f-4346-b483-42dea44a824f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100504ef-4804-4b62-a7ae-1263675d76a3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f834f5dc-26d2-4118-8ae5-268446ff1dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22eb837f-c575-44f7-b243-b44b71c3c2c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edfc684c-4080-47fb-a166-4e8e2c55b2fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5281356-6947-4de6-9474-0e4b73aeb601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674ceeba-1afe-42b3-ac8c-edff95330c57",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2005d66d-4cc4-4f47-a2e7-b6d9e4465b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edca3c9e-d48a-4897-b2f5-bb4ba185b1ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76206fd-db62-4e51-8f49-ac7f0d450a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f2785ee-8688-4b7f-8891-19f209ed23cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baa1ba20-7af2-47b2-9387-eb06831e41a1",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79b61034-385b-4327-9a6e-4a7b6bd08004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50db5977-2a88-44e0-9405-ae15099f57bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4033c41e-5df3-4a47-ab12-6f8a6753fe91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a55911-54c2-4287-8e53-aa09abb44d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f32c0dc-c26f-4567-bda4-bf1ccbac53dd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af3b4be-bdd2-40c2-a991-21fd35390d2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "498f1a89-c636-4beb-9a28-21b09cebb62b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0092c6f6-d416-4924-9934-30448cbb93b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2ed4bd4-4d14-425d-9b0e-7e6503b958fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554880d3-ce45-4218-8783-406647393d1d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9722c6-19f5-4f2b-ac37-5618bdda52f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00cd5047-11c0-4baf-ae50-db6e25b24b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696c0589-1c62-4cd3-827c-1812c8564dda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8608d7bd-4133-4c9a-9f57-8f5b18082c9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f3562bc-59ea-4e20-8606-875135486323",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc0dd99-b802-49d0-b4dc-547e0490654b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5349bc67-4986-4228-a5f3-66c1f3122dca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4ac74c-6e67-44ea-b601-1591c1ee0ca5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc4eb92a-6ecf-44cd-a814-fd24eeb05df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9102c558-76b2-4225-9014-ba18c06b510e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4b6849-e069-4ce3-9cd1-5f7009ef3634",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3337af09-9e69-4c64-9a09-c50ce9bb02be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d56d8506-cd6f-41de-80df-a23aae048e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "154c252e-1613-4ca3-b639-37ff1df3af9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54e73c0c-24e1-4f08-8b57-10d820bba7b1",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37e2d5e6-7762-4628-83a8-884c35ac38bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c38cb50e-2ec3-46b5-b0cb-9a56549ba61d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06c6466-1e58-4eb1-b9d9-999eab801619",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f55fdbe-c589-41b2-80c9-0863d0a5ea15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "481010f4-49a7-438d-b7fd-97923f956f8b",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7848d045-3f1b-450d-a9b2-bac99cff1b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d5dacbe-eeab-4404-badd-3dac7c833179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb60b63c-9216-4f64-92c3-649cef0674fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25786326-201a-45c5-977a-c719ce2c2640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd27c33-654e-4162-954d-d22a57dcec3f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b2f6fc-b088-4695-8367-f341d214eddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ed6ec24-3eb7-458a-82f2-caa8776250a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ff0a54-1d3e-4062-9db0-17876588b123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6dd969e-c832-4259-a8f2-e79702190ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cb7339-eb90-471d-bf14-5a5d57b51138",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f412a69d-e80f-4830-a120-758e5aadb4e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cfe206-6a14-4e7d-b9bb-50db4f0190b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d9b4a1c-8369-4e1d-a612-a619b576bb15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d513ac50-c9f8-4d0f-9db9-af0e473f3dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655f3742-a0cb-4c20-9a15-13a2b1e58652",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4b2408-83dc-49a0-ae3b-d0cb4a34eb6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5c1b28-6c18-4a22-b07b-a5d45b712fd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf8e3942-4ae5-4587-a280-08a60b215af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b8292c-b7e3-4c3c-b582-9c1c3567fd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5a47d84-2aa7-442e-a617-ef257f88637e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "287694d3-9dd8-495e-b50c-40d2e041ef25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "435193c9-9c36-4b40-9f58-4b7e8aa52cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2f27c0-5e95-48d6-8d4a-ea0567614663",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d26b2f-4f56-4a97-9bae-5efd730971bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73324974-95fe-456c-b0de-dccffeaa0ee1",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9c1388-e882-47de-85d6-073a2e2d1469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b73f5725-7135-4c10-96f5-17efc86e1aed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2efdfde7-5b53-4a95-b2ed-5ac3b7615359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b8a16eb-c6fe-4b26-b214-689f7ac11efd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e576459-4a6a-4256-a988-161eb21b2ea5",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a799a56-2b2c-46cf-b9e3-9c30915c9ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87eb5128-7417-47e3-8b6c-bc4aaeb961d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add6b3dd-ba11-4c5d-be92-b2d084a9b5e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07e1cbc-9b56-444a-bba2-201e524b75f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b334a0e-d5a0-4f89-879d-671c71e1e7a1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838b1499-8bac-4263-9275-4e985f14bd08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9a0a18-4a7d-48f8-9a24-3ac00ce3f5e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e2f2ce1-a75f-4fd5-8502-0802904d18ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e5fd57-8617-4c2a-ad1f-ac864069ee56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa8c08f-8da0-4736-bbeb-947dd2f3b5fa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f604d0-7654-4479-90b5-82fb95b0b5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74b9fba-0709-436a-904c-72757a7f8638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45edd1a6-888d-4c89-9d3f-4192cb1936fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5fe6078-82ea-4ff6-9dec-4473f026a905"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87ba3d2-12e9-4b6c-b1ce-282cab604b23",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f3665e-08ef-4394-a356-a66aefa66b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc7a61b-1a6e-4993-878a-46d045e05afb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be270b90-bd90-4c5d-9526-92f96fdaa8f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f0b014-1f6c-4219-be36-9b3753992412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d91fa3-87ee-464a-83f1-f9c27b3e763b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1def6cc-00ce-4b1e-9134-4a54cbed6908",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59287fb-1bfd-4c1e-8c7c-9188f1552083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "284b51e8-5621-4098-b770-78c1843cf78f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d828fa4c-dc1c-4eaf-81f9-f25618254216"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca631748-d062-4a00-a64e-b95587ca7d66",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d59c752-b545-4c6c-aafe-53eba23832f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0dc9f7e-f6c7-436b-8b82-d8e08939c899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f593671-ddc6-414a-8c0d-5a79f44cd4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec0d43a0-d697-414a-946e-22be86e9af5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c116592-7853-4cc3-bef3-fb09ec176153",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f747ce64-98f7-4769-ad54-8e6baf9df69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c43adb99-a2eb-4f03-be9a-4b8fdbb701b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f860a7-9ae1-4095-a387-f83317c5efce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67182f5c-4632-49f7-a15c-211dd3c2fd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870de070-85f8-47c6-90ad-d7c0acb49d5c",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdb8f14-2572-4cc3-be1e-5364e8170ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1606ad82-2666-492c-91fb-198270e59b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a49cf6-46a0-42b3-99b7-50c919f66be2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129272c4-5654-46ce-b6e1-47198e9559b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1c07e43-ea5a-417e-968e-61a3afa04b3f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce99553-94b0-463b-9ee0-9d677ef4e3c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18b391fc-9048-4493-866d-dc42256ad56b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f305ad13-772d-4971-a3a8-3cd8f0ebbf74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11afb340-9a08-4e13-93fa-0117feea0347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e5b5fc-ac82-4f1a-8f75-16705635e3b5",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10b9168e-df75-4bda-a104-17cf5f92f400",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7016a1d6-2395-4103-a186-9df68a97213e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3370f447-9d85-46a3-820e-45800bfb0705",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f321a697-b323-4f27-a0a1-396508ca40eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061e3f43-1b8d-4db3-8624-f6a1d30ee635",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82314eb0-4aad-4fca-a409-894d51da75de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd626da9-8642-4585-aeaa-ad7dff8de359"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25e8d9ec-fa7c-4cb0-b93c-62ec14c256ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6a95c0a-96de-4fa0-bfb2-62fe5744dadf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2de5459-357f-43d5-a448-9d1fff6627b2",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b55f8523-bec2-491e-9c6d-9dc59727d07c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bdc3cf-a878-4f0e-8482-ed971a5274a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4365134-9151-4a1b-b387-3de96959f1ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67f5d16-6e2e-4caa-ae1d-041b78eafa48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b92858c-7d54-4e55-8bec-49b617f18a0b",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "968f0ef1-1002-4433-8550-c61f92d47f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cf8389-4742-480d-8d5f-e9505bbb7ad1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d904e9-e5da-4041-b68c-75331f122881",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce8e3ee-0012-4a3b-98dc-6e4ca8ae559b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e3aabb-fb18-4d2e-93bc-599bafa24f54",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfaecd7c-0d61-43fe-919c-b1acfba5edd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839a3a9b-b139-4117-9825-610252229720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b550f242-6c57-4a89-b7f6-8343c6787d52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f8dd96-b570-4103-8214-84beb67c51d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78e494f-a050-4cb6-b3d9-182e527f67cd",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcc8df6-4dec-40a3-8c15-b4a148fb1ad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3e2dc5-8331-4ec0-9a17-7206024a6599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bcc22c3-5ebe-4864-b274-c7542c9d4db0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92275d2d-82f9-424e-852c-bc1617e1b126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcbc5e72-4056-469e-b320-9b8a00d84536",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d79802-c220-4919-b2d0-608e0135c1d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de968344-5dc5-4aaf-ba83-246779a1be1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6fa21f5-9b18-4ac7-b566-26f95c677f95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77623fe8-6611-48dd-b745-ab89fc711a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86cd0316-a9f3-4d78-bc05-21523db35c16",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5649c897-7ef6-42b6-99df-c95ad8d1a2d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dfb2001-c13e-489f-a600-f4fa51859873"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94710bec-124f-4586-a7f5-ac584a63a1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2123b7-4bc2-483c-9ec6-fa3c21ab37fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef1f4c5-8e5f-4842-995c-db32fa70533f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180918be-41e5-4bef-9a87-c6b07b57c431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c063033-d06b-40a0-b4c1-5b9c1290cc24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1487036-26ef-4f35-a0cf-2235a9e58e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a625177e-131e-48a0-bccf-34a24a8b0d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc528925-a4eb-4d82-acbc-2304fdc510a0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ef7a92-40e8-49a5-bcf3-b9a8d28fcb2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "511b85a9-0871-43e6-87e0-4bb89d4a057c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6739051-b784-4dd1-814a-9b9e6bc6eec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22f0aa23-dae4-4dfa-bd85-e1b5ac315768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b4679ff-b2ff-4a02-9f55-c5d1dbcf9d17",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6027f6-c911-441d-bd0a-97404447a2eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28741b61-ae9f-4c30-988a-b215df8972f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ec8612-2646-450b-80a5-70f8e7153533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec7a9fb-b1f3-4201-96be-bea44b24773f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa87a592-8001-462f-9774-516fa4ef13df",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3866f675-a973-4252-bb8b-dc89768b339a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49f582b-32d9-426c-a287-b5e69775c781"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb2dc44-afb1-4323-aac6-94b95774cf1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2711d1e9-c516-4990-a2b9-1429ce6d0efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222ac4e5-f0f4-4f7e-8587-a6f60ab22e3a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25060c79-6f73-4168-89f3-2e54ce913ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9c3aef6-5c91-487a-9155-0ee5627dd4c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "812466c4-015c-42ee-8ffe-7a18c471136a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3e89bd9-bfc2-458d-8931-ab462c3bf16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77f0ad5-813e-441e-8507-894314353077",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe01e9e-1a04-4faf-be74-98c6ab99adc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11b0f803-45a4-46b4-91e8-15bb11bfc422"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebf31f0-bdaf-4640-ab6d-bf1235a884d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1cdf361-a61e-45f4-94fc-168d29bbc3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eee7aeb-dea4-416f-91cf-d73ca2ea90f4",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c728681-73ff-47a1-9fe1-c4ce46714850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22009d99-c753-41a8-a5a6-ce196077a308"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f679a53-85d7-4c96-a94b-40a7f7d6adba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32f3e4d0-2dfd-466b-a342-c30e0b253106"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48d12c0-0936-4bff-a80b-4fff90661c3d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bde59b-7f86-44dc-adee-6138db16af13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86fb7e8c-14a6-404c-a570-96b8e6045934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "736ca113-4a51-404d-a795-99e51312266f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a1caf3-f2fb-4b79-a23f-530b800d16f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fdffa20-df71-46f8-82b2-26c11ada0644",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7442ebd2-3bf0-4082-8366-f8d68d60af42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c08a624-6764-472a-be67-910915115d4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b762e6a-4ac4-43b2-ba71-0aec5d13f3ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3ccc325-09af-40ad-b476-1c8f49c6b03f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751ededd-4658-4a76-a831-e52e508e94ee",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd672e3e-6c39-41f5-a2ea-d6485df7db15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d05393e-2b39-4c5b-9f33-29cae1201de3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf93f451-5c63-4d4a-b0db-e4782de100ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e6fcb4-8537-45b3-9f26-3c0d18d590b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30bf89ad-feb9-4d63-a5f9-576e12b12d6f",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72449ef9-65e3-46cd-a9de-fdb45ddd0458",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb439d94-5f57-4c5b-9f80-cb83b3b5d38a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d33cc1-c998-445a-8038-385c13b35d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "494f90b3-bfb5-4b0a-a496-9bb334c15426"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f733111-6e65-48fb-b6a5-cab5ebb845e0",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a007dd3-c4a6-4d83-842c-d59311c5dbc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16346b75-69d2-4206-99e8-36400f7bf39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab87be9-6935-4f19-9ef5-b64a45b5696c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6f5f6ab-2f2f-4e6e-acf8-58115aae884c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a61be7c-2deb-4102-9363-5fb5ddb9dc45",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c6196e-b23f-4bb3-bc73-423ed1017b40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe7629ce-d2d2-4439-9bb8-045557a9170f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "111cd4a6-7f83-4eb2-8802-4b544ffb78a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9044085-e79e-4ceb-9ae1-367b1ae1f7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e5150b-d683-4e1f-a55b-d5eb6f182810",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae75ff62-e711-4309-9816-b1faadbfbd40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2d27760-13bd-4d45-98a5-73cee1b16566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a58086-9f67-4164-8b94-e294e826f02c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa440ff-1534-49cd-b3f8-38d8d6f9211c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b771e73-da7d-4bff-babf-67799d094c51",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04653198-c2b1-441d-85ec-3750afdd65f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df750d28-b589-4ce2-9be1-2ecb5261362d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a2964a-ee03-4103-b061-c4a13ce86e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63991525-8ef2-4ca9-abf7-883a74c92a0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6558909-e096-420d-a2e3-25cd9fe1281e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7343a078-774d-464b-994c-e038bfd63670",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "682f7422-e9a4-4981-9427-3ad3f2b81b65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c4129b-6ca7-46ef-9026-02538676a111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8baf1b4-6b7a-40f2-9ad5-c3f989ad4878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88cda92d-4d36-4f5e-b99b-0932456e9ccc",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c3ab374-6dc5-4a91-947d-2fcbb09fa20a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7409936-2c6c-435d-9489-51dcf60917f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed73781e-f829-423f-b8bf-5e1b1111189e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd836bca-09a5-41ea-9ff5-076cd6283f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46129eb-aded-42cc-a3c8-05a649f7e449",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca6f55fd-830c-4b1f-8c17-36cf78c12ee2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e206293-5680-4484-b42f-d727da83935e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7841aac0-a988-4a80-8ab9-48ade857acc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c639666-1310-4619-b01e-1ca95820a01a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec336ad9-2ee6-4086-8b73-f590f3ae42df",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84c343e3-22c1-4640-bc95-77f23bf06e4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b3b18b-70d7-4d1d-a94c-af5c71616b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda56adb-dabe-41f3-96c3-333f07a797a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01915f4-81b1-4d31-bdec-03fb959c1872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3203cf1e-a53b-4630-9b92-04ee6c2677fb",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cd2825-8895-4c31-8fdb-ec7fb34f09c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddd8ad22-ec59-49ac-8b6e-ca80958fee6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3cf1c0-5744-422f-b8bf-1917490a0b74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e309777a-8865-4ff8-8932-1db0324549db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a732e24-2cb4-431a-8084-3128b2e0a80d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff8358a-ec19-4e92-afb4-024afac520d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7bcf94-cc9a-4a6d-9418-4ff9435da798"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1409771e-8539-47e0-a254-baad0508fe1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d51e33f-0970-49ca-9aa3-a3de251a3878"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663dc2e5-3724-4b4c-897d-0c47d0f4f4ec",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2f814c-9140-4a2d-b353-da751744ba89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10c7a82d-d5a3-4c34-855f-121ce4cd8caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3c96be-011f-4043-a821-fa2a0ff8923e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07527713-08ce-4d8c-9b17-b36011eb8dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5b9688-1630-4c5c-a937-36b9206cd446",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d818e84a-f09e-4793-8ab7-1fa948d816bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf787d35-667b-4e5a-8318-d325db4c19c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5954086-5e4d-4724-9639-c02789455de7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f05aec-b3d7-4f90-b860-02495240a35f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3937798-1a1e-42ad-97db-f2076c1e4b11",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf9f17bb-749a-4e90-8399-4fa82c683829",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5721a399-5eb7-40db-a126-23c6f94cfa01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0d940ba-0323-4e80-b5de-69ebe73b238c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "584f9fbf-b350-43c2-a5c2-351177d0df7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38648ba4-c324-422c-8487-2b4a1080f6ac",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab76bd5-404b-4164-a1b7-b02cf8bf8b11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d69dfee-eeb4-49d9-8946-d9d78e72a84d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63df0ecb-8b62-4c77-9941-5c5f584d52b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f797c260-16c5-4f36-b8de-650a7c993d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b57849-4fbf-4d06-8d8c-74e3fea9c14e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1af711-7be6-403e-8d25-0d74c26d24e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "adc0ad8f-626e-4467-9139-1f6bce180ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "294d5453-7a14-4b28-a64a-29a9cd076880",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540d8f13-e5d0-4872-a6b8-78eb2b667e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f921d720-9121-45e9-ae56-940c2a9efe96",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eb0a58b-0523-4bb0-96bd-d738af214f8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70e7abbe-fe63-4667-be05-46f9f0d2b566"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "575f27a0-2e69-4c7e-beec-fdf4fc4ef6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a01a0d0e-a399-4040-99e8-3d7ae956fa70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31bc6e3-eb87-4e24-8a2b-1da642e4cdf5",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62cb0afd-5436-4a61-b029-35af3f1a76ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cf255ac-5c86-41d6-bcb5-5a3680161710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7f058d2-1252-4796-b528-081ea831b4bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2aafcc2-cb5d-4452-9ef4-2de89ada5ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0240f2-7b66-44d8-a395-90f4a07400b7",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2016e684-a57a-44f6-acb2-fe8f173a1a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26842c27-bfab-4aeb-9fcf-14b6b0afc842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f3d2913-fd40-4389-81ab-915dafabf1cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae924934-c409-4d3f-9619-0b9662ef9b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c617222f-e978-4899-ba7c-a2b6238d5026",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3769670-5fb7-4263-9d68-8783e03dd714",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f047213b-05f6-48b9-b653-2516eb92973d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37339146-b71a-40ef-b05c-e3906f7c5cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529cbb1c-9d4c-4ae9-b2d5-ef0ff5083cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7613b89-2a75-4341-b714-81db73c5c97e",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "935631f8-cf98-482d-ac35-6442d7c3ecf7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02367948-077f-4157-b497-390a4c8cd186"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c27df6bf-14ea-4daa-8db0-500b879d5479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99edcfde-670d-4ba6-acf9-18d5726bfa69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d70857c3-9c26-4a15-9713-757c7a0c1fcb",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec12eec8-03bf-4027-b886-5bef9f960557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9a9605d-d6dd-4269-9e55-408dac53ca95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc7a5f0d-8fec-479e-94d4-6fca3d9671ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a6bb88-8b97-47ad-8656-709d5f4920db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9cba41b-919d-4b9d-b80c-5ea258eaee33",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abe1425-3d98-4c69-bb7a-7fd69aa302af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9578a200-c96a-48e2-9080-c01eab5e2386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2b9b18-13f9-4ff5-a7df-a77155d22086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5587300-23b9-45b4-90b0-eab370ee5675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b97e9d26-bcbc-4c83-9dfe-696dc86aba15",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25d46ff-2210-4ca6-b61e-603a2f495501",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e59dc2fe-1119-4406-b7bf-587ffd37e704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d2c4de-486a-49e8-baa3-034444bd92bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374e72cb-afb8-4c22-abbe-c846ce03030d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8cd4fd-aa3b-497d-bb19-698d273fde02",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e82b6431-0fe3-4f34-9dba-5e91fd02d1bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d726d275-bc86-4894-9654-9751e53481d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6115990f-9654-4e06-aff6-1402927cbd77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831ee176-94a6-481b-a322-dc48c6866f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b971463e-bba4-49cb-9639-3a3f932b1b1e",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ca682d-51d3-485f-b929-a707e46c6de1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcab342e-451d-4385-b76b-75bbdf53f613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ab46820-cd1b-469a-accb-2da9cdcdf551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a88f235-69c9-494c-8cd0-8deb173a125b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edb8b9d9-e3f8-4b95-9cfb-b9733a9d9862",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c0287db-050a-4500-8169-53dc8c49bb66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f15dfb8-d96c-437c-8ccf-65415bd2bc42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a099c2b-2bd5-4851-91b2-8dcc26e580d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9f155b1-2a13-426f-a31c-6ee1c2201465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f993a16-3b8f-4517-9aae-2628a0cfe106",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201d8c3a-bd1f-4438-a455-75e78176b4c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5b2ad75-c3d0-40ce-9567-c29dfb98bd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5103c56-0170-4621-9b8e-9f2494622282",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69c5c68b-bd51-46b2-9f9d-577c94c52922"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc45de39-af76-445a-9b41-d5a215f9b338",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf13c6d-6567-431f-9d37-64483eeb7f7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "03d51361-b80b-4447-ab3e-51c04ff69159"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "285f49a1-6c8f-4dc2-9113-b5d589ba3f84",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cfe270e-2100-40fa-a4a1-815df74e7a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71da343-a30b-4c86-adcf-471d58fd177e",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49fe854-6f95-4690-961d-ca43c8f7d7c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84f93597-03ae-4bc9-a3a8-87457411f6bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c9035a-cbe0-485c-8e33-77525a680fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6aa91e42-f6eb-47d4-bfc9-75ef72dd4a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c79c78-546a-4ab4-9b7d-2cfc80d34d7f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b4c78d1-d5f1-4194-86dd-a2e4718d01dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72835bfe-f878-4f27-950b-9f96c6830844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb551e7d-f19e-44d4-9a0f-6b4a5224d7b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08773a67-2cbd-45af-ac59-ecf2ad4e71a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64a0eb45-d132-4428-ac9d-66b3c34e3f17",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2252b6e-7546-4be8-94b0-3f3193c85163",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "570218f2-20d3-423c-96dd-83f6d64a9265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02f59c7-7ff5-4a3d-a08c-082b10ad3fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1cc6246-0b62-4593-8346-8c311bd18238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803d593e-fcb8-4425-bcd4-0a7883b17312",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cb3ae7-16d6-4f14-bbb0-4f6b1ca6cd17",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec23ad22-74db-4693-a249-5ac3042530c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f637172-10da-4d4d-b640-bd521c3f74ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efee3f83-10bd-47af-b7de-65ae3a61d136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58906cf-7bf3-4893-8e66-d7a403d6c397",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a47342-a8c4-4f4b-96c6-263e506bfcfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4759ca46-5abd-4d3a-88c9-f32d01681622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f217b548-68b4-4df2-bb8b-26862c183e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9cfef3b-073a-4eff-ad1d-c75c5416dcac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd893bb-eb30-4ec7-a77d-165e6f12d3a3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c53388e-01bd-47d9-80e0-7b5535f93f93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e16bc43e-af5f-402a-8bbe-78eebc9a7dea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2165e2c-f976-435a-89e2-14183a8f5168",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e86f8b5-7def-4553-9f58-3df03df72b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1526a7-d093-4be3-b82c-2fd4e9079e76",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0892f91c-4f43-4cae-b4ac-005aed9d7282",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca48127-d073-4bc6-9949-66cd90348573"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1884c950-2281-4d45-8972-d7bc699d716d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9d3c3b9-d2d0-469b-b2e5-bb983b8167d4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebdc5621-35d1-46fd-bef7-bcb2dfaadc90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c92d14c-f305-42ee-99b7-7bae216abee9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "49fbefc0-09c2-4bef-b4a4-c2b581b70c40",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b2eaf10b-90d3-4735-abc8-1a7bbae77c94"
                    }
                  }
                ]
              },
              {
                "id": "bcce1393-bbd7-4625-a737-61a9626f5a2a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d812a9b4-19a9-4a76-9757-53239ff8f2e1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d055c6e0-3ec2-4288-800e-f1c1588365d7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "68d15b20-5388-49a5-9f97-3365f7c0459a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c2d6bd-88a8-422a-ba15-c7a0dce697a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46b2fd69-2d61-4b5e-a36d-012985432d46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0bb1bb6-e7ba-439f-b9b7-4b5c44266d9a",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b756fb-2e16-43a3-91f0-ee9988cec241",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0d8a02ab-f5e8-4989-8074-c6f66eb5ba24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "547b7ca3-f8a3-443d-8cd2-fbac87f3a462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f68997f4-f36d-4c46-89a8-9cfc7c9e8d7c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb9b2866-edd5-43b8-8690-da15d4e1b24d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ea39228-5d60-4a0d-a93f-0dded65b7ef7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fa81b5bb-f16e-48f8-8a14-9e389b575398",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f501697c-3f18-4ad7-aff9-9df12cba3640"
                    }
                  }
                ]
              },
              {
                "id": "d1c7fd78-84d8-4718-bb8b-a518d7fe34a9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "716a8caa-002f-4761-951e-13e3d8d03855",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62509f00-f6af-453b-9047-85659389ce3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1665e924-5169-447c-bd5b-fa477d2154cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c3f2d8f-5897-4429-9da1-58d698824f00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91fc432-5334-487c-9db5-c9828b504406"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "53380254-10df-4a26-b832-7f13bdfa1d89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea054a87-830c-40f1-906e-3cc1b5729e3d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc236edb-0943-4f3b-9342-123c7f3d6cd3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c994a96e-c6dc-423f-b1e0-263041a61c16"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb79ac0f-2aaf-4b80-a365-dbe3d9410330",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f4ec0e9f-9a6b-46cb-a521-609222e51466"
                    }
                  }
                ]
              },
              {
                "id": "4a7958ea-ea9f-4ff0-8eb6-8dd6bc672723",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c13219b-98a6-492a-935e-ac638e1bb81c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b9370cb1-a3bd-4c0e-9310-bc3af00ba82d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "143db6d7-d9dc-495a-9e6f-eb48683c99d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ff70c92-6cf4-4dac-9f19-a3af1acfd24c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c766b203-cca7-4f09-bbe2-07ab4ac3558f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "4403fe3b-8b43-498b-a59d-296997c50d70"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "209b00d0-cf70-4277-83d9-9b2642d11d61",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f3b69f17-61e2-4386-a824-64e096097a1e"
            }
          }
        ]
      },
      {
        "id": "fe2ad49b-4577-4f8a-80b3-b69edf108696",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "42e6d39c-e108-42d4-8249-b46d01164bd0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1f2d0b38-533d-4a19-bf75-29e7c046279a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6eb3bad0-7e27-463a-928f-bf6bb8dcdcb2",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191e6f96-3811-44c8-821e-0fe81bd2819e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b0023679-e3ae-480e-ab1c-255f1165d08f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9d9943f-0da8-4a30-b49f-94390a28b42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9809767-ddf7-43ce-9418-b1aa0dbaa546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6888915-a86d-46ec-b653-78cd003f0216",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b1fc7a-efbc-4f0b-9d9a-9f90aa9abf30",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df42a90c-5b4c-42bf-bc63-3c201205c31b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dced8ce4-96f3-4381-ab4e-3d20afb2afdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f6c9142-3b84-44f4-ab24-a20aae52f98d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5362b0e-119a-4980-8c4b-a5a5062f6545",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b4a7daa-4829-46e9-b6ec-6e59092b49a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8889045-1f88-4a7b-808d-b692dff75116",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "10c91228-3fb8-463e-b9a7-b0b82f0c5b12"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0831f803-ebf6-4f94-a4f7-d0a134ba8912",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aacf96ad-5692-40ac-97b4-0e844da75983"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "925a1397-2ced-4a88-bc66-25820bcea2c9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "429456d1-fd12-43ba-ae17-08ca0843fe9a"
            }
          }
        ]
      },
      {
        "id": "3cda3c9f-cdaa-451a-8c67-1c58c264ac31",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "e4f8536e-d508-45b6-b1e2-ebcd0258a067",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e03b9c57-f98a-415e-a17f-b9af8b829457",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2171d8be-ac8b-48a7-8f0f-9401bbab1199",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c987c0d2-f008-4b26-9545-7a1809fd1a22",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18a31c48-195d-4c0b-8648-a73591b00447"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079ff04b-1274-41b7-9da3-e78221bdd2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "904ddbea-e7dc-400d-baeb-4a71cc5b19dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8ab9c2-fee1-4ea3-8f03-82a36e08db90",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4226eb1d-4bb2-4606-8efa-e4bf4a1f6dce",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6039be1a-84c2-4542-a427-725596e9c610"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83bf985-3ebf-424e-8d89-a175112ce467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3d8e6f88-b489-415f-a6d1-e0368ec9a6dc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eabffa62-675c-4cc2-9efd-9aac706f86c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "82d24e93-be2a-4e47-9873-b6555c4d87bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0f2ae36b-e7f3-474f-b423-025ae4af2eb7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fde2e1c4-36b8-48f7-b5a5-e199d1e122bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "adc7afdf-3a58-4192-9432-7dc48f0baf78",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "90514252-2366-42ac-af2f-3090632b02d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c7a03cc-a440-44dc-bd2a-fe5a143ac0f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "51e36270-b8ca-4d55-8e21-3a7872995e2e"
            }
          }
        ]
      },
      {
        "id": "164c5291-ea6f-4254-9d58-172e25561486",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c9fc9c2a-c730-40bd-8704-f0fc70aa5b8c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d9838e7-c053-4b8f-a1e2-43ac4f42e907",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0a3214ee-dddd-4f47-8ef4-63071aee4f00",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb06bc07-d8cb-466d-922a-3dc7b5c93c4f",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53a4171f-8588-40f3-9e3c-7d6b00e31ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8f71cd-a212-4d68-a94e-74994797a837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa76f9c1-af98-4df3-a146-a0c2b8ff041a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d26b8ed-474c-44b9-b78a-02969e1152db",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a4e445-1c54-44b1-92f7-053fdaaa861c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e04426f4-0b9a-48ad-a77b-cac4f08009b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30916020-a61c-45a2-a6a6-3a49e805f70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0909ef16-bf7e-43e2-99d7-6035a65450c2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f187d143-fc89-48ca-8aa7-5e6507ed89ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "27681390-6afc-40c1-96e6-1a9d1510f409"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f654de1-d209-43af-bd33-9fd81d3b4dcd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f61787c4-30a8-4fc5-8c9a-d32df302b87f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c5d21f47-ed36-489d-bc15-900dfce0a7e1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a77967ee-ab39-47f6-a799-f4aa3d5d0cb2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcf80b85-b9f4-4b6c-ac7a-06210a22587c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "26bbb452-86b0-4b40-ac9e-cb414c5b6515"
            }
          }
        ]
      },
      {
        "id": "7eb326a8-2cdc-43be-ab48-4c089de76d63",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20b80900-2bc3-4998-b65c-fd06d9a7ab03",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "08da112b-09c4-4bcc-9820-a6fc1d564045",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "bafbf4ec-ee89-4d8c-9573-30e7b7f278ba",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dcb0122-83aa-48cd-9df1-96049ec25d94",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e97cbd98-3c09-4f12-9dbf-5db2d0328743",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 42.8,
      "responseMin": 18,
      "responseMax": 327,
      "responseSd": 36.20824385519029,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1679013577363,
      "completed": 1679013598900
    },
    "executions": [
      {
        "id": "d7c7770c-97c9-4c59-83b6-1be162c1aaa9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "11ba8107-fabc-44b7-94eb-9f08985e8547",
          "httpRequestId": "6a9f7287-91e4-4ca6-8494-f5fbbe62077d"
        },
        "item": {
          "id": "d7c7770c-97c9-4c59-83b6-1be162c1aaa9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5e8fc462-b993-4373-bd75-9f5a5f3de3a8",
          "status": "OK",
          "code": 200,
          "responseTime": 113,
          "responseSize": 0
        }
      },
      {
        "id": "ae3148ed-2f51-458c-83b0-b4fa64c53d14",
        "cursor": {
          "ref": "257c4de3-cd79-4a0c-8b26-48dd16dab22e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0a4f88f3-266d-4d2f-9d7b-7c92da1c4334"
        },
        "item": {
          "id": "ae3148ed-2f51-458c-83b0-b4fa64c53d14",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "0ff3c0c3-ab72-42a1-8d14-ccba73cf5812",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "2f69acc6-faeb-4c7d-ad9c-1cf062889b4e",
        "cursor": {
          "ref": "f9cac099-548a-41e9-b0c7-fcab35c265c2",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f4de3970-2254-43d7-94aa-d21dcee0f76e"
        },
        "item": {
          "id": "2f69acc6-faeb-4c7d-ad9c-1cf062889b4e",
          "name": "did_json"
        },
        "response": {
          "id": "de5d4a9f-011a-4fdc-a106-595db5ce3909",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81913698-4a84-41c0-9220-fac0b31f7331",
        "cursor": {
          "ref": "22b6d5c5-84d4-43f3-80b6-9f9c656faccb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ec4be15b-63e9-4b78-946f-c66605e1052e"
        },
        "item": {
          "id": "81913698-4a84-41c0-9220-fac0b31f7331",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6580f15-28a5-4aa2-afb5-bfd49c91a73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81913698-4a84-41c0-9220-fac0b31f7331",
        "cursor": {
          "ref": "22b6d5c5-84d4-43f3-80b6-9f9c656faccb",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ec4be15b-63e9-4b78-946f-c66605e1052e"
        },
        "item": {
          "id": "81913698-4a84-41c0-9220-fac0b31f7331",
          "name": "did:invalid"
        },
        "response": {
          "id": "c6580f15-28a5-4aa2-afb5-bfd49c91a73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d577b53c-93c5-4495-a089-f0548b3d9608",
        "cursor": {
          "ref": "3b0292aa-02bb-4899-9390-b64cd3a2dd2e",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "09f94bf1-aabc-4b51-843a-7cd78c459929"
        },
        "item": {
          "id": "d577b53c-93c5-4495-a089-f0548b3d9608",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "01daa496-1e46-4071-b15f-d9ae447b2e71",
          "status": "Not Found",
          "code": 404,
          "responseTime": 77,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2372c5f4-d92e-40fb-89da-ee3edd05cf86",
        "cursor": {
          "ref": "4553b5aa-426c-4991-8615-7a2bb6fc026f",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a9130485-c689-4381-a6ef-8c5f1c2dab69"
        },
        "item": {
          "id": "2372c5f4-d92e-40fb-89da-ee3edd05cf86",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "fb6f7090-618d-43ef-b752-e5007c35c399",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ffc4a0-9b2f-4c43-9e79-c1872dd24734",
        "cursor": {
          "ref": "ea39cb47-1abc-4d1f-9051-f5b1db5491e8",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "716a7ea7-7d11-4137-905d-b203e6279a93"
        },
        "item": {
          "id": "27ffc4a0-9b2f-4c43-9e79-c1872dd24734",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "95197d56-7f66-4aff-96b8-a7f4a043f22c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91136ad6-53a6-48d4-93a0-1d4f140f73ff",
        "cursor": {
          "ref": "08236a15-8785-4bb0-ae2a-e822f51ff996",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b863d0e6-7e88-4679-83bf-b6fb5d4d9454"
        },
        "item": {
          "id": "91136ad6-53a6-48d4-93a0-1d4f140f73ff",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bafbfa43-0b5d-4c49-9a97-096e7e959275",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91136ad6-53a6-48d4-93a0-1d4f140f73ff",
        "cursor": {
          "ref": "08236a15-8785-4bb0-ae2a-e822f51ff996",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "b863d0e6-7e88-4679-83bf-b6fb5d4d9454"
        },
        "item": {
          "id": "91136ad6-53a6-48d4-93a0-1d4f140f73ff",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "bafbfa43-0b5d-4c49-9a97-096e7e959275",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1efb02b0-67ee-480f-a196-04ce587d820a",
        "cursor": {
          "ref": "33c5fffe-8965-4301-961e-6535665c1418",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "053f4fe8-fd61-4881-b151-2f4795cdaa06"
        },
        "item": {
          "id": "1efb02b0-67ee-480f-a196-04ce587d820a",
          "name": "identifiers"
        },
        "response": {
          "id": "1c7b31c9-d74d-474c-9948-43e5a6a24f0f",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc02277c-306a-4fa7-b1b6-9177d7bbfcb0",
        "cursor": {
          "ref": "3b413a4f-05cc-4759-84c1-6bcff028017a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1904f50d-cafd-40fa-901e-975d7b345c52"
        },
        "item": {
          "id": "dc02277c-306a-4fa7-b1b6-9177d7bbfcb0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad9cdcf5-9519-462a-9c21-c2baa32411b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc02277c-306a-4fa7-b1b6-9177d7bbfcb0",
        "cursor": {
          "ref": "3b413a4f-05cc-4759-84c1-6bcff028017a",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1904f50d-cafd-40fa-901e-975d7b345c52"
        },
        "item": {
          "id": "dc02277c-306a-4fa7-b1b6-9177d7bbfcb0",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ad9cdcf5-9519-462a-9c21-c2baa32411b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf1d32d9-e009-4248-a24a-db6a1f71a814",
        "cursor": {
          "ref": "eb9292cc-b282-4f3e-ad59-6cd279a32c7d",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c4778a8d-7ac1-4be3-85c4-2bdfa81863ec"
        },
        "item": {
          "id": "cf1d32d9-e009-4248-a24a-db6a1f71a814",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "436eca46-f64c-4276-b936-1d5842f264b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8ea1115-0db3-432f-9434-fe7ad26c0717",
        "cursor": {
          "ref": "01de81a0-c518-4d9e-8813-61c9af645055",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "86e4c032-73e1-4ed9-b6ab-a9dc52a3b7b9"
        },
        "item": {
          "id": "d8ea1115-0db3-432f-9434-fe7ad26c0717",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9703d95c-55ac-462a-aca4-624053c25690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bce1634-78c7-4b05-bab9-e7e1596ccea6",
        "cursor": {
          "ref": "d13fe850-dab1-4338-a521-59918adfffa5",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e89980a7-8a41-476e-adf3-43df96d887d1"
        },
        "item": {
          "id": "1bce1634-78c7-4b05-bab9-e7e1596ccea6",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e26d6240-fdb0-4384-8c83-6a1298689ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64258895-993a-4d89-b737-1ffe6d1b0b18",
        "cursor": {
          "ref": "4223f795-852b-409f-b2ce-1335f8c58bce",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "793d2798-7281-4643-9995-41449416c6ea"
        },
        "item": {
          "id": "64258895-993a-4d89-b737-1ffe6d1b0b18",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1889e9b9-d2d9-4675-8b7b-eb2865a0bb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "541ced0d-8e4f-4654-9bf6-9fc1c5fb0797",
        "cursor": {
          "ref": "39f9c6c8-a205-4232-bce8-bac29d565dab",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b52aeec3-ff1d-4ebd-92d3-96101116ee72"
        },
        "item": {
          "id": "541ced0d-8e4f-4654-9bf6-9fc1c5fb0797",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d810158c-dd14-4063-b658-a95c71896264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338300bb-3c3c-42d6-afcf-fdc73e84b959",
        "cursor": {
          "ref": "289d28cd-aaaa-4fdf-9631-1000b65fc304",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5e9a4250-4011-4495-942b-3067951e2440"
        },
        "item": {
          "id": "338300bb-3c3c-42d6-afcf-fdc73e84b959",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "cbe4ac62-b96a-4a21-a3e5-666a3af18082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98a03691-483a-4095-b3e9-48d03e6f71ed",
        "cursor": {
          "ref": "3952648a-2d09-4a66-9795-ca03e60bdfa8",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "0a33d595-dfd8-4870-80b9-98288d1106f1"
        },
        "item": {
          "id": "98a03691-483a-4095-b3e9-48d03e6f71ed",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bf8c0780-84c3-49ad-a2da-487880222337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2839f4eb-09ac-431b-95d2-8d1f2abc7b16",
        "cursor": {
          "ref": "a49b654e-c55f-45bc-beab-7318c3a349ce",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "91c0e1ee-3911-4126-9744-15e2257ece89"
        },
        "item": {
          "id": "2839f4eb-09ac-431b-95d2-8d1f2abc7b16",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "03317dfb-ec52-4c0e-8ae5-fb4325781d32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b05bc08-f915-4e8a-907d-bdc6a67bac4a",
        "cursor": {
          "ref": "bbf929b3-a752-4140-b5e5-e2b9d57cb6c8",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0cf9cb90-3138-4554-9ba3-10c422909dec"
        },
        "item": {
          "id": "8b05bc08-f915-4e8a-907d-bdc6a67bac4a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "6708795c-8a91-4ac1-bead-7c958c3da4da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c79aece1-dee3-4eab-aba0-e5e8998ac470",
        "cursor": {
          "ref": "69475307-9d89-46a2-899c-375ed743b7f6",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "97b9c6ca-a076-4ef8-a570-a6e1fb227a55"
        },
        "item": {
          "id": "c79aece1-dee3-4eab-aba0-e5e8998ac470",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "99dc4a90-c469-44e3-bd02-b7ae28c3a483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cbd97c-22e4-471e-ba69-566e8a5b0a47",
        "cursor": {
          "ref": "a467d86b-565c-4094-a3ca-a0a64e526cfc",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "250f1c37-b448-4542-8649-9c03c2b38e97"
        },
        "item": {
          "id": "56cbd97c-22e4-471e-ba69-566e8a5b0a47",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b166ae2c-f0a2-4fcd-b850-a5e8a7d66609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd819946-6b9c-448d-b6f2-056e82051227",
        "cursor": {
          "ref": "bad941db-7592-4693-9f21-f49b526e243d",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "f6de5f79-5aca-4ad0-9ea1-e2ef16a55594"
        },
        "item": {
          "id": "cd819946-6b9c-448d-b6f2-056e82051227",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ab7c8f0f-eb52-430d-962d-999dd90695b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfe1a61-350b-4484-8436-052029037478",
        "cursor": {
          "ref": "7bbf663c-c50d-476d-afa0-2a5f3e674272",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dd231bf1-4366-47f4-a273-c353fb56a1b8"
        },
        "item": {
          "id": "3cfe1a61-350b-4484-8436-052029037478",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "95456553-168b-4681-bf67-12aa268ad798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "293fb344-e3dc-4cdc-bac8-ecdbf0e69d1c",
        "cursor": {
          "ref": "993f8549-9fed-4e33-8f14-cec794ba4ff4",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "fffb062d-5084-4f4e-bfcf-8c0b8e305b33"
        },
        "item": {
          "id": "293fb344-e3dc-4cdc-bac8-ecdbf0e69d1c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "608a82d9-14c5-41da-9bd6-719cda7b0861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9625b2c6-aec9-4580-b6a5-074b6dd2de82",
        "cursor": {
          "ref": "1925421e-92ff-4e51-bbe9-5358670f6f43",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "a640a476-750e-40e0-8c64-4c8e0a044e34"
        },
        "item": {
          "id": "9625b2c6-aec9-4580-b6a5-074b6dd2de82",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cff4e79c-8de2-4899-a52e-fdce5f6082ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737ea63c-1a4b-4300-96d2-ca34508f6d3c",
        "cursor": {
          "ref": "10b02842-b27d-4fff-8ea4-0eea3a687ffc",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "699f2c40-5c84-49eb-94b5-a034e87b8e0f"
        },
        "item": {
          "id": "737ea63c-1a4b-4300-96d2-ca34508f6d3c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "3ee99995-c199-43e7-873a-85629c696af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d587d48-7819-4734-8287-068b847de8db",
        "cursor": {
          "ref": "9e0e57ca-1e97-464b-a45d-b705b9d375c1",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "7b993826-af7e-456a-8137-11980902ea74"
        },
        "item": {
          "id": "3d587d48-7819-4734-8287-068b847de8db",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "3ccd98d5-10e8-448d-a938-dcc28adac1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a963a943-e895-422f-a3cf-dca2871d8ddd",
        "cursor": {
          "ref": "80a252f9-f25f-4120-90c4-736cd1772547",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ecf6c5f7-0000-4215-a326-5abb3ec0af13"
        },
        "item": {
          "id": "a963a943-e895-422f-a3cf-dca2871d8ddd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "264d23b5-c4de-4dc6-a532-7615a2285fac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d00d104-507a-4876-85af-46a2045e8365",
        "cursor": {
          "ref": "221800b1-1505-4fd8-88d4-ecf7869524b4",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "20527948-53ef-4939-add0-700cb27ad390"
        },
        "item": {
          "id": "1d00d104-507a-4876-85af-46a2045e8365",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "56573cdb-021e-46d6-9e0c-6e2da5489cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66bf34de-1ccd-4e56-9376-345d195d66d6",
        "cursor": {
          "ref": "ba70f8f8-fa77-41a2-b4b2-0381b6b4a2a8",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "24b5b222-ed86-4bac-a89e-97c539a5a9f2"
        },
        "item": {
          "id": "66bf34de-1ccd-4e56-9376-345d195d66d6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0664744d-984e-46ee-a6ed-b42b3aed5e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0764bf-4354-40c6-8b86-c565fc2e1cf5",
        "cursor": {
          "ref": "8b3a9b4e-c9c6-4b52-81ee-4be07ba6a7e5",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3119620e-26a1-42c1-9213-c843ac2c9194"
        },
        "item": {
          "id": "8b0764bf-4354-40c6-8b86-c565fc2e1cf5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "8b891d4e-afd9-4d0e-8781-90cc667835d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f5dbea1-f52a-4814-9486-4829fc8e1ace",
        "cursor": {
          "ref": "0056c979-a317-4450-a352-a799a10fde31",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "763dbbbb-988b-4ce5-8172-a3143f32ac76"
        },
        "item": {
          "id": "9f5dbea1-f52a-4814-9486-4829fc8e1ace",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "06bb3f51-8ce5-403b-8f89-9efd9ec71411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1e00cf-9799-41a9-8275-fc6e7ca51ec9",
        "cursor": {
          "ref": "c19ac26c-6263-4d9e-bda0-9edc4d29127e",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "753096dd-f369-471a-8f70-5d30e4a4b65c"
        },
        "item": {
          "id": "eb1e00cf-9799-41a9-8275-fc6e7ca51ec9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e2ac2378-a28e-437e-a62f-78f7acfdd1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b089b2e-c5e6-4135-bd4b-e3c57033f568",
        "cursor": {
          "ref": "bcb4261a-e58d-4c7c-9262-fcfc2854518f",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f3c2a694-a321-400e-93b6-858ddb3a11dc"
        },
        "item": {
          "id": "7b089b2e-c5e6-4135-bd4b-e3c57033f568",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "56e63f9a-d75a-4137-ad8e-918a7b75ec17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a8b386f-e73b-401f-b877-ac58736624bb",
        "cursor": {
          "ref": "280d5088-581d-4d14-8614-8b6d8ceaafdd",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4d02ea57-0bff-4743-88d6-e903c12fd638"
        },
        "item": {
          "id": "6a8b386f-e73b-401f-b877-ac58736624bb",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "394ed5f1-c13e-49c3-9f6f-73d7d99c5d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c574b5-4f28-43bd-8e49-12f2ba1bda93",
        "cursor": {
          "ref": "50922ff7-52ee-4e1a-9537-446fa6898805",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "acd2773d-c05c-49c7-88e6-f1bee0fc23b6"
        },
        "item": {
          "id": "35c574b5-4f28-43bd-8e49-12f2ba1bda93",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "7d929661-b1df-4c1e-a1ec-e303941827f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567b826a-4509-44c3-adb5-225b8e12b188",
        "cursor": {
          "ref": "c742173a-6704-491a-b3f0-c5beb5260126",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d3e04edb-988f-4066-a169-b2c0ce0de2c7"
        },
        "item": {
          "id": "567b826a-4509-44c3-adb5-225b8e12b188",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "41b1e311-52d6-460e-b29a-af5aaf968c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365a0d21-9469-4107-abd5-50a73ba1c1f5",
        "cursor": {
          "ref": "f2817a0f-5e6e-4e6e-bc20-42c2e83a718d",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "4af452cb-a5a0-4a2d-802d-5313afc152a1"
        },
        "item": {
          "id": "365a0d21-9469-4107-abd5-50a73ba1c1f5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "964bc4e1-ec15-4639-9517-48df5b1bb34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b194e1-c852-4d34-9d27-c717eb5c99cc",
        "cursor": {
          "ref": "af1b521e-15a8-4bb9-9a09-18f0265b60d1",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "01734428-faca-4f58-b97a-a37d33f855de"
        },
        "item": {
          "id": "c6b194e1-c852-4d34-9d27-c717eb5c99cc",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e9cc6461-9329-4a89-be63-657d4e55a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52813867-cb9d-4745-aac1-5e603a5f0708",
        "cursor": {
          "ref": "6b899793-5e20-430a-849d-c96a2a6a2e89",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "00250e26-f57e-49cf-9bc6-be320e830838"
        },
        "item": {
          "id": "52813867-cb9d-4745-aac1-5e603a5f0708",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "59191053-30c7-48b8-811c-25d4f6b89daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "849f292b-c41c-4aaa-baa6-e0cc65482eb0",
        "cursor": {
          "ref": "302a79ad-c412-4f83-a751-273262cdb397",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2760b334-1969-46e3-9434-f468c39145d1"
        },
        "item": {
          "id": "849f292b-c41c-4aaa-baa6-e0cc65482eb0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "611dbed3-30ee-4bfb-97ab-4a378f25037c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825cd2fc-bf1e-437c-9e76-de724f0ca758",
        "cursor": {
          "ref": "d8901ca5-076e-4b0e-8b2d-49b2690e20b4",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "80d0dd20-a807-4961-a404-fc8bdc288621"
        },
        "item": {
          "id": "825cd2fc-bf1e-437c-9e76-de724f0ca758",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a9c6a924-f717-4aec-8b41-9e5518581cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca73851c-ff7a-433b-9251-6a0670985fac",
        "cursor": {
          "ref": "229de50b-5664-459c-8ae6-713feccda1d3",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5bcb9931-4bd9-44c8-9fff-8ca54e53d317"
        },
        "item": {
          "id": "ca73851c-ff7a-433b-9251-6a0670985fac",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47d59033-d566-42ca-bd9f-849fa9725526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b22bcb-e27d-4bd4-aa0a-169dd290f62d",
        "cursor": {
          "ref": "8be39308-a242-4fb9-90e7-83d0fda0573d",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e9eb587d-bc40-4641-8dc8-2db0cc087124"
        },
        "item": {
          "id": "46b22bcb-e27d-4bd4-aa0a-169dd290f62d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ace45280-723b-46e3-aa30-114c86745ffd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8b27949-8601-4450-95de-fbaced1e627f",
        "cursor": {
          "ref": "47170336-59e2-4836-924e-516c59490732",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f2dab1fb-77a7-475a-9ae0-b35ea5a67d7a"
        },
        "item": {
          "id": "c8b27949-8601-4450-95de-fbaced1e627f",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "b56c81cf-07ee-46f7-88bf-31d7e24f3d42",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310701f1-2d76-408a-8f12-227fa602b005",
        "cursor": {
          "ref": "5e823f7d-07c9-447c-a4a3-e0f199591442",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f1ea7f43-adfe-41f4-b7e4-e836d151bbce"
        },
        "item": {
          "id": "310701f1-2d76-408a-8f12-227fa602b005",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "d5f70aa4-93d2-4cdf-a011-3fcd7e4dd5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9763446-5e01-47d4-b484-0e8f77414bb5",
        "cursor": {
          "ref": "829b0531-45b3-48b6-a9e1-0e719728691b",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "41a061a9-95ee-4fc9-9a14-1a6c85431364"
        },
        "item": {
          "id": "a9763446-5e01-47d4-b484-0e8f77414bb5",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ec6c7af3-da4c-4653-9901-42212e3be65e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dae214-438b-4519-8756-917766ad9463",
        "cursor": {
          "ref": "e8bf9993-0769-4057-a8ea-c82372a7be7e",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9430459c-132f-4140-bc8c-cc60d5d3bbe5"
        },
        "item": {
          "id": "14dae214-438b-4519-8756-917766ad9463",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3dcd3d76-8ddb-4000-87ee-5afee4d24d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929ec5da-d28e-4a06-842e-1f0917d6ae11",
        "cursor": {
          "ref": "fb402581-83a5-4e8f-9e39-3d455f434caa",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "145feffe-5c36-464a-9423-ecec24f9d60a"
        },
        "item": {
          "id": "929ec5da-d28e-4a06-842e-1f0917d6ae11",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "3a35c0b0-6458-41a0-b264-0ed68319348f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a131a8d5-289e-436b-a38e-d01ca0f64245",
        "cursor": {
          "ref": "0a7d89e0-e57a-4fd5-bb90-3b86998434e1",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "82d4a2df-142e-4675-b58a-e465a59af744"
        },
        "item": {
          "id": "a131a8d5-289e-436b-a38e-d01ca0f64245",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e1362f0a-70c6-4b27-b24c-e552be037c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e31bacfd-8b7c-4330-b81d-a9adc07f9a47",
        "cursor": {
          "ref": "6dba6de0-ff8f-4f89-b31f-f2bd5a9a00e4",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "651dce93-ae6a-4371-baaa-59966eef96f6"
        },
        "item": {
          "id": "e31bacfd-8b7c-4330-b81d-a9adc07f9a47",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "048601b4-d08e-4dac-b5f3-2bb68f2b8c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d57460c-2087-4921-b648-2115a60712ab",
        "cursor": {
          "ref": "b5c27ada-da4a-4d21-89aa-16a6786dc4cb",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4cfaf417-32c8-461e-8563-103b74d37a0e"
        },
        "item": {
          "id": "9d57460c-2087-4921-b648-2115a60712ab",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0478e61e-5d22-4a4c-a5c2-aa558b428e32",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 42,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb0d786-0762-4266-8971-3c914a7e1772",
        "cursor": {
          "ref": "413f1f40-f925-4488-a99b-10d18d556b85",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "28932030-1390-4719-a2fa-cfffb69beb82"
        },
        "item": {
          "id": "5fb0d786-0762-4266-8971-3c914a7e1772",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d8e63701-3f4d-4fc3-ad97-cb60270c6fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70e55f7-9e05-4923-ac1a-831eed12dd2d",
        "cursor": {
          "ref": "b87866d9-c2b3-418d-8ce2-0604350150f7",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e311881a-1960-4fdf-961a-b1166ccef9b7"
        },
        "item": {
          "id": "c70e55f7-9e05-4923-ac1a-831eed12dd2d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4ddc27b1-4f26-44c9-a391-f2e6c5ac125d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec4a972-51c6-4359-baa4-bce73b174f45",
        "cursor": {
          "ref": "770246cf-37f0-45b1-b08a-6315d87131d3",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b4f27aed-c635-4eaf-880e-4a37def05320"
        },
        "item": {
          "id": "5ec4a972-51c6-4359-baa4-bce73b174f45",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "76348edd-4d09-4f57-86bf-6eb68fe35b5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d55cd1f-600b-4433-987a-f43bf6ff4e0a",
        "cursor": {
          "ref": "424052cc-c62c-4362-bbeb-ee67441bc48a",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "75c44405-2936-4b1e-9481-6db6e0a00103"
        },
        "item": {
          "id": "0d55cd1f-600b-4433-987a-f43bf6ff4e0a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8b5d35eb-49db-44f1-8d61-3002c10780b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac407f95-a7da-4ac5-9632-f24959862592",
        "cursor": {
          "ref": "4843c0ef-1d18-44cf-8496-37603e73e1f8",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "b149418a-9a43-47c0-ac32-83ef5b17eeab"
        },
        "item": {
          "id": "ac407f95-a7da-4ac5-9632-f24959862592",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "46405c58-76e8-4d19-88ce-2550b5fcd047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965b3710-1372-497a-9c77-0f414012d10d",
        "cursor": {
          "ref": "18fe48b4-a8ab-428b-8447-c9fcb846341c",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9db7e557-52f3-4221-89ed-7263a3b3d273"
        },
        "item": {
          "id": "965b3710-1372-497a-9c77-0f414012d10d",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "1b9037f1-1a80-4264-b24a-50b842bf3785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dee89668-a129-4cb2-a910-405a13220051",
        "cursor": {
          "ref": "2bf4219f-149f-4f24-8e22-56c8534828d1",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8c7e08d4-9278-45c1-b8e3-e84e5613401b"
        },
        "item": {
          "id": "dee89668-a129-4cb2-a910-405a13220051",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "436d312a-d51b-4c46-8188-227f22a9dfe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdab2bb-a9b3-43aa-800c-728394fcb19a",
        "cursor": {
          "ref": "c7a761a9-cc26-4ba9-96bc-43d0559b71ec",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "fd0c8923-7dae-4ccc-bce7-d62af0b8674d"
        },
        "item": {
          "id": "2fdab2bb-a9b3-43aa-800c-728394fcb19a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "3a7763d1-6589-451c-8ebf-e800cd5106ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c8ef6c4-f479-4220-83ce-353141261c0a",
        "cursor": {
          "ref": "42ff3746-25ab-4a9a-a479-d8abeaba63e4",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "455fdde4-20ad-4755-98b0-17f717b15e0d"
        },
        "item": {
          "id": "2c8ef6c4-f479-4220-83ce-353141261c0a",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "9db77cd9-ccff-475a-858f-398800fa78d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cc825ee-e044-44d1-a181-cf6e688059fb",
        "cursor": {
          "ref": "6d93d5c5-2fc1-4db2-aadb-ab562cbf42b3",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "93e33b9d-bfce-40d7-84f9-4f49f18f46b5"
        },
        "item": {
          "id": "6cc825ee-e044-44d1-a181-cf6e688059fb",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0fc61adc-7033-4713-b54b-3714457e7cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "587df2ca-87b4-4d0c-a38e-4d9c7298a4a8",
        "cursor": {
          "ref": "a1d0a8bf-5be9-471f-a03f-8d0fcdc12ea6",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "bfbee3e1-c43b-43af-864b-c77236d9c753"
        },
        "item": {
          "id": "587df2ca-87b4-4d0c-a38e-4d9c7298a4a8",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "b6beb11b-aafa-4942-ae37-a672d0a4e1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbaf132-ed01-4b04-b41c-89b874bd669a",
        "cursor": {
          "ref": "3fda4090-8712-4259-b873-d4ede98f87bd",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b169b199-1ae3-4bbd-a331-bbae3422a22b"
        },
        "item": {
          "id": "1bbaf132-ed01-4b04-b41c-89b874bd669a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "25184fc4-87c3-4d62-8fa0-ed5d0d85e9bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3691b52b-9aa9-4501-8a37-6b3ba524a2d8",
        "cursor": {
          "ref": "724742e2-31de-4339-87a3-bae60f5cd8a9",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c210b1a8-6466-45d0-9bf2-b1252483d023"
        },
        "item": {
          "id": "3691b52b-9aa9-4501-8a37-6b3ba524a2d8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "5c845a16-50aa-4307-871e-343468953af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e57180ab-f3b6-4994-b9dc-e60a3ffeb66f",
        "cursor": {
          "ref": "95ad6f1f-0ccf-4dcd-99b3-8f770073860b",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "d9ad1895-d9a3-47df-a47b-180b93141a24"
        },
        "item": {
          "id": "e57180ab-f3b6-4994-b9dc-e60a3ffeb66f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a4ffba73-77a3-4778-b633-6f35c9070461",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8e3e821-a1fe-4610-9811-a9726a097e16",
        "cursor": {
          "ref": "40da9c40-ce4b-42b5-95a1-1b5fa92abf19",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "a593319e-d97c-4367-bcaa-1bfa0df62078"
        },
        "item": {
          "id": "a8e3e821-a1fe-4610-9811-a9726a097e16",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "99d4be06-0135-4179-bb0e-a847afe75005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8837115c-9bfa-4d86-9e59-79f69c950c5b",
        "cursor": {
          "ref": "bb84ab7b-8baa-4a0c-b60c-792f7e90ae0b",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cb88d672-3f73-475c-a961-7e855e7fcaa3"
        },
        "item": {
          "id": "8837115c-9bfa-4d86-9e59-79f69c950c5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "17aba449-0d59-4a0c-9069-7e5bc413cd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c91477b-57da-4dd7-ba08-1a0e7742de2f",
        "cursor": {
          "ref": "01c71ead-7680-4a86-979e-81880cce0ca8",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "35f71f8b-15c9-4228-b85c-e5203d2d44d5"
        },
        "item": {
          "id": "5c91477b-57da-4dd7-ba08-1a0e7742de2f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c704f34d-1883-401b-b10a-b9a6d26dc77a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4896778-5ef2-4c79-9f5b-c22e32eef585",
        "cursor": {
          "ref": "8c8ee003-c56f-4ea5-a5f0-3bf46b89c289",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ac42d4c1-7240-4056-8289-af18efec1b50"
        },
        "item": {
          "id": "c4896778-5ef2-4c79-9f5b-c22e32eef585",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c1ffc37c-546a-4882-a595-00dcb8f1265d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc00037-d466-4a73-8ad4-cfa981f5237a",
        "cursor": {
          "ref": "fa9834f9-be13-4268-9c87-21c44c330ecc",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "757c2914-2e4b-4019-95a2-470f070de0be"
        },
        "item": {
          "id": "ddc00037-d466-4a73-8ad4-cfa981f5237a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "fcc4c539-0169-4a0a-ab58-8a47437eb136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef88fb97-e4b0-40e4-8b1f-b905bd298f51",
        "cursor": {
          "ref": "a36c8b6b-6302-44e8-9183-7d2f21a1c288",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3da2951c-fd6c-460a-9fd1-ca54bba7cd0d"
        },
        "item": {
          "id": "ef88fb97-e4b0-40e4-8b1f-b905bd298f51",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "1d9a2bd7-908d-4a38-95a5-ce273c3d1967",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeb25ef-e813-4d8d-abb5-08a6b794ebe0",
        "cursor": {
          "ref": "a2efb53c-b2ed-4a7b-abfe-69398843184e",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "81214850-63a1-45b9-a98c-3331d7d25d08"
        },
        "item": {
          "id": "faeb25ef-e813-4d8d-abb5-08a6b794ebe0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cdb04b60-f148-4e77-a643-a3891dcb0507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84edac6-d0e4-447d-8461-2fe6cc88fa8a",
        "cursor": {
          "ref": "7de2234a-0cab-43de-8c1d-78184ec8d17a",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "acf0c492-49c4-49be-8c1e-9bd5d6862dce"
        },
        "item": {
          "id": "c84edac6-d0e4-447d-8461-2fe6cc88fa8a",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7546f499-2310-41b4-96bc-62276c3a5d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cc6de8c-d85f-4643-a1f8-a769e88b05e5",
        "cursor": {
          "ref": "6a252dbc-aeed-4855-9f2b-31acd5e45541",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c4c28fcc-8520-4638-b366-560c48c1f987"
        },
        "item": {
          "id": "5cc6de8c-d85f-4643-a1f8-a769e88b05e5",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "275258e8-5daf-4ee1-9502-3282d3d07e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e71f3c-b6ec-414c-b4e7-7d9024c56754",
        "cursor": {
          "ref": "b20bd767-be18-4cb4-8f94-bdbc4faed809",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "32b8dcbc-b4f4-493f-a3cb-4e2f182b7a4f"
        },
        "item": {
          "id": "f6e71f3c-b6ec-414c-b4e7-7d9024c56754",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "46a597e6-76d2-42d8-99c1-31e844133905",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0783e62e-630f-4f04-a471-a66d15e9dbdc",
        "cursor": {
          "ref": "f027cd71-81ea-4354-89e2-3b2ad3ba1fed",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "911841b2-3904-42e1-a8bd-b5c4e024e67b"
        },
        "item": {
          "id": "0783e62e-630f-4f04-a471-a66d15e9dbdc",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d2b5879e-c097-47f0-b9c8-3a7efaa1d3bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62067a0-7a9b-4d5f-8b72-d3cf4ba5626c",
        "cursor": {
          "ref": "f743f266-370f-4dcc-b211-729eba7f5135",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "8c1886fb-6866-410f-9b5b-13c2be68e893"
        },
        "item": {
          "id": "c62067a0-7a9b-4d5f-8b72-d3cf4ba5626c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "52a5dfe4-2fd7-42da-8db9-80f1835e9bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1860166b-90ca-49e8-9b6e-c447ac04c33c",
        "cursor": {
          "ref": "a5052c82-9237-43af-b4c1-68400bb39f75",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "c7dd17d1-5220-4aa9-a527-bf97498cf42a"
        },
        "item": {
          "id": "1860166b-90ca-49e8-9b6e-c447ac04c33c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "698ccbb7-2825-42c0-85da-291c614f932b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bc4d52-2244-4190-b92e-4c179c3b8aef",
        "cursor": {
          "ref": "81caf11d-397c-4cde-825b-968a1238b2d7",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "34cd7ddc-fbbd-4098-8b76-ee320c6a5ea8"
        },
        "item": {
          "id": "04bc4d52-2244-4190-b92e-4c179c3b8aef",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9dc5b814-9b49-4cee-9c77-5222ac32fdd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde6f63b-4eae-478a-91d0-20510a319709",
        "cursor": {
          "ref": "10e01ded-e5d9-4160-aa02-4521209c66f9",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c6ab2fc5-f337-434f-8e81-2d52be3d4c11"
        },
        "item": {
          "id": "fde6f63b-4eae-478a-91d0-20510a319709",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "3c84c7eb-f0e3-4b03-a5f9-a5c43a59b8b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e690f202-8d48-40d9-8919-b960a049c94b",
        "cursor": {
          "ref": "4952be55-80c8-4598-957e-181f10fd546e",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4212a79b-20f6-4f41-8f33-1aeba6df480e"
        },
        "item": {
          "id": "e690f202-8d48-40d9-8919-b960a049c94b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "620ca972-b299-49e2-a7b7-de9263f467ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e5f0bd7-eb6f-48e1-8ee0-9bd5fcb96f73",
        "cursor": {
          "ref": "8434d3b8-1a60-4f18-ac95-8dad1af6d8ff",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "64d78d38-52aa-41dd-afce-5ca3a5e100cd"
        },
        "item": {
          "id": "7e5f0bd7-eb6f-48e1-8ee0-9bd5fcb96f73",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "e7f6d6ea-c169-4994-87b9-d64e42b4cc7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41217cec-d002-443a-86d4-2c3c1517564b",
        "cursor": {
          "ref": "066c1af1-9152-489b-8c17-552fdb66f5ab",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "1e35a296-3363-4152-8a7e-d51204a6b93d"
        },
        "item": {
          "id": "41217cec-d002-443a-86d4-2c3c1517564b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "46730a6f-9019-4776-8c3b-43b0fa531694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb60800-de25-4095-a8d9-1db4ab44738e",
        "cursor": {
          "ref": "7b41468e-916c-46b3-be04-ac48948bcc92",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "a0dcaea2-8277-4141-a671-0ef54e6fb2d9"
        },
        "item": {
          "id": "7eb60800-de25-4095-a8d9-1db4ab44738e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "13287c4c-f02c-417f-bcab-ac6d05b9d0e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "446de32a-fb88-424c-bff5-dc58690d6cc5",
        "cursor": {
          "ref": "606a9b4b-070b-4a87-a5da-481f85ccedde",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "6bb5cb18-14d8-494a-bcf3-69963601ad47"
        },
        "item": {
          "id": "446de32a-fb88-424c-bff5-dc58690d6cc5",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2a5bb65a-202c-4692-bfbb-73a446674670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97175813-ef75-4d19-b45d-408d4cf26626",
        "cursor": {
          "ref": "02e34205-6d6b-4653-b089-4f3226c1f9dd",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "18e0680e-5921-4732-bf23-99d0ca261e1b"
        },
        "item": {
          "id": "97175813-ef75-4d19-b45d-408d4cf26626",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "c828a6fb-9608-4c30-87f9-342db9f7a2ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e9bff87-4022-43d5-be13-0bdb6174ae95",
        "cursor": {
          "ref": "3f262326-3d28-49e1-a03c-19b478e6a174",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "3840c913-cf31-469b-8555-9a8a39230d97"
        },
        "item": {
          "id": "3e9bff87-4022-43d5-be13-0bdb6174ae95",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "ff3bc647-abd1-4dc2-916d-2a224617f1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe1194d-dbc9-4bf0-974d-c674fb304cc6",
        "cursor": {
          "ref": "b248db84-a46d-40bc-9b5e-03df63988d76",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "87d9c68e-dca4-48fd-97ca-fe80ffdd6030"
        },
        "item": {
          "id": "cfe1194d-dbc9-4bf0-974d-c674fb304cc6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "b5936f3c-a104-4513-a2d3-abc24ae6a723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e4b027a-7521-4a7a-955e-f9931621e424",
        "cursor": {
          "ref": "f9288d9e-189e-4dbd-884e-9df3e04e565c",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "8dcbc970-247e-4dec-81a5-35e2008868bc"
        },
        "item": {
          "id": "7e4b027a-7521-4a7a-955e-f9931621e424",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "c0252db9-834e-498e-96cc-a48c5558cb1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "353b197b-ccaa-439e-9738-77dbf216061e",
        "cursor": {
          "ref": "20eeb900-b6b3-4a9c-9d42-e0aa9281442a",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "7a0516ed-7c95-41bc-aaf0-623079e2f67f"
        },
        "item": {
          "id": "353b197b-ccaa-439e-9738-77dbf216061e",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e691c110-89a3-4755-8747-820f18404026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc70ba6-2513-4e84-bd80-b2ce5c2f90f1",
        "cursor": {
          "ref": "852b9717-9c23-4a70-917b-b0418c78b0e9",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "10832865-28c6-474d-bbdf-422545bfa535"
        },
        "item": {
          "id": "fdc70ba6-2513-4e84-bd80-b2ce5c2f90f1",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a21cc7f0-5f36-4941-ba37-3fc0215354da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88493f96-6b7b-48b7-99aa-4f6d291a8ac1",
        "cursor": {
          "ref": "723e84cb-b863-40cb-9a2d-2aa1e9a66565",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b7c5f2fe-ce5c-4a4c-8d78-6b293c52ad91"
        },
        "item": {
          "id": "88493f96-6b7b-48b7-99aa-4f6d291a8ac1",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2d334fa4-a6fd-448a-b6c0-72c66ca4ab34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9cf1b4a-748b-44df-93bc-6ee055b7cdde",
        "cursor": {
          "ref": "a53cb910-461c-4378-943b-11b306c31056",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1342755d-00db-4b81-8ed2-640b8c93be92"
        },
        "item": {
          "id": "f9cf1b4a-748b-44df-93bc-6ee055b7cdde",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c60f9875-3258-4118-b042-dd65e353b656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55229d85-6bd0-4e3c-9bd2-bef5a5f912fe",
        "cursor": {
          "ref": "cf82ce45-d180-4b7d-bd92-dde23dbc1f2b",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "872de9c4-68f7-4ae0-b528-7608209caddd"
        },
        "item": {
          "id": "55229d85-6bd0-4e3c-9bd2-bef5a5f912fe",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "8fd2489c-0b13-41c0-bbd2-91c2163a5c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b133d802-2945-4512-8001-881500f3a0f6",
        "cursor": {
          "ref": "6cf41c8b-4454-485c-8862-e8eb353f487a",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "1027644e-c1c2-4947-bf90-91e7dee827f1"
        },
        "item": {
          "id": "b133d802-2945-4512-8001-881500f3a0f6",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "bcb3e54b-b423-453d-9b3e-c60750dff2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb27f0f0-8468-4846-88b0-5f100a0ebbd0",
        "cursor": {
          "ref": "4a893ae1-b1a8-4a67-b23c-b56297764837",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "0debcd4f-54be-4e03-a65d-ba20d902ded0"
        },
        "item": {
          "id": "bb27f0f0-8468-4846-88b0-5f100a0ebbd0",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "206510e0-bb45-4b0b-9396-a9c955b21cd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a0e415-65fc-45d2-9829-f5ab8dbd9259",
        "cursor": {
          "ref": "ef16d7c3-90d0-4e35-920d-0a8f96f807df",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "583b3222-ffe1-487e-81fe-dda62f5afcab"
        },
        "item": {
          "id": "40a0e415-65fc-45d2-9829-f5ab8dbd9259",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f903b405-09cd-45e8-8fcb-318f03257fb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47d24c5-37c7-466d-8d8c-85b370a74253",
        "cursor": {
          "ref": "0f94c994-b6cc-4222-b0fa-4b0fb5e78859",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "c4150cde-2bff-45fc-b3f0-2903ce18498b"
        },
        "item": {
          "id": "e47d24c5-37c7-466d-8d8c-85b370a74253",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "b3a8ded7-5678-4340-9959-0fd6f8bb56bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31c0af45-5873-4e04-a46b-b544c06eb845",
        "cursor": {
          "ref": "ce99a157-78d5-4aef-a21f-beedb8db7430",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "653e8979-75a8-4614-95a2-99720d2a0670"
        },
        "item": {
          "id": "31c0af45-5873-4e04-a46b-b544c06eb845",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "42e780be-4e3b-44d0-a4e8-516f71fd3327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4f75a3-b16a-4797-9670-6cc28cd53250",
        "cursor": {
          "ref": "deecb778-c4bd-4859-983c-cccb03e4943d",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "18f8d43a-7ac6-4795-9580-67a55c904658"
        },
        "item": {
          "id": "2d4f75a3-b16a-4797-9670-6cc28cd53250",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f021d2e5-db3d-40b8-afca-cf876d89473e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcba15a-4788-41d5-94b0-265e8be75263",
        "cursor": {
          "ref": "23d104a9-e0fc-4e54-ab1a-6306f4f80f0e",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "01ad5e5d-fb88-4ed0-bd9c-45e248264213"
        },
        "item": {
          "id": "5bcba15a-4788-41d5-94b0-265e8be75263",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "17494bb4-0058-431e-82d6-9754d21c3104",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad40e5b-e87c-43fc-8480-33697972ded7",
        "cursor": {
          "ref": "4577dc2b-e67e-4791-9f16-39cd9731d816",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4bf693d2-6f85-42ae-aa0f-a7fdd5343949"
        },
        "item": {
          "id": "bad40e5b-e87c-43fc-8480-33697972ded7",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f0baa877-8b60-4da7-82c2-f96827c39af2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 161,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7453c6fc-ca84-48bb-a132-9aa796dbeb8b",
        "cursor": {
          "ref": "7fa013ef-e16d-4e2d-a6c0-6128b07aa19b",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6f967190-cdf8-4cd6-814b-a109cc72a4c3"
        },
        "item": {
          "id": "7453c6fc-ca84-48bb-a132-9aa796dbeb8b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "dcf39837-da8b-4ddb-8b7d-d44dba7e3e4e",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "082fbdc3-2ad0-4702-a901-e363d26b8437",
        "cursor": {
          "ref": "49125f76-7c8b-47f0-9b08-d925f5f4e622",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "d3656ea6-e653-458b-8366-b2756333661a"
        },
        "item": {
          "id": "082fbdc3-2ad0-4702-a901-e363d26b8437",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "63e364ea-437e-4fbf-8921-13f402b87a99",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 902
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54df3a1-b5eb-4fcc-9f64-374179086b43",
        "cursor": {
          "ref": "3c11a548-e644-4ae7-accc-c5cee1d2ad6e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "45280de0-59c9-4dd1-8d1b-9d1671b08e0c"
        },
        "item": {
          "id": "b54df3a1-b5eb-4fcc-9f64-374179086b43",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fca233d4-c036-453c-be5f-86427b627af0",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9dcaf4-91ee-4e03-9cdc-6a8672e10224",
        "cursor": {
          "ref": "3245fc4d-690e-4eb8-822d-9a8b5e29d822",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ca00e762-f9e7-4f07-a24b-6fa13c7afdf9"
        },
        "item": {
          "id": "ec9dcaf4-91ee-4e03-9cdc-6a8672e10224",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "e9db46c0-5556-49dc-8c25-f2dfed600de6",
          "status": "Created",
          "code": 201,
          "responseTime": 56,
          "responseSize": 926
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c46866e-3a9b-4538-9cd7-1ded47ca490b",
        "cursor": {
          "ref": "0d6b5b08-ed5d-4725-9d16-f346da7de710",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e2012350-9c7c-49a6-9d79-bf1620ebd071"
        },
        "item": {
          "id": "0c46866e-3a9b-4538-9cd7-1ded47ca490b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ba065fb0-42ae-43df-a15c-277ff388710e",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 894
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b52e8883-edb3-44aa-84c7-04dd1fe6866e",
        "cursor": {
          "ref": "1b8319da-84ee-4dff-8097-868fc4354561",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9bfb7988-d6b0-4cb3-99ad-acdb3b9abcdc"
        },
        "item": {
          "id": "b52e8883-edb3-44aa-84c7-04dd1fe6866e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "56c91af6-7872-404d-a4ef-e387ae67b982",
          "status": "Created",
          "code": 201,
          "responseTime": 54,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430a2b77-c383-41e7-b823-dfe216fdba77",
        "cursor": {
          "ref": "3c247ce6-cfeb-4bae-8db0-8d6139800d30",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ba82f364-7cbb-46de-9652-ba2468b21fe0"
        },
        "item": {
          "id": "430a2b77-c383-41e7-b823-dfe216fdba77",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ad77bbe-bde8-4961-aa75-a537cb6b87eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430a2b77-c383-41e7-b823-dfe216fdba77",
        "cursor": {
          "ref": "3c247ce6-cfeb-4bae-8db0-8d6139800d30",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ba82f364-7cbb-46de-9652-ba2468b21fe0"
        },
        "item": {
          "id": "430a2b77-c383-41e7-b823-dfe216fdba77",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "3ad77bbe-bde8-4961-aa75-a537cb6b87eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c2adb9-c609-4fbf-960e-ad528c01173a",
        "cursor": {
          "ref": "8b2a9e07-2b36-4cc4-819b-cceaf5a3a9f5",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "bddeb866-fcf2-4965-857e-451d438c9ed7"
        },
        "item": {
          "id": "a0c2adb9-c609-4fbf-960e-ad528c01173a",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "36ef41cd-a77b-42b7-ab29-8284d6c01b15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "662cf3b0-e965-48ee-bc08-0e7ddf3190eb",
        "cursor": {
          "ref": "6aeaafce-2ef5-4ca0-b8a6-98481962c07d",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0588a5bb-bb44-4d0c-bfb9-77012fb380e2"
        },
        "item": {
          "id": "662cf3b0-e965-48ee-bc08-0e7ddf3190eb",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6ec5648d-6233-4b33-8e24-1f7a4552683f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30724f1-2272-4b5e-a4bd-d31f4aa02152",
        "cursor": {
          "ref": "e1662fa7-f74b-4cf2-a352-83a1f3abefcc",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3b4835dc-b73c-44b6-aec0-c0ea6939ba24"
        },
        "item": {
          "id": "c30724f1-2272-4b5e-a4bd-d31f4aa02152",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6868bf78-b1ff-416a-902b-21e7f13dda37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3867bd72-c38e-4e7d-a363-50a431419142",
        "cursor": {
          "ref": "7a41fd12-9a4c-4a6b-858b-02c72fe44388",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "56c292f5-3af0-4f06-b2ec-75f719c12942"
        },
        "item": {
          "id": "3867bd72-c38e-4e7d-a363-50a431419142",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e53c16f6-18be-4ce1-b952-1a83be3ff0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26a0fa4-cb90-424b-98ce-634dabc4d0c4",
        "cursor": {
          "ref": "d1cbca4d-5c71-44bc-8513-1d230ca4f330",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0db1353e-94fb-4f54-adf2-e0f4fc90cd0c"
        },
        "item": {
          "id": "a26a0fa4-cb90-424b-98ce-634dabc4d0c4",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "56f2eec0-b281-4d77-b4df-1e416ece05e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb4a2ee-5e37-4c80-aebb-10eb75c23911",
        "cursor": {
          "ref": "f8225e9a-5dc2-48bb-b74e-9c4acce82854",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "434845ff-0603-4200-ae67-5a2e1778f7a3"
        },
        "item": {
          "id": "0cb4a2ee-5e37-4c80-aebb-10eb75c23911",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "328f9276-2b43-48c0-a50a-d4c73fe6100b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db80309f-5602-45c6-83d2-6f165d05de22",
        "cursor": {
          "ref": "83b4825e-5602-4772-83a0-447fb790949d",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9ec0ef8f-0514-4410-98c0-5d679bbac83d"
        },
        "item": {
          "id": "db80309f-5602-45c6-83d2-6f165d05de22",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d52ed32a-419c-4a37-9acf-5dedd1b3315a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ef8df2-267a-4e0a-be9f-e9bd1bb4b3bd",
        "cursor": {
          "ref": "5a019982-4290-46e9-8ce6-47a7c237587f",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "b57d17f8-b2f5-4991-9b95-f5a4a4c594b3"
        },
        "item": {
          "id": "59ef8df2-267a-4e0a-be9f-e9bd1bb4b3bd",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d6fd65ed-c9cb-47de-85a8-b2459131abb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b74475ed-65cb-44f6-afa5-7d6c9d201974",
        "cursor": {
          "ref": "65e9f0a9-7fd2-4541-b155-26f429c28211",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "a05927c7-cd63-4db0-aec8-8e090f2c73fb"
        },
        "item": {
          "id": "b74475ed-65cb-44f6-afa5-7d6c9d201974",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b75b6af9-503f-4e9d-97d9-2345311e3595",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6c2c52-672a-475a-a692-ad9c8767f5f0",
        "cursor": {
          "ref": "ce8d16f5-a9a5-46b8-ae41-d0a000d88724",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ae2e798d-9c3b-4d61-85ad-211acb8a8a6d"
        },
        "item": {
          "id": "4b6c2c52-672a-475a-a692-ad9c8767f5f0",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2276ad9b-acf7-4d38-9c09-1a4d14cbfb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97310ad9-162b-4104-96ae-41c2e24748f9",
        "cursor": {
          "ref": "51e797bc-3167-4fbf-9e6b-344abc37df58",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "34413659-54ce-47b7-913d-1ccf4f3d9d78"
        },
        "item": {
          "id": "97310ad9-162b-4104-96ae-41c2e24748f9",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b562a874-2a39-4ef2-9579-0cd5f2a98604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3a5a72a-14cd-463d-abc8-8a8fbc58eff7",
        "cursor": {
          "ref": "2e8ee998-23dd-412a-b1f9-c998ac6febe9",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b0cd22a4-b005-4e40-bc33-b548583f2064"
        },
        "item": {
          "id": "d3a5a72a-14cd-463d-abc8-8a8fbc58eff7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9f068172-9f28-4a60-80cd-d662a316a8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c5db47-cf5f-4d50-a349-3003e69580a8",
        "cursor": {
          "ref": "321faccc-5ad4-44bd-8d06-3e53688693d6",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "23bfccbf-a4b6-4f1c-9257-1a1ea33c44fc"
        },
        "item": {
          "id": "63c5db47-cf5f-4d50-a349-3003e69580a8",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f432f5b6-4d49-49d5-9e22-d872891469d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "318f591a-6e0c-4aa5-b0d3-821adc421913",
        "cursor": {
          "ref": "8c511da5-48bb-4579-816b-342a8d8e1775",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8943a83f-7807-4ba1-92d7-105b019ee875"
        },
        "item": {
          "id": "318f591a-6e0c-4aa5-b0d3-821adc421913",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "61756d21-8760-4e2d-aec1-7ae3aefbe13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d7859b-79c8-4c5a-aa03-5fb1b278bc4b",
        "cursor": {
          "ref": "b4428456-0e6d-4fe7-9f56-5298da14a6d6",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4a0899eb-0377-4d36-aba1-e0928575f796"
        },
        "item": {
          "id": "f2d7859b-79c8-4c5a-aa03-5fb1b278bc4b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "f98a0c55-a310-4280-9499-a04b94931ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c627eab-429c-4da1-a840-44c2c721632d",
        "cursor": {
          "ref": "c7383949-45e2-40de-8331-2db392b6b6f2",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c9a91266-a068-4c02-a6b2-2f0e574e717e"
        },
        "item": {
          "id": "2c627eab-429c-4da1-a840-44c2c721632d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b34c480e-db78-4a09-a868-d8cbb17e0264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae9d4eb-f64c-4e61-8143-30d74f2de9d9",
        "cursor": {
          "ref": "93d87c2a-ac61-452c-a324-14ec22ab6a33",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "03318929-03b0-4c8b-84c0-0c142f66b2fe"
        },
        "item": {
          "id": "6ae9d4eb-f64c-4e61-8143-30d74f2de9d9",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "579fd990-0966-4494-8960-b60ec6af70e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a81239b-b937-4bdf-8d6a-607117f7f415",
        "cursor": {
          "ref": "a8d8cfff-8366-4036-883d-b08b636d063f",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "20cebe89-64fc-4308-8fb3-df64bad1a24f"
        },
        "item": {
          "id": "7a81239b-b937-4bdf-8d6a-607117f7f415",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f0338ce2-a412-490a-bd88-219af3461352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c6a06b-1f41-4fed-8a35-e4c46707c471",
        "cursor": {
          "ref": "5b3a1556-348e-4998-aaa7-abdef1126d2c",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "9d896327-2bf6-4d30-87a7-4a12596c160f"
        },
        "item": {
          "id": "65c6a06b-1f41-4fed-8a35-e4c46707c471",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "aa7b4865-756f-4a91-873d-8c316679881e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06742fdb-836e-4215-b238-9170d5b52853",
        "cursor": {
          "ref": "e0519b4c-cf54-40e0-ba6a-09054c1f75b4",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7f5aace7-67dc-41c7-8400-864d4c8c2036"
        },
        "item": {
          "id": "06742fdb-836e-4215-b238-9170d5b52853",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1e375c8a-52d0-4d5b-a88f-8bc203997ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8734c27f-579d-4412-94fb-32da8eb3bcc1",
        "cursor": {
          "ref": "80b04904-930b-49b5-92dc-041965c9ccf4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "691ec81a-e495-4b27-8bfd-16dac6f80afe"
        },
        "item": {
          "id": "8734c27f-579d-4412-94fb-32da8eb3bcc1",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3f6983b6-b60e-4823-9324-2f6267a83281",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2fc3fb-82f9-403d-981a-004086e64604",
        "cursor": {
          "ref": "e1a9d0d9-d118-423b-ac05-60de4e5fdd9f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "8b6ff909-bb66-40c9-8b51-8296adcaaa15"
        },
        "item": {
          "id": "9d2fc3fb-82f9-403d-981a-004086e64604",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3b7715ba-2f7a-4ed8-ab2b-3efa36626579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e99ef71-2b64-451d-8491-65ecefc9643f",
        "cursor": {
          "ref": "a0932bfb-8d8a-48a7-9f1f-72312ac03a1c",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "ef4376ff-5b4b-4661-a5f1-dd2cc9bae261"
        },
        "item": {
          "id": "8e99ef71-2b64-451d-8491-65ecefc9643f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d6320e62-4f35-41c9-9bbf-70a5c3efc47d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5dee9c3-fb77-45d9-bc14-3e85b68f87a7",
        "cursor": {
          "ref": "71a8b52f-199b-476d-87eb-25ed432b95a6",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fda42c61-bde1-4fd9-8a66-142785330e66"
        },
        "item": {
          "id": "e5dee9c3-fb77-45d9-bc14-3e85b68f87a7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1138d2c2-9b72-4cef-a985-fee9179be624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5dd13f-8639-408d-afdb-a187cbc2b874",
        "cursor": {
          "ref": "a89272c1-8ef0-4067-b8c1-9a3cc6a59c1d",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "d8c83881-62e5-4b6b-ad3c-feb52a6a4523"
        },
        "item": {
          "id": "ae5dd13f-8639-408d-afdb-a187cbc2b874",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e8a04db4-ff7a-42d9-a31a-575e4d5fdf77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd44a61a-41c1-492f-b3c6-93eadd2ce942",
        "cursor": {
          "ref": "a8bb57ea-4c79-45c1-b299-72a827a70c5d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "996fc4e6-c01f-4f47-9e5b-345ad9382b54"
        },
        "item": {
          "id": "bd44a61a-41c1-492f-b3c6-93eadd2ce942",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "bd53f098-fd84-405a-b3c1-93c48f561799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da6f2bab-e445-4155-b5e4-2fa0d7e6a406",
        "cursor": {
          "ref": "1070bc35-be76-48d8-8997-3dc51b1ef2a4",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "dfa29150-d9c2-412e-98ea-7f3025268590"
        },
        "item": {
          "id": "da6f2bab-e445-4155-b5e4-2fa0d7e6a406",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "037fadc6-3a5c-4956-aed2-e9f54359d4fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ddb6de-3bf8-4cdf-96a9-1cd835827f10",
        "cursor": {
          "ref": "09729202-b401-46e0-8f52-a3d29ec9ee9e",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "91eeee8c-d56b-40af-bef9-ad75b8e58358"
        },
        "item": {
          "id": "a1ddb6de-3bf8-4cdf-96a9-1cd835827f10",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0ba63b44-cf50-432d-adee-008e38191d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d21cd49-b811-4806-859d-6883b45a4964",
        "cursor": {
          "ref": "210df502-ac1f-4247-b8ec-dbaf504dddb9",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2506c1cb-aaaa-4bba-a924-729f47e8699a"
        },
        "item": {
          "id": "5d21cd49-b811-4806-859d-6883b45a4964",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "421bd81d-5936-4469-824f-babf4a9ed9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a152b66-1040-4c1b-86bc-045f3ef7e77c",
        "cursor": {
          "ref": "78f63ebc-16c7-464c-bd23-85f0a9857a8f",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "19905418-e7be-4bc0-b02f-7a1b0d89f758"
        },
        "item": {
          "id": "9a152b66-1040-4c1b-86bc-045f3ef7e77c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "f0843281-f86a-46a9-80c4-5dba418cf90e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bd78c86-0e1b-4a59-b720-03b6462c3f31",
        "cursor": {
          "ref": "73d29a68-9330-44fc-b483-41192f2160a5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "76481b58-2732-47dc-9c5d-0209f0a66813"
        },
        "item": {
          "id": "7bd78c86-0e1b-4a59-b720-03b6462c3f31",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "e26d628d-8056-4280-b650-0301fd88764f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184e552a-5f88-4389-86b1-ecf6cf88076d",
        "cursor": {
          "ref": "f3f097c1-bb12-45f7-ab9e-28b34d90037d",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "b35dcfea-1cd5-4b36-afc8-4092a220d76f"
        },
        "item": {
          "id": "184e552a-5f88-4389-86b1-ecf6cf88076d",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "9e0c7b07-ae5d-4e7e-b291-a19beffe7ded",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 37,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5735fd79-1583-488a-a7a7-342a4847a566",
        "cursor": {
          "ref": "04b0fe9b-b180-43da-8d2f-7bb6a46a992f",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "8566f58c-a8c9-4d5f-bd4d-338ff8c5621e"
        },
        "item": {
          "id": "5735fd79-1583-488a-a7a7-342a4847a566",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "736225cc-efdc-407b-b519-0c1b0d3d4a73",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 38,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fe67d0-5b38-4ad3-bd92-463afa9cdca8",
        "cursor": {
          "ref": "c901363b-690c-4ae0-ad3e-8cb1de8a8d48",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3116746c-9a87-494d-8a85-ae369dbdc894"
        },
        "item": {
          "id": "b1fe67d0-5b38-4ad3-bd92-463afa9cdca8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4fae5bc9-14ee-4a56-bdeb-15723bccd14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1fe67d0-5b38-4ad3-bd92-463afa9cdca8",
        "cursor": {
          "ref": "c901363b-690c-4ae0-ad3e-8cb1de8a8d48",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3116746c-9a87-494d-8a85-ae369dbdc894"
        },
        "item": {
          "id": "b1fe67d0-5b38-4ad3-bd92-463afa9cdca8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "4fae5bc9-14ee-4a56-bdeb-15723bccd14b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c11d7ff6-c949-40b6-b41a-188fcd60c3dc",
        "cursor": {
          "ref": "b9293f55-3e96-47ac-b7fa-6ade2c6e2dc7",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "afef7f9a-09a3-4036-9dab-4656334f4a7e"
        },
        "item": {
          "id": "c11d7ff6-c949-40b6-b41a-188fcd60c3dc",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2e4c66ce-70f0-410d-b8ce-738344e9ad45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a9b72cd-1d56-40bf-910e-da5dcb6f9ca5",
        "cursor": {
          "ref": "d1ce9468-3e81-4547-8068-01fc35947817",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3d8f6279-e0c4-4fbd-aba0-a64410314ba0"
        },
        "item": {
          "id": "8a9b72cd-1d56-40bf-910e-da5dcb6f9ca5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "433675e0-ad57-4738-ba29-6869c29bf7be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c21187b6-9c58-4a8f-b2df-0cd3f0e3966f",
        "cursor": {
          "ref": "47690d69-2b45-4092-993e-eb4e88e0b67c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "3e8952fa-0ee0-4ac0-8c5c-60822f13e2a9"
        },
        "item": {
          "id": "c21187b6-9c58-4a8f-b2df-0cd3f0e3966f",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "8dedfc06-3bf6-4240-b1c7-90598d3a11b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e39767d-bab3-459e-b94d-3621fef5a072",
        "cursor": {
          "ref": "5e9ef56f-e31a-4b92-bb89-a429ad1ba9bd",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ec600dbc-0c00-42e9-ab97-5a2659ddc367"
        },
        "item": {
          "id": "7e39767d-bab3-459e-b94d-3621fef5a072",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "5c2016b9-32f8-433b-96ef-866664cf763d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac493e5-c8c6-497d-b9a7-be845928d199",
        "cursor": {
          "ref": "c0e01840-f9ed-4228-9140-63fa3387d229",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9ab97b3b-7cf6-4c79-9419-9a446c1355c0"
        },
        "item": {
          "id": "dac493e5-c8c6-497d-b9a7-be845928d199",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a72d020b-8d1f-4bbd-89fb-945ae412bb16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "738c11dd-44b3-4337-8e9f-5ba99232876d",
        "cursor": {
          "ref": "eff3f275-1a42-4792-9ab9-f7bcfca27989",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "dff9393b-2ee3-4b2b-b553-0aceb56c537c"
        },
        "item": {
          "id": "738c11dd-44b3-4337-8e9f-5ba99232876d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "42ba79cc-8bb2-4f84-a804-b73e1a7d6fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3c5bad-9ba3-451f-8489-75019b120e71",
        "cursor": {
          "ref": "c7c8c450-4722-4551-825c-b78a1c3cb0fb",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "4a1b29af-734b-4875-a611-9e585fc47563"
        },
        "item": {
          "id": "7c3c5bad-9ba3-451f-8489-75019b120e71",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "9e4fead1-0ae0-482d-87ce-fd01bd7b2d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da59b480-18f2-4a22-9775-55a0903650ae",
        "cursor": {
          "ref": "01e9005a-92a6-4e43-989f-f9363f18fbca",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "00a8c3db-2ac6-454f-ab6c-26935a129392"
        },
        "item": {
          "id": "da59b480-18f2-4a22-9775-55a0903650ae",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8523f8d0-e0c6-4207-ac6d-c16dc276946b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f481ed-0a79-4aa0-9559-bfcb8a96e18b",
        "cursor": {
          "ref": "ff57d27a-4bf7-477b-a1c8-7f4917a0902c",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "101219d6-9d93-4856-8345-8a65094f76d5"
        },
        "item": {
          "id": "75f481ed-0a79-4aa0-9559-bfcb8a96e18b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "12449076-0ecf-401a-aa37-6f120ce02d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bc5269b-e9ec-4610-b7cf-4622f976fa2e",
        "cursor": {
          "ref": "743e3bd7-9cef-49bf-877b-75a4b40225ba",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3023df2e-3bce-4004-8fcc-e4e70a6df266"
        },
        "item": {
          "id": "9bc5269b-e9ec-4610-b7cf-4622f976fa2e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b7e8e7ca-d023-4662-8899-f76f98b4d7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab7ccc6-2a89-4303-bc1a-2e56b243cc95",
        "cursor": {
          "ref": "0108b431-1d35-4ec4-b81c-924c3330a0c8",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "f585c834-2eb7-4739-9b5c-ce2c60e4f24d"
        },
        "item": {
          "id": "9ab7ccc6-2a89-4303-bc1a-2e56b243cc95",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "120ddeba-9424-430d-8781-8b88a17c8ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb917f7-d41f-445d-928a-058b570c6361",
        "cursor": {
          "ref": "b144aea3-8b13-411f-aa84-7248847e0d37",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ba871c65-930d-4c6b-9c9c-7746b4bbec2c"
        },
        "item": {
          "id": "7bb917f7-d41f-445d-928a-058b570c6361",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5e1f18c9-a53a-4a35-b091-8ef44113eb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c8162e-860d-4afe-bed0-9a0a090ee39d",
        "cursor": {
          "ref": "f1590c7c-8800-4199-8e9f-2e4cc9760e18",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7fbdbb75-da7a-49e7-8807-f142393ceeba"
        },
        "item": {
          "id": "d7c8162e-860d-4afe-bed0-9a0a090ee39d",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "32a0e6f3-92f3-4eac-81ea-fe47dc3c92ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b04d6b-832b-4293-8a4a-372108e49e96",
        "cursor": {
          "ref": "8796fc05-fded-4840-8dba-65282ea5336d",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ddcdc7f7-401b-4068-aa2f-67f0668fd743"
        },
        "item": {
          "id": "f6b04d6b-832b-4293-8a4a-372108e49e96",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d0a50565-bbb2-4bdc-8089-eeda01f5d028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fece5ed-810f-4d3f-8c66-c42c21deb762",
        "cursor": {
          "ref": "74910f58-9e92-4393-9666-ae2238de88cd",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d90b5fb8-657c-4997-a34c-6d7992f8f4f2"
        },
        "item": {
          "id": "0fece5ed-810f-4d3f-8c66-c42c21deb762",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f9a9111e-95e4-4a42-b50c-08a25dfe0d21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb0f1718-468c-41ee-a594-95e9cd7258f1",
        "cursor": {
          "ref": "261e4715-107a-4529-ad5d-7cb845940b28",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1eacc98e-7908-4f97-b14b-8320a5b2ea8e"
        },
        "item": {
          "id": "eb0f1718-468c-41ee-a594-95e9cd7258f1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "82d81bb2-d8d0-4cb6-8cdf-a1f419528fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2670d2e4-2a04-4661-89bc-f42438405122",
        "cursor": {
          "ref": "7d79f3cc-6a68-4653-ba02-730c5d7e355b",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "88933ce9-6722-4221-a2e1-1948acde60e3"
        },
        "item": {
          "id": "2670d2e4-2a04-4661-89bc-f42438405122",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ed75522f-715e-4c6a-bd81-20fe16ae362b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ac5efb0-d400-416a-bde2-804b26202319",
        "cursor": {
          "ref": "2afecb63-b61c-4551-9d33-8fcac9ec090e",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9d376d24-d31c-4ab6-8b22-6269c4530882"
        },
        "item": {
          "id": "8ac5efb0-d400-416a-bde2-804b26202319",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "0d4a5c71-f5cf-4493-bf6f-b4f52c5a7d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab88e58-e1f7-4f40-a5bc-5e59cd6cad89",
        "cursor": {
          "ref": "c7ac460f-d013-4a5d-a33a-b29d713ea85c",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "01a41057-e728-4e10-b8e4-aec8c5d088e5"
        },
        "item": {
          "id": "0ab88e58-e1f7-4f40-a5bc-5e59cd6cad89",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "5dafb01b-2b3b-432c-b278-dc38b079d470",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100504ef-4804-4b62-a7ae-1263675d76a3",
        "cursor": {
          "ref": "6d82f38c-fe53-4108-aeba-71280971bf92",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "09ec649a-4310-41de-849f-e5b568534911"
        },
        "item": {
          "id": "100504ef-4804-4b62-a7ae-1263675d76a3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "db9e5333-6c99-4ef9-9b3a-5880cc11f934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674ceeba-1afe-42b3-ac8c-edff95330c57",
        "cursor": {
          "ref": "98ee13dd-12a4-46fc-92ae-f64bad467dcf",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d0794fb5-519d-42f2-833a-61ca6b2e8184"
        },
        "item": {
          "id": "674ceeba-1afe-42b3-ac8c-edff95330c57",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "20f555b5-7094-452b-acd3-035e457df28b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baa1ba20-7af2-47b2-9387-eb06831e41a1",
        "cursor": {
          "ref": "ebaf404e-2152-4a10-aa7b-c3487d5ddd72",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c5cf8eb3-df40-424c-a209-81ad1e9bd40b"
        },
        "item": {
          "id": "baa1ba20-7af2-47b2-9387-eb06831e41a1",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "423e8353-53e2-4c85-9881-80bb63ef9643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f32c0dc-c26f-4567-bda4-bf1ccbac53dd",
        "cursor": {
          "ref": "1bf8f0a4-c1f0-4722-9644-3ee7baf74ad0",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a780809-da9c-4fd7-8f27-85229e7d99d1"
        },
        "item": {
          "id": "9f32c0dc-c26f-4567-bda4-bf1ccbac53dd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4afa2cff-3a9b-413c-966f-f34f35de4b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554880d3-ce45-4218-8783-406647393d1d",
        "cursor": {
          "ref": "78f76d78-ba6c-4fad-bd5d-d46ecfaf2834",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "eb5e496a-1456-4152-ba65-e18393554c35"
        },
        "item": {
          "id": "554880d3-ce45-4218-8783-406647393d1d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "dd968256-7f59-4dd4-a24a-43da338643e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f3562bc-59ea-4e20-8606-875135486323",
        "cursor": {
          "ref": "bf7315e0-d599-4602-bd59-5eaad7e41144",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "68ea1099-c78a-4221-b7aa-b1db7b8a3b41"
        },
        "item": {
          "id": "4f3562bc-59ea-4e20-8606-875135486323",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "a783b593-6ae0-460f-bea9-29473d13fb0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9102c558-76b2-4225-9014-ba18c06b510e",
        "cursor": {
          "ref": "789ada9e-4dfc-4aae-8517-16a1e795fb56",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "bb89b31c-f2a6-4a37-b826-ff32f8aaa631"
        },
        "item": {
          "id": "9102c558-76b2-4225-9014-ba18c06b510e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5e6f6b93-1d37-4686-8c50-752cb7ed236a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54e73c0c-24e1-4f08-8b57-10d820bba7b1",
        "cursor": {
          "ref": "be0aa44e-7da9-4e75-94a0-04625ed3ec6a",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3b49634b-67e6-4a3b-a8a0-88b133a50b7e"
        },
        "item": {
          "id": "54e73c0c-24e1-4f08-8b57-10d820bba7b1",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e5d9d2e3-1af9-49bf-b45e-b5766193d990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "481010f4-49a7-438d-b7fd-97923f956f8b",
        "cursor": {
          "ref": "3dfa7780-1c8e-496b-808a-5ff2474433c5",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d280f5bf-3c16-46a3-8ca7-a17acb3e9bcd"
        },
        "item": {
          "id": "481010f4-49a7-438d-b7fd-97923f956f8b",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "daa6fd62-108f-47e8-bed8-e726d4ab4298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd27c33-654e-4162-954d-d22a57dcec3f",
        "cursor": {
          "ref": "41b3e16d-7687-43ea-8e96-453d88b73266",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "a576d65c-a4ab-4779-a124-a57d3a7a51f3"
        },
        "item": {
          "id": "cbd27c33-654e-4162-954d-d22a57dcec3f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "e8ff6f18-b95a-4130-b633-458f5630232f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cb7339-eb90-471d-bf14-5a5d57b51138",
        "cursor": {
          "ref": "dcad4541-1015-44e3-ac3d-59e238792788",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "8cabb2b9-5841-473f-8b49-2c3c7d1b7778"
        },
        "item": {
          "id": "28cb7339-eb90-471d-bf14-5a5d57b51138",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "04933b20-cd22-473f-b6ed-2d69a59aa41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655f3742-a0cb-4c20-9a15-13a2b1e58652",
        "cursor": {
          "ref": "cd0a6652-df34-43f5-81b3-6855b46cff0d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ad5bf05c-96c3-4111-b1e2-32e7a8a346ea"
        },
        "item": {
          "id": "655f3742-a0cb-4c20-9a15-13a2b1e58652",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "faa439f2-8a7a-44ed-b587-fb083a3e9795",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5a47d84-2aa7-442e-a617-ef257f88637e",
        "cursor": {
          "ref": "d997b250-617f-4c4a-80e5-e38d0ac03e5d",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "670fcc6e-d53f-4398-8d4d-4188a6d8fcd8"
        },
        "item": {
          "id": "b5a47d84-2aa7-442e-a617-ef257f88637e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "71d108ae-d2b4-4bd9-bdaa-798ee6fcf10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73324974-95fe-456c-b0de-dccffeaa0ee1",
        "cursor": {
          "ref": "1a08d61f-1495-4f84-a7fe-125a5aa88f78",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5acde7cd-a0b0-4f2e-b8cf-83efe2d69489"
        },
        "item": {
          "id": "73324974-95fe-456c-b0de-dccffeaa0ee1",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "04b8d496-e0ad-444a-8152-0cf2351ece2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e576459-4a6a-4256-a988-161eb21b2ea5",
        "cursor": {
          "ref": "4c351c4a-9489-4856-a8b7-a2de3099d09d",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "34af93d9-fc02-4084-90d1-a35f026f5d5a"
        },
        "item": {
          "id": "5e576459-4a6a-4256-a988-161eb21b2ea5",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "59438c8d-aae6-4fb1-af36-3f13dce3e880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b334a0e-d5a0-4f89-879d-671c71e1e7a1",
        "cursor": {
          "ref": "c42634ae-d1e5-47c9-8a3b-05a09fd2b585",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a922a9b4-9cbc-44c2-89c1-a39ad3851fa2"
        },
        "item": {
          "id": "2b334a0e-d5a0-4f89-879d-671c71e1e7a1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d1fab743-0837-4fbf-9b8f-86f78e2f0f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa8c08f-8da0-4736-bbeb-947dd2f3b5fa",
        "cursor": {
          "ref": "1fd0bf92-6083-4eb7-9a22-9a85520268fc",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "19841d56-90f9-4404-8a2e-041b1ad16cb3"
        },
        "item": {
          "id": "4aa8c08f-8da0-4736-bbeb-947dd2f3b5fa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a41c92f3-39d0-4261-b67c-486e0459ee8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87ba3d2-12e9-4b6c-b1ce-282cab604b23",
        "cursor": {
          "ref": "5a5ee50e-fb0f-4631-bc83-8d769a6059bd",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "78ac1d83-582f-4188-8363-47b41032493a"
        },
        "item": {
          "id": "c87ba3d2-12e9-4b6c-b1ce-282cab604b23",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "ef70b95d-7df0-49c6-b2ce-5968413f8db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d91fa3-87ee-464a-83f1-f9c27b3e763b",
        "cursor": {
          "ref": "11fe5a32-3edf-4a13-9ab8-d0064cb8f9a0",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "95ef704b-8a14-4cf4-aff5-72469e20a7c9"
        },
        "item": {
          "id": "55d91fa3-87ee-464a-83f1-f9c27b3e763b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "604a54ed-82fe-45c9-aa4b-c520e2e3a60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca631748-d062-4a00-a64e-b95587ca7d66",
        "cursor": {
          "ref": "af31fc6c-7063-4ef3-af69-03ec275a1790",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4b902ba1-74af-4038-8ab3-7c8cc521286e"
        },
        "item": {
          "id": "ca631748-d062-4a00-a64e-b95587ca7d66",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "a741f0b5-b9fe-459c-825a-8e6fdd876aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c116592-7853-4cc3-bef3-fb09ec176153",
        "cursor": {
          "ref": "d1b486f9-4470-428a-be4e-f145890916a5",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "8791b87e-d2ba-4dda-b367-1397ffc4063a"
        },
        "item": {
          "id": "5c116592-7853-4cc3-bef3-fb09ec176153",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a526993c-a075-474e-b6b8-51f9060f36c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870de070-85f8-47c6-90ad-d7c0acb49d5c",
        "cursor": {
          "ref": "6c935039-f034-45f4-8b32-c752d6aea783",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "040cfc82-52f6-42ad-bc0c-78919bb086b9"
        },
        "item": {
          "id": "870de070-85f8-47c6-90ad-d7c0acb49d5c",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0a12c76c-21ae-41ae-8942-aecc614f59ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1c07e43-ea5a-417e-968e-61a3afa04b3f",
        "cursor": {
          "ref": "b74ed320-be64-4ce1-8538-6fe569ac6616",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5f8a51f0-f294-438d-9a2c-edb50287595a"
        },
        "item": {
          "id": "f1c07e43-ea5a-417e-968e-61a3afa04b3f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "2a09e6d3-0b28-41e5-9a08-78a5103e05cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e5b5fc-ac82-4f1a-8f75-16705635e3b5",
        "cursor": {
          "ref": "8bbec6d3-4bd6-4bef-b6ff-3eb52a1da198",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a4750a54-db45-4a82-a519-511264d6263d"
        },
        "item": {
          "id": "c4e5b5fc-ac82-4f1a-8f75-16705635e3b5",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2b442fb5-44a9-4099-b37c-4ed2dfa6a5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061e3f43-1b8d-4db3-8624-f6a1d30ee635",
        "cursor": {
          "ref": "6f1434a5-cdc5-45e1-bbe5-0f4c341670f8",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e6605b02-df3d-40c7-aaec-9a407b04fa26"
        },
        "item": {
          "id": "061e3f43-1b8d-4db3-8624-f6a1d30ee635",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "13870599-4155-4350-aeae-9dfd7575672f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2de5459-357f-43d5-a448-9d1fff6627b2",
        "cursor": {
          "ref": "a3eebb13-b4aa-4090-b602-d0f550aed68e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "9f59d4ba-8e3a-46f8-83b2-2a148aca69c0"
        },
        "item": {
          "id": "c2de5459-357f-43d5-a448-9d1fff6627b2",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "6226a216-c6a8-4cc6-baca-4ab3c3fdf5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b92858c-7d54-4e55-8bec-49b617f18a0b",
        "cursor": {
          "ref": "9991ccd7-7b50-4ec9-9eb9-ce3cf7f484c3",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "7de58478-dc3d-4b5a-819a-3399ebf6e5cb"
        },
        "item": {
          "id": "5b92858c-7d54-4e55-8bec-49b617f18a0b",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "3a2bba60-0811-4047-a877-dd392019ec1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e3aabb-fb18-4d2e-93bc-599bafa24f54",
        "cursor": {
          "ref": "0f09b4e1-ab07-430c-afe8-cc8f0fdd7bdb",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "81bc94c4-3c66-4489-b44e-86a6e09290c4"
        },
        "item": {
          "id": "86e3aabb-fb18-4d2e-93bc-599bafa24f54",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "92fcc73c-1155-4d38-a41a-ddfc9d34d77c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78e494f-a050-4cb6-b3d9-182e527f67cd",
        "cursor": {
          "ref": "dd908b23-acd3-452a-82ed-60b0d26c82b6",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "48f0d600-84a6-438a-9b54-00d16dddbc49"
        },
        "item": {
          "id": "d78e494f-a050-4cb6-b3d9-182e527f67cd",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "28bd63a6-d908-4be7-b8d0-6fd5ef7255e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcbc5e72-4056-469e-b320-9b8a00d84536",
        "cursor": {
          "ref": "e1031c9a-4858-4aaa-b3d3-3b473bd76776",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "68575c37-38b4-4293-9d8b-b9c36c749302"
        },
        "item": {
          "id": "dcbc5e72-4056-469e-b320-9b8a00d84536",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "992e7249-5855-4e66-94ea-808d49b7147b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86cd0316-a9f3-4d78-bc05-21523db35c16",
        "cursor": {
          "ref": "ab2d94e7-c161-4da8-ae79-c5624e71ecb8",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "37111857-25d3-46e7-86ff-3f13d28342ec"
        },
        "item": {
          "id": "86cd0316-a9f3-4d78-bc05-21523db35c16",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "0714ecdd-d633-4429-9de8-4dc76ff17b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef1f4c5-8e5f-4842-995c-db32fa70533f",
        "cursor": {
          "ref": "3e09a426-dadf-4e7c-a3d1-6920d6453769",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "fc88a7e3-3878-46e7-875e-4d84f8cae602"
        },
        "item": {
          "id": "0ef1f4c5-8e5f-4842-995c-db32fa70533f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "13938a15-a1e0-4ce0-b179-c04709056d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc528925-a4eb-4d82-acbc-2304fdc510a0",
        "cursor": {
          "ref": "644fe686-5ad3-411d-9b7b-d7bd97e13f62",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "376a083e-7894-45d3-982b-4639c4346eff"
        },
        "item": {
          "id": "fc528925-a4eb-4d82-acbc-2304fdc510a0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d56d114d-4742-407f-b2ba-43e758ccab6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b4679ff-b2ff-4a02-9f55-c5d1dbcf9d17",
        "cursor": {
          "ref": "e257c141-214d-4adb-b47d-4c77d755f0a5",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "31638bba-f938-4360-a707-b7bce67d9b83"
        },
        "item": {
          "id": "1b4679ff-b2ff-4a02-9f55-c5d1dbcf9d17",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "ef1ac8b1-4c90-4a63-94ab-212881b3d209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa87a592-8001-462f-9774-516fa4ef13df",
        "cursor": {
          "ref": "a6aa9330-4e7e-423d-93ae-db15eeaae6ac",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "88d81159-c3be-48f3-bcf6-4f25d1e9c591"
        },
        "item": {
          "id": "aa87a592-8001-462f-9774-516fa4ef13df",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "fcb77443-a41f-4571-a074-1e2d307cc43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222ac4e5-f0f4-4f7e-8587-a6f60ab22e3a",
        "cursor": {
          "ref": "78b4694f-8985-4400-a2ac-72dcb21fcc15",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "fab66181-2611-42dc-8533-b682ad1d92bb"
        },
        "item": {
          "id": "222ac4e5-f0f4-4f7e-8587-a6f60ab22e3a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "beb423b8-f11b-4b0e-937b-7bd7f393fcbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77f0ad5-813e-441e-8507-894314353077",
        "cursor": {
          "ref": "29ea0976-3ce4-44e1-a7d1-c8531b1ac23b",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "6e78bf70-6de8-412a-980b-5fdbb1261c8e"
        },
        "item": {
          "id": "b77f0ad5-813e-441e-8507-894314353077",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b80f6391-c3f6-4bdb-96c5-b5a5b8e79cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eee7aeb-dea4-416f-91cf-d73ca2ea90f4",
        "cursor": {
          "ref": "4d97dcf0-1255-4ff6-8d07-4104c7b72df7",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "3a67d3fe-7a4c-410b-8a80-4c46c939e8a7"
        },
        "item": {
          "id": "4eee7aeb-dea4-416f-91cf-d73ca2ea90f4",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "67491ec9-7a80-4413-aaf1-99492baa01fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48d12c0-0936-4bff-a80b-4fff90661c3d",
        "cursor": {
          "ref": "acdf4e67-6d74-4504-b720-2ea4ec454b39",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "9e867e9d-95b3-4139-8629-fbd0e2a4c7a1"
        },
        "item": {
          "id": "a48d12c0-0936-4bff-a80b-4fff90661c3d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "3c077dd9-1e17-462a-ac1a-8f8d0b3da43f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fdffa20-df71-46f8-82b2-26c11ada0644",
        "cursor": {
          "ref": "40ebf827-3093-4117-8963-11d2fdd765b0",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c271a69b-ee5f-4a02-ab39-620b8dc7e55a"
        },
        "item": {
          "id": "7fdffa20-df71-46f8-82b2-26c11ada0644",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3fd01616-fb27-427e-a08a-8c562e31e2f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751ededd-4658-4a76-a831-e52e508e94ee",
        "cursor": {
          "ref": "f2fdf968-05cd-4c98-9196-ffb44049c0d5",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c3346b34-15db-4b70-b65a-365ae41374ac"
        },
        "item": {
          "id": "751ededd-4658-4a76-a831-e52e508e94ee",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "58d0e957-5fa8-4b7e-84e2-fb06eee35c17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30bf89ad-feb9-4d63-a5f9-576e12b12d6f",
        "cursor": {
          "ref": "00c8eada-1319-4fa1-a86e-7cd996a530e7",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cd615fd2-d2b3-49aa-896a-0c6267e78ddf"
        },
        "item": {
          "id": "30bf89ad-feb9-4d63-a5f9-576e12b12d6f",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "718d49c6-1ff7-40af-be38-790870bc2a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f733111-6e65-48fb-b6a5-cab5ebb845e0",
        "cursor": {
          "ref": "ecf2485f-a203-4e4b-aa19-3bfbc2f72f39",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "d17e4faf-143a-4af4-9a25-cff5bb1cb1bd"
        },
        "item": {
          "id": "2f733111-6e65-48fb-b6a5-cab5ebb845e0",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "849ce1a2-a76c-4727-b925-517c71a206f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a61be7c-2deb-4102-9363-5fb5ddb9dc45",
        "cursor": {
          "ref": "acb9adab-1949-465f-bd1c-7ea28cd0e89a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5dc7e057-c798-4ce0-86e3-d6af7bdc5c9a"
        },
        "item": {
          "id": "4a61be7c-2deb-4102-9363-5fb5ddb9dc45",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "3328ee94-54db-41bc-95e6-d0be264bd599",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e5150b-d683-4e1f-a55b-d5eb6f182810",
        "cursor": {
          "ref": "eb9bfbd2-08b2-45c4-a030-c428abe7c0ae",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0dbb5017-40c5-400c-96ae-07e219a77922"
        },
        "item": {
          "id": "04e5150b-d683-4e1f-a55b-d5eb6f182810",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "40dbf751-a977-49ce-90d4-83040dabcd22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b771e73-da7d-4bff-babf-67799d094c51",
        "cursor": {
          "ref": "37a93a68-e082-4265-bf14-8a0b78edf41d",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "247ee161-a1ee-4ce7-bf7b-0cc48c777073"
        },
        "item": {
          "id": "9b771e73-da7d-4bff-babf-67799d094c51",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a3f42566-32a5-4634-8710-e483474ac57f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6558909-e096-420d-a2e3-25cd9fe1281e",
        "cursor": {
          "ref": "ae447b2d-8dcf-4c8f-bdc9-7a2d5f67dce6",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "225b1890-8503-45c8-bc9f-66daeee4f63c"
        },
        "item": {
          "id": "f6558909-e096-420d-a2e3-25cd9fe1281e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3291ceda-30c1-48af-a833-94c86408cbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88cda92d-4d36-4f5e-b99b-0932456e9ccc",
        "cursor": {
          "ref": "b51c6f6a-5c2d-4f77-a78f-d3dfbdb600c2",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3655a6c0-7a55-48a3-a1a5-70cda048ed54"
        },
        "item": {
          "id": "88cda92d-4d36-4f5e-b99b-0932456e9ccc",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "30a74142-dfea-45d2-9688-6cc35b83429d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46129eb-aded-42cc-a3c8-05a649f7e449",
        "cursor": {
          "ref": "103a11fb-cade-4789-8a3c-778dbd54e5ad",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "46d5b77a-ba6e-4410-8979-0028ac6c02a8"
        },
        "item": {
          "id": "e46129eb-aded-42cc-a3c8-05a649f7e449",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2cd8db51-924b-459e-8184-26de27230026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec336ad9-2ee6-4086-8b73-f590f3ae42df",
        "cursor": {
          "ref": "4aa10ff5-9192-4b04-99e3-9fa83a49fc3d",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5c12ec3d-ecb3-4194-858b-bb4c79143371"
        },
        "item": {
          "id": "ec336ad9-2ee6-4086-8b73-f590f3ae42df",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "360bae0e-209e-4551-81c7-2d46eeea9127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3203cf1e-a53b-4630-9b92-04ee6c2677fb",
        "cursor": {
          "ref": "2af3e896-040e-4b24-8233-fda505df820c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "ed98e6bf-2c06-4c30-91b0-691199a16ae0"
        },
        "item": {
          "id": "3203cf1e-a53b-4630-9b92-04ee6c2677fb",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5ac4458c-0ac4-435c-b2e2-67b5fa352dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a732e24-2cb4-431a-8084-3128b2e0a80d",
        "cursor": {
          "ref": "17996a98-02c1-49b1-b089-2451bb124f5c",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b7476951-388f-420a-80d5-9ab3196fe173"
        },
        "item": {
          "id": "0a732e24-2cb4-431a-8084-3128b2e0a80d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b8cc2d62-78d6-47b7-89b1-07a1dad3a512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663dc2e5-3724-4b4c-897d-0c47d0f4f4ec",
        "cursor": {
          "ref": "c3abf1fe-6245-41bd-92d4-ea44a45d2a10",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f81ba53f-5db4-46c9-b94f-9a3c0414fdb1"
        },
        "item": {
          "id": "663dc2e5-3724-4b4c-897d-0c47d0f4f4ec",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "81224f35-287e-46b3-a47f-dbd35a2c4301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5b9688-1630-4c5c-a937-36b9206cd446",
        "cursor": {
          "ref": "d56cb552-e925-4e24-a291-108d38fd163b",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b0b027f8-ad85-47d8-b822-ef7cdc137c15"
        },
        "item": {
          "id": "ff5b9688-1630-4c5c-a937-36b9206cd446",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0c52c0ff-ac9b-47a4-806b-2c3df675e2b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3937798-1a1e-42ad-97db-f2076c1e4b11",
        "cursor": {
          "ref": "c41a13ed-27c3-4385-a6bf-19058448bba5",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "6ec3c6ac-9dae-488d-b7c2-fa05a13548c2"
        },
        "item": {
          "id": "a3937798-1a1e-42ad-97db-f2076c1e4b11",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ca6c16dd-a3c8-459e-9a82-6db78eaded7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38648ba4-c324-422c-8487-2b4a1080f6ac",
        "cursor": {
          "ref": "ca866900-6e81-492e-948e-36a0d0b79eb9",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "729650f9-1015-451a-8021-c905b2689f9f"
        },
        "item": {
          "id": "38648ba4-c324-422c-8487-2b4a1080f6ac",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d8f6a9b8-f79c-481e-a84a-03244cc715bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b57849-4fbf-4d06-8d8c-74e3fea9c14e",
        "cursor": {
          "ref": "b4601107-0481-452f-8fdc-9b3ed004c735",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "f7508b9d-266f-44d7-8056-8743fcfa7835"
        },
        "item": {
          "id": "39b57849-4fbf-4d06-8d8c-74e3fea9c14e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "088e2bd3-c48c-4770-bc0a-c715dac1be8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f921d720-9121-45e9-ae56-940c2a9efe96",
        "cursor": {
          "ref": "01224443-d2c5-4db0-b1cf-7b637a11b14c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "70d37637-9665-46af-b26e-26b2102b3cfb"
        },
        "item": {
          "id": "f921d720-9121-45e9-ae56-940c2a9efe96",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "6a7644eb-9a4b-4170-ac01-fd41e48d6f24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31bc6e3-eb87-4e24-8a2b-1da642e4cdf5",
        "cursor": {
          "ref": "f0385083-83ea-4208-98c4-07c14d2d327a",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "52a5c751-446a-46b0-bf09-0bf07eda6b58"
        },
        "item": {
          "id": "c31bc6e3-eb87-4e24-8a2b-1da642e4cdf5",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5283dd2d-5cb9-4df3-887a-4206778b9d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0240f2-7b66-44d8-a395-90f4a07400b7",
        "cursor": {
          "ref": "f70dab13-04ae-4e34-b2a0-6597dac88610",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f2a9dd5f-421f-4570-be6c-c8ca9d79b69d"
        },
        "item": {
          "id": "cd0240f2-7b66-44d8-a395-90f4a07400b7",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "05f2f90f-c4bc-4f21-909e-206d9d3dd072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c617222f-e978-4899-ba7c-a2b6238d5026",
        "cursor": {
          "ref": "4dd429d0-118b-488b-b369-cb786c64ec5a",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6a3a516e-7102-4a37-8b38-a0947414cb29"
        },
        "item": {
          "id": "c617222f-e978-4899-ba7c-a2b6238d5026",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1121eb90-2724-49a5-a14d-a9b62ab11423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7613b89-2a75-4341-b714-81db73c5c97e",
        "cursor": {
          "ref": "f1b86987-c94a-471a-926e-094d07e5bfa8",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "19e41dd9-7ec7-47a0-937d-4ebe65227136"
        },
        "item": {
          "id": "a7613b89-2a75-4341-b714-81db73c5c97e",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0a360ad5-cd5c-4581-abbe-87da0f986a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d70857c3-9c26-4a15-9713-757c7a0c1fcb",
        "cursor": {
          "ref": "3761d3f2-cd95-4466-9715-9c18eefc69ca",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "da1859d6-eecc-4f81-b698-74cf84376757"
        },
        "item": {
          "id": "d70857c3-9c26-4a15-9713-757c7a0c1fcb",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "834df2f0-8ccf-46ee-a62a-f0d49a0e3c44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9cba41b-919d-4b9d-b80c-5ea258eaee33",
        "cursor": {
          "ref": "b4049285-467a-4c83-9e4b-0c12de932d78",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "243cfa45-5b63-4dc8-aa19-a4dc9cb065ac"
        },
        "item": {
          "id": "a9cba41b-919d-4b9d-b80c-5ea258eaee33",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8f303030-6cd5-497e-a069-00eeee6513ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b97e9d26-bcbc-4c83-9dfe-696dc86aba15",
        "cursor": {
          "ref": "88a5a8cf-3d36-4c6a-89fd-ac140d9103ee",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8e36bf40-5f09-48ce-8af7-2e0b3f9efa1a"
        },
        "item": {
          "id": "b97e9d26-bcbc-4c83-9dfe-696dc86aba15",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "03f8137d-5d69-44a5-8bb4-b7505f32226e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8cd4fd-aa3b-497d-bb19-698d273fde02",
        "cursor": {
          "ref": "8c2b56ff-cbf9-4b19-be20-93130aa11400",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "1fd888a0-a949-4905-925d-927f8eed2563"
        },
        "item": {
          "id": "fc8cd4fd-aa3b-497d-bb19-698d273fde02",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "25cf7846-071b-4048-b924-23e5f4ea04bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b971463e-bba4-49cb-9639-3a3f932b1b1e",
        "cursor": {
          "ref": "0b6928cc-5a67-41ac-b3a5-a91bbc47ef1e",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d331205a-4c10-44fb-b3d3-7b81d7bb03cb"
        },
        "item": {
          "id": "b971463e-bba4-49cb-9639-3a3f932b1b1e",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f3bbbe57-525b-4d84-8a7f-08b77bafe5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edb8b9d9-e3f8-4b95-9cfb-b9733a9d9862",
        "cursor": {
          "ref": "86b0f2cf-47ed-4333-b959-f92c0a7c3595",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a39d4b9e-e2d8-4079-bde1-aa3c32938bf3"
        },
        "item": {
          "id": "edb8b9d9-e3f8-4b95-9cfb-b9733a9d9862",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e160450d-db04-49e8-9e58-f429cf2675b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f993a16-3b8f-4517-9aae-2628a0cfe106",
        "cursor": {
          "ref": "c5c706c3-d461-43c4-b471-8fe71c587af2",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a8a8e68a-fdce-4b5a-aeca-4c74e9560fd2"
        },
        "item": {
          "id": "2f993a16-3b8f-4517-9aae-2628a0cfe106",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "955442ee-924f-45e8-b704-d8a748161b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc45de39-af76-445a-9b41-d5a215f9b338",
        "cursor": {
          "ref": "9020baab-8140-4ba4-96cf-604cda9d9ef8",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "591b4681-bcdc-4075-82a4-251b0c696155"
        },
        "item": {
          "id": "fc45de39-af76-445a-9b41-d5a215f9b338",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "3b3df675-16a3-47f4-b860-c970c2dbde06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71da343-a30b-4c86-adcf-471d58fd177e",
        "cursor": {
          "ref": "d714f0ff-4e39-4cae-866d-8c71eb5029cb",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "a2de4b6b-598d-4244-bf90-465508933de9"
        },
        "item": {
          "id": "a71da343-a30b-4c86-adcf-471d58fd177e",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9e519e11-d969-43a8-9d78-f2175b4b3f1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c79c78-546a-4ab4-9b7d-2cfc80d34d7f",
        "cursor": {
          "ref": "e0f6dcd4-4e44-47b0-96ef-caef2fa2786c",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2a9fb23b-b682-4882-90c9-3a442db30ce2"
        },
        "item": {
          "id": "76c79c78-546a-4ab4-9b7d-2cfc80d34d7f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "77ecffbc-42a1-44d0-a5d4-dd9ad1e6b0a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64a0eb45-d132-4428-ac9d-66b3c34e3f17",
        "cursor": {
          "ref": "ee1b04a4-0e52-4f0e-ae5d-3e95f739cb76",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "caa49d34-ae02-4be4-90dd-6b27eba4522e"
        },
        "item": {
          "id": "64a0eb45-d132-4428-ac9d-66b3c34e3f17",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c90163f8-0598-4e4e-9280-6e4fe55e3cdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803d593e-fcb8-4425-bcd4-0a7883b17312",
        "cursor": {
          "ref": "ec7df9ab-c44f-4337-aa95-bdf81a3298cb",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "70115b1c-1b8d-4d37-9bb5-e23a59c4cdb5"
        },
        "item": {
          "id": "803d593e-fcb8-4425-bcd4-0a7883b17312",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f78a2051-6353-4483-9b6e-c7c300b09c3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58906cf-7bf3-4893-8e66-d7a403d6c397",
        "cursor": {
          "ref": "0ec7147e-aef5-44b9-ba4c-a12e52266bd1",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "c355f7d2-3a69-4081-a157-0586c03350d0"
        },
        "item": {
          "id": "b58906cf-7bf3-4893-8e66-d7a403d6c397",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "bd25ff48-fd7e-44ce-b9ea-a1892bd8c2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd893bb-eb30-4ec7-a77d-165e6f12d3a3",
        "cursor": {
          "ref": "3c1da950-fff7-45e8-a02e-48da878673d3",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "68aeb3b4-96eb-4833-a58e-31e2dbc8570a"
        },
        "item": {
          "id": "5cd893bb-eb30-4ec7-a77d-165e6f12d3a3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "fa757020-fae7-4a2e-9757-c49b9c68c659",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1526a7-d093-4be3-b82c-2fd4e9079e76",
        "cursor": {
          "ref": "93a56758-60c1-4656-b9fa-997a80145a5a",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "959b4b1f-bdb9-40b7-9cf6-978a0a121b52"
        },
        "item": {
          "id": "3f1526a7-d093-4be3-b82c-2fd4e9079e76",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b77604a9-417c-4da2-9fb9-95ce73a41edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d812a9b4-19a9-4a76-9757-53239ff8f2e1",
        "cursor": {
          "ref": "a9e6526e-28f0-4d2a-8bbf-6b401f67b653",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "27410db7-7b33-448a-a30f-2425b50ed90c"
        },
        "item": {
          "id": "d812a9b4-19a9-4a76-9757-53239ff8f2e1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "259f753f-f672-41ab-99ce-c22601603fbc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0bb1bb6-e7ba-439f-b9b7-4b5c44266d9a",
        "cursor": {
          "ref": "e2de019d-ad87-4295-aea2-2030aae8ad6d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4866f86a-7856-4ed7-9284-e1812e176300"
        },
        "item": {
          "id": "c0bb1bb6-e7ba-439f-b9b7-4b5c44266d9a",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "1165c7c4-6f4e-40c8-a1c0-afbb484c1ee1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 36,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "716a8caa-002f-4761-951e-13e3d8d03855",
        "cursor": {
          "ref": "b1450e40-6d8e-4464-a9aa-e83b8ee81833",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "0e1ab057-4686-4227-b828-f5b385aa478f"
        },
        "item": {
          "id": "716a8caa-002f-4761-951e-13e3d8d03855",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "893ca6bd-d79e-4975-91aa-481c39eeab09",
          "status": "OK",
          "code": 200,
          "responseTime": 37,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea054a87-830c-40f1-906e-3cc1b5729e3d",
        "cursor": {
          "ref": "a91315c1-bdb9-4044-b373-eb5ac9e52d87",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "c0d10366-f657-48d0-9cd2-bf4b90cc7d1f"
        },
        "item": {
          "id": "ea054a87-830c-40f1-906e-3cc1b5729e3d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "5e088269-a6db-4ed4-a26f-129bd718221c",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7958ea-ea9f-4ff0-8eb6-8dd6bc672723",
        "cursor": {
          "ref": "f83ffd2a-ee93-4be3-8086-5e4845f31c80",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cbca8d32-8abf-4401-baee-20984c2ce8f7"
        },
        "item": {
          "id": "4a7958ea-ea9f-4ff0-8eb6-8dd6bc672723",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "69322b94-1677-42f2-827b-6e7dac13a76e",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb3bad0-7e27-463a-928f-bf6bb8dcdcb2",
        "cursor": {
          "ref": "93106238-ed16-4775-a1f6-889ebe3a673e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88ae857e-c660-4b88-b6f6-f5884dab6767"
        },
        "item": {
          "id": "6eb3bad0-7e27-463a-928f-bf6bb8dcdcb2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b267b7f3-24e8-47a5-9092-1a4698b6b584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb3bad0-7e27-463a-928f-bf6bb8dcdcb2",
        "cursor": {
          "ref": "93106238-ed16-4775-a1f6-889ebe3a673e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88ae857e-c660-4b88-b6f6-f5884dab6767"
        },
        "item": {
          "id": "6eb3bad0-7e27-463a-928f-bf6bb8dcdcb2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b267b7f3-24e8-47a5-9092-1a4698b6b584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb3bad0-7e27-463a-928f-bf6bb8dcdcb2",
        "cursor": {
          "ref": "93106238-ed16-4775-a1f6-889ebe3a673e",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "88ae857e-c660-4b88-b6f6-f5884dab6767"
        },
        "item": {
          "id": "6eb3bad0-7e27-463a-928f-bf6bb8dcdcb2",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b267b7f3-24e8-47a5-9092-1a4698b6b584",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6888915-a86d-46ec-b653-78cd003f0216",
        "cursor": {
          "ref": "a4867bbb-8e97-4348-8797-1beb4adf50f8",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "99e56dbc-325c-4eb4-a880-1646a26281f6"
        },
        "item": {
          "id": "d6888915-a86d-46ec-b653-78cd003f0216",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "9afe66b1-4fc5-4cc1-b999-3f0742761e70",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 37,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2171d8be-ac8b-48a7-8f0f-9401bbab1199",
        "cursor": {
          "ref": "21baca84-fba9-4fad-90f4-f8c13dd65669",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "25ccd22f-8caf-486b-b01e-3866aef4a5d7"
        },
        "item": {
          "id": "2171d8be-ac8b-48a7-8f0f-9401bbab1199",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c027d5ac-0e48-4086-88b2-1574aa19b0dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2171d8be-ac8b-48a7-8f0f-9401bbab1199",
        "cursor": {
          "ref": "21baca84-fba9-4fad-90f4-f8c13dd65669",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "25ccd22f-8caf-486b-b01e-3866aef4a5d7"
        },
        "item": {
          "id": "2171d8be-ac8b-48a7-8f0f-9401bbab1199",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "c027d5ac-0e48-4086-88b2-1574aa19b0dc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8ab9c2-fee1-4ea3-8f03-82a36e08db90",
        "cursor": {
          "ref": "4e382a1b-aa68-48ff-ae59-981bac73471a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a2b12129-21f5-4039-82f4-683416863f44"
        },
        "item": {
          "id": "fe8ab9c2-fee1-4ea3-8f03-82a36e08db90",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "d77b63dc-ff62-43fa-94d7-82da42daddca",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3214ee-dddd-4f47-8ef4-63071aee4f00",
        "cursor": {
          "ref": "dc0c40c8-8dc2-4e56-b91f-069dced0dd6f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f0432b0-8af9-4646-bc68-165ea4dd3228"
        },
        "item": {
          "id": "0a3214ee-dddd-4f47-8ef4-63071aee4f00",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a9be7d53-5e4a-4376-b650-2d359eb8a13c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3214ee-dddd-4f47-8ef4-63071aee4f00",
        "cursor": {
          "ref": "dc0c40c8-8dc2-4e56-b91f-069dced0dd6f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0f0432b0-8af9-4646-bc68-165ea4dd3228"
        },
        "item": {
          "id": "0a3214ee-dddd-4f47-8ef4-63071aee4f00",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a9be7d53-5e4a-4376-b650-2d359eb8a13c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 35,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d26b8ed-474c-44b9-b78a-02969e1152db",
        "cursor": {
          "ref": "3d44c6ea-e087-4e2d-af0d-46a203860f35",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "bac28a8d-0934-418b-b719-f04b4d6a8136"
        },
        "item": {
          "id": "6d26b8ed-474c-44b9-b78a-02969e1152db",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "51c90f2b-b399-4bbc-9001-b70977339acf",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 35,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}