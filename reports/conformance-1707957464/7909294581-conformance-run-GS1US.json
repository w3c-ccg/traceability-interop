{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c6b5446d-7b5f-44b3-b987-1c56ac9efb52",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d3857420-0ce0-4d85-82f6-0f81119fbf66",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "163b1948-3cf2-4918-bd6d-c4ae821c8172",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "fc9d394f-0ed6-4610-bd8a-717d2c041422"
                }
              }
            ]
          },
          {
            "id": "66dec1f3-7ce1-41ba-a982-3ec2eb7d1c9e",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dfc96f1a-4f07-477f-879f-075ddab40adb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a4b407f2-5307-4fca-b748-b9d31776ceb1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0d6e8a0d-09b0-402e-b0f7-7ef1d888a8ca",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "091f487f-1897-4143-b631-52bd62a62eda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c4889315-e567-4674-b705-bbeb99fd39f7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ecd5723-1f69-41a2-8790-b2a93b8361c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "023f60fb-9b0c-4d26-81e8-621705f2a824"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ca64e60-76d8-4572-a5f8-2ee5170e196f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d6ad84e8-09e8-4684-b65a-b2e10af4b921"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c7e31f2-bd05-48a2-92d5-29b8d3a2248c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "18317231-656b-4c7d-ac4e-c0ebec40d635"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a00c6d9-9bf7-4eb3-bf8f-cce6d73bfb7e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "02412045-d0a6-4c5f-8407-bb7d1b5b3faf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4648e8ee-9e36-41e2-ae31-19db113c9599",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d5164424-10a4-45e9-9298-c35980ba6d3e"
            }
          }
        ]
      },
      {
        "id": "f709fd81-a068-4726-adf8-5aeac1b5e081",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b61fe119-18cb-44b7-aecf-aa20a7837bf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "673f8647-5c48-4e03-a39f-7c2626ed0bdc",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d4837349-007f-4a36-b5c7-fdfd77d35e88",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc849b55-cf6f-4b29-a4a7-e8d1ff592cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "af93a135-2769-4255-83d3-803ae120dfaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7d148a9-c511-4489-b816-5f1ccb37bab4",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead501dd-bf74-4a50-a0b7-496342348c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "583c49e2-a87c-434d-9493-7eeda40e8b90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c08dee93-ed05-4c19-8e78-82b3a0dd0e36",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95437b82-aaba-48ba-b3e4-670d17a51dd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "316117e8-fc0e-4dea-969f-6adb897f71be"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1603ef8e-0a78-40a3-b137-2356dfb6ea31",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e8773d7a-f44d-413f-b33b-adfbb86bab53",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a350035-3f26-48d7-8dd8-cacd9293e91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "190e6f3e-92f4-461b-8b3d-cb50b5356bd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba927f72-d44b-4927-92c6-5a0ae7b36f20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afdb6fc6-dc56-45e0-97f3-20ca115a955f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5c700dd9-ffdb-4a13-8166-d9c37df56002",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9f2f0d92-9548-450e-980f-8840880b70b3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "08394312-1c60-4a51-bfe3-782ea05d69e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "83b8dfc4-a47f-4c30-9b09-ac03c052d6d0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "323348a6-4e39-45f7-b60e-2413bc8fa76e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ec01b215-77b5-44d9-be18-69d9b52d8db3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ea1cb772-2759-4f23-af19-5ef64ddd45a2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "933bb2be-6f0a-4ee1-a5b5-6ec8bfcc3e60"
            }
          }
        ]
      },
      {
        "id": "05f4aab8-d0cd-4db7-bfb2-89838c19786f",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "de211c47-bfca-490f-8ee7-32d0463eb30b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0bf19b57-66d5-4915-9d35-6f5261eb0403",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bea85d34-75bf-4b20-8c89-5ccca441cfa3",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "781f0f62-e53c-41fd-ace9-6ac6665f76e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaa2e441-9d79-4026-b366-183216822d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f82d9c46-54e8-4e02-97d9-68f369149f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca25ca96-36fd-44c1-bfaa-31e51e4b9789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22d95f7-d3aa-4d1f-823c-f4366fabced3",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe696d4-69b8-41fa-8916-affe863bf029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1efbe75d-5784-4952-b70d-b6b0446d86d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c67ccb-e466-49a4-93d2-2d3a9afbf928",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9b661fca-a3ca-49de-84fd-3cbe99723357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a81844-dc2b-4893-b93b-7c4edfba1f54",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca479100-2dc5-4d56-9913-7fb8349c9caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f557ae4b-5494-40b5-9ec2-c1a967ace44d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5a6a41-fb5d-47af-aa90-020219a0534d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c51862d8-5253-4106-887e-a4de7dd9777f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df3db55a-8270-496b-8509-1b7bc256b0c4",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b0baf19-91ba-41c4-b00d-89cc8cf59f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8cdd2bb-4f51-4269-811c-4936628e9cf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddbd2ca-5a7f-4765-8da8-a17be66e38ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2af907bc-bc3a-4799-a030-4c1255034cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99719abb-fc62-4adb-aa66-b65abdc2476c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d854e1-aa41-4113-8af2-17767d7e1e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89f98e7d-49c1-4ca6-b069-4d17b202e8b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f0b1f7-85f3-41e5-b54a-2cc32da35f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46821f61-4e13-469f-ae3d-629c53ea8300"
                        }
                      }
                    ]
                  },
                  {
                    "id": "651d8b38-91bc-4b4c-b41d-d87841773bed",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b05f86f1-2f28-4d96-a1ef-3e083c0d73a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ede162f-ff35-4a6a-bb2e-b9e701da0683"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e3c99aa-681f-4e31-a78f-6884ef3f6e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a6c4cd5-0d36-481f-b0e0-bdd4b10dbdfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c385923-2659-4e8a-8e79-a08fa9289d3e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa11bd5f-c90f-4231-a7f2-bbacbad717d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438ceddc-bec0-4b95-85d0-4910dce636e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde99c69-1cf4-40fa-bf60-02e67e664b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e93cfee-e25d-4524-a58c-000afe424ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49552ac7-cf72-4f33-b58d-61160864f4cf",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884757f3-0bcc-473b-ab2b-c54ce083fdbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "027369b3-708b-4e19-9fa7-66e5d35bbba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44231377-5255-4b99-80f0-a55407baf127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf97c082-2980-41b9-94c7-fffd81518b2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e9a57e3-2f9c-4e4d-abe9-4eeacbee01f2",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1447aadf-8652-4c85-a357-d7a7f4c2d98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f583f40-4ca4-471e-b4f4-468beb46d834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85608b7d-7e28-461c-8b04-e00ef5514c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d752c25-e022-476d-a746-257ed710256b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4944075-6442-4a75-a0ab-fec1fc7f7cfa",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e603fc9a-b738-44f8-bcc9-afd234904075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2556978f-5ee9-498e-91b8-10708e7b8318"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4411ba-d301-4983-88a8-3fa1d7b7b804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57af7351-cc3c-49d4-be0f-73a4f98071f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c39d29f-203d-4c34-aa12-2383e0b1890b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d46bd77-9dce-411b-9c7b-c54240ff4d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d232a743-9156-49fa-9213-17bd5bb60c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c4daf93-f907-4a8f-9ece-73caa0ee8113",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b37cc68-5997-476a-a2a4-43c5ed1638e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbc7dd2-4fe6-439d-81ef-ce6872e1c069",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "555a1a84-2618-4773-8c4b-fcb620b2a64e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68fe517a-fd4c-442e-9c47-378791ecc3db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3be0cdc0-a20b-454a-98f8-8823caf61487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3385f34e-0588-4615-b3b8-29fe92267a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82fe5617-1211-4fe1-b166-3a35f9a6cd7f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf25caf-b932-493e-bba3-a97f807f8d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22d22e08-1b3a-435e-8341-6b4b66207deb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5181e441-3ff6-47f5-a310-1519aaa1b486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "678e3656-f5c5-4713-aaa7-c27ed64b2770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b6d53c9-4421-4fca-962e-247f2ac92122",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a864d45-60b9-4416-b361-3f924bef58be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "351a41da-19d8-4c74-8d35-b4815b4f584b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5102e6-1452-45a4-8686-d31c2ca51a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e39ddd1-c9fa-471b-919f-a67e6f983145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29345d71-526d-4cc1-a835-f5be1b348dc7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8904e0ee-e262-4b3d-9a44-d3eb08b36a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6bad727-acc3-4cb0-ae96-e14e84c24790"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a0d8d-56a2-441d-ae5e-2aeea2667e06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6f9a8e58-440c-4e7e-8c4e-065d0570e7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f245eb85-ae64-489b-9b96-d5530a960f4d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80f3e06-b3f1-4bf1-a61d-a806ece1855a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c089e063-ef41-4e3a-acd9-798254f891ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb25b5-180e-437b-bedd-248d4e6d26fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3ff42af1-3b3b-4b1a-b88c-a88bd31e0b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "034fd0d9-f888-4718-b573-5cd3d13419e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389d08b0-1070-4475-a927-5b6527afc154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6804922-1f9b-490b-b237-347e80e2c63a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e92a1ee1-643b-46dd-8a3d-0074d8dfb513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc405f37-7032-42b3-9af6-fa1f1b449e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8a8cb9-c92d-4753-ada1-9f83c9f457cc",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd399151-40de-4941-a18a-2f9f040ad329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3cf4999-3cb7-4695-8c02-2d8a4d0e5837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f597d77a-9e1b-457a-8eaf-ce04bc024ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead0fa2b-c7d6-4c71-94a4-b69559147225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45577b4d-6e86-45ce-a53e-2d303d12d632",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5678ff1-6706-4909-80f8-36c5c98eecce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ae5b63-08a1-4302-815d-9df4605d04ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ca527f-c352-4933-88f8-8863c87d3907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7465fa9-cd71-41b4-a93a-8a5336b729ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7294a263-c634-46fa-8433-bd865f0b21e2",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51906c7d-05c8-4e68-b48a-31ed73ae4820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc217c34-50ac-472b-8112-a4b6d1470534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e784822-a594-4dc0-afb0-675e2e35c218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cec803c-80ba-43f1-9bcd-61c55a309544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9ef99d-620d-4610-8ea4-ad8fb725e1ff",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cb6881-3c9b-4ea7-91cf-720af14e6c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c04ab8-adb6-4012-ac35-4dd41511a529"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75ab7b72-0c05-47e9-965b-081628aac8b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17f12ae6-be28-49d4-ab96-06b304a7fbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e711ac7-f61d-44be-a4a4-ee51e81fb772",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a53498-ec84-4d85-8ead-0f19b0ab0573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86bf2749-8dac-4523-9f53-f5e12261e5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be958711-992b-423b-a1a8-05b6da26f559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a15db75-5e5c-4c2f-acd5-356a2484825e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77f11ef-7662-4732-8ee4-6c70480cdc1b",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d54bcd2-8c05-466d-8535-6fc75886a976",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d628ecf-4dfb-43fe-b255-f2ad0b25d35a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0db946ec-5ec9-43ae-9026-63708403d3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9638440c-5433-4605-9aa7-616d25abc9b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e80bdf-dba5-4678-893a-36f08c20b35d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54459be6-748e-4efb-95a3-4a0f480081fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a137218-c707-4af9-862d-842c37e42d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ba07e9-c5d0-434e-b653-34bd8deaecee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5344a15a-a171-4d9c-ab1f-02b96fc53d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20bd0b19-a7b8-4e40-be75-ae70987bc1f8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7b420e6-0f67-46f8-ba42-62870c870fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d943ce00-91aa-4f6a-8609-99fc55365037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f410104e-8439-4e37-b076-6b48e51af9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff7290a-9477-4b78-be1d-a8c4bd438967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41a324d5-72c9-4738-bb64-9bbb56f72eac",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e837cc47-785a-4503-b090-04f625d09ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5c44d6-ca26-40ce-a658-d31cad0bf97f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d253443-b941-4f3a-bb1f-7fdb4833179f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d96580ae-b6fc-4f13-9474-2c575fba1f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8ff2e3-0fa7-4977-bac6-7db2fe7ab8d6",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba25d55-fbf2-4f2f-a19a-82dc71145462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66d8523c-d632-4fdf-bac0-c5b1f00280bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382738ea-d82e-487a-a106-0db56e3ad05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb617a30-db74-4f18-ba7c-86d66ca29a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97258100-e2c3-44f0-8069-e0166af12f82",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad333b6d-b9a5-42f3-b582-422618dd79a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7f2e60-ecf7-43c1-8963-9af5be1a8512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ab8597-48a4-453d-8ee1-08d704fb96d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d394aa99-113e-43fe-ac6b-c77bb4a6bd64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a408177-96f3-42ae-9b85-140b3567fe7f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1186b270-56d0-4322-98ce-fbe0f0a3f6c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d42363-72f4-43a5-a909-4d028e381228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c3faa6f-fc94-479e-9513-ba551c4b2e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4213c48e-99c3-400c-ac39-726bd5ce960a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ed2ab3e-3a4b-4c48-8b23-7e496ab7c9d3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a752b6cf-d447-455d-b124-ff692cf3e84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8532c7cf-5f54-4a6d-94b7-4e4976c86850"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee21370f-4388-4ceb-b148-5fe4e49df6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "bc1b911b-2a0e-420c-a055-3858b99de9bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a3e464-c099-4ee8-87a1-8f8d0675d662",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7d7143-bc29-433a-8a54-c775a48aa1b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0866bfb3-ed91-41bb-8afd-4b1400753908"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c5dad3-b9ce-4855-a4d4-e68a53f45202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "10dabdde-a228-4af5-914f-9e1ee16cd91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bebb5758-c02f-4fc6-8bb4-132d750d1aa6",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de17f3e-4c03-4fb3-b56c-14ab60608903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbfe25f-d59c-4a61-ba77-93d2cd4fc7a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc85284-558c-4c0f-8874-3802c04007b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aed726c1-90e1-4b26-a49c-8ddaca6ce235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05060a1-aa53-475c-856b-6cb3650f17a8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0223fb05-ce88-422b-8010-3a3346185201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a8872c-f23f-4b86-8cb8-e08449bde38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59560020-b64a-4fb7-b8dc-fc9f2a99e226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16f62c39-7a77-4271-9340-11d5265ec109"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a2eb14f-657f-41aa-b777-80ca86397f4e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eb29da-07cf-4661-a160-d102b53951cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac726e9-17ba-41a9-bb35-2cdd462b21b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3262372c-cf25-408c-b197-61e31928b8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f327c89-ae80-4cd9-af7e-55279e5f00fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a424791-e3ba-46b7-900f-ddc1272bde87",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd8573e-e70d-4e19-878d-86a840b13541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7346bf1-04df-432b-a770-92334f65cea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3e5360-0bcf-456b-b4cf-a459235cb6b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "fdc7b7ad-43b4-409a-9b77-898e20baf8a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72443342-0b55-4ea8-bad8-b113ab8d9171",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f41bdd-725b-4a50-aca3-981e39138385",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "862310e3-055e-42f2-8910-ee109329d8b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8561ad98-319b-4902-a740-f66f61731390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cc1c4fbe-2d20-463f-b035-900264e8ab29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf14ddf-1b50-4fcd-af2b-a5c3ae041222",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cd6557-6f90-4360-a3c8-8fadc51aed21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae65f08d-d282-4431-8c8c-aab30787e969"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ec2d594-5aa1-4b6d-a5c2-1394c11ae9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b75d774-8390-4d4f-88dd-8aaef0d9909f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de65015-9b9d-474a-b048-5886c64bfc75",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bde4ce8-8f50-45b6-922f-5cca594f8712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750bf4a7-a09a-4df4-a726-417512e8b671"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b591d5-de84-4d51-b7fb-3e0c103ca40f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b45fd9c9-6394-4f5c-9df9-f8d0f778fa66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d844fca5-7b68-42ac-b968-9d7307b5b257",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36eda8e2-651d-4056-9720-14bf39c643db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "369d4c4a-c335-48cf-aae9-2f0072bb3bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e59ec2-4134-440c-9d22-1605fd33f1ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "26b3c47a-7465-4115-bba0-201724d3949a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0e28a11-8ca0-49fa-b216-f9fde4891b6c",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "410464fb-81dc-495f-9d13-902c2431bb48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "527c5d4f-2b5e-4443-8972-5f3d038df31c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0818edd3-c925-4079-ad16-53bb69a3dbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "fac9ff10-394d-41b2-af67-d357cb81e4e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c67104-0f95-4e27-a187-e7393884ed61",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753e752b-5d17-4d8d-8059-ac88b70646c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "828f3157-8a94-4cb6-8386-a8813438158a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0f3531-8505-42fd-b8c3-9bdda97770fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bf5ff5-9599-4430-8be3-35f364a7738b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f247a179-b57f-4059-816f-6d8f4853c6db",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28fff7cc-9034-41c2-b1f7-765a3baaa602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84b8ada9-a345-450f-8f27-31ca763f4df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fcb68da-6175-4ef1-b034-345edfca44c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "fd452a7e-de2d-4416-aaf9-b1d701ce210a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145a2aca-ae10-48bf-8f1e-81a1c89ce3ac",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae9e8d2b-876a-4799-b5cb-0f0c22b4873c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a04154b-0c03-478a-9dfa-9b839ccd7498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9280e40c-30fb-421d-a7cd-0acd2ba5820b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "145189e7-5aaa-4602-b5ba-6f4061804db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e491e8-fe62-444e-8773-c54d45c79131",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d0783a-0bc2-4077-aac6-e5faa5e3a84c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fdc9537-ee83-4458-a2cc-4f5fdfbb2c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c68341e-f0d5-4ff4-bb5e-32b9a81b9742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2444e50-e665-40e3-a3cc-97ccb63db0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f31b62fb-d09e-4cbb-863f-497cd84de33d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f4d93f-df95-4753-81f2-a79872be82dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d200d0-6f71-4cb1-ac53-78788c365fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dbfce2b-bdab-4df7-813b-b6eddeec1d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b53bb7c-344e-448d-847c-86f8dff7e788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0ad80cf-e51b-4240-bd82-73a337e444d4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbf4e75c-156a-42a2-95c7-79bc9b2825ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49927c7a-f612-4bc0-84a6-2eb6fe2e1084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02f6dc75-dcd1-4760-92f2-137cb1adbdb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5851eb0-a190-4c93-9bdf-b76c1b3d7801"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13ecb802-72e4-4db8-9af9-7b0857f1d310",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a856c77f-ec4a-459e-8b37-c30b80fdc8d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fe87de-03fc-4f9a-bcee-6b3870578052"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b91d527-848f-4caa-afe1-66ba0604ed9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f7f30c0-25c3-4051-8e9f-77f93021cda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daec9266-54f5-45e5-be16-5f60e8777655",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "877c96c1-67ea-4ac3-b261-d015a411c0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9644b716-76ac-4aaa-a215-bf2e82ec3f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "622826af-c13e-428a-b1ee-e0b4066a919a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "23582250-ecbe-4b40-90e1-d0236009f5d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a9637c-e7cc-4736-a288-d8cf49a6bd65",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc2eb61-cd84-49a3-8930-80479b3673f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0203398b-0d32-4a1e-9d22-f3c1f146404e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b283824-ff32-4bd5-903a-cc96d78c6e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f2556549-04c7-49e0-913b-e6d9e432e3b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f848e2-6302-4c32-8981-2f9b9ea7a218",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39f4ac9b-ef4e-4b16-b3d0-c8374adf3855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbe99a9e-01aa-4e14-9326-00be743c46c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97dea139-588c-4b3f-831a-2b3eaabf1ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2270f12c-14b3-46b3-9d8c-4281a63f7bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f41d40-748d-4a9f-9977-bf2b9821d67e",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83636243-edba-408b-89ee-a72c081333ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca54dcb0-00ae-42dd-8ec1-7ff2ebf58d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0fdc0e2-b9a2-48c0-90bd-7ac0cb7ddad0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b522d97a-02ca-4783-9fec-0b91e4bfe1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85a92440-d96f-4a05-8ebd-704378e14390",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a54ad2-ef34-4767-97a5-4522f6774603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7dedec4-36d3-412a-b56e-a0bcc84044f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645de06c-adfa-4446-b4d7-27e3a26869e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c10001d6-3d33-435b-a332-26574d4e57b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f53f7de-5269-481c-9e23-b3b44a32b98e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4490be-1f91-48bc-aa86-20db0a22d45e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09fdfc1-35e0-4163-ae01-64a33a0744c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04a3fdd9-d139-418e-8430-a67e620ca2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "006dc3e2-0121-4b31-b2c2-6a2f4e5b7625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7c98df-a0ba-4821-8095-d6e7927cfb8e",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ebe576-91bf-46c4-8570-01205b6347ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab6c433-2551-42d9-8291-50d80ac93bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b624c13-b558-48c8-9b9b-b1ae1c4e65f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14c115c0-23e0-404b-a33e-70ee443c38eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf958e8-a389-42b5-ac0b-ce2388de4020",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8477d1d3-2bf8-456b-8f4d-702134d0e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb05759-9a08-4385-b855-50fd9e3f9953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc7dd0c2-1d88-4345-8001-8325d9d3b26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b179f12f-2df0-4fec-aaf2-5da514e4806f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcc1cdc0-f554-46c7-841f-66e46ee50948",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53580d2f-960d-4c2b-b204-e59f45560d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92eaf962-b138-4b56-8af5-8b0436ebccb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b4d6df-4d34-4720-8b44-7e6e8e4164d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ec100cea-3800-4488-a507-b6d8756e254d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce04098f-c907-4223-80a6-fed962af9d36",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92137e7d-c710-4e03-a4b9-c3c8cb1f62d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1111868-f0ae-455b-8322-8145654315dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27fd8e20-0234-4ab5-a4c0-0ee48abb71a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7f9b09f-ebdb-49a9-87de-047416daacdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f12484-2fc0-4305-8966-03d2898cc405",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f65b60-27d1-4047-9825-b7fa4f9908fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76197173-a1b6-4368-8fa7-db8ad47fceec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681b79b1-cb2e-4b52-9679-8c759b0073c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4f94d73c-8220-49d9-8a02-82aaf407e348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92660da6-2f0c-4ce8-9ebe-d291b095e6c3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d226564e-8656-4f43-a41d-94b86dbfebab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79f6cb53-b9d7-4f21-bf42-07f71f6e88e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9157bf0c-f9c0-4e63-b191-cf08e5ae34c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "68949649-e98d-421f-ae03-7233606b3e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0175c50b-7ac6-4933-984a-8bdd633c5076",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba38a4f6-d13c-46da-a036-4444837b9930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9c015c1-5b38-414b-b622-2a147f1b57c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e0cb30-e457-478e-a731-f7bcdcb13971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2d3b97-d61b-4a61-82c8-b67b4528be44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582b28f2-a5d9-4ed5-b7f5-0a234172d1d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37124b8d-cdd3-4d19-90f6-a8219e91ff2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db8e92ac-62c9-4d34-803a-f0ece119ac89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc6335a7-a649-44b9-975f-441c0715a2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "37b9fdc8-5987-408b-8e28-bcd9b3283101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51c1cf63-7824-4999-959e-fe4a02606e60",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d87f5f-9ba6-422d-a58d-5aa742aad071",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f7d2294-5390-42c3-982e-da09c14a2a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715fd014-5dc5-4136-a7a3-2fb0792af61b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "577e9b85-4ebe-4447-ad72-67d604302750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f55b33a5-ed6f-4675-8866-bd9796e9feb1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32de40cc-43f4-4171-8c55-ddb28ee03925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b59a4cf-9833-40a3-b100-15f3217d23eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "517b5488-a9e9-4698-bba9-64a3a6f696e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d781c7a7-f2fb-4742-a0b7-4c10cc41ec97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a1001a5-0a8e-4f35-a4b4-e00dced844ff",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9209bd46-5d6c-4359-9c87-7def275f4308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "138dd398-0665-457c-bf61-e6b23adc99dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79ddd115-eb32-45e1-86d0-d0a79f8f56c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1baf1cb8-598c-4cc6-b47b-d6ad4d208179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f1643f-5447-4b20-8094-23d91f2ca508",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1843207-930f-4183-8b22-44e19c1e4c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cda2018-2d27-4b15-95ca-2e27670d5495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf2e4dca-dd7b-47aa-9b66-3ef883d079b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4200f3f-75e3-4c1f-be9e-6c092a890191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d176bd7a-413f-4a5e-a215-8083513113c4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2dfa67-efb7-4378-9f72-32245134d287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02ccd0b8-f994-4d00-ada8-26d084fac845"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e5b8ff-caa9-49b4-a37d-152ba9821c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d25df91-7fab-418b-8941-9412e4f55b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da334a2-7f91-4bac-b797-ac5813b5883f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e44829e1-466b-475b-99f6-745a6aa945b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "132e6ece-d1e1-4175-8868-f19c967afc8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb13a98-0af0-42d6-944a-75c03805d626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "908f464a-eded-4ca2-83c3-bb620551731c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82c43fb3-c226-4530-b9c4-b878adf359bb",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96707d1-30a4-44c0-80fb-0ff430d35a1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcc915f-c94e-4d35-ae29-5095aea9d741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c52825-a2c6-4e63-8dd6-16fbc4a2dd06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f4a258a-5977-45b3-b2dd-c78e2dc0787e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371bcc4a-0f73-4f08-849c-6742e27794e3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "325224b3-b75e-4d12-98f9-30e506bdcd57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d6cb7ea-1a7b-4301-a2ec-9bce1fe3fd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f48a2889-d7fc-405b-82ae-27e1c7d68b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "52d2aecb-bd4e-4b0f-9ca1-c6fd44bf9f70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92b2009e-60d0-4f7f-ab35-79cf39b020a3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22803f3a-74a6-43cb-8093-866af1fc7d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502bd3f0-4653-46dd-bccf-6782e46831a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb6b774-cee5-4d8a-ad2e-afa9e624ea09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8bbeba1c-e9fe-47d0-b353-692d58a18cb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a292c71-160d-4ef2-8572-14e600a04a93",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0773e5d2-d382-4126-b51c-4076484d4650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77811f6b-bdd8-4975-94b0-0d3085a04b6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d465e69-d057-4508-b3b7-a14db5a061cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0fe628-007e-4127-a111-aaf1b28499ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c16a48-d369-4696-b997-568844175938",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b46ff8-c733-4077-a6b4-7118014b1f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5066578-9aa5-47ca-8679-2c748b5082a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd388d7-6103-48ff-8cc5-ea59136c032b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "71a25bfb-c847-47db-9238-941fd7eadaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63a980b5-1ccf-4e2d-814c-ef7bc7bff750",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174c2912-3e7e-4934-a3c6-422959251709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbcf42b9-aa1f-4f9b-9e5d-4c00b9019245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83dfa46-84c7-4289-94dc-b2412006753a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e29ceee-7efe-45f1-ac99-13590bbf68b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c40ded26-c4de-44eb-a515-85a794f75030",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ae104e-72db-4f8e-ad75-f1a15d351497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c18b98c4-ba1e-478a-8673-26555321183c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11e9d1d-d728-4eaa-840b-4d8a8b228cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac3abed6-fb55-4743-b2c8-7954b4caddd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3d4c33-8d0d-4d08-80cc-e9e757ab5489",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4fbba4-8917-4d86-a92d-bb7f2093ac55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef362bf6-7fbc-4772-98b9-447e1018f6d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ce9d7b-6b1a-4ca3-96fd-0310308f01e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bad1900-da3c-46ce-a6e7-239e901e32e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31987fb5-5831-453e-a2bb-cdaed81c5d5b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdd55c0-c042-4bfc-84ff-5deefb223e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8955252d-120b-49f1-815e-1d9cdd7884e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f62986-7a8f-49af-b856-eb823c90fd16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f498fb2-d461-46ca-b718-74a11242f4f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec19965-33e6-49cd-b120-cb8812c52ea1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c0615a-62ec-4ac6-ad9f-91d211cc220a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f32252-a80a-4a1a-bccc-00830016d444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbfff662-a303-4cf1-b04c-6cd8b5b7a291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8ff7eee-6c9a-430b-9afc-767e07ed6e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef2bb64-c22f-4ee2-9e84-1bbaf9619d69",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e834cc00-6250-42f5-a498-b23b8382e3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bf189eb-fab1-44c6-af89-ef802b16279d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dec13ee-b5f5-447e-8ae5-63d5c4321eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c244023b-0a9b-4a75-ac65-ccd0b4eca4a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c5d5bf-9e0e-41ca-b407-6fd262682b9f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b6f7afd-1f6f-47c6-ae8e-147b6f99da4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3759054-949c-45b8-b471-beb3d8aed105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b91f31-899a-489a-9658-82934d866b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fbdcbd-55cc-4601-a70d-1461b96705f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10a810cf-7487-497a-a99e-919fec627bee",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da009ea4-9c24-4057-bbe0-66ca80c4bf20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4bd21fc-371c-4894-9f2a-14f129389896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bccf22b-efab-4e27-a6a0-67b1d47f47ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2697038a-7850-48d0-8e06-3a1cb30a1b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1504f9d0-a8ad-4cc6-9c9a-a725c76193e1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e39d7906-14c3-4097-a9d4-72b841c935ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423fa39f-528a-4ded-aade-6f190af10bff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bc286f-fc8a-4ccb-8cb1-517e6fdf9111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3cc76d-7e44-4230-aa56-8fb2e9eccd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea513f07-7778-46cf-8409-4ddae1b2906c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ea0e63-5499-4918-9ba5-0fe637f18cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ad083f-6efd-4ae7-a86f-5f08627a48fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7780ed-3e32-493e-9e02-3a854ee7d4ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "78d2b679-9e85-4339-b6da-1857e3656663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59fef96b-2596-4128-9e3d-26c902371dfe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bb1d47-3cdb-401b-b638-9fa28679eeed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b0f5bfd-4336-4213-a980-b7e3a39a27cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a67e9ea5-1040-4b48-bad2-f020e28df980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f72d15-57c6-4f06-9da8-3fecad75cd85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17d7fb1-595b-49f2-b15c-7eb35ed0fcbd",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0d1fbe4-eecf-4e69-9cf4-ecbaafb35995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6c3d27-5f16-4b4f-bba6-37d9fe824e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3340ba-cf09-4173-ab26-528bc7ac58a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f9171d2-9612-45c3-8fec-d5455049d50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ccd51b-4ee3-41e5-920a-e5589d629bce",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e349f80c-7e9d-49d1-b2b8-fadf3c790948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5beb5a0-cf7f-491e-9954-0b2b76e397af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e33e4a17-f141-463e-a648-8a72587fe053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "74d17527-975d-4606-9342-26a32c79d0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf840158-7e58-4491-bfe7-266f46074164",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e299b021-02e2-4ad1-8b63-991e690d4d23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5331db2-45f3-409e-9cea-666dba33cbf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef15b91-2ad5-45ab-9249-8164c1c440f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "75c9c263-b426-4c4b-9392-094e0eb1ed23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37be263-cce6-4d4d-971a-5197da13362c",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8cef850-0c45-4771-a693-e24c56ecab06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d5dbc0-396f-4b48-8c32-022ba5499b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de0b4aa-2c7b-4026-a795-b508cada9d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ebeba9d1-4faf-4aca-815e-59bcf697567b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d50ce47-d00f-45fd-8947-cfd8226d309f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e7086e-deaa-4952-b98e-e9cc05d4c9f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7379d4c-b2c3-4e7f-90f2-6ca0b83c21aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1171c259-486a-4aa0-98ac-746eff027c31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1608b41-f740-4ab7-8d79-b53d5cad140f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c674865-483c-4d12-9881-8bffd527c462",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68855f96-1c4e-4250-bfb9-f002d7a5e73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4776d6ef-8a15-404e-8199-0e9b2cd78b69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770801d9-a547-4209-a585-9f44d712cf0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "21a9ea77-1d3e-4339-959c-bdac8cbd7628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6c4e6f-8bea-437f-a359-762d9eed2573",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e72a6bb-d4c1-43cb-8806-c1e0b71bf65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27c3957c-c7b4-478c-95a1-1f631be8916f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96dab94c-df7d-4c7a-91bb-5b2ec9ac9cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab6ad9fe-f063-4809-ade5-aafb95fd9699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4fb383-9783-4ffd-966d-cdd8dd142fe7",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f89304a-328a-48ee-b976-ee3591800b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ccb9456-4d84-4174-988e-f88d866a8723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbc6680-64cd-482d-9790-63f8e53837c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e52faf57-023f-410a-8647-aaf4107f05a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f67ad6-25ad-4789-8da8-b8718700346e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa25ce96-5e6f-4e37-9600-70a29aeba08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "05b43d57-ffd2-4ad4-9df5-49e304da6cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e525c1ff-4ff9-4565-8de6-5b1d91e4b1d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0115fb8a-41cd-4392-b1ed-14db54c48208"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "70db8163-abc7-427c-86d5-399dff31143e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa9ef86c-586f-4f3c-ae70-da478b01138f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c0094b-84e5-4844-b9e5-8d3a07eea7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dea8b4f3-f812-473b-91d2-fa258c7ba5d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4707ff11-be28-499b-b459-6e142f874cd8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2423f293-56bf-47b9-b891-a0a5859a0d6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7d7e8632-34ce-4f7a-9f2c-ce54b729baa6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3a38db15-7e34-4c73-a04f-989b6a1061f5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "68828943-dcc2-43e8-aeea-05045bc328c1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "304432df-c51b-4984-af4a-fe033ea3ee2f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48e396de-ee3d-46d7-b929-699e67f66eda",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "867c5858-8c52-42d6-b7b4-f93ac1c8c1ce"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "046fe593-8452-4c6b-b81a-5e8932efce81",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e0952dcc-75c6-49cf-bd3e-33dad0618974"
                }
              }
            ]
          },
          {
            "id": "e989766b-dbb0-4766-a3e4-b4358f450caf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7317667-6171-4c8d-96c8-9beb303b8727",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "a7af9f0c-a31c-4559-a942-52b80293e7b5",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "181b2640-d7d5-4701-8c7e-44e2a3305503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fa632557-f245-4de7-a174-a896ca9b59c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a86da1-9bbd-4658-bffe-44d50b9ecee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9cfb0b9-c88a-401f-b300-51904abcb3f4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8a3b5590-5433-420c-92d1-28d4675261c9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8be937e1-230e-46e7-9af9-05da48dd1e00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "37e7391d-6c52-47b0-b87d-be4cb935f705"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ded47c49-a97f-47bd-88b8-af9afb7f7168",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ec31ff3c-8e42-4857-b702-18f51bb7fd1d"
                    }
                  }
                ]
              },
              {
                "id": "973c9813-d6a2-43ec-a1a8-90137d0d6548",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f2393be-50f1-439d-bb61-7a1b072f6c95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53e83c5a-ce2e-4b5f-9dcc-75062ed154c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b9b756b9-51bb-428e-b255-1c087fb65720",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "44f584a9-7763-4f1e-836b-c2501d6c6812"
                    }
                  }
                ]
              },
              {
                "id": "86ac593e-775b-4a4a-b00a-7c247c6c67b4",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df447a73-ad45-4b4a-a0fa-1fc6ddcc69b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "294d816a-13ea-4b3c-ab79-ae333c66f870"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3740ef56-edc2-4755-8017-c7d5130786f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "326f435e-03aa-4c68-8bfb-a7f7cc4e0bf5"
                    }
                  }
                ]
              },
              {
                "id": "95db1dd0-d77e-41c3-b854-3d9983053558",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d802ccd-792f-47e8-8347-5bec1214b591",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86438a19-a66f-46eb-ba4b-9d9a27626d52"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43dd2ebb-be19-4cc2-be54-b276ceca8447",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "22c536fb-61a4-4b71-b419-29fa0970475f"
                    }
                  }
                ]
              },
              {
                "id": "d0e1edd5-392a-4c27-ac17-99cb74f3bf0a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79f70952-1058-45de-b765-7b9911bf544f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28118b35-fe33-44db-adab-fe4fb8ac3e5e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c65de12a-7022-4e66-b349-0dde2f57141b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "579ac725-4a23-49c2-b8eb-2e2324be9904"
                    }
                  }
                ]
              },
              {
                "id": "0e260363-0ba5-4c5f-8adb-0383826c32ff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1c40f33c-ab14-4604-8d23-94d33a38cb47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "690e5b7c-1631-4252-a0e3-acb46f96b7b3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a44c4ed-6e2a-4a01-ae9b-7547bf981870",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "da8b1d16-44d7-4ff9-b3ba-c3eb8b68e199"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ba4be78a-6645-4777-91ad-e8b950229ec7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8c4f037-0502-4671-8971-a7b786ed293b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2377d350-6d36-402d-a5ec-cca965c5dcf6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c9df1987-258a-4698-b94d-55b2753b7cee"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ccaaa2a2-b9cb-4bd0-b855-75afb04ac646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a627eff6-c6a8-45eb-9ed0-acc1ac0c69d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9317074c-9010-4bc2-a40f-d6fcae5445e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6905253d-a653-4f3e-964a-f18b8eb3531b"
            }
          }
        ]
      },
      {
        "id": "283765bc-7549-43c9-8540-7ccfdedb960f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e381b8f5-c4c0-42e0-9349-117db200b9ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53105746-d282-491e-b3b6-41b2d4616ef0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "2cc9d6b1-5375-4f1b-b603-b398b943122e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec4e2a6-44e2-4775-8720-85d3bd83377f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e14b4f9-3458-455c-8ac8-e7434420f24b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e56d69b-0e33-4327-8bed-bb81f359e2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "0593ff73-1955-4c96-a0c5-9c2fe3bc701f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e10070f-d957-4733-ba18-989b26144448",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d1877f6-d7f5-437c-8af0-e72da02ecebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d6540ac-4015-46d9-9c15-62cd0902d99d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4df41fd2-97b3-4cf8-a958-a7ec273bedb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7b940be-6c62-4bf0-af88-110605554c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "626dd389-047a-4136-a8c7-ceb2b696a83f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af180172-1fd2-4abe-924b-f7b64799b428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e990aa-0f86-46be-8aa4-12de3ae7eaf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf61e4c-bdbc-478c-a4cf-c5075f4b34c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab71f669-63ab-4914-a52d-700b2596db7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e28e002-3605-4d17-bc2f-2b6d07a7fe6f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cea9438-6eec-4c59-97b5-3fae3d292a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "425a1e2a-c5d8-490d-b636-6e01942a00d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05226e1a-5c99-4ec4-a360-6efb9e9a1045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e500696-1ff6-4d9f-98a7-25d133d029f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b674f19-15d5-4b83-81f4-d3627f4e587a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dcb3cbe-32d6-4e8d-a68f-c1858a638def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0897e338-f70a-4f41-8dd0-47879d1e4da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e2200f0-0f7a-478e-b1cc-c53076d1c7a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da72d6b6-bd63-426e-ac2e-f49ec5825370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0c70767-bc4f-4c3d-80b0-0301a31a2f6a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "406ec934-e622-47e7-864a-67b361509081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc8f103-f473-4d42-bc7f-49148ffd6534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5f27d5-e813-4679-bba8-22e5bde9a31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "edda4f3d-94c7-4b04-ae6e-66eb36cc0088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435b2549-91fa-4ffa-af99-422706b3e9cf",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24155e31-702f-41a3-97f7-7adf00611888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "687d7207-3478-4138-945a-673608fa2890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b6653f-066a-4ef1-9ada-94442b244275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9e7e6b-c805-4535-8088-3842634c7845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00e51411-e22d-47be-a17c-1e61cba4f62b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f16ba1b-482e-49b6-8eb2-400aa01a01f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e63e55-97bc-4cf0-b543-95d898647cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d615f9bb-dbd3-4e3a-92ce-ca5d9fef7c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6107695-45fd-4915-a61e-de9c50c832a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b29b960-c048-4b3d-84f9-1629dc6ec278",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5fe14e1-66cf-4f3b-be64-4ae28bbacd58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e330f6-a29d-4448-8520-9cf83ae5c70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d67927-1adb-4703-8c11-bd2031017e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48449021-0f5b-4957-a5e3-c351793efec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c686930-b6d1-40dc-8a21-08341117ca7a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c9b181-88f2-407d-a512-1760c4a1ef8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71d1ef94-75d1-4711-b8d8-e9919171df7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d791fac-f9bb-442d-a97a-53c4970b1161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dec27b0a-ceef-4bbf-a1aa-65b37911d5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e394d209-838a-4981-91ea-c685f30c8a63",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5612ed72-f595-46f0-9f40-a455c7980574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56197e60-70df-4356-b7d0-070047cfa899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9eabccb-909a-4004-a1d7-085656601bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "2105c247-137e-4f88-8c55-90079b31c653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b58ced2-5672-48fe-bd41-6aff59d1f6df",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3035622b-f3fa-47a9-addb-0cae637c6bfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab67ee88-9ac9-4a17-a9f5-30b36a301696"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "745f5cfe-ea68-4a37-8373-62b92d4cb106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c720791d-7dd2-4125-9b0b-02269dc3c810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fab2e56-cf76-4511-99b9-9c81e399606e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "add56c44-3350-4191-8ea3-6dcfd55831ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c13e174-a542-44f3-8f66-425bceac1ee1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "397e8bbf-032e-47b4-ad14-0f36e8bc81b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d56b98-f12a-4824-8627-acbbd17cccef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee43d9a-bdf4-4443-bc6e-bae16380dfc3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca9f1d2f-d541-4f27-90c7-d4c695a3755e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7abaefcd-b3cd-4071-b60f-2c72e692d0b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80fd3ea0-c56c-4694-84e6-9c7505331067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "89952ba0-9d0a-4761-b0bb-2314d4545e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70021177-0619-41a3-bcb9-86e3ff83688e",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "941c1f9e-08f8-419f-aa53-a1d57eb41d6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab95f30d-75a3-4fad-a7b1-372e4dae5e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37292dae-2f8e-43f0-91e9-132b6a64e3b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb51e816-4603-4f0a-ba0f-62d920eb5a42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96552ca2-8178-4b07-b038-b1a33b885848",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2020b0f3-de00-44fc-9eb1-64836ae78461",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6d322e9-67c9-4c0b-b3bc-9c040d12d33f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8db19d4f-7eb2-4c90-b28a-7a5b94b4a81f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bca6b8ff-ebf9-47a9-b9d4-c81c354e451a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c281f1b-1994-43f5-ae70-6338eeba207f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf29bad-d5e5-4260-a832-82d6dd2f7761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3731b39-d487-4300-8d51-24f782548a8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f1d1d7a-9816-48f9-b303-a8254d64ae98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "f857e6fa-5a28-43a0-90de-500c26e042b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b284956-fe9d-414e-a53d-ffea5fb5dd9e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777bf87d-c107-4fff-8f9f-b6e976bdbd00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "541f721a-a4ab-472a-adfc-abfcd1c2a239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06825a12-bf1f-420d-b8ca-be343cf9a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6284bbc6-263e-40a4-a761-9b88570c4ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bfefdc9-9bc0-40ff-add9-78b4e60ff2e5",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4c2095-8461-4bec-958c-8249a406d5c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "987768ea-d90a-4867-9bf5-325265ff5ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2966cd-4055-4928-91ec-b4164cfd5093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "345ae405-83ba-4e65-a985-977cc62224b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff205f0e-e5e5-450b-8e22-2b30995e1e3c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e0aa8da-a94e-4822-a610-ca0943c04d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c0f7998-aecb-4448-877d-767c43f23076"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1efa59-6a7c-4969-882c-633ff864dbdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97ed6823-1e01-4c08-a2f1-4204cf91e65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cac1886-a7f0-49be-918f-14c2a70b0636",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5e9d13-58a8-4c98-82e5-938a47ac4c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0888ee5a-1081-4157-a031-612047b59429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c47059f-d0a6-40e8-9932-aae0d13a3c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e864ca1-eb10-4418-8d05-669914e1dea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663119b0-1d22-4cea-95d9-4d6b52e0eee5",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c857e5c-7bc1-4362-9d5c-20a7cf7d05b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4cfd693-7fbf-4869-b118-f4790296f48a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ec0df9-a856-4de2-8c28-566dedd0926e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba69ab10-2195-4068-8bc7-7f866ec84aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daabb395-e85a-46de-ae91-a3a6be7e791d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6e6012-cb7c-40e7-a4d3-3e9bf6f31ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb56a2d5-0f49-4bc1-8687-04ca85cfa02b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f853676a-bb2c-48e1-9cbb-a2fdca111dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb6cf81-7636-49da-b8af-eee32ef8f283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e71cb1f-e25f-4c2b-935d-fa798250fe24",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ba361d-73ab-4e7c-9ae4-32ff929b2ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1361ab0d-a46d-47e5-bd94-176be56e580f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abee4399-5029-468d-97f5-20a2d784e63d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09bdc031-b20b-4fef-8268-8ae2ade8991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a652ce4-2223-423f-b01c-ef703fb37dc9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "447d1e41-09fe-46a8-9da5-b139e7369fea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f71168c-1681-4728-8819-4790d0bf3955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70deac09-39d3-4de1-b7b0-f39fa6b5d53b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "af1abbbf-bbf3-499b-a17a-f53a95498638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47fef9f9-b0a7-4ae7-aa7c-8a60d5aae6b2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80879e3-fdf1-4e54-a877-3235971a8f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dfe737-da27-4e3b-a0b9-ca3410962de8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3876c932-1462-4c4d-bf78-2042d04a33c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e0946209-324f-4196-a000-5e4a2c942ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50e25ed-ccfb-456a-b0fd-ca9e06a5dcff",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995ea152-3831-4eed-82cd-78837f640f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712de458-7212-4243-8e3a-5b095dfe22e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25e5b10-e665-4562-8733-7beb2823d391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b726bbc0-16fa-4a7b-b0bf-8e59159435cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18ed405-9de5-4782-92ae-c2d44c6cf182",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98d8f067-a925-445f-850b-a532dc200a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9efabc1-e601-41aa-afd1-ec3e746cffd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a695af-2628-46b8-9f56-80e928913aa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70c196f1-1099-4885-9145-5a5b9d40078f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6fcd7f7-b149-4dcc-83c3-ae5280e91d8c",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d670af7c-57c7-46a8-8856-710738884e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be069815-520b-403a-a969-1879a1a3a526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5bad3b-5200-4165-b821-c7a0d6859dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9da7cb2c-a9c2-473f-9bc1-e3e818ca62f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2690838-8006-4d5b-b856-f0c7501c00f9",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d4941a-49e8-4d43-b9c6-e1c28b72ff61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3c023d-24e1-4891-94ea-f63b0dffa60c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bda0942-ec03-42bf-8e3f-9ae4da33107c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31974a64-5e5f-4d80-aeb4-ad342b87bc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a1b3a9-edb9-414c-8657-02ef7a30556e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5892f63-8e81-43c5-bac6-71bcfc1d5ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c135bb43-c13e-47c0-8588-8159ebea149e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90976254-a1e2-4e41-812c-59a13d512de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2e4b246-df4b-4cf5-a3d5-d5406b372209"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb88b47b-8f41-4ec0-8e91-ae88d09fde1a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fc0873-6891-4aa5-9d48-fd44f83e5649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7accd2a5-18b8-43a5-8bfa-227acfb6c66b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c63af4-7dbb-4d50-a414-bf0961359746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0e2958-9e37-4c96-a0c1-76a145972c78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1d01823b-6bd9-41e7-840d-666302856654",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f543ec6c-2fca-4d35-b8c6-464c5aaa521f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5798993-359e-43cd-96b5-d67f5f4db213",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ae6b1f5f-235b-48cc-8d62-bc7f479c6da9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bbe050-eed6-42cc-bafe-35fa6f46adf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "98b2e024-1327-4fc0-95d5-d763f278b059"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d55b4d30-b39c-4ebf-9c8f-a3bebddeb5ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fef23247-bb24-490c-a719-5464b895ad1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1a69500-48e8-47d2-8e98-63ddbe786baf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3609eb44-eec7-4493-9e49-5143fb3c450b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2be37ff5-637f-464a-a1eb-01e2c808f6ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17b9a4fe-8789-45de-93bd-52a6d10df050"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bab5e19-88b1-42d1-bb90-a9edf3c91ac7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9b3de1f8-5885-4bc2-80f7-bd63ca6c8ee3"
            }
          }
        ]
      },
      {
        "id": "4ee100c1-c02b-4c9a-9a8e-ff9d75c74fc6",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e6478fea-c426-4a9f-830a-e2b5e2ff2de5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fa7682a-8aa2-473e-9a1d-06df42b3572d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e5f93ab6-8165-4993-86ed-a42d682fa446",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d9633cc-95be-44b1-a754-1d717ba7d86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88a87054-e7f2-487c-98f3-06649f99fad3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ea2e05-c483-4591-9e63-676d1de9842d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a5a69a0-7e3d-4dac-a1b1-6cdccc1c586e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e17714-fca1-4051-b5b1-f0c4b680632d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8ee8a91-0b75-4f42-a000-8575397d68f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed64ba23-03c6-478b-8bfb-6e12d4883d16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16125ba6-a0f0-4cf1-8f37-29ea3b3d7657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a5fd36c-9f3e-4f52-92f8-9295a659dac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d839e1f-da76-4ed3-bc2d-f0817f9f9ad7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df5cd28-4692-4cd1-b2df-97e5d6cdcd97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de7b218f-da1a-4c5e-9df9-8c948bd7a258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "493aeb57-ad9c-48ce-8d24-4e83b25ed669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f6066354-d93c-4c32-ad71-7719a01fc574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b296ef-21b7-4677-a0ed-8656e9791bf6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5178c0d-14cd-4de0-90e3-57b344d67a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac6e500-c5c6-44cb-bd21-e3866b120b8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06a9c01-4683-472e-95c9-77a9e52a6d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "759cb76e-5d8d-4bba-a5e7-d21c63a78edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f718b0-d273-4592-afb0-e8b7a5f8a283",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51154cb0-3dee-46c9-9f16-624594707b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cb8b173-7601-4612-bcbe-fa9ba277dbee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38db968-a624-416f-88ec-03f2b4a295fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4da95382-905a-4826-8209-1a07762385ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75839409-4318-43da-a26d-0570f371f04b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9ae120d-1ae8-418e-abba-52b46fdd2dfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23345aae-cbc0-47bb-b385-f39aa9f4d2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35111e16-fab3-4192-a7e7-94e4d5ab5124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c10140-5a90-4cdf-a867-b9313172c525"
                        }
                      }
                    ]
                  },
                  {
                    "id": "240c91a1-ae5d-4d47-81d5-6a90b1482d86",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa753d8-a110-43f8-8079-e70f1ba9abab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272a9972-3889-4490-9e4e-64e590e28b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a7a0e9e-1c3e-437c-b4d9-e40bffca549a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af459c5-0b93-4732-9a0d-cdd3b531e62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbe93e86-c131-4cbb-8424-4730651de855",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb5b26f-ce8f-477a-bcde-61efffafe7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892c9df7-a0f5-4605-95a7-545183bad4a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fd09c8-eede-4a78-b6f4-0cbebf8f22d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e0e75b7-cf83-4b1d-95f0-89e6ca9de157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9923491-25f3-41bf-b1e1-53fb15c22b3e",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ed7330-e919-4592-b15c-e5aea09833ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5d97bf-639a-42b9-9661-467d09ab98dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02245405-1a1e-4cc2-b6c7-29c7a27ee29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d03b4db-da86-407a-80ae-e8c172b8a171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02669d2-9296-4d0a-bc5f-26c09be8c79a",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0074e813-c0d4-418c-a6d8-72616e122f43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affbbb8a-531c-4a18-b855-7b27f0cc43a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48447b7a-8832-45ce-ad44-f0008df97d2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8cec3ec5-f7ee-405a-96da-d04a8a41aee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f45d9d-f865-4899-bd47-ff50b36053d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47ad28e9-2b9a-491c-8cec-20a55a75b7e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3fd59d1-f385-4eb1-b686-c25064e10a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9a899c-045f-491a-97fb-d587efbd2f09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4cef79c1-0d54-4207-aaeb-9efd749c4cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fee4ab-20ce-40a3-8604-e1a03ed4effe",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8762ee2-debb-464a-9692-a979d16e741a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b7e8e1-f490-45c1-8bf6-b96a7ea599d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ee28890-e122-48de-8154-6311f66aac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3aec288-de78-4d02-b8e7-fadbaf1cd007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567b8073-08ed-4f8b-b044-290c94b00c18",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b461a2d-9603-4ee1-994d-ff9abaab3959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c242604-2457-4c66-a5ed-d75587ef078b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fc8ada-25ad-4ba7-beb3-0ce576c4a3d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6057170-a633-4669-a494-c5bc49c2f993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcce8ccd-c6d4-44ef-89f1-cc9d121c847d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b35dc15-cfef-4972-9fbe-2a2ab6065cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03118b19-8da0-4f9a-9444-6182c739e137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b506ae9-a719-418b-81a2-44f343a93f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e29785c3-13c8-4474-8ba5-db9b042f98be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a45600ab-00d7-4578-895d-cd352ecce1eb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e26a2df-90ea-44a7-bfc5-18350358f5ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f54e24f-c986-40e4-9989-10cd8d293e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e4d160-c905-44db-a0dc-52b10e6c552b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f8fc90-9b8c-4549-80bc-6453c9545d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf43aab-ddb8-4c66-a184-602c87dd2898",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5230def1-241c-4c64-bc26-3c32a1081468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd36c24b-f404-4684-9544-26cff0684cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7052ea7-6fce-466a-b093-7c00dfa71163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea803d2-0ac4-4937-9378-2add4cf105c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f2195b-ef6c-4613-9583-db7ce4496e1d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c8d5f0-0e36-46cb-80e8-865d98e05162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00e19fd5-09cf-4a44-8364-64316f8b6e9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4429e809-5c6b-424a-bd6b-70c03e1649f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "feadd287-c006-4ed6-8c07-c3baa76f8693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e118766f-d29f-48ef-960a-431765a3068b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44b82112-96ac-433a-aa04-b2eb46f90b30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77108ea1-c1ea-4bcb-82ec-1881ca3ace79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a926c29e-d4c2-40c5-b5aa-a88003a7eccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bbf9658-df4c-4396-8829-3f5af742ddda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a150b34f-b395-4223-8197-17e6b4e58929",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d258650-e8d6-4f07-ab8b-af31dc51a1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a85dfc6c-1074-4527-9a62-e064619acf40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640d10f0-3d67-408d-bd7a-5d43e130ee47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c134a87d-63f8-4163-8a55-8afdd6ca233a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e5fe984-9b1a-44db-8e80-e4f89c27a45e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de029efe-9e6e-4ecc-b57c-72039f4f9084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f352b894-ae52-4de2-8b6e-46af3d5acfdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2823821-0ba4-499e-b720-84874b6d5548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7acf2cbc-35b1-4aae-907e-a752b1e37320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c41685cc-2d06-4daa-b47c-7c31f3d95ad5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d0930f7-910f-41f8-89ff-a31568bb4456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a373b3ca-7d94-40b8-a2c9-ae0d413267e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd56cf8-4272-43a8-bf19-e244b4f1127a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d23d876-7b4e-408d-8ddc-8bb1c01be02d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2443c9-8b09-41ca-b2f3-134a7534ff7d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7c82ab1-8380-4440-b6d3-cbe264dcf314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e8713f-8ab1-4a6c-863e-9efb5c8032a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d29e7378-6c55-4bd4-960a-c806c5512913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcc16dd2-a077-488f-aea2-c2fe175827b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0806f12a-523c-42de-b9b5-b0a32e888897",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99f78cc-d0b0-4c62-8536-f7b559641e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d82f4cbe-926e-420b-8fd2-0f4e9f9d8c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a114d427-40f4-49ae-9d4a-0a34d678be6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26260ad6-ef51-435e-bf4d-d8d39a9c424a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d57d8c39-48f5-4246-81fd-2d95789a4ffe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc8821f-e762-4150-9c4c-c0ae81407a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6a2a9d2-7ad7-4ce7-905f-b2263fe170b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7074971-b256-4aac-903b-af32e83139a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bff130d3-c20d-41d9-b50b-fbda8a7729aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed30eb35-6fe9-4d8b-9966-d5123b0d5741",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "513414d5-eeb3-4d77-bf70-5aaa3b6556a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb6c278a-fb3d-4193-a59d-0d3c6400b8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af57d0e0-a77c-4949-b9ce-eaaeec06a92d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37f0d85b-fd18-48bd-9298-c94009ae64a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5dbd87-4c70-449a-b583-71c0fc9abf55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49891d07-a51f-41fd-b6a7-bcf27c4573dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77fd9a4c-9c48-423e-be1a-c8b11cd152a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2158957c-09cf-41dc-b453-76b7b5cc76e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a5d4f58-70fa-445b-9eac-c187b975b813"
                        }
                      }
                    ]
                  },
                  {
                    "id": "794b7a6d-7ca4-4fa8-9613-900bad2c41ec",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073d81be-5a24-4e83-aaac-a21c6b9b181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e960ff-fc35-4d98-a6db-24d33d8caafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1158ee68-eddd-4881-b84e-1bd1a6ff0601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ecabe7-480f-4207-8d6d-0500b71d1f28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ebcb754-4d8c-467f-98ff-85a4975fc424",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37c8cea9-dd34-4081-8977-744b560c6f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e013bab-f352-4ea5-b04d-9bb6cc1cef3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674f6f1c-f03d-40c7-baf8-88bcb04e87f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "057c393c-5213-4954-9b38-5e4b10067642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba77b17-4ef4-4284-bbe8-b33397ad05ba",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "958c0ead-b532-43e5-9f7a-19dc2a6da187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0c7a5c9-336b-48c6-ae0b-5c55d57157cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af404de8-9d93-4da5-8c98-cacc8347ac42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13007e30-3ea8-4eae-b2f8-6b8ed65c9a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e883f504-de25-4957-b0e9-e44c2475e7c5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8714cd00-ee4f-4f8e-8038-84f9d914c4d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bae8845e-7c33-4352-a705-ad69fd69e788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6bec0fb-851a-45b2-ac8b-07c331eaff80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8421826d-3654-4584-9f77-73661bf3f70d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1f9a81f-8e54-414c-97ce-a47b51fa3454",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffa6fc4-7233-45f4-9ff5-5ffabb5ca407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94cb020-9c30-40e7-ac34-154bf5274fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e68c6a3-9dc7-48da-971b-33ce7474e46a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73e0df84-0917-4077-8f49-232e189bf0b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f8df58-ed1b-4b21-a079-7619cf2807f5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64aa26dd-8f34-42ff-8584-a889f4964f2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d800c90-e04a-49ad-9be4-812bcb7bf3d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d65f1e-68b0-433a-9ceb-a7f8b9f05e26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "727996e6-e85d-49d7-965a-0761fc8de4f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91f4f714-2834-4ee2-b936-e1fc68c5d1f1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c3391c-478c-44d0-8d43-f5b07d8be005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fea36f9f-8b13-4798-8f8d-f3efe1020849"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030b0fc0-7c22-4c9e-85e7-df5b393e0f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e41ea9fc-e335-4272-9163-05e6340ebd22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd379db-8a16-45e2-ae1c-1b1fb68b41de",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b4303e4-332b-491d-b91e-d2a59657ed25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e014705e-06de-45c2-b2c4-7f8608383d27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b78fa8-31d5-449b-9446-3e147ba706e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d478fdcf-2a7a-430b-a1b7-0e8c46807fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f999ee49-029b-4e60-bb48-70ddb0d079b0",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d943f5b4-ef2d-4d52-a3d4-290abdbe4c8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7cac93d-e069-4dfc-8d2c-7b840c0400dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc27c5ec-bbe4-4f98-a316-05bfbca5f047",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a707bb-70b7-4518-ace1-a076a04fb44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45debd0d-7253-4c2f-8fbd-5befe603185c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c876191-3dad-4a07-8793-2682a012a565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0bc60d0-04ea-4f0f-819b-f91a7809cbce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41fbcef4-09b5-44ab-afb0-e52d9ab514c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2c2da8-c136-431d-a2bb-121db0814979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33aa3e70-2964-4501-99fe-8e6f0d89f0ca",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "176a0709-d3b6-46a6-80b8-50b5afee47e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d2b8ad5-8799-4880-a913-73d3db0862e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d040a17-69c0-4c89-ac3a-14c4a997370e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf87a540-a802-4f47-85b4-8bf22ee4932c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "02de7622-5460-4cc8-a64f-dd76da1251e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ff535f87-5c87-44b2-aa2e-256d2bb203ec",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78dfd0b4-b136-4c08-ac62-9e6e639342ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2896d8f6-697a-4b20-9a6c-5b0b545393a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af377d30-e10f-4d55-ad15-a47156055e49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6bca0bb2-8a0b-4762-a70a-971e2c2f4a57"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f90135f-e04d-4286-a2a0-f14b4f622bfc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dcb61a5-22e0-423f-a47b-0ea2ad23da1b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9de6dd9c-8da4-4eee-8766-64427604c518",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "721baee1-3949-4f0a-b016-0bb7e4cdaf92"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14d0e553-4734-4137-9ad3-0c2d81a6fd84",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b69f5aa5-6f9f-49fc-88f4-09dad9502ca1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1df4f236-be22-4537-ad01-d693d4186ca6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4a0db99d-2a1b-48d7-be3f-b5ecb0e18975"
            }
          }
        ]
      },
      {
        "id": "d0b49e85-c81f-4531-9e9f-48448867ff26",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "42cd19c5-13bb-4f3c-83a0-b75f21623a8f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e04f951-425a-4679-b664-779dcc4a45e6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6de997d1-80fd-4d02-a547-a3594c1fe5d2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81c0937-b5f5-4a31-add6-ddda5bacb1b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d0624b-7588-4e83-9567-a975f8260bde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3278fa40-1d37-43b3-ac54-c0fc1b0dad5b",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3908a07-6ec3-408d-8799-3c748392283b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bf15bc9-6ffc-4a08-a751-52dec322df84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d1e855-e23f-40e7-864c-db9cea498035",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96c4ffe-7751-4287-b104-fbb36dedb45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed185760-7aab-4014-a84e-07d223c46146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d20c69d7-6c0e-4d04-947f-877975ddebd7",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8483ee6-a849-456f-bbb4-e54b42a23376",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c05d982a-cf7d-44b6-b06a-d22b20322892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c25ec92-6b3e-41f7-b114-8fd65eb2e3aa",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8028528-55c6-42c8-815f-f3987f5bffc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946237cf-3305-43ef-91f2-6f0461c98274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1880be03-0feb-4fcb-ac84-2ebcc8416d38",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afbebe9-f3e4-42a1-9d24-419c7760dcbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2f1fda-1faa-439b-bc74-a8920ef1fb93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f08f769-f64e-4ddd-9db7-2a5575b77e4c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d7c5e7-fc21-44a7-a654-df46429e7b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be0e9b8e-ae33-43be-9415-8ccc34c7892d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee971de3-d874-4ce2-b81c-15641f9f7071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f144b4f0-51c5-4b55-8fca-12085c4f0baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aad2d08-780d-4a0d-b86a-9fe78c2a58ff",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0ce5f40-ac80-4dc5-bd1c-3528ff64b10f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "811fc771-972f-4689-9556-f32aedf7727e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2711023-e87e-4288-9e4d-70c6bfbf0105",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8db73851-329c-4712-b447-7f74f5f36c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba781ae5-1634-47b6-9294-b3db96e6f79f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02174029-93c1-4ab1-b40a-002bbca6ea2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c936b5-80d9-4d22-accf-7c3dbe1a6522"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62723e74-ef35-446b-a688-391cac84e66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d6555f-d5cd-4170-a379-195276e10819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e2b4ee-cc37-41c9-9b69-a3d060094413",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27c34299-a2a0-4962-85ed-a247f08733bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1421497a-041f-4aa5-93f5-9c69885f71e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4375cdb6-8f0d-4bad-9ffa-62c79aadad97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9333746f-614f-4e99-b59b-a634820447f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a23ba2-845d-4c0a-b25c-37d2cec44660",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4475acb9-f195-4cd9-bcf8-14c5817ce81b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c334b1da-35c2-43a0-8e31-5990a13f1389"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f97982c-ea2d-4535-9be8-0d6e26a9ff15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83a0bf34-b029-4040-818a-dc56aced25b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e093781-12a6-4bbf-9cc4-79dd91399ca3",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cf0a0e-4f34-4926-8465-665e41e6fae9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb405e05-1046-481c-8ab8-2a647721e22c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f37a7ef6-e310-44f2-92f1-ae509fb4f0b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34d0e76d-5255-4d93-af2b-397378d43c32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd25dbb8-601b-447b-b397-1ae7c2ee9a59",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65689be8-501e-4962-8fa0-97c69293742d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f76d4eb6-7ee8-4c9e-a1c5-40c871ce0938"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "438bc54c-ee6f-4cf9-932e-a18c75d111c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d05fca2-df6d-4253-9d8c-ea0aef6533b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e184bf11-c97d-4ff7-bc85-01168f3e50d6",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8f5eed-d59e-44c6-832e-1852bef09ee7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee1badcd-e479-4227-ba65-eb2f956e741b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6187e2e2-4496-4daa-ae64-4474b70003a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6790981e-0d5a-4eff-b064-5f5b1190cda8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7df06dbd-a269-4f54-9bf9-4a2c4a72f876",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9ab362-ff05-4c1b-b6ab-0d5551bbcc7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63f80d80-39c4-477e-948f-7cc39f8405b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74f1574-7e12-4c4f-8c8d-f40f0736de5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c540f19-d854-4b1e-afa2-6d74c8aea86d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2068db20-9f01-4bf3-84bb-7f1cce99a33c",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "436f849a-7966-4073-9366-3bbf872412ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d3aedb9-bce1-48a6-a705-675b68577a63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4368cb0-50d3-4ec3-9811-2b57562a8e93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6349f9-9423-4042-98b6-d891d2941e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d1ee21-a84d-4c55-af2e-ef5b5b60a14a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f551751-b073-4ae3-9b92-1e73e15764f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c67b6e02-d453-48cd-98c2-0b01eb764e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e796326-0439-4244-84ff-9f6b99807cb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac93794-8b81-4a76-a6d3-5dbf6b4b4174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66af58f7-09f4-415b-95e1-749f94d6a37f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0da3d1-ffd4-47fc-a0c3-5ad459250efc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41b53466-7f34-4bfe-adc6-47a42b1dcd3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a3eecd6-6def-485a-af4c-45a74fd266d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406e72d6-5966-47fb-99f0-2180404c03cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6075f934-6b14-493e-b6a1-761d5f7be9f8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed002b06-acb6-4487-ab21-2f783e1521c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60f8e2bd-bac3-4ec5-bde8-89381c0dc40c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bfb6e5e-7104-482f-b001-021faf1e1cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5006604c-acd2-4b18-ab65-a2e34404d7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518b7605-7c0a-48b3-9bec-7031ff8393ad",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fc3003d-cea6-4b8c-b7b7-0e630a910da1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5857dcdb-e6ee-42e2-92b5-77b7d795c442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17870e41-7ae6-49ec-b0a7-961f0f8daeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13bc779e-b3cd-41da-b6d1-3f2281478107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc68631-8a39-462f-8a0d-c29fde117a7f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f104499a-c493-40d4-be9a-3a1dbe2042ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "499fe6da-f6ed-4820-8f99-8950df728e8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a388330-4ead-40c7-a727-25bc4f65feee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e83cc659-3a67-4a64-b00f-51e833e3f5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1e9b712-68ff-4ece-8895-20782060d593",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dec7091-2d4a-422e-849d-f4167d159acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0dda5d5-3e66-4fa6-ba93-7178aa1f8e2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b31a2f1-08ab-4e49-aa8f-32a50618a689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c3d70d4-0468-4120-b1b0-2bd37933736e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0ae9aa7-d053-4225-a62d-2f1ebd81f47d",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d6a0f71-d6b0-4fc2-94e5-2ebd4cecb45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd5c948b-ddcd-4aaa-ae43-2443828f91c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "936d3499-a120-4ee1-a97f-58390f95322b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8f7aa2-7a1c-48c3-9934-3e2f7c2391e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17eff4ec-48ea-417b-855c-a712b02abf09",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5ff8b9a-0397-41f6-bd3b-740038364f8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4036137b-d97c-4d25-8c0a-434dfe1154aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd68a1f7-5c96-439b-9c71-a047a976bef0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5af03cb1-0090-4b4b-996f-35b76dc9c97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2a385b-c173-498d-b3e6-ef77bdfe4a22",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fdba0bc-b9a8-4937-b6ac-6db8fd7484c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23670b28-6023-44ad-84d7-085b201081d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57baa48-f99d-4f72-9dfa-ca10b752526c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d3f542-c623-4d2a-a5df-dfeb2ff3a626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff55924e-f415-43b7-be22-c27fdef8fc33",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07279442-371b-4b5d-8709-0b743cb9d1dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2ad9ead-378a-481d-8ba9-0eafbadb46e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb60cf3-6fb2-47c7-a654-dffd443adee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670418b9-fabc-4bbe-9b24-f1cb7aca90de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414ae8c3-02cb-4190-87a1-76ae3e9e73fb",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c833fb6-a293-42f8-94ec-1276ca3bb836",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbe02097-d09a-40b5-a4f9-adca8da3ad39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c89261f-5dd0-4b12-8805-1d61ba3493ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc8450f6-6334-4e9d-8bde-fc47718c91b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d98ec82-2c7b-4422-b3be-e513f5f6f2ba",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e4d80ef-e8c6-470d-85f7-aa3307e21d4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04535354-1b1d-4d14-b6c5-4a5fae99aac1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3099096e-9826-4249-ad0c-05259d983986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665bad6a-c795-4d56-b901-90279f484ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5e5644-d687-4c80-9424-ebdce72e9961",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d181335-abda-444a-8061-a0d4812e8218",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6f82671-913b-449b-a541-79f7e0103a65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a7869c-6353-4d6c-a8d4-141bf8f560f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ef6626-9fd3-48b3-b8f4-1989c5ec57a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f34982df-f0ed-4b44-b937-d1b2b8e22e55",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc099a0-4450-4670-a966-1f845efa2498",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2731b85-f362-41a4-9200-9a7672fdfaa5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cf756ad-284e-46a5-8527-528104e44c3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62bb559b-1906-48b6-b6fb-a5e789a06e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdcda791-fa15-4b3c-a3e3-41a14ebe0062",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64bfa1e5-538b-4eeb-a955-8769a209c929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63d2d233-84bf-45fc-8231-98f657dacdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1949191c-5702-47f3-8613-ee40cc29fe61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48828bb-d596-43bc-9051-f7edad04d4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468b5543-25ab-454e-9463-723727c6db4b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "749778eb-779c-4ec0-9d4a-49cbc85d89af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3807cdee-6a4f-443c-a2fe-44099bddc6e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25010f87-935c-4065-817c-aeb472999a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e06db20-95c4-4777-8496-64c95b161a2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1da5da-0462-41ee-a800-ab38b46e9441",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee76126-fdea-4cba-abf9-98a2641fcff1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3a5f068-de70-4716-9de8-6cbd9ef2dda4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f52194-9371-4bbb-9566-d72b9ededfea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77460170-9f07-44af-9a4f-fbf2d2aa0ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f4535c-3658-4802-9d82-d602d9dee300",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d76360a-31c2-4252-b3ed-7e7f67fbe338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcbe9cec-3310-4583-9092-f7ad36f31f0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea5e8a88-d552-4151-8636-4a8c963d5339",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26788892-b0af-4919-8025-0753300c4263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a679187d-5d8c-4854-81c0-54b3d4004237",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "044ee9e7-a0ef-421f-86e8-eb5085a59c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea528c97-c714-4baf-94ec-e8dadf8bb0f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4a2e7a-1636-45e8-ac45-56b56d7b9444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88bf0c42-5d6c-406a-831a-ceb485b38c22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80247bf2-3bb4-4520-9a04-110091099945",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92285131-b731-413c-ab9c-e62c8103e9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "453e83ae-9500-4790-8aa8-c1d789b91cfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47450712-38a0-4c7d-90c8-1def03d5ec36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "884eedc6-7934-4656-b7ee-5d984acdc708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4d3a696-5f8a-4931-bb97-55c1bb5e2402",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "520d28a7-0208-4fe4-8028-864022d7be59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "510f4099-29f8-440a-ac7e-cb66dc3608d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d2d355-b250-404d-91ad-36f3d6f3c850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cd70b2-83fd-4c0c-82af-2edeb3ab47ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a75d1b1-2b6e-4886-a138-4e004958e757",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10109a0a-d55b-4171-ba01-8ce8daa583c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d950a687-374a-4dbc-9464-951c0dfba512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31bf071c-cfb8-4fa1-97c6-0d563188e5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038f6486-18a6-4141-b9a5-598ff4ab89d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ab3aa4-b722-40c9-b19c-b600f2094f8d",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd159a5-542c-4d2a-8c0e-ee48ba993c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d80a4578-b62a-40f7-9d32-8a738a603e56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4cc9aa7-548f-49a2-abdd-b7e19efcdb2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cb9461-83bf-4018-8338-d8eda33aa379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc84932-e1fb-4db3-b633-c4933ccf87b8",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014df579-e1e9-40e8-954b-a3f08acfc1f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fb169a8-fecb-41d3-8cc6-c236e630143c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba1e8a8-a3e1-41d5-840c-ccd147ea2190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f72cf39e-7737-4e72-ab60-8f16b4c2a653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "836aadcf-c685-4bb6-bdba-d45e0e05bfe4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adcd2b02-e0b7-424e-bafe-08bcfaa6084d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4506e979-2367-4005-92e1-66d7ba0e3401"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "389711eb-e510-4c68-8f8f-879593249f84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ade8f16-2dfe-4791-b2ad-388dfcc27bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f22e63-bcbc-42de-95ac-4a9c8b902b88",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1f746f-00ba-4abf-ad23-726aa1a9e59e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bccab938-d95c-46c1-b3da-4d5fab116dc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "497c0997-2100-4da8-a373-f36b26256b4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1f37c6-3cc0-4a02-a469-2a380b0de107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f076fb44-eefd-4a31-a77e-96153a135ab2",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27249ec4-bc26-4e77-b4ff-3e2a8928420d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1e0930c-e40b-4a12-bdb2-dabdbff22df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd50947c-0898-443a-8edc-76a35b795c2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b70562ae-89ae-409b-8b6e-044b4377aa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1b7fc7-191d-451f-b822-dbafcaf46eb3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6ec48d-7e5a-47ea-b07b-3ef0c7d16820",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "107973d2-bd3a-4f2e-a32a-6e1573efec79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d7a109-51a9-4356-bf92-54dd4953e3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08473a9a-42da-497f-8950-79ae51f9d6b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54258697-e9ab-47f2-8927-3da4b7a694b5",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb1d361-5bf8-4a81-8b12-f93d372f8861",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7310cfe5-072f-4577-b57b-bfff9bf6025b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcd1d58-0179-4df5-b1cd-176450ef7385",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dac26cf-6adb-4289-aebb-5b5c0da0d6bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "993ea53f-f199-40bd-b43b-54b270898640",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07504ac-df39-46ac-a0c3-a6635b97edde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be6c0beb-6e81-4bf7-b0a2-97b9fe0163fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2f9c95d-a712-4c7f-8b45-89556f022aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a29bf23-2c30-4172-b1f3-41d32fe050cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9f13c9-bdae-4a44-8052-953dd79c539d",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66f1e92b-7f4e-42ce-a247-a92bdbaeba4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0b0b20-da56-46ad-ba80-9c2475733b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "073ef95a-afa1-4183-a468-23f17b29579c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67ec55a1-17cd-488d-9769-626fff4be722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf27e178-e0f6-48a8-a6f0-011cf09cf244",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a01410b8-ef37-4b3b-921d-46d3586ecf50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7e74756-f9d0-418a-ae9b-8a0ffe72010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3e1120-b86a-4beb-b4cf-48f9e90de28e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6754657f-19e0-409c-9730-4e3b3a141566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4258bea-f5b2-4133-b5f0-e82c1a032cae",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a659ef8-1300-4bda-b64a-9ce69ac9ca17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3df9d7a1-601e-45f3-ab07-19a9e0469209"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7fbcbe0-1fb3-4d37-b098-dfb4b2fcbbce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ed50f7-aa6d-4c27-85a6-02ea3453d050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84c3acbb-be33-45ae-9433-6aad4106a29c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7073c554-4090-4808-a95c-597323c9857a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7e3b1b-084f-4495-958f-8279184c3715"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf97c96-8ee6-467d-8e7a-a846b7e34a9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32a3ee6b-b124-4278-ade5-e3cef0d015aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a3660f-322e-43d9-a3e7-3bf7bb28a551",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f618713e-e7aa-46d2-9b6a-eec8da6f3ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6529fc89-7985-47ad-a81f-b0679b162bf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ce6655-fd7f-4436-a816-6fe39a230a7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdc9475f-549a-4b31-b133-487e2ce17b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01211b69-dc7a-4043-bf37-08429db6293f",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8100305b-e404-4324-9d31-06a4ff668457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed733e7-cd84-45aa-97ae-5c290e9601a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34b17f36-1341-4910-bd97-524d7156c873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09923a98-c9f5-4edf-9812-38a4742984eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b5c656-0a10-407a-a284-790516917c40",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "123aaf67-1e7e-4645-85eb-b5fdc06ed15b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfe9cefb-b1bc-4c18-9113-171858393476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8863da28-1e92-4a3e-826a-d4ebc4bbdc28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1727f36-6204-47eb-a496-d068dbad4f04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50db646f-e964-481d-b3b4-0cd047487530",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0df9243-5cbe-4926-9245-0a5c873a3d59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85958405-a3d5-46d3-b682-b3e79c2c0aa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067ec64a-47e5-4e7d-9d75-e7943108017b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37431a78-7bdc-40e5-a702-9226b7c60725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "387b1412-5db7-456d-a4ca-e9de29a370a0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54ee74bd-b3f2-42b3-9977-81fa305f0a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6c31026-c888-4988-b24a-f78991438d29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae436d80-b83b-4938-94f7-95856acce4c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb00f5b0-e7dc-4abf-9952-40bc1de8bdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99123447-1c77-4ae8-b64d-f03681c1680c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8228b577-c1bd-418c-bf85-3f77543ab8af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529d5a71-d536-430c-b7e9-f1cc103563f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dedb2327-43e1-4c8e-9aef-30cb49852932",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a98fe7fd-21f4-4e1d-b953-34cdd8f63624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8d5c1b-4d6d-4da2-a3a1-60093c70626b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d5475e9-d5f1-415b-850c-e809c2e8194f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb8ce58c-213d-410c-9cbd-49939620f9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ab82c30-11a3-4b1b-aca2-7693d8773f68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc9ea43d-3d47-4c47-b9f1-a0768a565c53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abfd602d-426c-488c-b748-9945dfc53584",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16dac534-3683-4554-aad0-fef139c20e59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215ad799-c0ea-4e14-b11d-aa8c29988c76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37580b89-54c7-41dd-b440-5c9920ad88ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d77101b-e75f-41f4-9e85-b45168109a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74baac7a-e8a5-4f64-be62-059ddd346012",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7dbc15-ae54-4c47-9f31-5b38f46a4c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6dbf6be6-8a48-4600-853d-62b71ec22bad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0204ff2-bb9c-4c66-9d8d-91398d47a9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3211fd8-3798-48f6-b9a2-eb51f6db4fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9684e25-68d4-401a-8526-3b6aad80d370",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b195c9-dba9-4433-92e3-50926703accb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6d8957d-7afb-4f44-a15e-3bd5105e3c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0420e4ca-ce1a-40c9-863f-54c0f3151e94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf9c314c-9790-4ac0-a8c8-a4fca4d4fb59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d96361-6697-46f7-88b3-ac3d98d15f7d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "145f888d-5e97-496f-89e5-7b8df5a7d93a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b8c4159-7a39-473f-a68c-22210fb4334c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f03f35a-8a2e-4f14-8d06-7c25e9299391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b7dbd22-4e42-4de3-9d88-c6e592519bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27bd7d1d-6572-41b4-959d-ad0dcfbc6c75",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b202776-a82e-41f3-8133-41d5621882cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c2f50c5-14a3-4a6a-aedd-daea112b989a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b7b16f-3857-4fbd-9844-799120364f3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e185074c-89c3-45b8-ba3d-8a4642a6a062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45abbfb3-6466-417c-a8a9-c4c3b5998b98",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4008e682-572e-4a88-9006-a061dca0923b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4bd54b9-281a-4a1e-bff2-7b2356a94171"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2df7a35-133c-4e52-a04c-a4a30ddf2d73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec2784ee-7c05-429a-8091-6104763ac693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f047f7-5bce-4c5a-bc1d-8a1e4d4e2250",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8351d2fd-8a53-4d0f-81d2-bb4666dc4316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b114ea1b-846e-4f79-8a4c-a47e25564ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fea4e3a-5571-4a14-b570-45541ce3dc34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fa9044f-d194-4e8e-a93e-134c075617d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "547d1e1f-189d-4ab9-a83e-280c5c186503",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b235d698-3084-4e31-be96-a6cf5969061a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a73fa02-172a-4982-8870-5420a50c596f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4fde942-2dfb-49df-85c2-0801a93aff70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3a7f59e-a03e-431b-8cd3-0b29855d1530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0a72be8-769f-49e7-963e-3189c10f8a60",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d77b088-d877-4b31-a985-fa605106928e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42840c68-57cc-49bf-b2dc-b08b87e202e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "838aec22-9558-4405-b163-8ba29d640641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f35a29fc-97a7-432a-852d-4c98f82248a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7e41e8-e4ea-4e0b-91b3-ed11a50bb4df",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d317821-6c2a-48d9-8bc8-a96c966071c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8de2afc8-8cdd-4214-9c4b-4903d06f7f82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd78f442-1d9c-42c9-9731-7a72fac4b4c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0841426b-b590-4a29-aea1-ec794a9acc83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43c81836-4685-4832-b7e4-6103ffefb306",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d13e01cd-26b3-413a-a035-4d488abbbdab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33c2b6c4-8544-40c1-a1ec-04484e403146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606e1549-4521-4ad8-82ef-5ff12b9df41c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900b89b5-493a-41d6-8e02-2868f39d6e17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f064664-79e6-408c-bfef-63507622a274",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "302143c9-0d15-43ab-9cda-eba762ebf2a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30ec97b8-6e6c-4c30-b794-80fdc665434d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c14611d3-45c1-4ca3-8795-33b4b1861329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0dfb1af-c858-4921-8daa-97e6f240545d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93d61237-8e2e-405f-8ec4-d9f04e5cc55b",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc22fc63-d9ef-4613-ac08-7a26594d28a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af764595-519c-458b-8b1f-9644ccc8c6a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31d1925-2c3a-4924-8aa2-5513ee1a09a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79c41ded-6b42-484e-91ca-48f3b4737d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57069a02-761e-4515-bd6b-3084a133c12e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3f026a-e653-4632-bf2d-269aaf4d4a52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67c0b7c5-788e-4d6d-8807-29610ffe1081"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6588caa-2352-486a-b325-e204ec219eac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2620e82e-6c55-4088-b4fd-286c393cd004"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5506a3b-f154-4d69-9136-4129964a59c4",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803ae990-b092-4433-9793-9abe2c61d096",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1683db0-eef1-42fa-82ca-19d4410cd08c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432edc35-f937-43f5-a18b-b11bf84d9076",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084b9e46-d6ef-4311-aa3e-ef5b50344294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bded1432-1d82-42cc-b815-5119e2a64fd6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23fae142-fdd9-40f6-a08f-c4085db94b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f51349b-1da8-4693-a2d3-3e6b2a86911d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "558794e3-b251-45d2-8c5b-a8e128995b90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0db19b2c-de17-4de0-9a30-c7f0c21e1739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b79b976-5521-42f9-ac62-f60cf901b143",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e76d1b7-0177-4762-a7db-eae0400e3bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "492c9fea-7607-40c6-a16a-be5019790fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2ef0345-faf3-4778-98ed-277a933eca19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f9b2d89-ba35-4331-b859-2fb0be98ab35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ad05e1-3d0f-4929-8f5a-44cd9819866e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fc4cc33-4466-463c-8483-e7df17bd9b4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06b764b9-2713-41fa-9d9a-69fc4110bb47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e148131-1ecf-4491-b9f0-2cad552fd3ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "218a8550-a05a-4869-bfeb-1dd119ee857c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae7ad30-48fa-4df4-b460-eaf5d96d8585",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a079ada3-90da-45c7-834a-8cfa5bacf7d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e441ae-582b-44e6-92ce-e45f186ee490"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc8ee36-37fe-4f3e-b436-f0d32855cb22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba46c747-e31f-42ee-9650-5486d59e1d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca8181ec-4a5b-4e09-8906-5c7ef5503319",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4611fb6e-7d1a-4241-a635-b08fe44f83e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "039fda8d-437e-4f27-b86a-3a3fd1b95279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ae16d-ad59-4b5d-829a-2a75984181b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70cd385-295f-481f-bac7-b1c82846d181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a954a7-da4d-435b-b04c-49d9012a5ac9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ff65c50-ab9f-4334-b56e-ac51092c0f8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1b0cad1-a278-42d3-ba7b-4b5e2188589b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be22318-aae8-43d4-8c19-8df8a2d5a48c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c1fb39-e430-45f9-96d9-cafce6daf237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de2e5102-8e18-4901-b76b-aeb7f4ad96f1",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7592db-2624-4b9c-b753-cbb1ca7b9552",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b55953-2346-4a4b-a99c-7ee806f9f31f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e3ac35-1f17-403c-854d-f269549b881d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e0102f0-fb11-4bb2-9f3e-db1044abbe5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86093ac2-7db5-4900-b0d0-7b5b6db35953",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398283a0-0a5c-400d-b12d-4f6460d320a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f78ac599-00b1-45a7-845c-6629fb02979c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7494fe5a-0249-450b-b623-fd5b01cfdfb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf68f69-cf9e-4d6a-9499-506908a6b997"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccda9ca0-ce95-4ccd-87a0-c0eb317cd9fb",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90058b83-2a70-45ef-a264-d7013f79b159",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93854959-8da0-42e4-8fbe-f5ad69b8b720"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8f0018-8918-4712-aa91-2465c03c6b35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227d13e7-dfbd-4258-80b5-cd6d80bf15e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81e815ec-938d-4404-ab1f-e5c49ba38ad3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e835cb7-dd3b-4617-bb85-a7447c573cc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c60598-a328-4bb6-9d40-e6a47bfd42b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dedf49-3cb1-434d-98ab-02fa8dbec544",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "946a1ffc-41a8-490c-8f5a-90309692327b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2baabed2-4079-49f0-b0af-50a10db2cb29",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b8d25b-a09c-4e92-96a3-cb5598d4ffae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "917fd91e-d2c3-436c-a81b-9a5996fdbe0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10a10a8-f585-448b-baa5-913800cf974d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfb62515-26b0-4db2-90b7-b98fe14382b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8122faf-8568-42be-8717-ead7e6a3727f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b23328d8-8bf0-46e6-aeb5-2880d7c3e83f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8935ee3-da05-4f54-98e3-f6514f394922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "982cc513-c97f-4c0b-b997-2ea4453051f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae3ed4e-2a17-4150-b93b-80a18b54c423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96f3854-97db-4b6d-aff0-cd0025ab5e1a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e890f7-7735-4a46-9f4d-e61ba045e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ea7de32-61a0-438c-8687-879c0adc6085"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30408618-75e9-473a-9768-146340ae0e6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625dd62c-d06a-43f1-adec-a579676ad63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8906a9b0-5cd6-4335-adfd-365ac0509bd5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d256a6-c7ae-4eaa-a930-9ed2f19cc3a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da37f975-dd2a-45a8-b444-d287bd4324c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee361f3-7f54-4555-bbe7-97ba83487abe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82cb042a-729f-4d24-8614-2769d072a2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cd74d0b-e744-4961-978c-5fd98a3cd759",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449242a9-5fd5-440a-9362-cd9e193d11ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cab4354-8e69-479c-88a5-048050b90e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1247b95e-b340-4524-98cd-e5e4a7ca4465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "573c80dc-aaed-41f9-bf08-4ec62ad8dba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550affa1-120e-49d9-9863-a111df9a8b4e",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef761e09-e259-4f39-9f46-37ea08f92875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3937ec83-1b58-4710-983e-efba8e2a7636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf174a7-c758-4176-9f97-ed399efcd774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33d6deda-daae-409f-9a31-c24b48d06ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369bbf25-1813-48a1-a26e-c57b7080749b",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "289f810a-342f-4684-afea-a7608547341b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "460aab0e-7208-4b4e-98f6-f9939636c6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa812837-762a-4428-9f56-d54e0bff0a24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a23cd325-b5f1-49e0-99cb-39f5741fd5ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3898ef-a99b-4224-9084-553ec7509211",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a9b547-8f5d-46c0-ac70-0cd11e0a09cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cf1ef96-a160-48a1-b7bb-30fbaf0f2dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e9f235c-b710-47eb-a7af-52f98c50b738",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "371f26ff-c22d-412b-b7aa-813feff845aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8d0ab9-94f4-4fcf-9a16-92156f5c6f16",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "902404ae-5ef0-4d0f-9149-c283cc5721c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "753c8a05-71eb-4c92-90a4-48af6df0fafb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "598c6de6-63d3-419a-9447-1ef68da6fb33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eec7d1e-bfac-4182-9b98-159fc2cc99a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0170d0f0-3596-43c8-a393-037644686559",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac6430a-6413-4c8f-8494-7bbdd78de369",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6730e708-766c-4cae-a1ef-f53046988b60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd54bb7-01c6-4599-8fdc-df256a91171f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ba40170-8334-4af4-8274-41f53c39c04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484837ff-3d1c-4d17-85e5-de9ea4fed0c2",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ba4bda9-5e45-4afa-ad0d-141fc751bee3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c03949a-7a63-4875-a21f-ed253a60d53c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a814039-88c6-4f8c-b3be-7ee76cccc38d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b04a61b-9032-4bdf-81e6-f78d8783969e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fd02666-c031-4d5c-917e-d88a70f70b4d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5629a74-af99-4200-bd79-1eb678839493",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a70bcc04-45ef-437d-bde5-bf19caf5e20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "997c3f35-5896-4363-877d-a069a8b3c0ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5680d2e-371f-47c1-8ea0-259f9c647a9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc4559a-a8ac-4166-af30-a80b17765a3a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40d7a331-0e0d-4021-8542-b663f8780953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2250b479-6dac-49bb-a4b0-26ad263191ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a8269f-037d-4863-ad73-920de25d0d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "972ef9c2-ed0f-40c3-8983-59f9105d6bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1550b13e-5aa9-4744-9c03-c928db5a147b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d156faca-4d98-49ce-9cc8-87e461db8473",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1cf70c47-79a3-46fa-b56e-ba00a779b8aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a0c80ef-8c72-4ad4-8af2-b239b3dc750b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a106d273-3846-459a-87b8-6a02b1382ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d5b22d-5714-4826-9294-b29776db79bd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa1a8c3-e8a5-4de6-8439-d720c34f52d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06120071-8d3f-4c8f-95a8-7f5b0457eb6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a8d5e1-16a9-4a34-a3fd-ccc3c54f254e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a25c24a-ab45-4369-986e-0189c6f723bb"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fb714dd0-2fa5-4716-b96f-71b455e193c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d0e2a7ca-c0ad-4184-a182-40c7035709ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "437a21d4-baaf-456a-b7a6-27ffdd9a4cf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfd7f8c4-5c0c-42cd-9e9f-0e2aed0fb38b"
                    }
                  }
                ]
              },
              {
                "id": "b5f574d4-2f84-4bcb-ad44-01d39b4df760",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9ac6d41a-ed37-472c-8ff3-e9ae90fc6aa9",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3176b44e-b6e1-4ffa-bf71-641b63099457",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e56a2b4a-bd8e-414e-bfd4-b0fdd540372e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "830b9526-d85a-4778-9cf0-b534ffdeae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "625c8e77-10cb-46f1-b8b7-24eb444cc658"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d015efc5-5017-4b7f-a44c-04ae8cc2a99c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "854ae25c-1b13-4ade-a45a-4d11a1878897"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "39a82860-120d-4a83-85ed-613bd60f4907",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf2af8b3-880b-419a-9a24-e12bd6cc2808"
                    }
                  }
                ]
              },
              {
                "id": "9381b161-e190-4a9e-9cc9-6270d17329f6",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "66310881-09d9-4f37-b38d-80066c31c895",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b663799-0c88-4673-9a3b-d2467410c487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "8ad18031-993a-415e-8d11-e8d4acf6e774"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830736de-2452-4fc5-a054-f90faf46d16f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d343e8-8894-4c32-9957-3f40f284cffa"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11221275-9b63-4e17-8c4e-b664d02e3d41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b2438c4a-d16e-4aa7-935b-319dc7bd1ee0",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d3878bc7-aa80-4b03-b2bb-a00020e305ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7221227f-974f-474c-a70c-98786750b6c2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b8a3c8f3-c098-43ce-abce-1a640d14d54b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6d0f0c51-b402-4a21-a89a-50a93b16ca82"
                    }
                  }
                ]
              },
              {
                "id": "504ff766-ea4b-4581-af13-22aa6b37422c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3910677d-a410-45da-8036-fcefde94510f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2e961592-dc25-42ae-bc49-c8ee7b5bbef1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11e7fcea-12f6-4b87-9e6c-4151f190fc0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5720fc02-6bf9-475a-bc83-265c0642ad13"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d866802-5a54-44ec-92df-f4e0777ee2f8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "1d18b585-6110-4689-8465-ef88994d1341"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c37b8152-2913-4f99-87d0-87bb55cb65b6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c666480-0d29-4b71-a9e6-3f9fe4a02ed0"
            }
          }
        ]
      },
      {
        "id": "de2d66f2-c847-471f-80ec-75b4c786d75b",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dfb693e6-789b-48e7-b573-08aa0f93b762",
            "name": "Negative Testing",
            "item": [
              {
                "id": "75893120-8ccc-410d-8144-bd82bf7525bd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "46f771ed-5212-4859-8241-9734c6816383",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00173222-643d-4542-9893-67697f6d9a54",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c7fe56b5-d2cc-4dc9-8e01-fdfd94a7d6b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e29dec33-2461-4f77-917f-cda56b19feba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd1ec69d-a732-45ea-a40c-5dc0c9a3c227"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0308ce9b-a53c-4edb-bbdb-2ad05d626861",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8c76194-df9e-474d-811a-064ed0c1926e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "877cee2d-878c-4b98-a0a2-fe3deab82e0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf06dcfc-d415-48a5-b980-2dc019ace14b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5376fc5c-239f-46ca-bfa8-384d7d36ecda",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8daa7789-563c-45b9-ac49-181dd2fef8f2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21c652f2-7686-4611-b829-42fda19fc225",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8d094394-a145-47a6-b627-418f1029eddd"
            }
          }
        ]
      },
      {
        "id": "31064408-eac5-4b4e-ace7-8845ea150d54",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d07fa635-281e-4179-bde3-a9a783e957ef",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78fbf127-e082-4404-8e62-4beb5d539c4e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "36f97a6e-f79e-4476-94aa-10ad70e060d4",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c091b28-b78c-4c0b-9010-1986cf9c2b01",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3816256e-3fb4-4f8d-97f9-4c6ebef6d307"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb742784-655d-4aad-be5b-28b8f011b15a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "852b0d54-a511-4e19-b144-0dbeaf1012c8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "84c10766-7cd2-4465-bbe4-a33cb9cdc445",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "38666393-f4a3-49f5-be3d-680da4b9406b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "95fbcf16-ed8f-4572-ad42-9a7a2e2edfc6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7c4aa559-f9ff-49e8-a738-3b6984a46829"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "85f56bff-5bce-49dc-9494-b65f6d8d520e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "83f31adb-7523-4aa1-a8a4-e7b950d017a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cf691994-59e5-4345-8ea5-5a5ffaf9a304",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ee72e59-3477-42d6-9253-79023b1e15b5"
            }
          }
        ]
      },
      {
        "id": "4639484f-c081-4e5c-9cce-6ed40a802500",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "df8c377f-2c6f-4ef6-baa2-dbba2849af40",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7a78246-8dfd-40b7-b81f-3324e8cc9f99",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5569fe8c-c4bf-4385-bdc2-61c14841ea69",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a187a1f-073d-4a80-9e26-84f4c3306d95",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f4c74f21-be4a-4670-bf1c-4917de6a25fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a6a3f3-9548-4507-81eb-7b686429775d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83cadaa0-600d-4e17-9692-2af39115d1c4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "843546e9-6dc1-4907-b7fb-e964292cf8d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d2c5ec10-a07b-4a97-9b3e-577b5169da85"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73304d12-7cb3-4767-bbd1-0d1df1618364",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6761f898-8500-4327-b9dc-523c10daed24"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2406ffdc-3c50-4d4f-b75f-85043161a173",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ac4d84fe-7320-4855-b2be-6ec4cd4a6c34"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38732b29-af2d-45c4-95f8-d28e400ca8f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f49ea628-67d3-4126-a0b8-ee46efabffd6"
            }
          }
        ]
      },
      {
        "id": "8174fe77-4a62-4ebd-b6d0-8f2afbf4ba70",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c74bf43d-0237-41e5-a268-d47f8fd23bd6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aaad19f1-89e8-46e7-87a6-eeb4fddeca71",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d8366770-24b8-40bc-86e3-a009ba5dd887",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a81bdd71-9078-4a54-a756-141698f9336d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2dbe1d48-69da-4668-b250-46a2a8b8d518",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 134.82807017543865,
      "responseMin": 20,
      "responseMax": 8642,
      "responseSd": 583.8146142171062,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707957237116,
      "completed": 1707957284468
    },
    "executions": [
      {
        "id": "d3857420-0ce0-4d85-82f6-0f81119fbf66",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "26831716-5d53-4008-8b85-e03802cd3497",
          "httpRequestId": "de0c8edb-502b-4634-9cec-6b77389bf3f4"
        },
        "item": {
          "id": "d3857420-0ce0-4d85-82f6-0f81119fbf66",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d2346fd6-7389-47a5-9ac2-5ca9071223aa",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 0
        }
      },
      {
        "id": "66dec1f3-7ce1-41ba-a982-3ec2eb7d1c9e",
        "cursor": {
          "ref": "529d6e17-327c-46b8-a493-8b783d5d8e63",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "22d00c71-9f9c-4e51-8ce6-3e7be8afd388"
        },
        "item": {
          "id": "66dec1f3-7ce1-41ba-a982-3ec2eb7d1c9e",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "555158ed-e030-4eeb-9de3-9847d2318e95",
          "status": "OK",
          "code": 200,
          "responseTime": 20,
          "responseSize": 0
        }
      },
      {
        "id": "c4889315-e567-4674-b705-bbeb99fd39f7",
        "cursor": {
          "ref": "a86099e8-27e9-4108-9d24-85c1156fc2c2",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "24ffd027-fb84-4033-a52e-f40c6c5d44b0"
        },
        "item": {
          "id": "c4889315-e567-4674-b705-bbeb99fd39f7",
          "name": "did_json"
        },
        "response": {
          "id": "2999c0a8-2d28-4d23-8c55-4bf2cfd949f4",
          "status": "OK",
          "code": 200,
          "responseTime": 320,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4837349-007f-4a36-b5c7-fdfd77d35e88",
        "cursor": {
          "ref": "a8e7c68b-ec1d-4bfe-ae95-4230e54cfe08",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "865f8a8e-9853-44ad-a145-81fb50670d9f"
        },
        "item": {
          "id": "d4837349-007f-4a36-b5c7-fdfd77d35e88",
          "name": "did:invalid"
        },
        "response": {
          "id": "563aa979-60a4-4047-adec-50ab12e14ce6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 496,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4837349-007f-4a36-b5c7-fdfd77d35e88",
        "cursor": {
          "ref": "a8e7c68b-ec1d-4bfe-ae95-4230e54cfe08",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "865f8a8e-9853-44ad-a145-81fb50670d9f"
        },
        "item": {
          "id": "d4837349-007f-4a36-b5c7-fdfd77d35e88",
          "name": "did:invalid"
        },
        "response": {
          "id": "563aa979-60a4-4047-adec-50ab12e14ce6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 496,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7d148a9-c511-4489-b816-5f1ccb37bab4",
        "cursor": {
          "ref": "b0e602b2-1937-4233-bfec-56b3ee31d26e",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9d5415e7-c989-42b5-b07d-cd796cf1d5e2"
        },
        "item": {
          "id": "d7d148a9-c511-4489-b816-5f1ccb37bab4",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f5bd008c-7023-419f-bfee-6dfd8afdc29a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 65,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c08dee93-ed05-4c19-8e78-82b3a0dd0e36",
        "cursor": {
          "ref": "ceef62fe-ff31-41fb-b1c0-4501e2d93fce",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "65e784ec-d734-480a-a23e-1720a9f6f5c4"
        },
        "item": {
          "id": "c08dee93-ed05-4c19-8e78-82b3a0dd0e36",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "008c3bce-7b42-4f73-8b96-59aa75a84168",
          "status": "Not Found",
          "code": 404,
          "responseTime": 70,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8773d7a-f44d-413f-b33b-adfbb86bab53",
        "cursor": {
          "ref": "174fba58-01a5-48b3-b616-55ce516dea47",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f16a20ab-118e-4a9e-a0ae-009fa707c22c"
        },
        "item": {
          "id": "e8773d7a-f44d-413f-b33b-adfbb86bab53",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "a4579182-55d9-4ffe-bc4a-131230a3ed4e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2f0d92-9548-450e-980f-8840880b70b3",
        "cursor": {
          "ref": "37d5c566-f9cc-476c-9f7d-edb4a78c11e1",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "eff25bcd-1dcf-4f46-86f6-2e9ead4d6389"
        },
        "item": {
          "id": "9f2f0d92-9548-450e-980f-8840880b70b3",
          "name": "identifiers"
        },
        "response": {
          "id": "a9df2270-3073-4d58-8657-3be3806a146c",
          "status": "OK",
          "code": 200,
          "responseTime": 98,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bea85d34-75bf-4b20-8c89-5ccca441cfa3",
        "cursor": {
          "ref": "293db22f-9569-4f88-a18b-6451935da20c",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "414aa989-ae6d-4178-bcca-815c34bee09f"
        },
        "item": {
          "id": "bea85d34-75bf-4b20-8c89-5ccca441cfa3",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "fa4a23ae-05b1-4bb9-a963-ff402b871f2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 102,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22d95f7-d3aa-4d1f-823c-f4366fabced3",
        "cursor": {
          "ref": "9ba330ed-cbc7-45f8-9665-1e3688bc0b86",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c7a30b78-e7fb-4d4f-8e31-d6eefb4add58"
        },
        "item": {
          "id": "d22d95f7-d3aa-4d1f-823c-f4366fabced3",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "de10672f-f77f-4a36-9338-f5491d82bd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a81844-dc2b-4893-b93b-7c4edfba1f54",
        "cursor": {
          "ref": "58f719df-2988-4445-96c3-71684d6fd112",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ac76ee46-be6c-42ab-b4ec-4504d3c73b94"
        },
        "item": {
          "id": "16a81844-dc2b-4893-b93b-7c4edfba1f54",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d251b757-f988-4fb4-b6d3-54eb1e4ea7f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3db55a-8270-496b-8509-1b7bc256b0c4",
        "cursor": {
          "ref": "b0d00673-183f-4e1c-9c27-51bea316eaf9",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "410aea37-fe3b-4bf8-9eac-363fd19bb7eb"
        },
        "item": {
          "id": "df3db55a-8270-496b-8509-1b7bc256b0c4",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "776d5ead-5af8-4536-8682-3069917b87a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99719abb-fc62-4adb-aa66-b65abdc2476c",
        "cursor": {
          "ref": "79b154d6-4ae4-41fb-bf14-a1ce186e2ff2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e118b92d-8436-4016-95d5-0cc22d58a13b"
        },
        "item": {
          "id": "99719abb-fc62-4adb-aa66-b65abdc2476c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "961c2f7a-f330-4120-9987-e4e084853500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "651d8b38-91bc-4b4c-b41d-d87841773bed",
        "cursor": {
          "ref": "480e02b5-f0d6-4f47-84b5-4f8574ed8d3f",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "625354ab-7454-4c04-9fe1-d389e735bbee"
        },
        "item": {
          "id": "651d8b38-91bc-4b4c-b41d-d87841773bed",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "a5b98103-26cb-4246-af2b-cb129007fea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c385923-2659-4e8a-8e79-a08fa9289d3e",
        "cursor": {
          "ref": "3adfe4d6-2a56-45f1-a951-6aabed594625",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9bfaeb6f-0224-42a7-9575-c9e580f3d90e"
        },
        "item": {
          "id": "0c385923-2659-4e8a-8e79-a08fa9289d3e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "4e839f06-7238-4e7e-a285-c34ffaaf2d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49552ac7-cf72-4f33-b58d-61160864f4cf",
        "cursor": {
          "ref": "643ca000-a443-4e94-8736-f92ebdba5a13",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "831d6f05-1b11-49bd-b996-f8309e4405c8"
        },
        "item": {
          "id": "49552ac7-cf72-4f33-b58d-61160864f4cf",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2ca53fb0-12ef-4bb2-8cef-d045b06ffe51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e9a57e3-2f9c-4e4d-abe9-4eeacbee01f2",
        "cursor": {
          "ref": "b6a94910-381d-4116-a0cc-c68af2045e7f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5d9c58b4-0ad6-4329-ba8a-f66bf6d1ea85"
        },
        "item": {
          "id": "2e9a57e3-2f9c-4e4d-abe9-4eeacbee01f2",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f7c85d2e-06ae-4b38-a966-ea7d3654cbfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4944075-6442-4a75-a0ab-fec1fc7f7cfa",
        "cursor": {
          "ref": "e960d7ad-ccdb-4100-ba42-3d115b405b37",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "03fb4c05-7f7a-4160-a366-27379a690847"
        },
        "item": {
          "id": "d4944075-6442-4a75-a0ab-fec1fc7f7cfa",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "93b6acad-3b70-4267-b475-c32ac591f03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c39d29f-203d-4c34-aa12-2383e0b1890b",
        "cursor": {
          "ref": "f5942958-4f79-4be7-951c-8fb5c7b1cdde",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "025aaea2-eeea-4b3f-97b6-2661d5c0cc4e"
        },
        "item": {
          "id": "9c39d29f-203d-4c34-aa12-2383e0b1890b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d390de44-373b-48a4-9d40-4c6fa1765e9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbc7dd2-4fe6-439d-81ef-ce6872e1c069",
        "cursor": {
          "ref": "2f04c061-f503-43f8-be92-36f67fa98380",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "9b660ab3-42b9-449b-8799-ec9caaef893c"
        },
        "item": {
          "id": "1cbc7dd2-4fe6-439d-81ef-ce6872e1c069",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "82d797f5-b1b1-4c9d-b030-8e0ce6b44723",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82fe5617-1211-4fe1-b166-3a35f9a6cd7f",
        "cursor": {
          "ref": "80b35463-59d6-4fe7-ad81-6fb91833e715",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "641fc67c-1f7b-424b-9aee-15c32d755761"
        },
        "item": {
          "id": "82fe5617-1211-4fe1-b166-3a35f9a6cd7f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e2331ba7-2ffb-4ac8-9c79-28a2e7d337d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b6d53c9-4421-4fca-962e-247f2ac92122",
        "cursor": {
          "ref": "a8fa16cf-dd75-4b2f-b8a9-a48c15ed91d7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aeae2398-d5f7-4d47-933a-f31dcc8de7f6"
        },
        "item": {
          "id": "2b6d53c9-4421-4fca-962e-247f2ac92122",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "355705f3-6c10-4c21-a4e0-22522246d581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29345d71-526d-4cc1-a835-f5be1b348dc7",
        "cursor": {
          "ref": "bb685b01-8251-49a9-b044-174edcfef478",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "ca8e4a7b-744a-4034-9697-c729b281db7a"
        },
        "item": {
          "id": "29345d71-526d-4cc1-a835-f5be1b348dc7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b04cdfa2-ad2f-42a3-928b-b4e2135d7255",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f245eb85-ae64-489b-9b96-d5530a960f4d",
        "cursor": {
          "ref": "66724eb4-c363-40e9-b167-b8fff590bf05",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "bb6c7436-9293-45d0-9686-a388d8d595f5"
        },
        "item": {
          "id": "f245eb85-ae64-489b-9b96-d5530a960f4d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5d20735a-b9cf-43eb-a376-923a095971e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "034fd0d9-f888-4718-b573-5cd3d13419e8",
        "cursor": {
          "ref": "547eab01-e6f0-4db4-8ab2-6a6731083022",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8e2716e2-a1b5-4202-9421-d5bc2beb8ad7"
        },
        "item": {
          "id": "034fd0d9-f888-4718-b573-5cd3d13419e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "faf4f92b-a3df-4d83-9b5c-b9f76047501e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8a8cb9-c92d-4753-ada1-9f83c9f457cc",
        "cursor": {
          "ref": "15bcb79a-c035-435e-a0fd-a744393aed9a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "da817ee6-9ab4-4d9b-85a7-6115b1a87ed7"
        },
        "item": {
          "id": "ca8a8cb9-c92d-4753-ada1-9f83c9f457cc",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ed2ce1f1-0f7f-417b-8dbc-6615fb36f2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45577b4d-6e86-45ce-a53e-2d303d12d632",
        "cursor": {
          "ref": "2528ba50-f87a-4b7f-8b3f-f21671da173f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b696ce1c-7902-4d55-8b0b-2040aa3c3778"
        },
        "item": {
          "id": "45577b4d-6e86-45ce-a53e-2d303d12d632",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ec439a4d-0cb9-4a37-8a9b-76152b371596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7294a263-c634-46fa-8433-bd865f0b21e2",
        "cursor": {
          "ref": "4b6fc30e-181a-4ee4-988d-86e62b47782b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9912689d-aef2-4b30-8e74-68b88f885a76"
        },
        "item": {
          "id": "7294a263-c634-46fa-8433-bd865f0b21e2",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c9f314e4-99dd-46a0-af57-6f9e6c96a17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9ef99d-620d-4610-8ea4-ad8fb725e1ff",
        "cursor": {
          "ref": "cda82eab-0bc8-4447-b29c-0e8efe13e94b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "13eddb15-16df-4975-8e4c-8006f8a5c76c"
        },
        "item": {
          "id": "7e9ef99d-620d-4610-8ea4-ad8fb725e1ff",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "9bc3009e-57ee-4afc-b80a-987bf6d61dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e711ac7-f61d-44be-a4a4-ee51e81fb772",
        "cursor": {
          "ref": "eb1da3a0-2c76-43a2-97f5-ac66c980a233",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f9d679d8-b058-44f5-ab3c-77059c8a9126"
        },
        "item": {
          "id": "2e711ac7-f61d-44be-a4a4-ee51e81fb772",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7dceeec8-408c-4888-9b37-3b1ddad57d86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77f11ef-7662-4732-8ee4-6c70480cdc1b",
        "cursor": {
          "ref": "ea1e45c0-bdc7-4d3a-9da3-74f19b6336aa",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "928040f7-56b4-4668-ba5d-33dea228e5e7"
        },
        "item": {
          "id": "f77f11ef-7662-4732-8ee4-6c70480cdc1b",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "5079102a-e681-4b6e-a813-c7c6886528c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e80bdf-dba5-4678-893a-36f08c20b35d",
        "cursor": {
          "ref": "0ddf322e-36c8-44db-bd2f-6c93dec2ccf5",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "399a4fb9-d8a4-4005-8ec6-b8856eebaeba"
        },
        "item": {
          "id": "16e80bdf-dba5-4678-893a-36f08c20b35d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b015d0aa-ec1c-4e69-99f3-bb1d9897633d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20bd0b19-a7b8-4e40-be75-ae70987bc1f8",
        "cursor": {
          "ref": "3bd700dd-3679-48df-a1a2-b49bc01f6635",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "17da3665-826e-4d2b-a935-9eb6f5dd4d62"
        },
        "item": {
          "id": "20bd0b19-a7b8-4e40-be75-ae70987bc1f8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "557b09e3-9489-49ea-b483-6edcbf41212a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41a324d5-72c9-4738-bb64-9bbb56f72eac",
        "cursor": {
          "ref": "ed97b402-f594-4b9d-8e4f-d2878f361402",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "24024cc9-402c-4cd9-87a3-25215a7f8067"
        },
        "item": {
          "id": "41a324d5-72c9-4738-bb64-9bbb56f72eac",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "575bb5be-113b-4a82-8669-741cbd13ef08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8ff2e3-0fa7-4977-bac6-7db2fe7ab8d6",
        "cursor": {
          "ref": "bb3ef852-deee-495f-a572-3e26ebd2e48c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "2b91414c-a2ea-4e82-a622-cfc5d4329700"
        },
        "item": {
          "id": "7a8ff2e3-0fa7-4977-bac6-7db2fe7ab8d6",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "76a387cb-205a-4298-81a3-d38d16f7973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97258100-e2c3-44f0-8069-e0166af12f82",
        "cursor": {
          "ref": "4a0365a2-3a2a-4e36-8a43-5e6adf592d17",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6a0e7541-c426-4783-a430-27505fcf1ae8"
        },
        "item": {
          "id": "97258100-e2c3-44f0-8069-e0166af12f82",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0cba1620-1f29-4145-8816-b9e6fa0cc68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a408177-96f3-42ae-9b85-140b3567fe7f",
        "cursor": {
          "ref": "34e60848-3fed-42c8-9d43-0f07dbb9cd37",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "443e0181-2d48-4ecd-b072-f719b683d57a"
        },
        "item": {
          "id": "8a408177-96f3-42ae-9b85-140b3567fe7f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4e1455cd-5921-48e7-84cb-efe053ee22d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ed2ab3e-3a4b-4c48-8b23-7e496ab7c9d3",
        "cursor": {
          "ref": "e90ee3c5-a2df-4cd6-be53-fcbd2f26879c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e92b9985-cdc0-430f-86b5-33bff1c38358"
        },
        "item": {
          "id": "0ed2ab3e-3a4b-4c48-8b23-7e496ab7c9d3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "497d2839-45a6-43ec-9ac7-a73562ca658a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a3e464-c099-4ee8-87a1-8f8d0675d662",
        "cursor": {
          "ref": "19a7dbce-4366-4b7b-86f7-fb8a8006a763",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9754c742-3fbf-4e7f-ac09-f75407ed7288"
        },
        "item": {
          "id": "94a3e464-c099-4ee8-87a1-8f8d0675d662",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "61ce3988-66f6-432d-aad4-eeb0236844a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bebb5758-c02f-4fc6-8bb4-132d750d1aa6",
        "cursor": {
          "ref": "0542e8db-17bb-49bf-b98e-d5395a937890",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "2643bbb3-d128-4e7c-b912-213d9e243427"
        },
        "item": {
          "id": "bebb5758-c02f-4fc6-8bb4-132d750d1aa6",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a1ff408d-b5b1-4a80-ab6c-040e9269b30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05060a1-aa53-475c-856b-6cb3650f17a8",
        "cursor": {
          "ref": "d1fbe275-44fa-441b-a15a-77c658172fc6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "b8dd5b48-9ca0-441d-95e8-e6551cd99780"
        },
        "item": {
          "id": "f05060a1-aa53-475c-856b-6cb3650f17a8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "bcf9d89a-8498-44ad-8d8d-735cb56e38ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2eb14f-657f-41aa-b777-80ca86397f4e",
        "cursor": {
          "ref": "c5d7be3e-bf2f-47f1-8435-d7b8213dbb0d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "820af247-e64d-4ff3-931d-f56531fa4715"
        },
        "item": {
          "id": "0a2eb14f-657f-41aa-b777-80ca86397f4e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "7749bec8-28b3-4a2f-9607-47f758605439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a424791-e3ba-46b7-900f-ddc1272bde87",
        "cursor": {
          "ref": "db28077c-b6e8-4476-8dec-e9c537668625",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "02958b56-2f0d-439d-b029-4ed4d496b82b"
        },
        "item": {
          "id": "7a424791-e3ba-46b7-900f-ddc1272bde87",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "2ff9f6f9-781d-4070-83d0-84ade28bb754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72443342-0b55-4ea8-bad8-b113ab8d9171",
        "cursor": {
          "ref": "4d23dc35-a7f0-4026-a4b6-b8d8556875ea",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3292ff29-dce9-4e6e-820f-f4c81b098352"
        },
        "item": {
          "id": "72443342-0b55-4ea8-bad8-b113ab8d9171",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "79cc3e8d-298c-4947-a3a0-e0a6172c992b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf14ddf-1b50-4fcd-af2b-a5c3ae041222",
        "cursor": {
          "ref": "d0203f15-c77a-4989-adb1-720df92ebd59",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "6488cae7-9c4a-4437-b229-a1a83b0b0a6c"
        },
        "item": {
          "id": "8bf14ddf-1b50-4fcd-af2b-a5c3ae041222",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ddcb6a66-5d89-42b4-b228-a36f09eef5ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de65015-9b9d-474a-b048-5886c64bfc75",
        "cursor": {
          "ref": "e1f12831-ed93-4d34-b2bb-d0e2d8f2c4ed",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3cd59f39-7dd9-4d64-baee-48faf3ae405e"
        },
        "item": {
          "id": "7de65015-9b9d-474a-b048-5886c64bfc75",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cf08e80f-f848-407f-ae7d-f64bda1e241e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d844fca5-7b68-42ac-b968-9d7307b5b257",
        "cursor": {
          "ref": "34dc602a-102a-4e26-a079-777a4582391d",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a81492be-cb0e-472d-9592-0c9dc9cbc5c7"
        },
        "item": {
          "id": "d844fca5-7b68-42ac-b968-9d7307b5b257",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "fe97c25d-f893-41d6-af59-8a8cd04106c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0e28a11-8ca0-49fa-b216-f9fde4891b6c",
        "cursor": {
          "ref": "0fc1363a-53fc-4aa7-aacc-bbd8b9c9601b",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1040913f-efc9-40f4-9f18-b132ed875f39"
        },
        "item": {
          "id": "c0e28a11-8ca0-49fa-b216-f9fde4891b6c",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b651db81-0bb3-4c0c-b332-28ede052ad94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c67104-0f95-4e27-a187-e7393884ed61",
        "cursor": {
          "ref": "5ca201cc-e282-40e6-a45a-466a0faa6aaf",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c4e32eea-adc2-4486-a65f-b29c6cdf3067"
        },
        "item": {
          "id": "a6c67104-0f95-4e27-a187-e7393884ed61",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5d913c4f-608e-4dd8-99d3-717d7bcdef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f247a179-b57f-4059-816f-6d8f4853c6db",
        "cursor": {
          "ref": "68c1b989-5685-4a94-99b9-fe4650284d55",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2b24b528-a0aa-4e84-9048-3549c978c5e0"
        },
        "item": {
          "id": "f247a179-b57f-4059-816f-6d8f4853c6db",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "a1caa0b0-2884-4200-ad25-e062c90c089f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145a2aca-ae10-48bf-8f1e-81a1c89ce3ac",
        "cursor": {
          "ref": "7bd99c49-13be-467e-a635-6f7d41207e65",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3fa509c1-8004-42ba-a171-6d1f2ce13833"
        },
        "item": {
          "id": "145a2aca-ae10-48bf-8f1e-81a1c89ce3ac",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "bcf62499-8ee1-454b-aa30-2b113abff434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e491e8-fe62-444e-8773-c54d45c79131",
        "cursor": {
          "ref": "87dc1120-ed79-4d9a-bec8-f4f8aa48aa00",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5eed57e2-73a5-449b-8e0a-e404997dca89"
        },
        "item": {
          "id": "80e491e8-fe62-444e-8773-c54d45c79131",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "17ba5067-3ceb-4aa4-ad93-f49660dc8663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f31b62fb-d09e-4cbb-863f-497cd84de33d",
        "cursor": {
          "ref": "124677c2-3c45-4f47-abab-64dc99e2ab4b",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "607f357e-8cfe-41a4-acd7-c80f6379ecef"
        },
        "item": {
          "id": "f31b62fb-d09e-4cbb-863f-497cd84de33d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "70da2a68-ffb1-4290-99b4-f27a9d8fa806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0ad80cf-e51b-4240-bd82-73a337e444d4",
        "cursor": {
          "ref": "c537fb89-ca90-4ba4-ba63-6d6a97eb647b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e0b51fca-027d-4f08-8986-d2584f6bc925"
        },
        "item": {
          "id": "a0ad80cf-e51b-4240-bd82-73a337e444d4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ee228886-a3cb-49d9-a884-eb7423e03800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13ecb802-72e4-4db8-9af9-7b0857f1d310",
        "cursor": {
          "ref": "637e686a-2c46-47da-bdc3-71edd7c941e3",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a721c74b-59ab-4a07-b808-9528e4cc8660"
        },
        "item": {
          "id": "13ecb802-72e4-4db8-9af9-7b0857f1d310",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0e7e287d-fd90-46b3-a53f-57249e0d9b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daec9266-54f5-45e5-be16-5f60e8777655",
        "cursor": {
          "ref": "d295ce36-463e-4b13-a507-f13ee3ae7755",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0f05a0ce-d391-4351-9b98-6eae55f9fb96"
        },
        "item": {
          "id": "daec9266-54f5-45e5-be16-5f60e8777655",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "96ba339a-054d-4998-a867-a98b1d52d7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a9637c-e7cc-4736-a288-d8cf49a6bd65",
        "cursor": {
          "ref": "d51ad5a3-243c-44f4-9eff-a96eb7342d97",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "4b35d5e2-c60b-4ff9-a35d-6f052daead37"
        },
        "item": {
          "id": "03a9637c-e7cc-4736-a288-d8cf49a6bd65",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "4e5b5cca-3834-425c-85d6-9a12fc519d2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f848e2-6302-4c32-8981-2f9b9ea7a218",
        "cursor": {
          "ref": "98be568b-cc4a-425c-a921-af49e60f0602",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "24982c59-b425-4172-afa9-f8e8100b7a90"
        },
        "item": {
          "id": "64f848e2-6302-4c32-8981-2f9b9ea7a218",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "7f27e4ac-34f4-4088-815f-18374a5e8390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f41d40-748d-4a9f-9977-bf2b9821d67e",
        "cursor": {
          "ref": "5243329f-56ca-4710-bf1b-37a4c7dd1dca",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "bc26141e-df30-4aac-a3d0-07481b21e483"
        },
        "item": {
          "id": "11f41d40-748d-4a9f-9977-bf2b9821d67e",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8d973407-4f6d-4d61-8a23-ee7d4e20d44c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85a92440-d96f-4a05-8ebd-704378e14390",
        "cursor": {
          "ref": "7ebe427b-d79e-456c-bcc3-b12e3bf93927",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a9013c66-87eb-462f-87e6-a4c381c70aad"
        },
        "item": {
          "id": "85a92440-d96f-4a05-8ebd-704378e14390",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "299402d8-bb12-499f-9394-12d438425c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f53f7de-5269-481c-9e23-b3b44a32b98e",
        "cursor": {
          "ref": "447389b9-3c07-4f59-b051-3b4b9fa6cd4d",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "d665b5e6-fc2b-4f19-aec9-b93f7d569836"
        },
        "item": {
          "id": "0f53f7de-5269-481c-9e23-b3b44a32b98e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "ee037581-6993-49cd-8f65-55e1bfd7be4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7c98df-a0ba-4821-8095-d6e7927cfb8e",
        "cursor": {
          "ref": "606f2e61-4468-448c-a694-2a0dfd832bbc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9ad821a5-ef32-4d3a-915e-0b95a39c8e44"
        },
        "item": {
          "id": "3e7c98df-a0ba-4821-8095-d6e7927cfb8e",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "c0568cb2-5ad1-45f9-b7d3-e8bf36a24b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf958e8-a389-42b5-ac0b-ce2388de4020",
        "cursor": {
          "ref": "e5bfb335-69c0-42a8-acd3-74c802200e60",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d1c293b9-2d4a-4c4f-a3ee-7854f2a2a247"
        },
        "item": {
          "id": "5cf958e8-a389-42b5-ac0b-ce2388de4020",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ca731ff6-8e6d-4a72-989b-9924824f9070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcc1cdc0-f554-46c7-841f-66e46ee50948",
        "cursor": {
          "ref": "1940983c-e10b-496c-b9e5-1db59277c9c0",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ea0d65d0-930e-499e-9d02-25b063081e04"
        },
        "item": {
          "id": "fcc1cdc0-f554-46c7-841f-66e46ee50948",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "72a033fb-8712-401d-844c-b110489c4cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce04098f-c907-4223-80a6-fed962af9d36",
        "cursor": {
          "ref": "b8306111-f123-4530-827e-d53e121a7da3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "c1129989-9b0a-42fa-89f4-53b1fa613140"
        },
        "item": {
          "id": "ce04098f-c907-4223-80a6-fed962af9d36",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "55caef5a-5e1b-4d74-927a-7fc3bf8a1c97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f12484-2fc0-4305-8966-03d2898cc405",
        "cursor": {
          "ref": "d50f7cdd-5bbe-4dc7-a57e-862d76380da5",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bac1a405-32b2-488d-a002-160435f3ca02"
        },
        "item": {
          "id": "61f12484-2fc0-4305-8966-03d2898cc405",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "935dc732-a477-4d00-ae8f-5baf1410d89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92660da6-2f0c-4ce8-9ebe-d291b095e6c3",
        "cursor": {
          "ref": "a599d520-85b9-44a9-bda3-2e10af43785d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "fdd7a392-4796-41ac-8944-2a3daf383cca"
        },
        "item": {
          "id": "92660da6-2f0c-4ce8-9ebe-d291b095e6c3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "8b53b1fb-c076-49ce-8c85-6ce03ac9c3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0175c50b-7ac6-4933-984a-8bdd633c5076",
        "cursor": {
          "ref": "5a6036c6-0b07-4dff-b296-1917b3a6bbaa",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "e232fede-378b-4ff1-a93b-4b9011d5b540"
        },
        "item": {
          "id": "0175c50b-7ac6-4933-984a-8bdd633c5076",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c10f6d73-5dd6-4742-bc93-8fc25ca0a080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582b28f2-a5d9-4ed5-b7f5-0a234172d1d3",
        "cursor": {
          "ref": "ffe4ddab-0f22-4ae2-bff7-78f82bcac185",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "713a9e1c-f7f9-487c-95f4-1d5656f0fc83"
        },
        "item": {
          "id": "582b28f2-a5d9-4ed5-b7f5-0a234172d1d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7df4fa4f-28a6-4711-806a-fcb1d966d99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51c1cf63-7824-4999-959e-fe4a02606e60",
        "cursor": {
          "ref": "486b6822-b06f-45be-a576-6c80b0bb7728",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "06ef235a-c01a-49e1-8e39-0632011cd408"
        },
        "item": {
          "id": "51c1cf63-7824-4999-959e-fe4a02606e60",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "43a0e198-2917-46f7-8f03-4d5f00cba209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f55b33a5-ed6f-4675-8866-bd9796e9feb1",
        "cursor": {
          "ref": "a5ee7dd2-12b7-46b8-8aa1-3b88af03da89",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "12e56596-38a4-49f7-8be5-3e8b98fb969c"
        },
        "item": {
          "id": "f55b33a5-ed6f-4675-8866-bd9796e9feb1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "21b987cd-2c20-44f5-a77a-cc1df8e9723c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a1001a5-0a8e-4f35-a4b4-e00dced844ff",
        "cursor": {
          "ref": "0252f232-2fc1-4b27-8312-350ad995c64e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5b692592-40bc-4b31-b88c-d6818fd98fb6"
        },
        "item": {
          "id": "2a1001a5-0a8e-4f35-a4b4-e00dced844ff",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "bccfb827-42b5-40d6-98f5-59076b865f5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f1643f-5447-4b20-8094-23d91f2ca508",
        "cursor": {
          "ref": "5dcc8302-4f91-4a12-b8da-86438f0f1cca",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b4020fb1-bd72-4e26-90a8-4596e538f3bc"
        },
        "item": {
          "id": "79f1643f-5447-4b20-8094-23d91f2ca508",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "eacf7f8c-ea3d-4a1a-a490-5f90ae77870c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d176bd7a-413f-4a5e-a215-8083513113c4",
        "cursor": {
          "ref": "766c9569-d21f-417c-855a-4aad03c02546",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8cd858ff-f163-451c-9f7b-47762fb61834"
        },
        "item": {
          "id": "d176bd7a-413f-4a5e-a215-8083513113c4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "e754c37c-b355-48fd-a2a6-00dcf3b38dd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da334a2-7f91-4bac-b797-ac5813b5883f",
        "cursor": {
          "ref": "66b4da46-7166-445e-b278-62c0bd73a26c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0d5bd977-1508-4402-a74e-b3ecc571e040"
        },
        "item": {
          "id": "3da334a2-7f91-4bac-b797-ac5813b5883f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "79075683-9e20-4dab-9abb-3a202e69df3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82c43fb3-c226-4530-b9c4-b878adf359bb",
        "cursor": {
          "ref": "75007120-b554-431c-8407-6296ae1b8469",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "d192126d-ab59-4cbb-975d-d88aa19e87c0"
        },
        "item": {
          "id": "82c43fb3-c226-4530-b9c4-b878adf359bb",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "67f800f7-a39f-4438-be63-e26e1e344fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371bcc4a-0f73-4f08-849c-6742e27794e3",
        "cursor": {
          "ref": "d06bb94f-3538-4bf3-963f-0486f7eff495",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "9d6ac7cf-7142-4b1e-b771-eea9fb2b75aa"
        },
        "item": {
          "id": "371bcc4a-0f73-4f08-849c-6742e27794e3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e46a2c94-28ea-4816-9a50-9a2714bcdb66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92b2009e-60d0-4f7f-ab35-79cf39b020a3",
        "cursor": {
          "ref": "f4bdcb1e-4c51-416e-ae94-dcfbd0a17c93",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "890fe8f8-f92d-47e9-9f97-ead0a3121a16"
        },
        "item": {
          "id": "92b2009e-60d0-4f7f-ab35-79cf39b020a3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1a5cd553-9c0e-49c3-bc19-1331b7588c94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a292c71-160d-4ef2-8572-14e600a04a93",
        "cursor": {
          "ref": "e253d2e7-af4f-4742-9394-b5fd6116512c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f856bd2e-ef9d-4805-8ee9-c9a57946ecc6"
        },
        "item": {
          "id": "1a292c71-160d-4ef2-8572-14e600a04a93",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "15073820-9fff-4f7f-90bf-53801d6f058e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c16a48-d369-4696-b997-568844175938",
        "cursor": {
          "ref": "2b8641e7-b6f4-4cd9-ae73-1fa7f65ff911",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e92342dd-279e-4098-9609-6f9692df2552"
        },
        "item": {
          "id": "e2c16a48-d369-4696-b997-568844175938",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "2af1b1fb-2319-40e3-a3e7-ead4576e4f39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63a980b5-1ccf-4e2d-814c-ef7bc7bff750",
        "cursor": {
          "ref": "57bfb9c7-65c0-4b7f-8acb-db30421296c5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "b0c879af-6bf5-405d-96c9-7050fa990fe4"
        },
        "item": {
          "id": "63a980b5-1ccf-4e2d-814c-ef7bc7bff750",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "50e17d5e-161d-4269-bc15-5b29c350a06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c40ded26-c4de-44eb-a515-85a794f75030",
        "cursor": {
          "ref": "4e5d7f71-a106-4b64-95ae-714968e69fd9",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6e001e96-c489-4602-8a5f-f91bc52b909f"
        },
        "item": {
          "id": "c40ded26-c4de-44eb-a515-85a794f75030",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "06664e7b-bcad-40f7-9aad-352ae0436fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3d4c33-8d0d-4d08-80cc-e9e757ab5489",
        "cursor": {
          "ref": "995323ca-15a3-45c1-89f4-d2fbeecac822",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "6ef95eb8-d66f-4699-9bbd-7c9b51dd059f"
        },
        "item": {
          "id": "8f3d4c33-8d0d-4d08-80cc-e9e757ab5489",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1362603c-3722-44c4-a3ed-03cf185d86c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31987fb5-5831-453e-a2bb-cdaed81c5d5b",
        "cursor": {
          "ref": "d83c713f-ff38-4f4d-9f03-cbbf450ace7c",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c8c12748-b19b-45d7-8188-d24d0afcfd4b"
        },
        "item": {
          "id": "31987fb5-5831-453e-a2bb-cdaed81c5d5b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "b604fcd0-e985-4918-9e18-b4b3093bad6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec19965-33e6-49cd-b120-cb8812c52ea1",
        "cursor": {
          "ref": "09306082-5b71-422c-ac13-da5857fa4e3d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "c83f3d94-ad53-4bcb-86b0-b51ef6131ce5"
        },
        "item": {
          "id": "5ec19965-33e6-49cd-b120-cb8812c52ea1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "667e3e6d-e7f8-4099-bf14-fc35e44a9de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef2bb64-c22f-4ee2-9e84-1bbaf9619d69",
        "cursor": {
          "ref": "a8c10fe3-49bb-4ae6-8259-149364926493",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d450337b-b6b6-42ea-b1dc-827a67ebfa9d"
        },
        "item": {
          "id": "3ef2bb64-c22f-4ee2-9e84-1bbaf9619d69",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "eba7d721-ad3f-4b66-a9e2-4bd405c23225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c5d5bf-9e0e-41ca-b407-6fd262682b9f",
        "cursor": {
          "ref": "77437d4b-f6e3-4d77-b448-576caf637d66",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8723a71a-ddba-4fc6-9e7f-861dffa27906"
        },
        "item": {
          "id": "c4c5d5bf-9e0e-41ca-b407-6fd262682b9f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "213b8d7f-abc2-43d2-ae51-8e66af065b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10a810cf-7487-497a-a99e-919fec627bee",
        "cursor": {
          "ref": "2fa043ea-db3c-472c-aaf6-f24356f9bf1e",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "96439517-ae24-4fef-8350-7cc0335b94da"
        },
        "item": {
          "id": "10a810cf-7487-497a-a99e-919fec627bee",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "549c1e72-7624-41c1-a2e9-17204ab55352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1504f9d0-a8ad-4cc6-9c9a-a725c76193e1",
        "cursor": {
          "ref": "50bc81d6-be3c-4fdc-a50b-e148afcf68d5",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "634f67fb-673d-4ee9-a28f-01174e83f74f"
        },
        "item": {
          "id": "1504f9d0-a8ad-4cc6-9c9a-a725c76193e1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2dcd68b5-9b1a-4f45-9ed6-97e22fd821bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea513f07-7778-46cf-8409-4ddae1b2906c",
        "cursor": {
          "ref": "94497e78-8550-411f-b7ae-9a574ef73d74",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "27b3479e-1f39-4b1d-a8fc-8ff8bda2a75a"
        },
        "item": {
          "id": "ea513f07-7778-46cf-8409-4ddae1b2906c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "a6ea1d4d-67ee-41ec-9748-3eddaabda5de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59fef96b-2596-4128-9e3d-26c902371dfe",
        "cursor": {
          "ref": "439efaf3-170e-47e8-b73c-95600112c8ac",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b2c63363-f4df-4516-9e08-54748f259999"
        },
        "item": {
          "id": "59fef96b-2596-4128-9e3d-26c902371dfe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "a5065e72-cc6a-433e-b6b7-3caaab8d978b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17d7fb1-595b-49f2-b15c-7eb35ed0fcbd",
        "cursor": {
          "ref": "218fcd7b-1333-40d5-9c96-3c47eb20cb11",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d21ac513-8857-4180-8afe-7ca39bba060e"
        },
        "item": {
          "id": "c17d7fb1-595b-49f2-b15c-7eb35ed0fcbd",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "efb2d46d-d90c-4054-8dc6-df5596832edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ccd51b-4ee3-41e5-920a-e5589d629bce",
        "cursor": {
          "ref": "e413d7e2-ce78-460e-8a12-935f3dd59c37",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "e96e2efe-e10d-4605-91a3-786f1d9026fa"
        },
        "item": {
          "id": "88ccd51b-4ee3-41e5-920a-e5589d629bce",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d32c8646-6c5d-4700-92ee-9fa4899a8df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf840158-7e58-4491-bfe7-266f46074164",
        "cursor": {
          "ref": "4e547724-3292-4446-9fcb-e24f71b99988",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "e608e2fe-90f7-4717-9677-8831ebce02e7"
        },
        "item": {
          "id": "cf840158-7e58-4491-bfe7-266f46074164",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "299a7704-3c97-45c2-bc3a-62055fff6db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37be263-cce6-4d4d-971a-5197da13362c",
        "cursor": {
          "ref": "90c22f62-b6a9-4986-a040-38f120754b03",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "df24668e-b820-4b74-ae6f-976ddb64c262"
        },
        "item": {
          "id": "a37be263-cce6-4d4d-971a-5197da13362c",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "7098a30b-beab-40a1-9dfc-3a0ba0e39a8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d50ce47-d00f-45fd-8947-cfd8226d309f",
        "cursor": {
          "ref": "dde861e1-4968-463a-90c1-e9d7c5268843",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7f6ec725-63b2-47a8-8944-8f78da9132af"
        },
        "item": {
          "id": "4d50ce47-d00f-45fd-8947-cfd8226d309f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "450f7ef5-5294-4bcb-9b87-b5e5681944e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c674865-483c-4d12-9881-8bffd527c462",
        "cursor": {
          "ref": "19ce8bbb-f1a8-41ce-9224-9555f0d4a352",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "269d9f5e-4bff-4e06-8bb0-bd2bc56ea012"
        },
        "item": {
          "id": "0c674865-483c-4d12-9881-8bffd527c462",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0cf32173-29f5-4e99-91a9-f92ffe149f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6c4e6f-8bea-437f-a359-762d9eed2573",
        "cursor": {
          "ref": "236f75f7-982a-4d9f-ba24-6908f6ed0e84",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c04158ab-7632-4471-9876-b0d6400b1cff"
        },
        "item": {
          "id": "cb6c4e6f-8bea-437f-a359-762d9eed2573",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a9819bc0-d675-442d-95d3-b5b2fa6a986a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4fb383-9783-4ffd-966d-cdd8dd142fe7",
        "cursor": {
          "ref": "aa86223f-39d2-446f-93d7-a15ebce89fbb",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9cf3b708-6003-4160-b0f0-c6d2ca51f417"
        },
        "item": {
          "id": "7f4fb383-9783-4ffd-966d-cdd8dd142fe7",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "cd3b76c9-f0d2-4746-b68c-8117b87f8014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f67ad6-25ad-4789-8da8-b8718700346e",
        "cursor": {
          "ref": "40af2ddb-fc0b-44d0-964d-e6af35c308b2",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a4cd4113-4da1-484b-8aea-d379c5e2a87e"
        },
        "item": {
          "id": "d0f67ad6-25ad-4789-8da8-b8718700346e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "20ecfe64-9d74-4188-b991-c320bd4cc420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9ef86c-586f-4f3c-ae70-da478b01138f",
        "cursor": {
          "ref": "6c16ad7d-eb28-4272-9887-04bf858c7527",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "ac40390b-9646-46ec-8b0c-ce5bc966282f"
        },
        "item": {
          "id": "aa9ef86c-586f-4f3c-ae70-da478b01138f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f7226ad2-9340-4c5b-bda3-75393584d7bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7af9f0c-a31c-4559-a942-52b80293e7b5",
        "cursor": {
          "ref": "89cbe5cb-fec6-46b0-854d-6d28a07c1bee",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dfb12789-d572-480b-9725-f30fd0660014"
        },
        "item": {
          "id": "a7af9f0c-a31c-4559-a942-52b80293e7b5",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "1c51f90f-29ba-49bd-88e0-b88c436bef71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 119,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8a3b5590-5433-420c-92d1-28d4675261c9",
        "cursor": {
          "ref": "d159fa4b-72d7-403d-b003-a312e308a405",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "77e041ec-83f1-43f9-9eb4-e6c78dc9b457"
        },
        "item": {
          "id": "8a3b5590-5433-420c-92d1-28d4675261c9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "490c2eda-5250-4462-a865-5b341fefe93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "973c9813-d6a2-43ec-a1a8-90137d0d6548",
        "cursor": {
          "ref": "52f48b9f-09ba-46ce-8194-7b122974ff1f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "50ea9546-4879-4aef-a189-db672ee6eaf0"
        },
        "item": {
          "id": "973c9813-d6a2-43ec-a1a8-90137d0d6548",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9722bdcb-e29d-4ea8-b8fa-7d53a36114a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "86ac593e-775b-4a4a-b00a-7c247c6c67b4",
        "cursor": {
          "ref": "bdf1dd5f-4525-4644-9eee-fef75fb0295a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "38fc7598-655f-48c5-a86a-71aa360051b6"
        },
        "item": {
          "id": "86ac593e-775b-4a4a-b00a-7c247c6c67b4",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "bbca69b2-b473-4fa6-85f4-161b2d22a77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 127,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "95db1dd0-d77e-41c3-b854-3d9983053558",
        "cursor": {
          "ref": "5ed3b1f1-f2f0-443f-959d-80e75a06ae14",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "650a52a2-2dda-465c-9e64-789b2405f80f"
        },
        "item": {
          "id": "95db1dd0-d77e-41c3-b854-3d9983053558",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "70781c36-60f4-4d63-8a43-25dc22e484a1",
          "status": "Created",
          "code": 201,
          "responseTime": 8642,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e1edd5-392a-4c27-ac17-99cb74f3bf0a",
        "cursor": {
          "ref": "0d3112c6-2c03-42e1-a441-c99d1fdd09e5",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "69927276-3d1c-4a86-9c0a-b8b02e21163f"
        },
        "item": {
          "id": "d0e1edd5-392a-4c27-ac17-99cb74f3bf0a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ac85c2b5-49a9-4799-90b8-6d6ecc137661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 268,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0e260363-0ba5-4c5f-8adb-0383826c32ff",
        "cursor": {
          "ref": "b16d6725-8937-4c6d-ad3a-8eef266cbd58",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ec05203a-5496-49c2-8cf5-068e4745e68a"
        },
        "item": {
          "id": "0e260363-0ba5-4c5f-8adb-0383826c32ff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fa9ef43a-05a6-42c9-8152-8cc28c65a324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "2cc9d6b1-5375-4f1b-b603-b398b943122e",
        "cursor": {
          "ref": "a4b7ab11-1b7c-4af5-b7ae-2fc1fb8440b3",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "53c5d998-bd9b-4552-8ef9-0c678b1d32b5"
        },
        "item": {
          "id": "2cc9d6b1-5375-4f1b-b603-b398b943122e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "b317e7bf-a784-471a-a3b7-9fe450c37649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e10070f-d957-4733-ba18-989b26144448",
        "cursor": {
          "ref": "26262595-a6b7-465c-a195-19a6fb6134d7",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2ffdbd10-a380-446f-bad3-f31c1cd27e90"
        },
        "item": {
          "id": "2e10070f-d957-4733-ba18-989b26144448",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "81c26380-5538-480e-9e6b-84424ab699ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "626dd389-047a-4136-a8c7-ceb2b696a83f",
        "cursor": {
          "ref": "70279c3c-25ca-4544-b375-c37190258208",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4ec39b90-f9c8-4e6d-9704-4daf4ec54d29"
        },
        "item": {
          "id": "626dd389-047a-4136-a8c7-ceb2b696a83f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0f857db2-d916-4ce7-858a-59dd80d5cf45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e28e002-3605-4d17-bc2f-2b6d07a7fe6f",
        "cursor": {
          "ref": "8297b4a9-7287-4991-b0d5-3279476e931f",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2800a018-5078-455b-bea9-5b38cca0b2e0"
        },
        "item": {
          "id": "0e28e002-3605-4d17-bc2f-2b6d07a7fe6f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "85fbeb1d-037d-46d0-8e74-9bd0951ad6f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b674f19-15d5-4b83-81f4-d3627f4e587a",
        "cursor": {
          "ref": "f825497c-46ab-4275-9e43-62121770da72",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "34a96f5f-42d0-4fd1-bcea-93af55a5c48c"
        },
        "item": {
          "id": "5b674f19-15d5-4b83-81f4-d3627f4e587a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c2708d0f-a646-4592-9506-272c6a77bf85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0c70767-bc4f-4c3d-80b0-0301a31a2f6a",
        "cursor": {
          "ref": "4eeaf9d4-3d3b-4d9f-97d5-2dba545c526b",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "cb3df4ce-8151-4875-843d-f188896cc671"
        },
        "item": {
          "id": "d0c70767-bc4f-4c3d-80b0-0301a31a2f6a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "33d2d465-30af-41ed-9500-05de21149db6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435b2549-91fa-4ffa-af99-422706b3e9cf",
        "cursor": {
          "ref": "a2fa1b0b-f5f5-4316-82e4-d6793c37d9a2",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "71f2025d-3ab5-46f4-bf8c-914733f2550c"
        },
        "item": {
          "id": "435b2549-91fa-4ffa-af99-422706b3e9cf",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c8698858-e2b4-4c3e-b461-d7cc5679beb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00e51411-e22d-47be-a17c-1e61cba4f62b",
        "cursor": {
          "ref": "c5c64e89-d191-434b-aa90-1c93215db840",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7e4986fe-49b5-4462-a4f6-9abc1fbb44b1"
        },
        "item": {
          "id": "00e51411-e22d-47be-a17c-1e61cba4f62b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bbde737b-0692-4769-a357-0afd6c9f44b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b29b960-c048-4b3d-84f9-1629dc6ec278",
        "cursor": {
          "ref": "164e44a3-c432-4d81-8a53-b4357237e6fc",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "66900b3b-dcaf-4d3e-b6ed-fa33bd245876"
        },
        "item": {
          "id": "6b29b960-c048-4b3d-84f9-1629dc6ec278",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "bdfcef0d-dcbe-4fe4-b652-638f9b61b12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c686930-b6d1-40dc-8a21-08341117ca7a",
        "cursor": {
          "ref": "266d4056-7bf2-4654-b725-22e0526616e8",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "28eac08c-85ce-47be-ac15-ae18795b4c8c"
        },
        "item": {
          "id": "7c686930-b6d1-40dc-8a21-08341117ca7a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a5c344ea-19e5-4c7b-bd7c-5dec1230af10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e394d209-838a-4981-91ea-c685f30c8a63",
        "cursor": {
          "ref": "fbf0e634-45d5-4e41-993a-833656226efd",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f25612b7-92cf-476c-bda6-908573b18322"
        },
        "item": {
          "id": "e394d209-838a-4981-91ea-c685f30c8a63",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "187025b7-9168-480a-8e01-ec8ca89c2d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b58ced2-5672-48fe-bd41-6aff59d1f6df",
        "cursor": {
          "ref": "918bb8c3-7dcb-45cf-9bf1-7ef18b56326a",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "ae5dce4b-ebcc-4986-a131-27d3453f00b3"
        },
        "item": {
          "id": "1b58ced2-5672-48fe-bd41-6aff59d1f6df",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c3e46880-23ec-4aba-a0be-fb2f32e84174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 148,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fab2e56-cf76-4511-99b9-9c81e399606e",
        "cursor": {
          "ref": "c3df673c-3e9c-4ea9-ad4a-e2258d178dff",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3c538749-22e7-4d77-9b6f-63a1ea0a8deb"
        },
        "item": {
          "id": "9fab2e56-cf76-4511-99b9-9c81e399606e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1d54c81d-79f5-4e15-98ff-305ab41dcf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee43d9a-bdf4-4443-bc6e-bae16380dfc3",
        "cursor": {
          "ref": "3210a8d5-fff0-4cca-8564-a8a52658643e",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "53096915-a324-47dc-afcb-d321d0312f81"
        },
        "item": {
          "id": "7ee43d9a-bdf4-4443-bc6e-bae16380dfc3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "90d9a671-912c-4858-ac34-165417d6a246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70021177-0619-41a3-bcb9-86e3ff83688e",
        "cursor": {
          "ref": "287e0ad2-e7e8-4baf-99a2-e3c2a7dd319d",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "cc2f752a-d995-4016-a8de-20513e9a455f"
        },
        "item": {
          "id": "70021177-0619-41a3-bcb9-86e3ff83688e",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3b160085-fb84-4965-aa4a-c5b570b85403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96552ca2-8178-4b07-b038-b1a33b885848",
        "cursor": {
          "ref": "b8e38765-97e9-40a8-b52a-8144731547f0",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "392a15a1-8f1e-4cf5-bdb0-374acf570897"
        },
        "item": {
          "id": "96552ca2-8178-4b07-b038-b1a33b885848",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "276e933d-f4dd-4867-9da3-2cb464a49e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c281f1b-1994-43f5-ae70-6338eeba207f",
        "cursor": {
          "ref": "877aecfa-02b0-4140-823e-5a4ff7ea4b75",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b1116568-4f4e-442e-8452-5aedefa3895e"
        },
        "item": {
          "id": "0c281f1b-1994-43f5-ae70-6338eeba207f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8d4c595c-db6b-4d63-b3cd-949c299023d5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 72,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "5b284956-fe9d-414e-a53d-ffea5fb5dd9e",
        "cursor": {
          "ref": "e3544b1c-7da9-4103-8693-11f3874d79b0",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "47c5f5fb-0d31-470b-8c3f-0987aa243e90"
        },
        "item": {
          "id": "5b284956-fe9d-414e-a53d-ffea5fb5dd9e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "a4b10ecd-ecc4-4d34-8656-618e56dae453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bfefdc9-9bc0-40ff-add9-78b4e60ff2e5",
        "cursor": {
          "ref": "f15f282e-c922-405f-99a1-3b9a0ff910f4",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bf5bd354-4682-44ac-9ed2-aaad434407b9"
        },
        "item": {
          "id": "7bfefdc9-9bc0-40ff-add9-78b4e60ff2e5",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "60028529-2222-4ee1-8021-ddf5ef2debc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff205f0e-e5e5-450b-8e22-2b30995e1e3c",
        "cursor": {
          "ref": "ef2860d5-1cce-4ea8-8266-708ac40ffbea",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8406299e-5082-4de2-af9b-91adec4e2db0"
        },
        "item": {
          "id": "ff205f0e-e5e5-450b-8e22-2b30995e1e3c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f78e7ac7-4ed7-47bf-8dea-933b1c906290",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cac1886-a7f0-49be-918f-14c2a70b0636",
        "cursor": {
          "ref": "58b290ce-c9e4-4ae3-b348-a151760844db",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8b213ba0-ba96-42f1-bf4f-ffe3e8355450"
        },
        "item": {
          "id": "8cac1886-a7f0-49be-918f-14c2a70b0636",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fb06aab7-bac4-414c-a7ab-7180773f8807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663119b0-1d22-4cea-95d9-4d6b52e0eee5",
        "cursor": {
          "ref": "473db31c-a277-44a1-84bc-433a351d0267",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5a8ae42b-c8df-4534-a219-b324d1391019"
        },
        "item": {
          "id": "663119b0-1d22-4cea-95d9-4d6b52e0eee5",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "29ff070e-2c47-4a4a-8f08-6a81734490ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daabb395-e85a-46de-ae91-a3a6be7e791d",
        "cursor": {
          "ref": "62adc891-587b-4ec0-a8b9-c920f916068f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "3a04f509-1e0e-4ec4-aac2-796063fe4f76"
        },
        "item": {
          "id": "daabb395-e85a-46de-ae91-a3a6be7e791d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2f067a6c-dcbf-4f00-b6d9-91c3a47aa2a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e71cb1f-e25f-4c2b-935d-fa798250fe24",
        "cursor": {
          "ref": "3a9252e4-2289-4b17-847a-62d463c2efa1",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "98f459be-188d-4cb8-aeb0-063cc426f3bf"
        },
        "item": {
          "id": "2e71cb1f-e25f-4c2b-935d-fa798250fe24",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d75efa6a-fb56-44b1-8d76-8b8abf79b907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a652ce4-2223-423f-b01c-ef703fb37dc9",
        "cursor": {
          "ref": "3f3c7498-6be8-45a3-8322-1065cc5f7844",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "b47e45bb-e2fc-4d6b-8317-7600ccd07cef"
        },
        "item": {
          "id": "4a652ce4-2223-423f-b01c-ef703fb37dc9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b26d514d-d92d-44de-8bcd-3553c600dd0b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "47fef9f9-b0a7-4ae7-aa7c-8a60d5aae6b2",
        "cursor": {
          "ref": "8bd715a8-fc48-4f80-99bf-b42b188ad352",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f45597c5-f245-473c-a6bb-43e782198d2d"
        },
        "item": {
          "id": "47fef9f9-b0a7-4ae7-aa7c-8a60d5aae6b2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "b6ee9676-b9ce-4fb7-af5d-ca16ad248108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50e25ed-ccfb-456a-b0fd-ca9e06a5dcff",
        "cursor": {
          "ref": "e6ef7f10-6088-4906-80ed-9151ff4afb0b",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2faea5c6-8b6a-4c46-b46a-1660ac09ec34"
        },
        "item": {
          "id": "a50e25ed-ccfb-456a-b0fd-ca9e06a5dcff",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3fd25e63-f256-4857-b9a9-251b35897b65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18ed405-9de5-4782-92ae-c2d44c6cf182",
        "cursor": {
          "ref": "e689919f-21de-42c5-ad40-70dd448721fd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5cc64c4f-223c-451a-a8f6-701eaa3b60ef"
        },
        "item": {
          "id": "d18ed405-9de5-4782-92ae-c2d44c6cf182",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "6392f02c-e555-4140-be0c-9856da0d12f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6fcd7f7-b149-4dcc-83c3-ae5280e91d8c",
        "cursor": {
          "ref": "10d0d2a0-c3cc-4a04-bf6a-e9b157dfae4a",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "907abe76-3aae-4c02-a03b-6f66c2955726"
        },
        "item": {
          "id": "c6fcd7f7-b149-4dcc-83c3-ae5280e91d8c",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a6edcc1a-30d7-45ef-a13e-d8cca44f5d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2690838-8006-4d5b-b856-f0c7501c00f9",
        "cursor": {
          "ref": "729fa03c-2d38-4dcc-8016-31aedc0ccb59",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "e0847e33-3be1-4f5b-b64d-6482dfbe3339"
        },
        "item": {
          "id": "d2690838-8006-4d5b-b856-f0c7501c00f9",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cbe7e8f5-73de-4bb8-9985-9365be08c064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a1b3a9-edb9-414c-8657-02ef7a30556e",
        "cursor": {
          "ref": "4a208136-eb66-4e14-a27f-5fb5d55c31b0",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "b5446370-8c1a-481f-a4e3-cf78d30ca55b"
        },
        "item": {
          "id": "f0a1b3a9-edb9-414c-8657-02ef7a30556e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3b26ef32-ad00-4672-aacc-6004ce723763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb88b47b-8f41-4ec0-8e91-ae88d09fde1a",
        "cursor": {
          "ref": "8359eff6-0124-4fa3-81f2-cacb35e842d9",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d454f041-63d5-4a12-a591-812d2b73b54e"
        },
        "item": {
          "id": "bb88b47b-8f41-4ec0-8e91-ae88d09fde1a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "44cfd096-afcd-4fa0-82ff-096524a17533",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 113,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f543ec6c-2fca-4d35-b8c6-464c5aaa521f",
        "cursor": {
          "ref": "40e7f5e5-db21-4128-a6e2-9c1c554b8222",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a9149337-d191-4829-931b-bdeac6f4a1ae"
        },
        "item": {
          "id": "f543ec6c-2fca-4d35-b8c6-464c5aaa521f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "d5a04c11-f556-4733-8378-453e27f3fb05",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5f93ab6-8165-4993-86ed-a42d682fa446",
        "cursor": {
          "ref": "08d08e6d-9ba9-4d23-9d48-0494b4023644",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "61b1f1ec-292e-4843-b1f3-9449d2ca4288"
        },
        "item": {
          "id": "e5f93ab6-8165-4993-86ed-a42d682fa446",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "744d8108-0830-4afa-8e20-bca730f69f43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e17714-fca1-4051-b5b1-f0c4b680632d",
        "cursor": {
          "ref": "c8e50b6c-6c75-4cdd-9bf9-dee2426a0b27",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d096f256-b934-4ec2-b00b-3045fa6b3efc"
        },
        "item": {
          "id": "a5e17714-fca1-4051-b5b1-f0c4b680632d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "17999b99-0282-4a2f-aba0-f5738bc1b7e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d839e1f-da76-4ed3-bc2d-f0817f9f9ad7",
        "cursor": {
          "ref": "8b496e5e-0bb5-4036-91e9-9441953059a1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f13455b3-2090-4434-b0fd-fbfb1afc395b"
        },
        "item": {
          "id": "8d839e1f-da76-4ed3-bc2d-f0817f9f9ad7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "637ca3d7-0604-4d12-b437-75e3f919cca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b296ef-21b7-4677-a0ed-8656e9791bf6",
        "cursor": {
          "ref": "da06c577-6f94-4c12-9dce-23541e466ca3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "95431495-1b7c-42ad-b146-30ffdb30fbd2"
        },
        "item": {
          "id": "88b296ef-21b7-4677-a0ed-8656e9791bf6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "00d2bcdd-83e1-433f-add5-1199a9e68aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f718b0-d273-4592-afb0-e8b7a5f8a283",
        "cursor": {
          "ref": "9ea20a4f-4632-4da6-ad60-d3d54e39d8cc",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "43a5d1b0-7121-4349-8687-de7b5476f46c"
        },
        "item": {
          "id": "90f718b0-d273-4592-afb0-e8b7a5f8a283",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "8b58795e-7e83-466a-86db-104ee6e6f72d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75839409-4318-43da-a26d-0570f371f04b",
        "cursor": {
          "ref": "a270e646-cb11-4db9-88f8-1623aad7ba59",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f97a2ed8-2521-4c13-a7a9-f33ada863a77"
        },
        "item": {
          "id": "75839409-4318-43da-a26d-0570f371f04b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3982060b-2835-4689-a5b9-4a539c722118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "240c91a1-ae5d-4d47-81d5-6a90b1482d86",
        "cursor": {
          "ref": "9a97610f-cdb2-4b6c-9fab-031ab653b32a",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "18b8abfc-8f91-4cc7-b467-1f0604f6280b"
        },
        "item": {
          "id": "240c91a1-ae5d-4d47-81d5-6a90b1482d86",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2f883cb4-014e-4180-85e2-fb0e6f7c3476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbe93e86-c131-4cbb-8424-4730651de855",
        "cursor": {
          "ref": "0e7674f4-5964-4cfd-a1f0-118b3b699143",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a22e5948-9c31-4576-84d2-1d0eb9c57a41"
        },
        "item": {
          "id": "fbe93e86-c131-4cbb-8424-4730651de855",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8ab69d06-90cf-45fb-a91e-5fc2de0a187a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9923491-25f3-41bf-b1e1-53fb15c22b3e",
        "cursor": {
          "ref": "c2dd624f-9ea6-496d-abd3-067870d4c22a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c6505b77-b7db-4cd9-bbbf-39ef9c83d345"
        },
        "item": {
          "id": "d9923491-25f3-41bf-b1e1-53fb15c22b3e",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "945c9d2a-58dc-4f8e-ad4b-56df989a0043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02669d2-9296-4d0a-bc5f-26c09be8c79a",
        "cursor": {
          "ref": "420c2554-6764-4bf2-a61d-025d79668074",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "abebf9dd-ab9e-4cbe-8784-74502587136a"
        },
        "item": {
          "id": "b02669d2-9296-4d0a-bc5f-26c09be8c79a",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "b14f07ce-36d7-459a-adfb-2a858175488d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f45d9d-f865-4899-bd47-ff50b36053d9",
        "cursor": {
          "ref": "b4776ae5-0c9e-4e31-984b-d0a725631ae4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ebd71e32-bb0a-4a1b-9af0-8229586dbe20"
        },
        "item": {
          "id": "b7f45d9d-f865-4899-bd47-ff50b36053d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b75b35f6-66da-4eb6-9dda-b93b8a6ec3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fee4ab-20ce-40a3-8604-e1a03ed4effe",
        "cursor": {
          "ref": "44b867e6-29f2-426f-87b4-725423438666",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "74b9ba56-2c8b-4242-928e-d17e6c0b9f57"
        },
        "item": {
          "id": "d0fee4ab-20ce-40a3-8604-e1a03ed4effe",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "dfad391d-28bc-44ff-96b9-280c394f5bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567b8073-08ed-4f8b-b044-290c94b00c18",
        "cursor": {
          "ref": "546caa74-62d5-4702-97bb-e62fd914a7ab",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "76a2f26a-68c0-4c4a-9cc2-b87171076b93"
        },
        "item": {
          "id": "567b8073-08ed-4f8b-b044-290c94b00c18",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "809e35c6-d53b-4c64-a03e-637319c15e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcce8ccd-c6d4-44ef-89f1-cc9d121c847d",
        "cursor": {
          "ref": "a2692df2-733a-4198-8837-e60e96b570d2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "09a7e553-306e-4734-9de5-765334dd768e"
        },
        "item": {
          "id": "bcce8ccd-c6d4-44ef-89f1-cc9d121c847d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "146a32b1-ea34-498d-9f81-da421e426d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a45600ab-00d7-4578-895d-cd352ecce1eb",
        "cursor": {
          "ref": "c4c5284b-acc6-4918-90ef-db04ff20150e",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "1219e4a6-ffea-4080-82c3-95a676e95459"
        },
        "item": {
          "id": "a45600ab-00d7-4578-895d-cd352ecce1eb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "0ca2ad3d-7744-4441-a4b6-339aafab9207",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf43aab-ddb8-4c66-a184-602c87dd2898",
        "cursor": {
          "ref": "0bafb952-3645-4985-a06f-6c26a151fc20",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "46c44edf-e5b4-444a-91ba-b6ef27779ad3"
        },
        "item": {
          "id": "ecf43aab-ddb8-4c66-a184-602c87dd2898",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "96b1d803-0d1c-40f7-9f2f-2a44953c4fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f2195b-ef6c-4613-9583-db7ce4496e1d",
        "cursor": {
          "ref": "932f2f32-2187-4b1b-8f90-5ac630f2c7e7",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c1b937b6-6f85-4327-bfab-adb9bc551b82"
        },
        "item": {
          "id": "16f2195b-ef6c-4613-9583-db7ce4496e1d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "87e40b2d-bc5b-4473-a1a8-6ed87bccba86",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "e118766f-d29f-48ef-960a-431765a3068b",
        "cursor": {
          "ref": "4cc8cf1c-679d-41fd-9a05-de0f14a55ad5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e3fd7f9f-6db7-4b58-84d5-8942f82b936e"
        },
        "item": {
          "id": "e118766f-d29f-48ef-960a-431765a3068b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "fca01d85-3a0b-460f-8592-904b67f05a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a150b34f-b395-4223-8197-17e6b4e58929",
        "cursor": {
          "ref": "d25304ae-7149-4b9f-a559-254ef085cf17",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "3e6770c7-d16f-4b81-89f5-bc809907b276"
        },
        "item": {
          "id": "a150b34f-b395-4223-8197-17e6b4e58929",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "46e87410-f3a9-41e0-95e1-5d28d93155f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e5fe984-9b1a-44db-8e80-e4f89c27a45e",
        "cursor": {
          "ref": "61984845-14ba-49d0-822b-6c4de70d877d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "547b8d8a-70fb-4e6d-9d47-2f847263a2c8"
        },
        "item": {
          "id": "9e5fe984-9b1a-44db-8e80-e4f89c27a45e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "86540619-1cc9-40cc-a886-83230bef48a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c41685cc-2d06-4daa-b47c-7c31f3d95ad5",
        "cursor": {
          "ref": "388b0684-a2e3-4091-aba7-91ff6aebb331",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "fdffa7c3-e35b-4745-abd9-f8e5b9baabfa"
        },
        "item": {
          "id": "c41685cc-2d06-4daa-b47c-7c31f3d95ad5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "566efe36-dc51-4508-a18d-5f67874c9fb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2443c9-8b09-41ca-b2f3-134a7534ff7d",
        "cursor": {
          "ref": "6b8b0b97-8216-4762-ad66-b142a6a7c385",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "9030c346-2812-4642-933e-b7fc6efe733f"
        },
        "item": {
          "id": "3d2443c9-8b09-41ca-b2f3-134a7534ff7d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ef0458ec-b3b6-461a-a394-cf705df84241",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0806f12a-523c-42de-b9b5-b0a32e888897",
        "cursor": {
          "ref": "cb0fbdab-dc36-4080-a203-fa54dc5d2ed6",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "58cc5339-6c1d-4ff6-97fe-adca0ab3202a"
        },
        "item": {
          "id": "0806f12a-523c-42de-b9b5-b0a32e888897",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3ac19f78-fbf1-4909-b7d7-351315dd4906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d57d8c39-48f5-4246-81fd-2d95789a4ffe",
        "cursor": {
          "ref": "010782a7-3439-45c6-a9fa-9a8582d166ce",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b59892c2-9819-4ead-89ea-2798d899d595"
        },
        "item": {
          "id": "d57d8c39-48f5-4246-81fd-2d95789a4ffe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d5f32da8-7690-4865-be9c-52a168a9aca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed30eb35-6fe9-4d8b-9966-d5123b0d5741",
        "cursor": {
          "ref": "43a23158-f48b-442e-a251-81c5c9ae2297",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "161b7eab-7d9a-493b-9b27-56479a47ba51"
        },
        "item": {
          "id": "ed30eb35-6fe9-4d8b-9966-d5123b0d5741",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "16dcf570-4d71-4cd9-a3d2-dd2335047a62",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 735,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "9a5dbd87-4c70-449a-b583-71c0fc9abf55",
        "cursor": {
          "ref": "54ecad45-3070-4339-9917-e61e8fcfbd28",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "79f50fca-e3df-4536-9464-fe6174eb5ceb"
        },
        "item": {
          "id": "9a5dbd87-4c70-449a-b583-71c0fc9abf55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9b0a1a28-3064-4610-b752-2700a2a0498a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "794b7a6d-7ca4-4fa8-9613-900bad2c41ec",
        "cursor": {
          "ref": "7f0ed5d9-0f6c-4bfc-9e1e-1c17d7597d45",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "050e296f-4a10-47c4-b2c6-34dc1c13dcd8"
        },
        "item": {
          "id": "794b7a6d-7ca4-4fa8-9613-900bad2c41ec",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "03fc3c6b-bdac-4f25-8c75-b81030b4f406",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ebcb754-4d8c-467f-98ff-85a4975fc424",
        "cursor": {
          "ref": "4f76468d-03a1-48b5-9e01-ce1f86119273",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "bce697b1-3048-4e1e-8b47-41c4168c9855"
        },
        "item": {
          "id": "5ebcb754-4d8c-467f-98ff-85a4975fc424",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "42b82866-4fcd-4b5a-85e6-b2f26708f50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba77b17-4ef4-4284-bbe8-b33397ad05ba",
        "cursor": {
          "ref": "efb1866f-c3c7-48ab-937c-9517899d71c5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "986caf0c-1c08-48e3-a848-7a949fb8f258"
        },
        "item": {
          "id": "6ba77b17-4ef4-4284-bbe8-b33397ad05ba",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0ba83499-77c4-43b6-83b2-f7d2d6015472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e883f504-de25-4957-b0e9-e44c2475e7c5",
        "cursor": {
          "ref": "9a1f9da6-470d-4f38-8a13-c8ac0fd2b24b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "ff0c1b0a-e2cd-422b-8f5c-3efd2c334342"
        },
        "item": {
          "id": "e883f504-de25-4957-b0e9-e44c2475e7c5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "04ba15e2-74a4-4b06-8f55-7332caefca29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1f9a81f-8e54-414c-97ce-a47b51fa3454",
        "cursor": {
          "ref": "06af773a-ea85-4f8b-97b1-913613f5cf64",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "00e176db-4cd2-466d-8b4b-eb2651f60d3f"
        },
        "item": {
          "id": "d1f9a81f-8e54-414c-97ce-a47b51fa3454",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "75956c85-2c23-4063-8406-8b1b143dc076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f8df58-ed1b-4b21-a079-7619cf2807f5",
        "cursor": {
          "ref": "a9614680-e4dd-4c86-ab8e-bd7ee7f42700",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f576a24a-29ae-4342-8abd-de690c6a6dc6"
        },
        "item": {
          "id": "16f8df58-ed1b-4b21-a079-7619cf2807f5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "da649a6f-00a9-4dab-81b1-79ed54d29041",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 69,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "91f4f714-2834-4ee2-b936-e1fc68c5d1f1",
        "cursor": {
          "ref": "c0e04f78-34f5-463f-9cbe-77a9586bf85f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "92e57dde-5f8f-4a93-9fd8-d2915b389dae"
        },
        "item": {
          "id": "91f4f714-2834-4ee2-b936-e1fc68c5d1f1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "70630db7-7a32-424a-be5f-cd76f1fe6ce0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 110,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "bbd379db-8a16-45e2-ae1c-1b1fb68b41de",
        "cursor": {
          "ref": "ed318eed-49c2-41e7-98be-881eedfe00bc",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ebcf74a7-da3d-45a6-a6da-4363c83451c4"
        },
        "item": {
          "id": "bbd379db-8a16-45e2-ae1c-1b1fb68b41de",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d3dc99a1-9575-421c-8fe0-2b2926893338",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 65,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "f999ee49-029b-4e60-bb48-70ddb0d079b0",
        "cursor": {
          "ref": "7f24afdf-d063-4e0b-a1e9-80e77d6173ec",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7b91b84b-7c3f-4cbb-b246-7ef6c62f9751"
        },
        "item": {
          "id": "f999ee49-029b-4e60-bb48-70ddb0d079b0",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "fa196691-45f8-4540-8474-2597ed511156",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "45debd0d-7253-4c2f-8fbd-5befe603185c",
        "cursor": {
          "ref": "343592b6-1310-4dbb-8a79-5ad035e149be",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a0f040cd-abb2-4a40-a78b-a98ca9a57f62"
        },
        "item": {
          "id": "45debd0d-7253-4c2f-8fbd-5befe603185c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5982f66f-182b-4e65-a64e-6dd3daa68679",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 89,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "33aa3e70-2964-4501-99fe-8e6f0d89f0ca",
        "cursor": {
          "ref": "3f239e5e-ec04-4767-8e0d-b07a6fbb778b",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "494a8de3-b4e7-469a-a723-b685358a23b6"
        },
        "item": {
          "id": "33aa3e70-2964-4501-99fe-8e6f0d89f0ca",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fe34d159-b64e-4a10-890e-0a8dfe33c521",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "ff535f87-5c87-44b2-aa2e-256d2bb203ec",
        "cursor": {
          "ref": "3a15a399-d2e2-438b-9c34-4eb12c7d35cd",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "ebed22bf-5771-44a6-afbe-7135819568c7"
        },
        "item": {
          "id": "ff535f87-5c87-44b2-aa2e-256d2bb203ec",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "96f8573a-48b2-49c7-a63f-6d75927533bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6de997d1-80fd-4d02-a547-a3594c1fe5d2",
        "cursor": {
          "ref": "bdc09dfb-2f14-48fa-9056-79c75ca47ce0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "a7e12d72-fac0-4b29-b574-d396858b900b"
        },
        "item": {
          "id": "6de997d1-80fd-4d02-a547-a3594c1fe5d2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6cbb9c2b-6dfa-48f7-9fad-3216e2a283fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3278fa40-1d37-43b3-ac54-c0fc1b0dad5b",
        "cursor": {
          "ref": "2b152455-4ee8-4673-8b32-2d4e69840bcb",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "769b5ca2-3d28-4fd5-a159-c692c29183fc"
        },
        "item": {
          "id": "3278fa40-1d37-43b3-ac54-c0fc1b0dad5b",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e729c7ef-c9aa-4486-8081-54eaef87d21e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d1e855-e23f-40e7-864c-db9cea498035",
        "cursor": {
          "ref": "981946e0-2d7a-4ce8-90cb-2c711b8965bc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "85f0fb7d-af6c-4be3-8af8-1d2c2787f321"
        },
        "item": {
          "id": "a4d1e855-e23f-40e7-864c-db9cea498035",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b3e4986a-6e0d-40bf-8fd1-1e6be89e10c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d20c69d7-6c0e-4d04-947f-877975ddebd7",
        "cursor": {
          "ref": "23d43b54-8e96-49f3-840d-e92fcff38392",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cd382658-1c02-4e39-8314-173716515d3a"
        },
        "item": {
          "id": "d20c69d7-6c0e-4d04-947f-877975ddebd7",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3958e084-68e0-4b3a-ba4d-94ae26a10a9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c25ec92-6b3e-41f7-b114-8fd65eb2e3aa",
        "cursor": {
          "ref": "c9a19a16-f0a6-4945-b9f7-ca6baa05d810",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e192828c-7b48-4e85-b781-9533e7e5390f"
        },
        "item": {
          "id": "4c25ec92-6b3e-41f7-b114-8fd65eb2e3aa",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "435f1112-6420-429d-b701-3f3b8c0f701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1880be03-0feb-4fcb-ac84-2ebcc8416d38",
        "cursor": {
          "ref": "a157d966-ab00-42c3-a06b-ea5ab53b3473",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ed3b393d-a7f4-4b95-9fdc-43489a33a0a6"
        },
        "item": {
          "id": "1880be03-0feb-4fcb-ac84-2ebcc8416d38",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "145663e5-de9e-48aa-b651-0dae434e8acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f08f769-f64e-4ddd-9db7-2a5575b77e4c",
        "cursor": {
          "ref": "837c1c20-c9ab-4589-abc9-239218c15275",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "450d43a4-e820-41d8-8e03-82c5d863a896"
        },
        "item": {
          "id": "8f08f769-f64e-4ddd-9db7-2a5575b77e4c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "57087212-ff6c-4181-8675-b2388d6ee663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aad2d08-780d-4a0d-b86a-9fe78c2a58ff",
        "cursor": {
          "ref": "31c087c8-5817-4723-917a-9ed28a45d979",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "712063cc-7a02-4b5e-9c38-7a2d0c68cead"
        },
        "item": {
          "id": "4aad2d08-780d-4a0d-b86a-9fe78c2a58ff",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "4e4ba7e1-0830-4701-932e-c30b32eda110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba781ae5-1634-47b6-9294-b3db96e6f79f",
        "cursor": {
          "ref": "aa43846f-8337-4ebf-af3a-452793ec571c",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "10d7b3a3-c70f-4ecd-9692-b9577c29f301"
        },
        "item": {
          "id": "ba781ae5-1634-47b6-9294-b3db96e6f79f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "83f54cf9-092d-40d8-90ea-877d0e683801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e2b4ee-cc37-41c9-9b69-a3d060094413",
        "cursor": {
          "ref": "a2aff829-32b2-42fc-a364-4e47e5e1cf52",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "d976e706-1acb-4207-b2ea-a7e4e613ab91"
        },
        "item": {
          "id": "d0e2b4ee-cc37-41c9-9b69-a3d060094413",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "efeae113-e663-431c-8dd6-52a171f918c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a23ba2-845d-4c0a-b25c-37d2cec44660",
        "cursor": {
          "ref": "43c4bbf2-c7ec-49bf-801c-f7d8a88431fd",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "506ca44d-7078-4a56-b0f9-88401c443c29"
        },
        "item": {
          "id": "50a23ba2-845d-4c0a-b25c-37d2cec44660",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "599c08b3-e50a-4131-b95f-14087feeb05c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e093781-12a6-4bbf-9cc4-79dd91399ca3",
        "cursor": {
          "ref": "be71a765-9ec0-48df-ae66-9bda316f9138",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5a61a644-71a4-40aa-8156-25ca33d914b0"
        },
        "item": {
          "id": "2e093781-12a6-4bbf-9cc4-79dd91399ca3",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c738927d-4512-4bb1-97ec-46754f0b2fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd25dbb8-601b-447b-b397-1ae7c2ee9a59",
        "cursor": {
          "ref": "6887fe3f-b288-47eb-95db-d048d9bce537",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ecd7fdfb-741a-4ef5-8671-fdf164f47092"
        },
        "item": {
          "id": "dd25dbb8-601b-447b-b397-1ae7c2ee9a59",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e8e4632c-bddb-4620-b797-8d33c53b6f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e184bf11-c97d-4ff7-bc85-01168f3e50d6",
        "cursor": {
          "ref": "e3e62b1d-5be8-4046-a751-cce4e30d7ce0",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "49c1de4d-2698-468c-bc4a-5c235f065442"
        },
        "item": {
          "id": "e184bf11-c97d-4ff7-bc85-01168f3e50d6",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "73f64809-df56-4396-8c06-f66ff670e264",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7df06dbd-a269-4f54-9bf9-4a2c4a72f876",
        "cursor": {
          "ref": "907eb12d-9a5c-4f75-b346-54d7b25c2ada",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fcbbf3b4-1c68-403c-98c2-1c9cda2510ec"
        },
        "item": {
          "id": "7df06dbd-a269-4f54-9bf9-4a2c4a72f876",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5ada8caf-ebe5-492a-9cd4-67f5f82c72a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2068db20-9f01-4bf3-84bb-7f1cce99a33c",
        "cursor": {
          "ref": "982e95cc-89fa-4a5d-b565-859b62a8f9f7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "5c9dec9f-82f5-4169-b177-ab835eebe0fc"
        },
        "item": {
          "id": "2068db20-9f01-4bf3-84bb-7f1cce99a33c",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4df74f0f-325e-45f6-8512-541dc6ff5758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d1ee21-a84d-4c55-af2e-ef5b5b60a14a",
        "cursor": {
          "ref": "4124cb25-7ae1-4bd1-86d3-ebe67c4770fe",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "90fa962e-e28e-4ae3-accd-aee8fd9f4c78"
        },
        "item": {
          "id": "76d1ee21-a84d-4c55-af2e-ef5b5b60a14a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "287b06d7-84c3-433a-8760-5119018ab50a",
          "status": "OK",
          "code": 200,
          "responseTime": 174,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "66af58f7-09f4-415b-95e1-749f94d6a37f",
        "cursor": {
          "ref": "629a8058-d948-4b00-88b1-828286235641",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "300d802f-957f-488a-a0d3-a3b1683747b5"
        },
        "item": {
          "id": "66af58f7-09f4-415b-95e1-749f94d6a37f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "376a8458-8656-4ce1-900e-63135a038b8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6075f934-6b14-493e-b6a1-761d5f7be9f8",
        "cursor": {
          "ref": "bb9ca5c4-8c59-4eb8-9bcf-09d38882b54c",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d6b5d807-ffff-4119-a5a9-1060554878b2"
        },
        "item": {
          "id": "6075f934-6b14-493e-b6a1-761d5f7be9f8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7d780ea2-9e7e-4236-81ed-25cac152c9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518b7605-7c0a-48b3-9bec-7031ff8393ad",
        "cursor": {
          "ref": "7d528bdf-214e-4227-91a9-8f5d097bf300",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "552443c2-78bc-4494-99f0-3217d23a6c0c"
        },
        "item": {
          "id": "518b7605-7c0a-48b3-9bec-7031ff8393ad",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "1bcf3dcb-cc44-412d-b09e-c2ab681ba289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc68631-8a39-462f-8a0d-c29fde117a7f",
        "cursor": {
          "ref": "8e16ed77-1c01-4671-912d-d697ef4839df",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "5234e62d-659a-412a-97ff-5b72b775ba8d"
        },
        "item": {
          "id": "0fc68631-8a39-462f-8a0d-c29fde117a7f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8acbf5a1-21e5-40a1-8c7a-9135390f8f97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1e9b712-68ff-4ece-8895-20782060d593",
        "cursor": {
          "ref": "59162dce-ba01-4ee0-ae2d-9e600ff11b77",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "896829aa-6391-41c0-a87e-912a4d74443a"
        },
        "item": {
          "id": "a1e9b712-68ff-4ece-8895-20782060d593",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "df743fb9-4d02-4037-a2d6-ba15346e0954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0ae9aa7-d053-4225-a62d-2f1ebd81f47d",
        "cursor": {
          "ref": "099ed300-a532-4c29-9b78-f554d9be64b5",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4a34aa4d-288b-43d6-8fc1-b8064993e845"
        },
        "item": {
          "id": "f0ae9aa7-d053-4225-a62d-2f1ebd81f47d",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "f5a4e291-3f8f-43a8-be75-c4e64c456cb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17eff4ec-48ea-417b-855c-a712b02abf09",
        "cursor": {
          "ref": "2dc90ce2-dba4-4185-a913-a5aeedd6df11",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2e9d12ff-a537-4080-afbb-c891b8aff3ba"
        },
        "item": {
          "id": "17eff4ec-48ea-417b-855c-a712b02abf09",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "579fb421-dd64-4f0a-8b4e-4d3766f5b99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2a385b-c173-498d-b3e6-ef77bdfe4a22",
        "cursor": {
          "ref": "090983e7-6c31-4986-b29f-436188cb9f0c",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "96fd2130-2b31-4ff1-88cf-2ef4c4214bbf"
        },
        "item": {
          "id": "3d2a385b-c173-498d-b3e6-ef77bdfe4a22",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0de38612-db28-4845-948a-59ec5a6a959f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff55924e-f415-43b7-be22-c27fdef8fc33",
        "cursor": {
          "ref": "3bace427-eec4-4467-bb33-0949e4249e81",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9693d7b2-babf-4f7c-a32d-a12771281fca"
        },
        "item": {
          "id": "ff55924e-f415-43b7-be22-c27fdef8fc33",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "83ccfff5-b2ea-4340-a3c2-2305e0247029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414ae8c3-02cb-4190-87a1-76ae3e9e73fb",
        "cursor": {
          "ref": "890c66cf-368a-4756-a6b2-3675b81b6440",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "7fdced7a-6ad6-4b23-8c8a-43fdcc7bcf91"
        },
        "item": {
          "id": "414ae8c3-02cb-4190-87a1-76ae3e9e73fb",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "5986f89c-6c70-4fd2-9e8f-624b0711c9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d98ec82-2c7b-4422-b3be-e513f5f6f2ba",
        "cursor": {
          "ref": "5eca5f74-7d9a-490d-b295-407c6d257498",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "da83cab8-be95-415f-b415-fc0c3f8c23f0"
        },
        "item": {
          "id": "6d98ec82-2c7b-4422-b3be-e513f5f6f2ba",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a18382e0-2218-497a-8022-93cd63383986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5e5644-d687-4c80-9424-ebdce72e9961",
        "cursor": {
          "ref": "169237d9-f2ec-4676-8dcb-4c986ce5b5ec",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "944f8652-fc3b-482b-98c5-31bbd675b234"
        },
        "item": {
          "id": "4e5e5644-d687-4c80-9424-ebdce72e9961",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e2059a40-06ca-4ac6-b890-bc8d16967968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f34982df-f0ed-4b44-b937-d1b2b8e22e55",
        "cursor": {
          "ref": "8c0ffa5b-1a6b-4c7c-9aa0-0a080fbc4491",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a9be05e4-3513-4751-b33f-a8eb2a14a809"
        },
        "item": {
          "id": "f34982df-f0ed-4b44-b937-d1b2b8e22e55",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "d244b471-1ca7-4ab8-b66e-49cfeee89a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdcda791-fa15-4b3c-a3e3-41a14ebe0062",
        "cursor": {
          "ref": "93cfa689-bdbb-4acc-a32e-2c8caa814d47",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "41d9c731-7eed-4fe1-b56b-78ade2bbb32e"
        },
        "item": {
          "id": "cdcda791-fa15-4b3c-a3e3-41a14ebe0062",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "5b52448d-c439-4623-b330-b7ecb40705f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468b5543-25ab-454e-9463-723727c6db4b",
        "cursor": {
          "ref": "ccc9392f-f97a-41a5-92d4-ab86242306bb",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9135382a-a1f5-48c7-af36-489da991245e"
        },
        "item": {
          "id": "468b5543-25ab-454e-9463-723727c6db4b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "15f48379-98f8-4e60-a44c-82b0bb788263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1da5da-0462-41ee-a800-ab38b46e9441",
        "cursor": {
          "ref": "f604a59f-9d37-4587-a3e1-81871c2162dd",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "ba18a199-2d4c-4377-815c-547b90314b7d"
        },
        "item": {
          "id": "1b1da5da-0462-41ee-a800-ab38b46e9441",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ede4ffa1-e170-4f2c-ac99-9eceb3a75abd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f4535c-3658-4802-9d82-d602d9dee300",
        "cursor": {
          "ref": "b5461527-5380-4e04-bdec-826135765a8a",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "1ef7bc67-bfb7-48e8-bee9-c973ad975c49"
        },
        "item": {
          "id": "c0f4535c-3658-4802-9d82-d602d9dee300",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "c9d69cee-170c-4e2a-bf93-ae2901456d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a679187d-5d8c-4854-81c0-54b3d4004237",
        "cursor": {
          "ref": "ea81db0f-4044-4a3d-bb1d-df8882684c5c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "3413c75c-d19b-4d51-ba61-214a226f949d"
        },
        "item": {
          "id": "a679187d-5d8c-4854-81c0-54b3d4004237",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9c2fa513-d841-4652-abc1-cdf89414e139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80247bf2-3bb4-4520-9a04-110091099945",
        "cursor": {
          "ref": "91c767e6-c59e-4e0a-bd0e-1ed3fc1f4895",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "ba21fcb0-07d4-4629-8fb7-689ab4510910"
        },
        "item": {
          "id": "80247bf2-3bb4-4520-9a04-110091099945",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "9b08111a-3b6e-4f39-b9fa-09d7cd53dbf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4d3a696-5f8a-4931-bb97-55c1bb5e2402",
        "cursor": {
          "ref": "05127cc6-fea9-4b74-ac4b-61df63539240",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6040086b-0295-4a92-af50-a5b6395dfa86"
        },
        "item": {
          "id": "d4d3a696-5f8a-4931-bb97-55c1bb5e2402",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5edc871f-5a42-42c6-bfa1-d0fab75ae291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a75d1b1-2b6e-4886-a138-4e004958e757",
        "cursor": {
          "ref": "5d026210-cc63-4fbd-8893-ead56cd9e368",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e988f6df-3993-4b51-a6f7-b1d0d5c3a2c5"
        },
        "item": {
          "id": "2a75d1b1-2b6e-4886-a138-4e004958e757",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7c4b016c-543a-4422-8e4a-4466ff6b3bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ab3aa4-b722-40c9-b19c-b600f2094f8d",
        "cursor": {
          "ref": "ddc58a6b-a464-4504-bfbd-c900cc67b931",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "8197c3be-98fe-4014-ac6f-d0e926395c3f"
        },
        "item": {
          "id": "82ab3aa4-b722-40c9-b19c-b600f2094f8d",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7e87d55a-bca8-4931-ba13-3154577919f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc84932-e1fb-4db3-b633-c4933ccf87b8",
        "cursor": {
          "ref": "0ae156dd-5c74-45df-b3b2-10348bec9c10",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "98c31d67-ed75-4531-825f-ccb789c58605"
        },
        "item": {
          "id": "2dc84932-e1fb-4db3-b633-c4933ccf87b8",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "522086cc-2c54-4080-949a-aa2471d745b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "836aadcf-c685-4bb6-bdba-d45e0e05bfe4",
        "cursor": {
          "ref": "0d2b26de-4b7d-4b67-999d-7ddd4b157eb6",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "c3820d4b-36a3-4dce-a286-051094b00311"
        },
        "item": {
          "id": "836aadcf-c685-4bb6-bdba-d45e0e05bfe4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "93b39680-892f-4b4d-9f5c-69fb72064f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f22e63-bcbc-42de-95ac-4a9c8b902b88",
        "cursor": {
          "ref": "10ed4330-8dcc-45ad-88bb-946c1b6c8436",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0f078594-444b-4c83-9018-7e544a348e78"
        },
        "item": {
          "id": "a2f22e63-bcbc-42de-95ac-4a9c8b902b88",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a79a2b59-cae8-40fa-a118-6400b6f13fb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f076fb44-eefd-4a31-a77e-96153a135ab2",
        "cursor": {
          "ref": "070e7da9-ce19-4153-b7c4-b0d1f4122a99",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "76246d02-6f68-437b-a843-6576292ae998"
        },
        "item": {
          "id": "f076fb44-eefd-4a31-a77e-96153a135ab2",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d4b23399-e973-4811-a64b-5757f00d4f9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1b7fc7-191d-451f-b822-dbafcaf46eb3",
        "cursor": {
          "ref": "be8f3a52-0297-4944-86ba-3a47d683bc9b",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e4e19676-b64a-4023-830e-3f1127265dcf"
        },
        "item": {
          "id": "5d1b7fc7-191d-451f-b822-dbafcaf46eb3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a9e69e3a-ead9-408a-870e-7b79abaeb12e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54258697-e9ab-47f2-8927-3da4b7a694b5",
        "cursor": {
          "ref": "4abcd402-9f47-4147-b19b-65d158faf77c",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "546ac84f-37f0-4e73-9e4b-51e0f7249b0a"
        },
        "item": {
          "id": "54258697-e9ab-47f2-8927-3da4b7a694b5",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5dc13e14-e69b-4b0b-afe0-0ef5a03514d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "993ea53f-f199-40bd-b43b-54b270898640",
        "cursor": {
          "ref": "c2408ac2-bbd9-47d0-8e73-da54cdd4fe51",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3bd051f2-5183-406e-8327-55b0b14682fe"
        },
        "item": {
          "id": "993ea53f-f199-40bd-b43b-54b270898640",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b37a4eed-ea52-40bb-82ce-4e5e3a93a4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9f13c9-bdae-4a44-8052-953dd79c539d",
        "cursor": {
          "ref": "01dc8039-e15e-46ee-883f-03cc1fe62453",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6900e0f4-b855-47b2-9c5e-3fc50f16194a"
        },
        "item": {
          "id": "ee9f13c9-bdae-4a44-8052-953dd79c539d",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "35d4c3bf-3655-4022-adf9-1b5189b84732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf27e178-e0f6-48a8-a6f0-011cf09cf244",
        "cursor": {
          "ref": "6c4d12dd-8f83-41c4-9ba1-fd6cea6b7838",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "f59189ac-841d-4901-b415-a8f9df39cee1"
        },
        "item": {
          "id": "bf27e178-e0f6-48a8-a6f0-011cf09cf244",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ae7d3d5c-1f08-44d6-a3f4-da984ea36833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4258bea-f5b2-4133-b5f0-e82c1a032cae",
        "cursor": {
          "ref": "a04f0ab9-cbee-4336-8951-516989f30f0d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "aa483fa1-554d-4723-96be-98120767ac7d"
        },
        "item": {
          "id": "a4258bea-f5b2-4133-b5f0-e82c1a032cae",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "931c7601-dd3e-439c-a4bb-72f27d11dbc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84c3acbb-be33-45ae-9433-6aad4106a29c",
        "cursor": {
          "ref": "3184fe76-cd71-4f81-8424-e1b2a8e4958a",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "eb91fb44-5e89-4c91-a3db-41344f96a38e"
        },
        "item": {
          "id": "84c3acbb-be33-45ae-9433-6aad4106a29c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "495cfc1b-d85f-48c5-870b-2e9f2819dc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a3660f-322e-43d9-a3e7-3bf7bb28a551",
        "cursor": {
          "ref": "41bfe428-a805-43c4-a24d-29b6538e5be6",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f3c41d19-7a41-41ef-bc7e-1cec2ce66bbd"
        },
        "item": {
          "id": "e2a3660f-322e-43d9-a3e7-3bf7bb28a551",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "2e6894b5-3ee4-4103-86f6-46d9fa134edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01211b69-dc7a-4043-bf37-08429db6293f",
        "cursor": {
          "ref": "c9a6fe65-6084-4680-90b8-cce2cf2b1dfd",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a666d1f6-4697-47d6-8671-06e15835bc9f"
        },
        "item": {
          "id": "01211b69-dc7a-4043-bf37-08429db6293f",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "efd83db4-79ab-47dc-9f4f-a1975200bb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b5c656-0a10-407a-a284-790516917c40",
        "cursor": {
          "ref": "5d26665a-264c-4f52-9f4a-8fe571b59c51",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "89478118-3126-4919-810b-27de72063a95"
        },
        "item": {
          "id": "57b5c656-0a10-407a-a284-790516917c40",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "ace0f2bb-cd17-454f-bd10-2f3c45dba1c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50db646f-e964-481d-b3b4-0cd047487530",
        "cursor": {
          "ref": "36fc576f-30d8-46fc-850d-3ab14d2505cf",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "03374164-0225-4a7f-baef-b978a42a359a"
        },
        "item": {
          "id": "50db646f-e964-481d-b3b4-0cd047487530",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6144c63b-5538-4c8f-b817-e00252ce47ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "387b1412-5db7-456d-a4ca-e9de29a370a0",
        "cursor": {
          "ref": "9a80bf5c-9f01-44b9-9ad6-7d1f91dcc5cc",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "639a5612-2137-4c3f-8dc3-7b71ff750107"
        },
        "item": {
          "id": "387b1412-5db7-456d-a4ca-e9de29a370a0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f8dc6fdf-b92e-4177-9265-a80bbe101828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99123447-1c77-4ae8-b64d-f03681c1680c",
        "cursor": {
          "ref": "4555beb7-a4b7-44d4-bc10-3e36d673a159",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "18ae1a18-c543-45cf-bc97-2b4799558177"
        },
        "item": {
          "id": "99123447-1c77-4ae8-b64d-f03681c1680c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "96f52ba5-e26e-4535-b826-54a5604fd35d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8d5c1b-4d6d-4da2-a3a1-60093c70626b",
        "cursor": {
          "ref": "d2ff1e29-f914-46f7-a3af-47c6bf4c12d4",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f8d9b4a7-43ce-48e6-996e-ba8b96c4ec1a"
        },
        "item": {
          "id": "be8d5c1b-4d6d-4da2-a3a1-60093c70626b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "9e19a54d-4999-4d24-a20e-5912271c760f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abfd602d-426c-488c-b748-9945dfc53584",
        "cursor": {
          "ref": "da961000-b158-4e2c-b856-039804304280",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e1442de2-2fce-4bc1-ab4c-05810a1e6d6d"
        },
        "item": {
          "id": "abfd602d-426c-488c-b748-9945dfc53584",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "211b6b3b-d295-43b2-b0d0-8979ccce8b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74baac7a-e8a5-4f64-be62-059ddd346012",
        "cursor": {
          "ref": "e3385b1b-38a5-4dd9-9cf3-f28c3cbca013",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "4caf185a-37d3-42af-8d69-cd8ac1ec21d1"
        },
        "item": {
          "id": "74baac7a-e8a5-4f64-be62-059ddd346012",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b9a15f75-3cc2-48cc-a4b3-e33bbfd671ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9684e25-68d4-401a-8526-3b6aad80d370",
        "cursor": {
          "ref": "8def945c-b7e7-4dd0-b91f-0f4a014f4dab",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ce49cdd9-85bd-4e2e-9022-c1dd09556444"
        },
        "item": {
          "id": "b9684e25-68d4-401a-8526-3b6aad80d370",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "7bf87374-37fa-4449-b724-68f22cad2b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d96361-6697-46f7-88b3-ac3d98d15f7d",
        "cursor": {
          "ref": "b58ed821-8180-49bb-b9c1-7a218817749f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "f7d18912-4747-4bf4-9264-b30838bfbdaf"
        },
        "item": {
          "id": "f5d96361-6697-46f7-88b3-ac3d98d15f7d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "e70b7a38-789b-4860-b081-852746a66f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27bd7d1d-6572-41b4-959d-ad0dcfbc6c75",
        "cursor": {
          "ref": "ed50b121-cb8a-4f49-97f6-2af9723bf53e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5765116f-492c-414d-b932-81535faeb973"
        },
        "item": {
          "id": "27bd7d1d-6572-41b4-959d-ad0dcfbc6c75",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9455a52a-e261-4145-8e23-8427693869c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45abbfb3-6466-417c-a8a9-c4c3b5998b98",
        "cursor": {
          "ref": "5a24da8d-ba86-4006-b4f3-9d00df7caade",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "e9f31f4c-453d-4e84-a5d6-6ae121696c3f"
        },
        "item": {
          "id": "45abbfb3-6466-417c-a8a9-c4c3b5998b98",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "4eb6a411-faad-49f9-8fb9-abd2cddc3779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f047f7-5bce-4c5a-bc1d-8a1e4d4e2250",
        "cursor": {
          "ref": "48e48498-aa49-4b50-97c3-ba25d15316e9",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ab439f08-32b6-4caa-b03b-a74197cc13fd"
        },
        "item": {
          "id": "98f047f7-5bce-4c5a-bc1d-8a1e4d4e2250",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "c2ed17f0-d4ba-4bee-b761-fcbe4b1a1530",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "547d1e1f-189d-4ab9-a83e-280c5c186503",
        "cursor": {
          "ref": "227f2ccb-f3e3-4c95-8989-0b18802c6f4e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "d352aab0-ad86-408c-9ab3-4088b27e8311"
        },
        "item": {
          "id": "547d1e1f-189d-4ab9-a83e-280c5c186503",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "33fa5889-697c-436f-8035-f37cee4ab570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0a72be8-769f-49e7-963e-3189c10f8a60",
        "cursor": {
          "ref": "5ee0205f-2746-48bf-9e8d-76b43008436c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "afafcfb9-4629-4a56-abac-2ecb9cc5d93f"
        },
        "item": {
          "id": "e0a72be8-769f-49e7-963e-3189c10f8a60",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "01de5822-37c7-4408-a3e4-52ba28310165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7e41e8-e4ea-4e0b-91b3-ed11a50bb4df",
        "cursor": {
          "ref": "9523d64e-e350-44a1-b1ff-906d26c2f89f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f9756cd8-92b5-4aaf-af10-b00610ea1e34"
        },
        "item": {
          "id": "fd7e41e8-e4ea-4e0b-91b3-ed11a50bb4df",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "47c2091f-95f4-4bdf-aa7c-8ca0651ee041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43c81836-4685-4832-b7e4-6103ffefb306",
        "cursor": {
          "ref": "c9f467ba-af1c-4878-aad7-1571eb7476c2",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "93910bf7-f23f-4290-80d7-76904fbd004a"
        },
        "item": {
          "id": "43c81836-4685-4832-b7e4-6103ffefb306",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4304c9d2-c23d-45c1-8ab3-527133c8f4bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f064664-79e6-408c-bfef-63507622a274",
        "cursor": {
          "ref": "e227acfa-3727-4447-98ec-8f8251bcb8da",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "08e29c87-a8ab-4f36-a8c8-56381f26476d"
        },
        "item": {
          "id": "2f064664-79e6-408c-bfef-63507622a274",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d1ca0be7-f6c8-4524-a38c-bbb84ba8b9a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93d61237-8e2e-405f-8ec4-d9f04e5cc55b",
        "cursor": {
          "ref": "3bb585ee-0213-41b8-b622-14d69aaf06c6",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2fb01b43-3f17-4e85-acb3-36fa06380413"
        },
        "item": {
          "id": "93d61237-8e2e-405f-8ec4-d9f04e5cc55b",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "85e72fc2-a84a-497e-b9ee-e687e8b52027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57069a02-761e-4515-bd6b-3084a133c12e",
        "cursor": {
          "ref": "f28096d3-aa9d-44e5-8509-6572a1b342e5",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c23bc3c9-8033-4b17-942d-104111691151"
        },
        "item": {
          "id": "57069a02-761e-4515-bd6b-3084a133c12e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "3786f4b9-d7e4-4d17-86d9-3e2168f8e799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5506a3b-f154-4d69-9136-4129964a59c4",
        "cursor": {
          "ref": "b8e9b26d-e8d1-4bf2-924f-ce569fad69b2",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "adf3eb71-d690-4063-a8f5-5d257517b9cb"
        },
        "item": {
          "id": "f5506a3b-f154-4d69-9136-4129964a59c4",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1457b9aa-efb5-4ba9-a3c5-cc2d189e88c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bded1432-1d82-42cc-b815-5119e2a64fd6",
        "cursor": {
          "ref": "0d407457-5467-467a-b36a-21f32160cdd8",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ea684f1e-f992-457b-a6e3-947b8c89b7bd"
        },
        "item": {
          "id": "bded1432-1d82-42cc-b815-5119e2a64fd6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "39a3aa2c-e6da-487d-88df-3de06cb714b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b79b976-5521-42f9-ac62-f60cf901b143",
        "cursor": {
          "ref": "e5e5644d-5dc2-4b32-8536-1ce26d0931e9",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "6f6c6791-7c56-4228-996f-986b3ada1db6"
        },
        "item": {
          "id": "8b79b976-5521-42f9-ac62-f60cf901b143",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "eb64f6f4-ff96-43d6-842b-4b53a1e6add1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ad05e1-3d0f-4929-8f5a-44cd9819866e",
        "cursor": {
          "ref": "ad468cc7-0a05-43ff-85d7-ff093f342032",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "331e8449-36a0-4799-8702-3e42b7dbb4c6"
        },
        "item": {
          "id": "99ad05e1-3d0f-4929-8f5a-44cd9819866e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fe0c25a2-5bc4-4f2e-b85f-eb578b145ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae7ad30-48fa-4df4-b460-eaf5d96d8585",
        "cursor": {
          "ref": "18ed28d3-bf83-4ab7-a8e7-359532ecefe2",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "fe828699-c77b-4c04-8455-840b1b3c4409"
        },
        "item": {
          "id": "6ae7ad30-48fa-4df4-b460-eaf5d96d8585",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7e53c9d5-5b61-49e9-b411-e61f13a564f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca8181ec-4a5b-4e09-8906-5c7ef5503319",
        "cursor": {
          "ref": "471dfb97-470a-4c39-affb-a7ad64cbbc09",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "ca9271cf-c84e-42c5-a640-5def551f7610"
        },
        "item": {
          "id": "ca8181ec-4a5b-4e09-8906-5c7ef5503319",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5a62df3d-f92e-4fbf-be49-96ee985ac489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a954a7-da4d-435b-b04c-49d9012a5ac9",
        "cursor": {
          "ref": "489d2910-9f04-43b9-8564-22844e8e8f26",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "75ac57eb-5d1d-4732-9f8d-b707fb4c3ee4"
        },
        "item": {
          "id": "47a954a7-da4d-435b-b04c-49d9012a5ac9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "896f1dc3-c753-4456-927b-0db644b4ba47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de2e5102-8e18-4901-b76b-aeb7f4ad96f1",
        "cursor": {
          "ref": "2d2d5172-5103-4c6e-8672-81193ea74901",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ee52beed-9ce2-4b8e-b90b-fef54d404220"
        },
        "item": {
          "id": "de2e5102-8e18-4901-b76b-aeb7f4ad96f1",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "be893fb4-d869-446e-a381-3150ceb68e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86093ac2-7db5-4900-b0d0-7b5b6db35953",
        "cursor": {
          "ref": "ed2ed582-9130-44b2-9e9f-70bbfb453a01",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "b65be07b-f33b-439c-a194-395b293e9982"
        },
        "item": {
          "id": "86093ac2-7db5-4900-b0d0-7b5b6db35953",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1b69c899-033c-4f5a-b699-b33de074496c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccda9ca0-ce95-4ccd-87a0-c0eb317cd9fb",
        "cursor": {
          "ref": "f1b8e1ce-0178-411d-904f-1128c9c34055",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1abfbd4c-409d-4a4d-b23f-3a25ecf7f80c"
        },
        "item": {
          "id": "ccda9ca0-ce95-4ccd-87a0-c0eb317cd9fb",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a0ccf0d1-897a-426d-8321-4a39e950591d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81e815ec-938d-4404-ab1f-e5c49ba38ad3",
        "cursor": {
          "ref": "d6b40a88-19b2-4fed-8a66-152a121a5700",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "4ee7bceb-9a78-4048-9e79-6b7a827d1ce4"
        },
        "item": {
          "id": "81e815ec-938d-4404-ab1f-e5c49ba38ad3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1e263989-6d8e-4294-9871-58f1d7fb3462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2baabed2-4079-49f0-b0af-50a10db2cb29",
        "cursor": {
          "ref": "6195062a-b9a0-467a-be35-361d8b486e5d",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a99439e3-85db-4cf3-af60-b5830d943313"
        },
        "item": {
          "id": "2baabed2-4079-49f0-b0af-50a10db2cb29",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "b61e6c63-f461-4e4c-b922-a6cefc6ad454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8122faf-8568-42be-8717-ead7e6a3727f",
        "cursor": {
          "ref": "858c2c91-7591-4b01-a83a-190f4bf250c1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "17962c19-fbc1-4bf8-9de5-75f4aa5734d9"
        },
        "item": {
          "id": "c8122faf-8568-42be-8717-ead7e6a3727f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "88023449-1391-49fd-aaf1-291e839df33b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96f3854-97db-4b6d-aff0-cd0025ab5e1a",
        "cursor": {
          "ref": "41bff56c-8ea7-4323-8b33-3c61ace361c1",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "e7db5f7d-733b-419b-9388-221d22c51547"
        },
        "item": {
          "id": "c96f3854-97db-4b6d-aff0-cd0025ab5e1a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "97615efa-c37c-4325-aeab-7cc15e08049d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8906a9b0-5cd6-4335-adfd-365ac0509bd5",
        "cursor": {
          "ref": "41b15b76-06e5-4dd6-9f98-e20357ce03ec",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "7eee158c-ed1f-4918-9a6a-4aeb68ff691f"
        },
        "item": {
          "id": "8906a9b0-5cd6-4335-adfd-365ac0509bd5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "88f0e94a-9c77-4942-aa43-b28551a71170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cd74d0b-e744-4961-978c-5fd98a3cd759",
        "cursor": {
          "ref": "c67ad167-5eb9-454e-8740-f4dd3d592c64",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "8fd998c1-dff3-4dc8-9c12-502d839447eb"
        },
        "item": {
          "id": "1cd74d0b-e744-4961-978c-5fd98a3cd759",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "5b916307-e745-463e-bd68-83db598c75d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550affa1-120e-49d9-9863-a111df9a8b4e",
        "cursor": {
          "ref": "cbe3fccf-6117-4ee5-bf12-71da9007ac68",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "49c49c79-ecf5-4f21-ae58-07b97a99c1a3"
        },
        "item": {
          "id": "550affa1-120e-49d9-9863-a111df9a8b4e",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "89fd26bf-239c-4a66-a17e-25efd4c37579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369bbf25-1813-48a1-a26e-c57b7080749b",
        "cursor": {
          "ref": "43a899b4-715a-4c2a-9173-ea22d24a4972",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "c8b025ad-d631-4b33-b371-82a54ff9dbb2"
        },
        "item": {
          "id": "369bbf25-1813-48a1-a26e-c57b7080749b",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f920c298-427d-4f3a-8abb-8d5f6f0a4807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3898ef-a99b-4224-9084-553ec7509211",
        "cursor": {
          "ref": "91409666-395e-49ba-9a93-3b6694c9c940",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d87015d0-ede3-4fef-bce6-0d671ccbcb2e"
        },
        "item": {
          "id": "ad3898ef-a99b-4224-9084-553ec7509211",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "f1190278-040c-49e8-b2d6-7725a4c35beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8d0ab9-94f4-4fcf-9a16-92156f5c6f16",
        "cursor": {
          "ref": "ad9fa2e6-581b-4dbc-97f1-f5a50367edff",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ecd6ddc5-60c2-4f1c-b149-df303fa970de"
        },
        "item": {
          "id": "ce8d0ab9-94f4-4fcf-9a16-92156f5c6f16",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c5ac4275-81a2-4ded-96f4-7bebe6fd3021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0170d0f0-3596-43c8-a393-037644686559",
        "cursor": {
          "ref": "ade27d27-7c46-4073-a5e6-9bbadd076acd",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "020695c8-9fbf-49fc-a27e-9baa6ba96f52"
        },
        "item": {
          "id": "0170d0f0-3596-43c8-a393-037644686559",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "81086f94-7102-4f7d-b957-5f032ed4ca8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484837ff-3d1c-4d17-85e5-de9ea4fed0c2",
        "cursor": {
          "ref": "8196347e-473f-4584-a2fe-e5238a0d2764",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "92a0d94a-08da-4794-ba59-230421509aa5"
        },
        "item": {
          "id": "484837ff-3d1c-4d17-85e5-de9ea4fed0c2",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6683bc66-9549-43fa-b73f-b1f52b7008c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fd02666-c031-4d5c-917e-d88a70f70b4d",
        "cursor": {
          "ref": "fb421948-c8e0-4044-aadc-ddd1085ba6ae",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "99070bf1-6ad0-4651-bcf0-8d09a9d6fef7"
        },
        "item": {
          "id": "4fd02666-c031-4d5c-917e-d88a70f70b4d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "ac83acf5-41f2-4468-b3b1-198e5df24d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc4559a-a8ac-4166-af30-a80b17765a3a",
        "cursor": {
          "ref": "57f99c4f-32ad-42fd-9a88-7b5cc8162ae9",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8e1c2501-9c6c-4848-a1f5-6892e948415a"
        },
        "item": {
          "id": "afc4559a-a8ac-4166-af30-a80b17765a3a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a8d9c32-bfa1-488f-9251-ce85e3731739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1550b13e-5aa9-4744-9c03-c928db5a147b",
        "cursor": {
          "ref": "64a1d798-6454-4ad8-8c52-ca3f926b8dcd",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "047ab401-8113-413f-b2a4-0355685b2021"
        },
        "item": {
          "id": "1550b13e-5aa9-4744-9c03-c928db5a147b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8d647527-e034-4919-a6b2-72279fb9a1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d5b22d-5714-4826-9294-b29776db79bd",
        "cursor": {
          "ref": "c6502fb0-7719-49ba-8dee-4664e7c23bdf",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "07fbb9b6-001c-4cf2-a6db-ee0e65140e40"
        },
        "item": {
          "id": "c1d5b22d-5714-4826-9294-b29776db79bd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dcfd85b7-fe53-426c-abeb-45ed03bbc29f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac6d41a-ed37-472c-8ff3-e9ae90fc6aa9",
        "cursor": {
          "ref": "aa5afdd5-a56a-4585-8b16-50ec272f7a26",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "d6f275eb-d306-412b-af4a-81814a57e8d1"
        },
        "item": {
          "id": "9ac6d41a-ed37-472c-8ff3-e9ae90fc6aa9",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "823a623f-23db-48f3-9937-931d363999ba",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66310881-09d9-4f37-b38d-80066c31c895",
        "cursor": {
          "ref": "8f081b9f-0acb-4a3e-9552-582af3ac27d6",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "9a18b93e-d5ef-43f5-bad2-60d348777533"
        },
        "item": {
          "id": "66310881-09d9-4f37-b38d-80066c31c895",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c3dc51b4-4f14-4d7d-b5cb-1c7a3dc3672f",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2438c4a-d16e-4aa7-935b-319dc7bd1ee0",
        "cursor": {
          "ref": "4f88dc4b-03ba-4f58-a435-02626fc13f4c",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f8f68819-73bc-4a44-a412-52767b6f2d64"
        },
        "item": {
          "id": "b2438c4a-d16e-4aa7-935b-319dc7bd1ee0",
          "name": "credentials_verify"
        },
        "response": {
          "id": "26f8cce7-d4d8-483f-8de4-e129c74d5a94",
          "status": "OK",
          "code": 200,
          "responseTime": 2665,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "504ff766-ea4b-4581-af13-22aa6b37422c",
        "cursor": {
          "ref": "a23cce89-d562-4cf2-ad5f-4bc856e45829",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "6721281f-3402-44ea-ab19-a336ff3a1575"
        },
        "item": {
          "id": "504ff766-ea4b-4581-af13-22aa6b37422c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0be4e6ce-034c-4706-863d-28c5eac43cdd",
          "status": "OK",
          "code": 200,
          "responseTime": 4011,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f771ed-5212-4859-8241-9734c6816383",
        "cursor": {
          "ref": "44a8dc4d-882c-4d6b-9e22-0f285c14cf3c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "638dc989-1172-4f67-b060-0068ea23e1be"
        },
        "item": {
          "id": "46f771ed-5212-4859-8241-9734c6816383",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ce53b0f-90f1-47f5-829f-b68d95485386",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f771ed-5212-4859-8241-9734c6816383",
        "cursor": {
          "ref": "44a8dc4d-882c-4d6b-9e22-0f285c14cf3c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "638dc989-1172-4f67-b060-0068ea23e1be"
        },
        "item": {
          "id": "46f771ed-5212-4859-8241-9734c6816383",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7ce53b0f-90f1-47f5-829f-b68d95485386",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f97a6e-f79e-4476-94aa-10ad70e060d4",
        "cursor": {
          "ref": "b692bbfb-3660-47da-98bc-108a58d4e44e",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f7d29e63-c934-4ed8-989c-b1efd61e377d"
        },
        "item": {
          "id": "36f97a6e-f79e-4476-94aa-10ad70e060d4",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4927be47-cf4b-483d-bba7-7d55a30fabd5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5569fe8c-c4bf-4385-bdc2-61c14841ea69",
        "cursor": {
          "ref": "45d61150-de48-43b6-910e-4f21d1965260",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "f8958c29-cdd6-4436-89c0-e9d611d02834"
        },
        "item": {
          "id": "5569fe8c-c4bf-4385-bdc2-61c14841ea69",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "01b80fc5-90a0-4da7-8bc3-7b77c088174d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 56,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}