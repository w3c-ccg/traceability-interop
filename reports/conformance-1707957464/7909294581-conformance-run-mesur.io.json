{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "388f3b86-fb33-40d5-abdf-b139c3f52a19",
        "name": "Clear Cache",
        "item": [
          {
            "id": "becbefc3-0d2c-4cac-8b92-6f195c541162",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b059cd2-9cd4-43f6-a332-ce5707272f49",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b756af21-9d3b-4636-a309-90e145a70786"
                }
              }
            ]
          },
          {
            "id": "95bd287b-4ec5-412c-8f57-883842cd344c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a38ed7c5-81d1-4d55-890b-c034700497ff",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2396f069-3037-4daf-8efb-e195200aa612"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5a6a7e40-0266-480f-b45b-9bb6db465ea5",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ba88b8b4-69a2-4546-b7d7-41ebce9978d9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "70564b44-9075-4a31-9309-de278d46ff16",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4b2e9546-4128-490f-96c7-5e5a78f2ce5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4193878-0179-4dbf-bc0b-03fea02ace60"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "178d9973-a3bd-4970-8940-b171406a2336",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "52a458f5-32c9-4d01-8cee-b0bc7ed04143"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83192c9b-ac5b-4591-97ae-3f1377028300",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d9c4b35-8780-47db-845c-cb26dd2c2d77"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c487fc62-71a3-4a32-85b3-bf62f2390719",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "b0316656-3997-4028-8bcc-1dc2c18a4003"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4f6e571e-0b9e-40c4-a870-93fa1a6c78ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "459989c0-bc1c-4da2-a6a0-59cddb150b81"
            }
          }
        ]
      },
      {
        "id": "89eced2b-07cb-4777-915e-822cd9952a2d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ce9e52b0-625c-4ecc-907b-652150f43176",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74e97fe0-1b49-4b58-99c8-abf22db83ae9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "17e128d9-d40d-4288-bb3d-28966c32cac5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa992314-7573-47f0-8015-770cc194b4ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b29e83ac-f192-4c85-80cb-007701526ac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b6aab9-d9c2-4b0d-81ce-a40b800f397b",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa8de86-a5da-47f3-9650-888fa5c0409a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fbe7b13-5adb-462f-a0dd-7716edbd5063"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46a1c3f-10ce-4b83-802f-a82f3f9b3075",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "610e8589-f1b7-4ef4-8504-c44c11a8e92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9aa918b7-4e3f-4687-86f1-b92a2d743675"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08e2db1b-2fac-4e64-bd58-d755d822b75c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d474401-ddb8-44ca-bdac-d6bf2398ec11",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f6d213-38f1-41f2-a754-78f653e4a6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "569ff18f-ec74-442b-a777-c7b6de291bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11cf6a80-0f28-4a2d-b706-18e4bcb078ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2979dc0b-03cc-4f55-8976-3aa4cac9a307"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2d08b37e-3dd6-4d92-96ad-09c8da875643",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b67474f5-7e65-4d63-a9d9-5384207e01df",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8598cfd8-493d-42c8-97d0-f068eccea323",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "3eea979f-c83d-4cf3-b665-80a6a69994f2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4e3c155-2196-4f50-b235-6b2883f010f2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "82ba3d52-1ad8-4e01-b5ef-2964fc4fb5cd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "26c01a67-e691-45ce-bda6-750ec4113001",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "94af1cfb-af93-4f61-9234-8cb41f067794"
            }
          }
        ]
      },
      {
        "id": "002f153a-337f-4987-be9b-a122cae7bb82",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e42038ff-1a94-40ef-a8d2-cba18de9d1e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e29dc47e-554e-490e-bc0c-eff061590dd4",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "cb660fcf-3d61-46dc-a9a1-988a8fe5ce29",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c63b1c42-8b7d-4196-a413-d590e52bdcee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80460186-a390-459c-b8d7-10df835a49bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9f3a6c-3334-48ac-a743-ffbc386f9a55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86645300-48e5-410c-a905-5b87c8b6c7c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d2574a-0fbb-40cf-bc1f-96d75169bbc6",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9932cb-e0c6-4e19-9065-b72d1e5ec2fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c39718fe-a55f-493e-a416-16d2a1a227c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84b0520a-a67e-4954-bfdd-8c09be3ae7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67584a70-fca6-4bfc-89f8-bba4ef5937f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94409e35-a99c-41e4-99a5-21c979ee56e1",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f7cb9a6-0792-471f-9749-09d5cfc4e187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bff858-e11f-4a04-aef4-561ad2f8a369"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18fa0bf3-4411-4a18-b11b-b1ac30bb3fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d114e69d-d6c3-4d55-8538-91e3eba38c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4082743-2c9f-4059-9f85-80317b9440c9",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c59ddef-ee45-41ca-bb80-aa8eb249ee25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efbbef15-af64-41b1-a775-077e0a319637"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b02d227-dcf9-43d2-8e41-19d9cb749df2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "314a8e71-9e8a-452b-990f-fa904cb8f439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb9a357a-50e1-4721-babe-803c1b80b8b5",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e5f1a7-1256-4c8a-af88-915e98eda5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "653674bc-d5fa-4a20-adba-cf7ec377341e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bfb7487-f1c9-4d01-9697-61fc1334cae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f5a5d19-b7b8-4c0a-bede-e09825cae92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f4d700-a381-42b2-b273-b43fbb0533fc",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83a37d7e-e0b4-4186-bec7-25497dad4aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9960923-2ab2-4d79-951e-00e55ebe26db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963c61e6-cbd5-45e0-9634-e100a1aeb3df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9cbb50bb-bcdd-4c1a-8e56-3e07d22379db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0245f050-8705-45c6-bcd9-a725e4aa01bf",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d73168c-86a1-4ac2-9206-b855afbc6950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a00ef0ce-6549-45df-9267-9dae9d4666a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8803599-8652-49fc-80b0-e99d4d4f7640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a911ea0-d18d-4c4a-ad1f-95c24e03ea11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2739c729-1bae-49bf-beef-4b9f0f4bcb13",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da95b337-2b64-4cee-9957-4c399fb5b87f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8690ee-3e60-4fef-b2dd-c20325b29d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace00a04-abac-495a-896f-0445b2079a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3344335-a5b7-4665-a26d-7d31000e106d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "022d3830-3493-4053-9227-47d06a1a6881",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19be16f6-9740-4675-a513-83ca2ad81a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d6ea925-a2eb-43ed-8623-f563587f8305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d777521-65b0-4b70-be36-04e8fb0a2679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e8aecad7-c818-4e9f-97ca-ca7ec4a94533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdeef9fc-ed88-4101-92fd-ecd834751935",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2975ec9e-6d29-44a9-bdfe-6dd2cf84525a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d1dd9e5-621b-4886-8f4d-c98dcc2e56d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a2c9d5b-15f3-4ea6-9f61-6ec689199c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97fa1507-c136-478c-a3d6-25b9e0e5084e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35a6da9-9e37-4b15-8281-25caa8bf6257",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b6bafc-9eb4-47e5-baff-fa8c89e2605b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34e96bc3-d21e-4861-969b-3be7d852f14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28178df-101a-4c3a-9d76-532f07a3de58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ddec1dd-9de0-4cde-8578-2039e1b56c54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d05db310-a4b4-45d2-a857-58bcc364a5ec",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb2deb5-9efe-43b1-b8df-dbda050cbaf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa244419-a9fc-44b3-bc85-ca2e6ddf7b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3beeb117-779b-416a-a7dc-d9970e6c8121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaa19972-0f1f-4559-8074-64f5ca94c447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "523d5dc9-766e-4c11-84c3-ba388e093fbd",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc5df5e-e154-40c5-a64b-68206bb5e458",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e4dab27-9217-4cc7-9195-b0334118021c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bde45e8-e5a8-4d5e-b685-bb24e38cc075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34b36a66-48fc-4b5d-a793-3c96953c0aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6552c9cf-7adc-44f1-96af-13e868f7170c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54b9698-f710-4eda-8099-502ef788c3c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704fbc5e-cedf-44d1-9009-8deae920219d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73bd4bcf-55d8-4467-9305-2c6292bd22e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a008dce-c981-4cfb-add2-6f8e29734a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c1da09-474b-4d55-9b0a-2ff1d7e97224",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9ce20a-deda-49fe-ac60-b43dad038c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc0395d-b00c-4492-8acb-6350c41540b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c287b5-4eaf-4b9a-9e2f-ce416e0f8866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8218ecab-9c23-4cac-9f35-be79aaf639bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44793d55-5749-4dad-897a-ef91f9d8cfb9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63244253-6b3d-40bc-b849-8dde084917e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42b269f7-dea8-46e6-bc4c-19a97e959653"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b09877ca-2afb-462f-99f6-6308e5b2c0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9fd81189-3137-40f3-a88b-12dd6d724e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd908cc6-e99e-488c-b2f8-ac8ed72177bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "925d25ac-da73-487c-a955-c025ffb91d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cacea8-02ff-47d0-9e26-909ddb2509be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9dc703d-85c4-4e80-9641-dc7fd8c2ac97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4407129-95d7-4175-97a3-3d6b8f83fe52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edc4218a-0e9e-4611-8fb8-8b6023abbc14",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59d80db9-4378-4869-be1a-8e8c17dd0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f61ce4a3-22d0-4090-bbbb-8b0e985ed71a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81ee6b8a-e505-4bbb-8291-909b3a55c0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "71ceab72-5047-4c3b-985c-46448bda2f02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbdf986b-4518-4f41-9f49-d7b5d5a6a178",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0411f0d0-9a26-40d7-8320-90dc95a98bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20dc1a91-89b5-471c-9d10-ae94b4af8d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c129c64-c03e-4c72-bcea-cd034090ea25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8dc9c4-fff5-40c0-9702-c4fff5cb9442"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa369854-dee0-4308-976b-c536e83afa8b",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a03304-d510-4ded-9d1c-49142fa363e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7adb783b-f59e-41eb-aa40-61f1404c7a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dae3f0de-486a-434e-9e4f-5adccdbef554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "103dded5-97f0-4eed-aaf3-b44aa7483bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a838594-8ee5-4b7f-a1f3-ed56fe272e3f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4125830b-1cf7-4b5d-810b-3b6880aca08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e39a855d-79de-4870-abbf-ff7a1d078920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b752b2e1-5ab9-46fb-af36-f3bc026027da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb41553a-c977-411d-ac04-cebeb3e13b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3fe34d-6800-4ed8-a2f0-fd600e09d6d8",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ab2f6f-6fd6-4cab-a60e-bb4d331c46a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc969bdd-cdb8-478d-a1d2-0b4b17bf8319"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "523f2a57-67b6-4962-b7e7-d077994647df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7f743447-799e-4292-9cec-325c41cb1dfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf4109-7f65-4ced-938a-f2856080e85c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b280d0d-20f5-44f5-9165-37364c09fc7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94704166-36d8-414d-816d-b14098c46880"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a37fa2f-6fdf-418c-8469-4bb25630dc1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8b220b4b-d3e2-4baf-87da-44414df72d8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581efeec-c1de-48ab-9021-58e74826bbc1",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b67fb2c1-e459-4cfd-a8bd-3eb01cb0256f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b851b56c-811f-48dd-ab13-b8a2fe4ff5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "197010e1-de1c-45c2-a483-9e0d0a11e5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e860eb9-3322-4ccb-bf72-87e7152dc42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad043238-da3b-4b26-8fa6-61a9ccc1f872",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29970e16-a12a-4ab7-bb18-ea5fdf8b1a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f68daf2-57c7-474f-a023-e9ea3a0319d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fb288a-3920-44ba-872f-f862daab10cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8350b4c9-bd4e-4941-b183-9ad1af152690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0239be-e329-4d4b-8192-706129822fae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f5f43f-af71-4ea6-9803-3de418eecaab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57a9c10e-cc84-4964-ba0b-ccbc969e8add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a73762d-03a9-4972-82ca-e9c977aba8dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "97661de7-2cc1-4c7b-941d-19450ba0b0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35f4a23-71c0-4d4a-b2f2-46f54e6e5555",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1753c68c-61ee-400e-acdc-aa1e7c4adcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c7a7963-8772-421c-b16a-634a83981307"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14e572aa-85fc-43df-9cb5-40501ec5229b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b786a0f9-3c0b-4072-a60b-a25c526976d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f851266c-34e9-46e8-89d2-ef185cca78bb",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa44625a-879c-4912-874a-65a3dcec0267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11b6ab61-f760-42e1-aae9-a8327dd6478d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9347fae4-135d-46cf-aeb9-17bdaae610e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d1851bb-84c4-48c7-a5d1-fb0b1ec8f62f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93700f7e-c193-46f8-b9d8-db4bae4bfd69",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c7d4fc-4459-4812-82c6-d15a3856c3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87ea859e-1628-4baf-a94f-860529c2c5bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff659ff0-1304-41d6-b9cf-85b6711963fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52bc090c-039e-4349-92e3-96ffc3734e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "518d0814-c621-4bc0-8cb1-4bf13a91b953",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54be58d6-5e68-4760-8f18-1dac0374187c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86157a39-b5a4-447c-ba18-46ee011b10e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f7d9ce4-08c8-46f3-bdeb-61e85246f8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "947ce5b7-7749-4c22-b553-1f735e53487e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc52c1b-4c28-4a3d-a1e9-b77b1e5b444d",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55b8b5b-d3a7-4891-84cc-2a93ea6bcf06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96204b70-e8ef-4089-a9c8-66f6e9f2c5c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef481f5-cffa-4bb2-8099-0feb7a2aaf99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "df59d578-8887-4943-a8e2-7d818a239313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce9882f2-bda5-40df-a699-024bf8bd9055",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9716b55e-7739-459e-88a9-2897533c7133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac5ae19-9e08-46b3-925c-5527a0d8b83c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dafa7df6-8bc6-461e-8067-c48181880ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffd23505-b12b-4ad0-bcc0-80828e8ee756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8466c4-2e99-43c7-a255-4cbba7518a85",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b4428a-8d36-4b7e-907d-2f48c2ef9ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c428693d-6585-498e-9f6d-0288423410a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18aa2ebf-0ac1-41c7-a0fb-4fa14fd5c893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c6a22ff-c7ad-40a8-bf4a-a75b6f640924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e21896-7af8-4830-b4c4-74ca30c50ca0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b2de729-4031-4df7-97b2-183fabcab164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f38296ec-1763-4231-b963-4ee1a1c5ddc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2971fc6-f3bf-400f-9498-0536d5766b1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "904bc143-7c61-43ea-b121-6d20753f3ace"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8354466-a66f-4e50-9587-a65a4b0cd0f8",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fa3aeec-47f7-48ad-a3b3-98860436f838",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab975d7-2ff1-4c18-b3c3-bf4b53664c7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed71e39-455c-4a5f-97df-40d0c6e1fb10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f0832f7d-3c9f-4400-b383-f5928e738bbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1387dac-1ac4-4991-a5a0-058283da6cd0",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8042bbcd-ae49-435a-a359-1b89d6c7b82e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "799e15b3-a3f9-4c0e-9a9c-dcbf274c4099"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c922296-90c0-43dd-9453-4b5a35bae764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a9314eec-72c8-4067-8afa-ec18aae0b0ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c8fcbc9-62f8-46e4-8c71-ec6d42adc2b0",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ed4c11-c5a9-40e8-9569-6849c1eb95db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173c0819-804c-4530-ae52-9a0c870331de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9151e44f-638b-482f-be91-a1ed6ab8b7a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96a6e1ef-92e6-4c98-81f6-b169171ef4a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd42c043-236e-443a-9285-808089a63feb",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293c5d29-6f13-42bb-89a0-281b5150b16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5494d803-a84c-432b-99d1-1851dbc235f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbee7626-7b69-45b2-9484-7466f90c5ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "85f6bf39-8a94-4a9f-9751-90589e7adf12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97733b60-265e-46f9-bdca-155421ebd8f9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6061c4e5-629c-4362-a5b0-dfa2811c3470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564b7775-f44f-4ec8-92d1-ef391210f0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af49e691-1e5d-4ca8-8dc5-fd22c0015114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1e909540-2ade-4654-a5c0-8cbadc027caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86bae6ba-03e4-46dd-8a1b-86b4a8bff9e1",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767d5af2-522b-4e59-9707-df42c4c8311c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32989d58-2b3a-4ff9-bb95-3dededb0b6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8965067c-db6e-4ea1-b726-3e51edf285d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "302c64db-1b33-4df2-8a7e-bdacb21a9072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe679f-471b-42af-94c4-74396e4d60a7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ba4dd5b-af95-421a-a11b-a1c559c5357d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf9b575a-43c5-4808-8cae-3b630db119b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb595ae8-d3ab-4a4d-8484-36833521da81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "391917b3-bc81-497c-bac7-be9ada75d08f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62c80737-e7b3-4be9-a500-42422389636f",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7860c58-a98b-46dd-8101-35bf9a4aeb3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3c676a-b6c2-4511-be0d-4ed2d45b1e35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6160fc15-d5b9-46fc-a1fd-db4bac542476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a9c2cf9f-ab8d-4a90-8715-1da28f9464d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09ef69c-5684-46ca-a083-503eae7e813b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f297bfc-fc19-4517-8331-c66d04003268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f698f4-d13b-404c-af0d-724a3440bae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeddb24-679d-4029-8c13-dd1de9bbfcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b290a87f-1de3-4a6e-9ade-ad3d4d476ec2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bef7d87-3072-4483-a0b7-60027c61719f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6995bc-356a-40c3-ad77-b394a86b49bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eb5dd78-e7ec-42c4-afdb-fafc920dcbef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "909b66c4-b502-453c-abb0-9125b0c9507e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9e8d817-1793-4383-982b-ea3a32fd243e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be18d819-e03c-4cfa-a488-b5709e67c0b6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09bae36-f54d-4da6-82db-995ee47c77bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2efc32-4c00-433e-a59e-ba8424107aae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3890af95-af81-47a3-9ee3-b3879b13fc94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc31ca4-6c19-44c3-8255-563d8b6de1ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67cd7c5c-4ba8-4446-bb07-90f1f5cc6d25",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e43e80-bf70-4ed0-84e9-702cae928664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f10a31-dc10-4601-bd5a-5e894a53c32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f16673af-275b-4f98-8a85-2d51327dd56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a51eb0-7c70-4ed8-b988-ec233ff73573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487fce4c-b1c7-470f-b062-a116e5a8102b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea6b8bd-e379-45d5-b1e0-48d8625f35ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb020ba-34b9-45de-ba05-b4a04ab52de4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "330d8a59-d8ef-4a0b-8f45-bb11f6fb5878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b776e57d-7b40-4397-b71e-82b77f192ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e1e50c8-ab20-4503-98e0-0a7bdbd334fe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8e9ed11-fd8a-4c45-a7c5-55b418319f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b5b1407-0710-4c9f-9454-3759c780c7c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5526b651-d392-45a4-a416-90b6a55d7e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c55822b-1516-4029-a0f8-a42cd5995b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5797b75-7197-44a4-ac3d-751fe744a7ba",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf1e428-391f-40fc-a0b3-9086c9a88e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ea86625-b24a-48cb-9c77-5ff74890f3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17f5da1-7677-4546-aef8-80b3abff27e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7bb9c6-962d-4ec2-9298-9ddc041ea70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8986f16-40b4-4cf2-b572-698f793c053e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "731339ea-1852-40bf-af93-343e1e67f392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c49a6d32-3dab-493a-84ab-2f4accc276f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8278876-450b-48b7-938c-825876c4805c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "673783d7-34b6-485c-bf75-66e796d072d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41f44cd2-71e2-4282-88b1-20cdb26cb237",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b332ce4-1a8e-412a-b0dc-7308b465c474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0774875b-de3a-4562-ac1e-f5da9222ae0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f27551-9154-4f4a-aad7-17ef1ee8c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4588aa5d-b196-425e-928e-1bd41ee7d566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d5f616-afe6-4931-8e4e-b502ae6da5e9",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e5074b-74e5-4dc7-93ab-2a292492b5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ef0004e-611e-4cd7-a6df-e87481cfb0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83f1f6e-b7ff-4072-b155-f670289786dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "681d3f8b-2988-4fe3-ae16-c04458788260"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0a13ba-b69f-4715-8548-84611ff5c88b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2511402-c079-4306-a3d3-e00abe75b5d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0867cb4b-bc65-4bc7-8212-c1e4fc6070e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7d4089-79b6-49bd-8618-d6ab0065e96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8636f8f2-d7f3-4fa5-aa75-b224c2257add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dfd474b-45a5-4ac1-8ee4-f7c090bb38c4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac7f536a-36db-4179-9414-9ade589167f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33850e29-c30b-4044-bcad-af08f80beac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e1348f1-1571-428a-820c-9f1157e9ba2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9229d965-153d-4dd9-a11a-39fbd82d8f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f53f1ab-dab9-4b01-a62b-a54a208135f4",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a3fb44-86f4-4034-a5a7-a8d602d98aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb3b962-ebdd-4da3-977f-ecf03c335a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14badfed-d94a-4908-ba4e-1a3704e3f069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9423cb70-0056-49e3-abdd-5c25bc4a41dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87bfdf2a-631c-4c75-adc9-fb8dc7a71ba2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34851741-84be-4bd5-b36f-1a8a5b606e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a2d6a89-153b-4a6e-8766-86c8fcac0801"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c4f071-d603-405e-8144-43318947566a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "ae82cbd6-d486-4439-940b-79703b50de5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "487819e6-9c2e-49dd-81af-020026b99dd8",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54f1b949-4316-4ae8-8a5a-de25eccd2163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ffa28cc-3b4e-45ac-a48d-90c737e3f5d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b99804e3-0066-4fad-ba91-24b3b82cd318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5375732c-376c-4816-a0ed-c5f58f0af3d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13ee2c0-5a91-47e4-b959-6145f299dd85",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d04df09-358d-4e14-8be2-622e88ee6118",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75f17fc-8894-4cf3-ab59-db273ec6b20f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e05fea8-6325-4ce3-99e2-cbe3767ccf2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "35ab8398-12c3-44ff-a375-e6e62ba65a51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad15cc2-4571-4176-9378-abe31a67d721",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea88327b-2cdc-4bb3-862c-8304979bbd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2a3192-cd18-4b68-aaf4-843f2a3cf776"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a8217e-f10c-4c4d-afcd-14287113df03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bd887f1-2263-4ec6-901a-58895e4009ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e622f0e-17ed-4989-b312-1cee76744ab7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36228a14-6463-4df5-86e4-6025e47507f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e44db96f-031b-4ae3-ae78-9807b078de4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023d53a4-6975-436c-8ca5-6cb125ca4297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f92025cb-6f1d-41c0-8f85-0b52d6c3bfc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb46e58-9a2e-480d-a2ae-4d13f32f82f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1db9cf-41a4-4602-9304-f99c918a44fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be08e94f-a086-4b4d-8aa2-12c6100bb88f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fc5b0a-0700-4089-a519-5d18d434f501",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0687cd25-1dc0-4e26-a884-33a5d491104d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e52ea1-e5df-4b6b-8543-b4d0f4587605",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86b17d39-d5c8-4022-a175-7507ae3fbcf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e501e6-ac5f-4917-9958-28692d914263"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd54d99-d8af-4363-8453-1b254d2bb28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "772cac11-1287-42d4-bdf3-66bd825da26b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de2e078-5f7c-4230-9db7-d64273183862",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9134ff20-2afe-4f95-9937-58c67f7c2615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81664913-c1eb-46e7-8d52-f488de6c135f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cde223-628c-42af-aa6c-acd7ba5272dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cca158c4-5b18-4c1b-8e85-3e461ae75887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb697a2a-33ae-4cc3-bb2c-8abbe7530d58",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f99e4002-8548-4ec9-8b0f-8fdac45fcf6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b98dc79-01e5-47bc-8edb-445fbc9abcfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf527c2c-db16-4bc3-bc2b-c1a2d8f50065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccac6321-466e-4c9c-a93a-a2f578e03413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41ed729d-e3e8-468e-8d07-6088179fad46",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e4e7bb-8021-48f5-a635-519686fb28e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2557563f-86fa-4059-bbd3-b32405c29816"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a07ab41-265d-4060-9728-1db0e7caf1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f205a656-213b-4854-bc76-61d4cd9958f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ec6f67-c950-4e26-a34e-9073008516a7",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b0d640-e113-4c19-8c78-f9984de936c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c50f9f13-ceca-41a7-af5e-561df7084f66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c2d15d7-97ca-4544-8b64-8878abd051d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ac4b45-f8d3-41ab-8eaf-e994a4c89f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22394305-8476-4829-ab6a-6afa1f335785",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a322fa9-66bf-4f37-b937-276bf2a7a3af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f405d7f7-9e0f-47de-8fbd-b1efc99bc9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f877e83f-6803-4830-899f-d2c95c91d722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1c096f38-37ce-4c3f-8950-a58b073f87dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d4d116-ad07-481e-8ff7-f4756016e5b1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec457f11-eca0-40e6-bcb2-78aac50da97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee39ce8-a331-4162-8c48-1690302ec7c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97204b1-ee99-44c2-a434-190457b1cca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "af99661c-2cf3-4b93-b24e-d3ccd69e0474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7c1bc2-03ab-4a57-95d0-f269234496c8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd23bb4f-0305-4e76-a9a5-4b25278d12fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56a6f0b-0099-402d-897a-d7fe90441183"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc6af615-c85e-4d88-a56a-2af67e8c57f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "733f5ac4-ca5b-4eb9-83c4-49715e7b6443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc8b04c-eec6-4e29-babe-84dab592cd42",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74f75cd6-8e90-429c-9568-af0856918c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c26feb2-885a-4e2c-950c-8168e0bf5281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e22ae363-43ab-42a9-9b84-4aef0ffcccd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9edc684a-ab52-4d81-84ad-85956b640e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32f8d317-51b6-44d0-8556-7bc68bc43ba2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3cfda15-2f58-4e8f-bc3d-aa224c5f77aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "957d0e9b-f740-4d75-86e6-d27b8f92f34a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8b8848a-d3f3-4ef1-9d49-ef39f07006d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe44d9e4-d2b8-49e8-9af7-20a3d304286f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe422367-d5e0-4daf-a172-55919d17440b",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78ed8f2-8427-4002-bff9-f74e1aea8df4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f1664e-ceaf-4dd2-aae8-2cf5dfc1b0f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d95b2f-a58e-4175-af84-15f1e98aa74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dcf1befc-34de-4914-854f-a9b90f06abd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1b788a-2880-4dbf-9053-88043c8e6471",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f76aa521-b311-45f8-b191-f07fd96b4049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b33893f-c2c9-4526-822d-4da08650b760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa1e8d0c-65cd-4884-9d73-9f775e0ead42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "27de5e57-1bc7-4df6-9d1a-3d6da062e7f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4113f03d-ad13-49a4-9d44-bec408582365",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e67cb2-613a-44a5-bc39-6ef0a5aacdcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6b49f61-2c15-4aae-bf41-db5a88e27ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e7da83-b18f-4e17-8d50-982d0c8a4e6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "468f7945-83b7-41ce-b7f8-b2469065c91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5056b57e-d6ae-4574-a031-56afa7781b14",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a9b070-4d1a-4240-99fd-c80075aa3ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bc89510-8950-4c85-90b0-7ad2edc33e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f7c98d-0e5b-45be-9f08-640e1ddea403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "573a2d0a-52bb-44eb-90fa-54c39aeb22e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cb16af-4305-4c5e-9fe5-0e2f817efe24",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578196f2-16ee-4b9b-9988-62e02146bab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ebf7cc-e057-4284-9a39-0c8d056da9e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e5dbb28-3186-443a-a0a2-b36f38ebb500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e7145ee-f59b-44a9-bddb-2417ed070107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fcfa15e-c5ef-4ea5-ac63-923045b7fa75",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b449bdc2-d350-4811-9dcd-55cf68a76243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7539776d-768d-4b78-acc4-40a7d7d0dcd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc471201-876f-4844-a0a6-76fcfb1069cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92059cbc-92e3-4ab5-ac0d-06022dc4825a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3f8976-e2f3-40ec-b27a-744e555e4586",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d07a5b4-be7e-4911-8821-a143a5b5bd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2dda7d8-02c0-480c-96c8-769f2501cc28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3434727-8411-43f3-a805-d97c824ca7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c47cb04f-f21e-4bc8-94b1-49d599c69ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "550e24fb-870d-410f-bd82-6a3929e11e58",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66928de-affb-4a2d-9312-aa0ed274c7bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee758448-155f-443a-a5c4-9f70d481af31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a238e751-a0e3-460e-a5be-48b3956e3a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dff16a76-563b-4e8d-b1dd-2511224db70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1628b260-568b-4eb3-9341-ae0de5cbb218",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22671e6b-4358-42e3-b350-414716c38f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "884575cb-6106-40b9-87b4-3d81e14806d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71b750c1-a0d3-4544-a7fe-ef5f3f9a04e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cceeac-d676-47d1-9511-661609ad34e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cbdd497-96d3-410d-ab76-2132883fdbba",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "052f9261-60f0-4b79-b539-ea75e07bdbff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20a30dab-0111-4bb0-b646-24517b041684"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52ce56ca-8c69-49dc-8e59-ca7b2203780d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d871db63-f4d8-40b0-9a94-877fcf31401a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5cc16d-824c-4331-9ee2-70390e34639c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3797a1c-2e50-4999-809d-7cb494dd55a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05d4da59-96eb-47ca-b62e-2b3096533680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe193e9-c602-4fe3-92fb-c89e51b8f416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7fd1343-43e7-498a-be43-be318af58616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec91f8da-5173-43f3-9d2a-03a1427824fe",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3328080-9a63-4ce3-b22c-6811f471f27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a247b1dd-30de-49c9-9ed8-3571566d6f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b31a0497-c4ec-4e06-9383-e905ded4f9a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee95a70-6327-4b5b-b7d5-dd50bfe9f857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd68fe2a-ce8f-47f9-8ec8-0f1ae6e59283",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b28e302-74fb-4524-96a7-605053ea4388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18c571ea-9e2b-4c57-a595-b43fb578e8be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdac8db-01b0-41d9-9f76-cbd8ffad059f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f415592-9b06-4bc8-ac55-07f5810cc678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c510124-5e55-4309-839c-fc321c53b862",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0976c889-43e6-41ba-a831-57acc2b1c78b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2d2fe1-fa93-412d-922a-e6bb5b1b8876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "378664fa-5533-4e14-b937-b9543f0b3b16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b33728a1-51e0-4711-8a71-4c809ebde66c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29fffc54-58be-4451-8aae-9d1a9d45fc17",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b25510-d57d-4f7f-bcf1-f1ee71eebe47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13013fcf-ff1d-4c8f-a6fb-512e5f091573"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bbd948-b3e5-47a3-b77f-cc4cf2101f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfab5638-43ef-43d7-a13b-055f9ce83ed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e894b39-2453-48fb-97db-645aa8861533",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86f67940-7523-4142-9d4e-01f17495cf8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace9c39e-cc68-4453-822f-5e257e9948fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "023d53f1-601a-4e2f-8235-4dd5499d18fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0964d33-610c-403b-8bbe-567bc0d56f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca1441f6-40a8-4f4c-9fc1-c590b6b15708",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1430ed53-f91e-4365-8971-87968ef520bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0766d4-b4bd-4e00-bf6c-4b87dd91b6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae6d6a0-e22a-4a97-982d-bd0785da1909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05aa7ffd-3b72-4a29-a046-ef83a5ba0e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782d3c5b-be5c-4c9d-8e58-d026d14e5d27",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95752cd6-26f3-4318-a46f-4f4d135d99cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "148ea3c5-f987-4de0-b8e1-f10dd7d0a1ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f141d64-b78a-4384-aed5-8bda9c55dbce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "706145f5-9632-454d-9073-d66f54720d06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3365a422-176b-4253-b128-7ee0b09020ec",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a693f712-ccd0-4f97-9d8e-c048c8b73b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09793a8b-17ef-4ba1-820c-b507533ef03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6b89d8-d1ce-45a8-b1c9-62d6de029297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b23dfe3-a7c9-4781-9d97-8b1e2d1fd0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e21ae2e-3987-4df4-885a-a1d7935fcf09",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4466d6-98e9-4913-b8be-a37bb823d4d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d76c87d-e22d-4f11-a15c-8dadaaf71e62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3f5f15-97c2-487a-b653-defaedda301c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8b79cd-42c5-4b92-addf-cb3c7515a220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8281770-f917-4b21-96e7-679335272a4d",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f32eed5-3889-482f-873b-534766375bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2abce683-da3b-44f7-93bd-d119387fae2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe57a89-3750-485b-bdf5-78f19209f41e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b441e7-d8d8-49e0-a976-06f3bb6456c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76d2b1be-360a-4345-9f9d-9b24b4923fcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ab009ff-ad87-40f5-a203-ae715025cfa9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d603377e-6a12-4739-aa5f-9b95af0674af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d33be7ac-63ae-4c5e-9df3-98bcf199a249"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f43e5159-3bfb-4252-929a-f0031227a89f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffcae391-71d3-4b43-9bb4-fd4f6cb9db19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "231bfa84-c36a-4d28-9b18-a2e0c28d38c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "247be11d-3f9a-4ac0-9f90-a6542e9d80f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "07e8d83f-4cd0-44a3-9873-3f2af0da3d01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ec95a116-54be-4615-b2af-1e5c25cae653"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6115ab2d-387b-4262-81b4-c61c55a2447d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e6f8a03-4b44-4482-aeea-ad3071a25444"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f757289b-43c0-4865-8abd-e49556b0dff0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a2100ae9-9f66-470c-af29-7f82edab6bf4"
                }
              }
            ]
          },
          {
            "id": "c8e08413-338e-4c11-8374-458708b596a2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f8a6ad21-44b4-4d59-b36b-0971d1fd3cf6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "e177116e-dc26-400f-9ee8-018d8cc06dd0",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c209564-b822-4165-8d47-383d96968a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8222b574-6a21-44b0-9cdf-d9335d28e417"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e09e15-9cf5-494c-96e6-597b979c327d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dd9630-866d-4d62-a349-e404521f0ccb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e071c9be-89e0-4ed2-a4b5-322029b6617a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a6e553d3-70ad-4e30-87eb-f904a9797272",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f7cf433e-a6d7-44d6-9e48-436ea923f549"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6aa1fae5-de59-45fb-b465-cedb9e862086",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "48f124ce-6799-4cc9-a7cf-020e107fcb74"
                    }
                  }
                ]
              },
              {
                "id": "84110247-25e1-46ae-a3e7-7b36482993e9",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "72cf09c0-cac4-4a30-8aec-1d1018c1014e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bcbd019e-5ef1-46b9-870b-b38d118889ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef55183c-e136-4406-9bc9-2977dc3b4c64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "36d38db9-8b29-4d0b-86ee-a1baf50d846c"
                    }
                  }
                ]
              },
              {
                "id": "8b316f81-9ebb-4304-becc-e097a8bf02a6",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "80721189-883f-4ffb-9bdf-efa99c06bcb7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5678b28-3969-409b-b089-9e41b73101f9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "926d8cf3-887a-4fec-8966-b36e956ba3c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a055beef-60ef-4657-9020-3e5e35199976"
                    }
                  }
                ]
              },
              {
                "id": "778fb555-1550-4e48-be68-b99d88ad922c",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ff19a906-ee03-4056-a10f-b7638bbf5d97",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "72067ac7-4ae2-4055-a87b-231523cb62f6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7ff2733b-bca8-4fc9-927a-0c46b559a8b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "b099a31c-698c-4a06-b438-33472cfa5a67"
                    }
                  }
                ]
              },
              {
                "id": "79023616-903f-4f8b-90c0-421c20ec76bc",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55ae909b-4513-4c21-8af2-3293ef70dd80",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cd0761cc-3a35-44bb-a843-c5110e2e2681"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9462afcb-eab3-4e93-bdcb-f2c5d87c5798",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "89d17450-136f-4acc-97da-f7fd21c7b315"
                    }
                  }
                ]
              },
              {
                "id": "eab7e9e6-ba18-4d0f-878a-aa7c8583cbaa",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "daa92d05-cdea-4640-b4fe-a381696a9709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b4be0962-7b15-40b0-9e72-82144bdcc860"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1696803f-087f-46b6-8f38-89b25113d513",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d6d18e3e-d0c8-41f2-ad94-80993205e3c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1b6a2b84-3535-420a-bf6d-0a9f5ff99e17",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fab59e10-1206-4040-b8df-183bbd20154f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "186d6ee2-65cd-48cb-83ea-96a28549634f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b9e4d6b-d599-4763-aec6-b12ef5054dc9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1e68d674-b5ff-4a75-b395-716848f38ee5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "483a9fe1-79b4-41eb-9861-024c0b9fc699"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3dbb5c65-d141-45fa-9e2d-c8972cdea926",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c99bd689-9080-47eb-8782-4af693a3ee2a"
            }
          }
        ]
      },
      {
        "id": "82298d76-188b-4b4f-8f32-037b4f0a8726",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "28f34ca2-2e26-4515-89f3-8a5adfbbe793",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a545ed8b-7494-49ac-84d7-2ba2f86d05c6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c74b33d2-d86d-46d3-9b8a-8b1cbd992f6d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55210139-d2a8-452f-8fb1-acbfdc874f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c35a17aa-fa12-4ae1-aab4-8fe3c7a58484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3491001f-972b-4394-9c5b-030aebe7fe89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "31389b32-abf1-46db-93a5-1ab83c35dae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb3f44f-b1ce-4f8a-9f56-91a78bbf1822",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6305e30-bbe0-48fb-9cf9-69d19115e833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ec30f6-260d-4a54-9128-24d39a4a7dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e9bf781-41a2-4275-804d-6355c0a09307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce246bc1-c2dd-4f02-97f6-5d84a124325e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49430cce-6680-4476-93de-d1729505a8aa",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f99484-c2bb-4b5b-ba03-87d7c008e91e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a27caa51-919f-4bf9-a97c-9e60f227277d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e85af1-3b32-4d3f-98ca-33f6e70b24d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14655f35-10b0-4162-ace6-51f29f0d552d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f491c7-59a9-4eae-b69a-795e276d8e43",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "236ec52a-c70c-48ec-b66f-27a9551edfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c55d55ab-dd9e-4319-a9e3-1f2854afcba3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215ed080-db0c-4bd8-b820-5fc55148d889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c43e07d-67ed-4667-85f1-b3f4f08c2bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12be24b8-5e2b-4e94-84c4-985c322430c5",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeb863a8-9b24-419b-be42-5dca43342674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a283661c-bc6d-460a-9594-b81c459f5e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f9ad9b8-f9ee-48b6-8db4-91584405a579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58f44c62-5d03-4f50-a865-35d6a8eef5e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76559a6-21c2-45b9-9058-067cf0aa7ba3",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58600882-b6a7-44a2-93a3-3ee59de657a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592a497b-77a4-472b-a530-5cc37bf4c8e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3dbfbc-8c45-4c0e-8bb6-0a13c470dc5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f59ceadf-dc33-482c-aa33-8aa7b9abb9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dd6f79-3b97-452e-9b7b-65930eacdc20",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5833a8ab-d4f6-4849-afde-8edc073c15f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6feaeb94-ad9b-424f-9f6b-db217f69e759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac9f82a-ba75-4e10-adeb-e79af65e2c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "73ebd055-23a0-4933-9e59-f653e1458d93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff1ca00-a895-41a7-a225-8f2385a1b668",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3cb715-ba8e-416d-adff-5f77702dd4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c59af3-51a2-4db5-987c-e6e8ca75e64d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a26a13-ecb2-4d3b-ba64-f51a224f312b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "277f997c-6b01-49fe-9613-2fd17e7ba14d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3c0772-51c5-4748-8266-ad282da6749f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9288c62a-98ec-42f8-b700-c2156e2efcd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c5ff9e2-2ec9-4599-98ae-72f6314e54f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e060a9fa-cea7-493c-aa62-74535214a468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f2af4cf-30e7-41cd-92a6-89688e432750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf285056-24ae-42fc-a383-5b4cb90c6036",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84d68b79-74dc-485e-993a-9a326a7d2202",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca03847e-4d0f-4f60-8eae-bbbb92d0d6f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0941b827-eed5-4845-a686-29890e693e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dff868c1-5190-4058-9420-8826ea33617b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26ba573-2f13-4d19-825e-9eb66e9b5851",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4024b868-b2a3-47e0-a4f1-2a9c71eb0663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d867e6fe-9786-472b-85ad-56e682a7660b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb940a38-74f7-4927-928a-55a7e069eb62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d9e356a3-7898-42d3-86af-968eb137535e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47afa2b2-4994-4a5e-8f7f-b6a85398476c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bc7ce2d-4284-4722-960b-bf19f6a47615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a1be354-9e65-46a0-86f8-e66e6c93b4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "296f053f-a9ed-4941-9f2e-fa7c8ba691a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "047b75c1-08b0-4c82-9e2e-36bbd1d2c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb26847-1699-4337-b57a-402c92cf5714",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "235dd0b1-eef9-4419-88bb-e1d699619a4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f488c3ac-6fb3-4db6-aa00-12a7dc284b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece9b680-c95b-4373-b174-b365227bd6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0701ece7-41fc-4a61-acd2-b121499c2142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b4609e-bad7-4bd7-8caf-c3f8f02fdb2d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a0d2019-bce0-43f0-afcb-c8db548f0452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d092ed3-e250-46e1-9ade-f64f22c77da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614fd3cc-10c2-49f6-b08d-b821e244f22c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b320886-b953-4b76-a03b-9c33dce48e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b86124e-3b03-4d75-a996-93360bd50dba",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f68f1b-ab83-42b0-9334-46edca8006ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd1bf093-60b3-4d00-a94c-3d5caa00721d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c197d69-85bd-4914-8035-51086838025b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b36793b-5c6b-4de2-ab98-b46979c00e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483c0268-dfc4-4724-a680-91479b76521f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd5364b-67df-4423-a9d3-5ddb532850df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a547626-caef-4c7c-a92a-ccc449c447b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c7e3163-708d-4ee4-9d34-c6f75122e3a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c292487-8511-4827-98ff-6b6993449ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90dd589b-81f4-4bef-b411-b3a5a14b26ae",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fde11910-0b7b-4b94-964c-fea9bef88b79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823c7645-bd62-4fe1-bc81-c3700481b2f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b542a00d-0bab-491c-9765-7e00ee5c62f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8764a5e-fbfc-499e-9fb8-aca9ed1b7518"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c582811-b6f6-4a72-9dd6-757c5b43ddd2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c238fead-7e89-4a8e-9635-f614c85c33af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da756aac-8a3b-4292-8635-8fe13ce76a5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610f9c24-b3af-435d-abab-c0835ae1e204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b59f767-924c-4f85-809b-161a3984cf58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "800dcb15-0f44-45e7-9d1a-5b6c47d498df",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "337b0b1c-7914-4b8e-99b9-484c01eb1ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4a2a482-8937-4f8e-b95c-a4c170705444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a98375-471c-423f-9c69-e3dbfe7550d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1649b126-8814-4890-819f-2011a599a1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0b3eb1-b0e3-4a7d-816b-b0269ca160f8",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff5f7afb-29f2-4e3a-b18f-b68e65cbee9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41837fc9-f4f1-405c-bd02-e2d1ea3fb376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9084669-5501-432b-af77-dd1cbb3d2f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ae201a-edb9-452b-98ac-e9288ce703bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a935215d-c8cc-4560-b84d-0ef4a0393c13",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d4844-0fc5-4b61-875c-1e7e3390b231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6335a781-6f14-4aaa-a060-41b4410a44af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fb5fc98-0217-4705-a659-6c6813e222d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f155156-846a-4123-a27f-7273a24f9736"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7bb091a-6f79-4802-a3cd-5f3f7a7ad650",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff51b76c-d16e-4fe6-8326-72663b5e7270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cebb32-1069-4489-838f-925484f2dfd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ae1d9c-275a-4100-a07a-93a480239a93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0efff80-5ddb-4649-8e90-43fc5a4b2a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7987f6-10cc-4d36-8bc9-39f039130e7c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "116a7035-37ac-435c-a82c-209d3e80c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45d022c-f693-4df7-a6db-826674aec4ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33b47cb-c171-45cc-8e0c-47cfc485c57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5df416f-796a-4e2b-82e3-2991665b4dba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9494880-cf35-435d-a829-237138341d62",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3074829d-ada5-4acb-8997-d780b1cb00d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd43d0f3-9026-43f6-b24d-50ddcecbc05a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c54d38-7f46-4458-a5d6-73f28db60414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0649f571-cb2a-4b7f-83c6-d82ca50a512b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8204a6b-ec12-4af4-b38b-294b7ab4b6c5",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4cfb64a-ac04-43da-a59e-127cfd513e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a64e649-2e02-41df-ac73-f2ba492b697b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd3950e-bb70-4e00-9993-8844d56d3b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9168df48-586a-4ccd-a3ba-f9598e521ab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42d81257-eefd-4fa8-b1f7-5446e3375bf8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "595ad35e-2179-4d4b-b77c-0d0dff7d3e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8a48b88-769a-4a06-9f4f-9124ca8703c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8578a4-84af-4271-830d-facf23d0168f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d34b09d2-86b9-4c76-964d-7ac255e4c061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df57237c-43c7-413a-8e91-3f5b3afb38ac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff52c3c-1640-4026-8af4-fd2af5ac16b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf676d6-c5e2-4c74-a1d3-1829d318118c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e621c430-56cd-4ca5-9d80-28d64c1a4c20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a141b54e-3902-4985-b4c0-7faff7c3f4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad8b7f4-0456-49da-9714-6b5f90aa93a9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1e801d-6716-4f97-b2ba-361daad42a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7066ce85-429e-48ed-9150-8354d11f328d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e8c1746-03ab-45e6-9fda-9230893ceb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa12f26-2d11-42a5-99ba-0356882f2210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "885c11e0-bb11-4cf5-a2d1-4e1705c6862e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39bd4b4e-dd25-4c67-aba2-d2da797e076a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9e3195-3741-44ae-98f3-48bf84d3f079"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9060ea5a-453e-4a3e-b074-5b4d5285c77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a5a401c-06a8-4fac-938a-f0f7d772323f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10b5781-3ed1-4bbc-aa8e-9feaa55170b2",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "203dc26f-66d7-4a48-9a56-116fce5e0e8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31b675f-c8fe-4e62-9c88-9cbfbd31e7cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68b7e2f5-c373-433f-8e46-ea68abc2dc00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24548da-5b97-4068-8fc0-7341cdc24815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7a919d-7ee6-4263-be21-fd7318751852",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2337427a-5661-4cbb-8b2a-523adc47c7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2687922-7044-4784-a707-6b755555ac57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343f04da-abab-432e-8498-081bd1f50f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a23f864-4cd6-4b57-9af9-4cd8c1b7a07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3413db6c-ed77-4089-b657-3b8081f7c5e5",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30bc11b9-72ba-488e-96b8-a44475b7ae00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "097bda78-da9a-413b-b927-f2b0d278fbdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03771cbb-15bb-4096-8bd3-2c221a86e993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a38d249-feaa-4002-a992-39ce78ad18b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69669dcf-6ea3-4b43-a589-4e3bc7e26f03",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c1cfb42b-a185-4e4e-8093-7e253789770f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6913504d-f6ee-4f7b-a6d3-63f11a778fb6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "22eb221e-ce24-4435-9238-721e383edf00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6e2a51-2033-463e-9e25-4ed1441328f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3bc1af8-30ee-468c-9d77-1adbf34aacca"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc7162e7-f15a-4480-bc2a-10b7df48c64b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cb0c5dd-493d-4fda-bce7-96885fc09610"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f81b8f8b-c232-40c6-9e68-ab8cacf8b810",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddcc86d2-0a04-410c-b148-96fd57d6ed11"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9667ea9b-6016-4c36-96f8-7e7142db18d1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "708421df-0818-4b44-82e9-04b44764714e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68a7a2bb-0d5f-4073-ba8b-5f1ffd404328",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3469b317-a4fc-411b-b0cf-a88bb4648cb8"
            }
          }
        ]
      },
      {
        "id": "23f01b63-20d6-4786-9144-61376ef8e7de",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "4ae17bb2-2618-49a0-9ca0-75d60b50bf80",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4f4473f4-7ad9-44a0-8898-c024c7c2817e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1dbbb24a-73de-47a6-9b61-6320f87fcaaf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "255db33d-0c7e-4cf6-9950-1efdde1a7fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a28666cf-7665-478c-91da-9fb19a5f2551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4349d600-bd3f-4378-8d97-99213004018b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2307e173-e489-4a50-a26c-cf8794cca548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d9399a5-ed9e-495c-b8b8-974f2e90459e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ba9a89-c825-4168-9eb5-668721608f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaf1fd51-3657-4710-80a9-82d26e3bd736"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ec622b-8d6c-4d60-974b-05bfdab9c6cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "245c5f7c-de8f-471c-95da-156923e97672"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c85045-4e09-4610-ac5f-d68a0643bf2d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3918467-80d4-4dd0-ad8b-4b624c0c638b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23c30137-a6d2-449f-a9e3-489e3682dfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a3299c-bb26-4895-9de9-cb1c86793602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12f1d12f-8b15-47e7-bb88-2244458a6bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7e9d3b-b2cc-4c97-bfa4-78221417f16d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f41b8c-5a08-496a-8bf0-098fe93eb29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345a980a-63f4-4c18-9071-895d37f380c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e123ecf5-c572-498d-a3e2-bd2f6570ba35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "611f0931-d17b-45df-bf49-d2978076cf75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348c5261-5b08-4d2a-b0cf-7a83fd898996",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fd048a-6f6f-4143-8903-853ea42c26f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf6306a-ee81-4e80-adde-35ad543308b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af8cb4b3-11d0-4855-b7af-1fcb2d8f5b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "79780dd2-b8eb-466f-a1e7-0fe0297148cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ba653e-c0a6-415a-9680-8b0680f901c1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1263a721-5fb4-41c4-afe1-b015dedc76dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80cc138-0dbc-4d99-b6f9-1f75776f00a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c2eb64-d5a3-4b9f-b7da-cd85c0f97c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "25c991d3-b6e4-41b1-898b-8caf01554de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e40a82-7a61-4c68-bdd7-f16cd58b9466",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e34974a1-1607-4306-9a31-fab1e5c79c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87296762-4c91-4afd-bcd1-531551be24a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "258c07c9-bd7c-4d14-b806-4842f29635fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9756f391-dba8-418a-a647-b249f7df5eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31e2dca8-869a-4969-b5e8-f94d3e894164",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d2e7eae-7c3f-4390-b4a2-8fb098e3044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6662cc0-e7a1-41eb-9614-0d824bab80a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5331196-7e0c-4f71-8309-56fc43d2ae15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "809f3d05-6b44-4913-bb0d-5706f7eb8804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "138b7e12-6fc5-4437-beb5-d4b65a6c1ea6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa00f996-1f4c-4140-be25-8eef997c3fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c7deec-b0eb-4b6d-b0bf-083aff0971ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba51199c-b221-4418-a30c-6d7bad7739b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6c17687-263d-4bea-86d2-3cf86ddb1d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4186c7a2-6c1c-478a-9cf5-91731bca2139",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6485a4ba-d298-4019-ae32-b80b15f5dd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4d7805-cb1e-40cd-85e0-ef28360ac5fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc721f29-7c4e-4c74-bee8-65bbf3cb8ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef2db64f-c202-4fc7-affc-b9ef0fb05962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5199260-fd96-43fb-8b24-62e5ba88c27e",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4d08b32-f846-4a64-ac4b-78c4d9196c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8461a8cd-3e64-449a-995a-00a159465199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39405fc9-854e-446d-a744-3a1ae6968afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f245bbe2-4d89-46d2-8824-7997b77f1c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90cf6fea-4229-4156-b1a9-5053228d11ee",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d615ef1f-ebb9-49fd-91d2-ec56a0f677f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96e887ea-957b-4b3b-a83c-f4151138ad08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f901b69e-7f65-4b77-be51-5f552ac14270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3b5de3ae-1700-4b83-b446-41dce86b4324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dde850d-7c07-4ff6-bfb9-47ccbb099aab",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bf09b4a-d700-4aa4-bb12-0b2029f89031",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e27190-a79a-4561-8716-d3ef079df08b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75961b88-03dd-4545-8026-dd50cba1b887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecfe7aa-9afe-4ead-82de-baac765b0987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2f565f-49b0-4f94-a7fa-b30b135b0fdc",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0634f098-136f-4bff-ad15-9f9ea43c6eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec836c43-50fb-455c-8231-f3c67e8a49d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26d81f99-8d97-492b-b693-975d24e9313b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f60e63f-a69d-44f7-aed1-ce64bc0079a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f24476-0411-4cb1-a009-968f9bb52022",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa870853-5549-4cbe-8777-9123a5d16ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e28705e-9cd3-42a5-94e7-a809f2776d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df8c7f30-b97b-42ea-9de6-c62a326e0a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3d6a8b5-1e91-4f5c-9cca-ab4bb1e4643c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937344a4-eb00-4747-aa4e-381ba756e45f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1009ec58-e4b8-454e-81ac-80980ab2340b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d84abc1-5b80-4c14-8fac-6d987fcb4429"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6804d4-a515-4d36-a5ef-9fd60e95d59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf6b460f-ea1a-4247-8717-315594b05a07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "462058d5-9e8b-49a7-8b26-ad55b4264d09",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b1b6db-0359-4338-a086-5651c7b9a6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6bc2fd5-54e0-448d-885f-d73efe6ee3b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2600f18-4051-42c5-be0b-23504af4c73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a917e21-63fa-4da1-8096-64ef82072f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1b765a1-0a48-4403-b012-236b8830ccc2",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "849c0f4f-65d3-4519-a9db-f62dab901f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12d8953-0a08-4574-b89f-18fda8e58733"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4fd81f-58d5-4249-915c-285f5a402941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab96cfa2-f8f9-4aee-bc78-bc4619be1cb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4eb1051-f0a6-4e8b-bf7a-13d045a0e285",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8e0986-0cc6-4ca4-b144-5cdecf82c459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82ddd28-a113-4374-995f-3833091a260b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c5ef1a-fdb4-46fd-bb32-81ed7f66ee89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1df3b59-ec1b-4e78-94e3-236daf952d03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55432f42-ace7-434a-9fca-3b1916d6411e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce4b8097-e2fc-4df5-a4a7-9c635780d8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee897da5-19e7-4a12-927d-2355d07c1a2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500cc806-c905-41e0-bfce-a6dc62bb8170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd9da5a-ec7c-4834-b7ad-daf2c56290f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe374f2-973c-4834-8832-c243c97ec48a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d907b4-fd1b-4e94-aea0-7414524b2e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "237f9249-933a-4f6a-b4c6-bfc71a87f8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408c60be-4d58-486e-84aa-df59c0338255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88220945-53d9-4cfb-a084-3da97314f1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d404f1d-af6b-443f-80c1-102371201e4f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7bffd0-3951-4ea1-ba85-7f9932c6915e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ba4e4cf-fc2c-4dff-82b2-6be5aa283bb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c119122b-16de-4583-868d-3decb6ee00ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93971eee-770c-4bd8-9e31-6f5c0e0bc5a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "003de801-9c04-4357-ae83-a30fd45362c9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efaf5206-6c53-4d3b-a98d-275ac70aef9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6f931cf-62aa-4bb6-b7be-23bb1fafad2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74936d8e-ced7-4044-a962-e3c9f3cef30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3b9900f-752a-4a72-827a-9608075d7e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "065f3d10-e411-496f-8e22-583ac40b0055",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9537200-0ea0-4191-a0f2-8e2d5c7b8ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e013c0-b62a-4e30-9f91-66d24bc15ee3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4acf1ca2-6f89-403f-ae8d-6a6146eb44a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2474260d-4fe9-47c9-8ba6-59e33a9f9646"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4cd57d-7d80-42f6-bda8-c6f2bfe44051",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53fa62b5-304c-41e7-8290-31e070dc07cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ce2b1aa-9c9b-4e75-962a-0d3006cf0732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194dd896-16c1-4879-b43b-f28713e619bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8639252b-d31b-466e-9b9c-536e8799c667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30615b87-e1ea-4806-b9ef-90fa0ea34c8d",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb9e302-60f9-4b6c-8998-33424bdb5f83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6de903-039d-4237-a7fe-d5b0bb20e902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64dbd993-fa20-4755-93a4-abad58589a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f095abe7-c476-4bc8-b239-8175bd1380fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0332b7a1-624e-4ba9-9c10-ba0f7a56197c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d470a4-3f5a-47e8-b4c5-42c598787772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f07b86a-491b-4fb1-be13-3ef6b8b68b83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ea5e12c-2e02-4ccf-a041-dc5c7f400cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3efe622-68a4-4d76-8ac2-2a5c20fb701b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c64a866-3653-4c6f-9997-292d43010ffc",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc88b51-bdce-48d3-9504-b6c020ca148d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfa571b-3841-43ba-89db-37d551a4f2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7e2c1fd-d1f2-46a8-84a9-5258faaac9e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26584487-d381-415c-99f3-5336bdae2915"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2957aac-e9cf-4c2d-bbee-6bd89b01d5e3",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3def822-ffa8-4bb8-881e-a069452f8592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf81b18e-88b2-4363-86be-2be9734a8472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b30623e5-69fe-49a5-8d45-213a1859c5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0db7ebff-0f9f-43b5-86ce-8e502aef1647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66b98eb8-6adb-4ca0-9c32-3d1c40048af0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6516481a-f4a6-400d-b0be-ba11ab1c42ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c467e2c5-990b-4f91-871a-ee9e6279b018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87b5a993-5eff-4b0b-93c8-461ae48f22b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bd4882f-a1c1-4476-8b43-b25fe64a9b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9efcc6af-d91f-4a1d-ac36-4f5c98c70fcf",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c0eb505-a551-484d-8bdc-1ab31a522adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08be7ba1-4dd0-4dc8-8a80-4f9cf7ac4b62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e9dab69-dc7e-4768-ba8f-3f46aa59f732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "707c8762-4e79-4a5a-b5d9-3df66218d6d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382e03e1-1202-4670-9fa5-3f1e62a9262b",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f2f551-2fab-4245-afa2-4df0f7cad774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a329fd9-a4bb-4de4-970b-ba38d9ae022d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc1101a4-76dd-4c4d-802c-6719d94dc42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4f5781fc-5288-44d8-b037-31df03f97b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1d87f0-0fb2-49b7-914d-c2295309d5ce",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7905e26c-dcee-4967-be58-748084e5ae6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "809b5435-7037-4a5a-8fe9-6e44c542bcad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154ca6d2-1065-4543-a399-1290e20ec17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6069255-ba06-421e-9826-8ebfe5ea853e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "430c1981-6851-4697-9a8b-bb6c93707051",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ada3f23-8b84-4448-9c5b-e2108970ad10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9076a7-e1ce-49e8-8919-63e52f507ae1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1aafda-43e3-4968-a046-0539a0c172ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e34a7f-3e30-4b81-96f3-39aa9af1cb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45fc150e-de7b-47ea-a8b0-3aa36afab90b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbfe2b91-f67a-465a-be6d-e8b252c2859e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40af8514-92f0-4ccb-8e14-b71a12c02e93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ee4af7-4b97-4138-a77d-c878f60ddc42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46156850-784c-4a29-9711-142a0daeb6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203ed48a-49aa-44b2-8db8-e826c0a42063",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdeb190b-e5c2-4aa9-9f86-7c7c895a289f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baca250-5526-4ca7-a91e-3a986c4166b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de0109e-48db-461a-a5cd-fd030352bcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa00058-4dae-47c6-8608-eaf82678854b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7eaf9ac-7e9e-43b6-9ee7-240962b47ee8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573793f6-6832-4921-8be2-2c36eeb03441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb13f13-5145-492f-b18b-1eaeca531931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4871945-58ed-4f54-8299-2ba9ed7b3a4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00dfa66a-4d72-46e0-b608-962dc730939c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "033da938-dee0-43ba-94e1-efa7c5c48f65",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0746b6ad-7689-4faf-b0bd-766c84d7fdf9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee86e0f7-feec-41d4-80c1-625fec88cbf6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "516da4d2-b83a-4f08-b642-2fbed6464cd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3730b7c6-587c-48f4-ac64-e5230fb471f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f29df0a6-015c-4f9b-8193-9f03a0e6c7d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e59ca0c4-52aa-4e84-bfbb-16ef1c991425",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b3432ad6-f98d-4872-81da-0ab7694094d9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3c0f3300-1aa7-47da-a978-577a0acc2d2a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6fb08ffc-262b-484b-a082-79d158bde2f8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f92bd97-01c2-4dac-9d44-98c86703bc67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4e5ee584-7896-449c-bd42-5fc237a641ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "836931f2-d6d0-44a2-b021-d7e85bd24c64",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5c150a72-2a1c-4995-a0c4-e6b1c1f6b8b8"
            }
          }
        ]
      },
      {
        "id": "dbdf0a39-fe79-4e73-ae9e-600a21cce897",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3f828e6b-b1da-4a3c-bcde-c94ab06893f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6dfe8b4c-d032-4e6b-bf37-d66a57191bea",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef9f4e73-e893-4319-a65e-77d7a2db764c",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91e7ef9-faa0-462f-bc27-85acf9bddfb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d4da2cd-e0d3-419b-89a2-7c0326d94016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6eb23eb-ee5e-4c25-acb1-f111bcffccd9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a1cbf6-f9d8-4c0b-9417-d47ebee13266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035fa5ad-61a7-4871-9cda-3775d949d8fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46ca7085-9769-42e4-9db8-118772c362b4",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd117292-c50d-44d6-9193-cb7e2113adfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d8ca5be-bf25-409d-bae4-0b7fe33565ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07302419-6f9a-4bca-bb91-399cde4ddadb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9a4d3a-fd40-4d8b-acfa-2b8c6c9b4933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a727ab-bf1f-4b0e-946b-ef9191474bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c9610c7-12f6-4a9a-bef4-527f46dfda89",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56439d96-361e-4146-bba1-096cae45ca83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f93fe16-5a05-48c0-ad93-2bbb5fc0d50a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46fdca6a-4287-4c62-82da-a69a793b5502",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "247cb990-9feb-4014-849d-0ec5196c22de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d0c7def-9c01-417a-a092-45ed1d0713f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56d1da8-93c0-4c94-90c4-b37f62951e7e",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3718088-6f08-48d5-9a0b-699fe2416e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7b3bc42-ce63-4cda-8e19-32b836a470e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34692bfb-80ea-4853-87c9-0117a7a33930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "888bb1f2-4ec3-46be-9146-9c9fe1242479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cd46e37-372d-44d2-9143-5b71670f08e7",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa0f0d4-3ccf-4a23-ae13-3f63ecff2252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cb25fc5-2e18-482f-be05-b01c4c71dcad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7fa4a12-d3ed-4e80-b850-82785495576d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f30e7d-4ab0-4b66-9f8f-562ec3dc6f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ec5db0-da9c-48ea-902a-777a6dd38fc3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803a12a3-90ed-42be-a7e9-c1140a13069e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c118a530-caa1-4866-adbd-285901b12622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c3799e-8706-4b80-ac5b-a064b8ae32c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f259aa2-4c12-418c-9a34-8227d5ec6f74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93f528e-3421-4e0e-9aca-2d3595a3dc47",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bc4724-b89d-4212-9ccc-98bfc9218439",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3feca924-f9fd-4459-b988-b85725bbd8c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c16c4f-8dca-455b-a8c9-72cc3c2d3341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c207152-ce52-4098-ba3f-aa640fbc0008"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a22250ac-39bc-45b8-9e04-dcf00affefc6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b540af3-e917-4147-9a4c-0ea6d30133af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e295232-7b81-4945-a3b7-550118979be0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8594f638-ba5a-408f-8955-55fa99d5a035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f67cfd6f-4fe5-4b53-841d-fbc89d4d3062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19789e7-a0aa-43b2-99d2-50e70590777f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d70b38-183d-4721-8777-1b9e9b7d3d34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d556dea-ead2-470d-bf7e-fdd2c238143a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "129314dc-8d64-4a3d-bbd7-5093fe2d3d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b2977b-e322-48c3-828a-9af448ac4c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f72c3b19-9546-4aa3-84e0-c760daff920c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55883190-6022-41d4-bbff-824a810dea3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e020149-8aff-4c6a-8f6f-aca527595870"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432cdd62-a375-4fc3-9226-6f1f93e0d55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d6ed1d5-aafd-4f20-8c60-5746e40e54ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9431a15a-16be-497b-94f7-6b8b6a056634",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02303f4d-e431-4f83-a399-a9f4290d5662",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df4b2bd9-f37f-4fb5-bae9-39ba4618754d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b74c511-1331-464d-80dc-003ff10bb693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98bb36e3-03a0-4d4a-9861-0d641feb5fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51661cf0-6e0f-4363-b001-4d680cf08a24",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04234b5d-7e01-4753-a894-35e4d15031ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cfec300d-22a2-4c3d-8ebb-33670a1518b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3e946d7-2963-401c-81fb-86815030680c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff3f908-f179-465b-a7b0-d2d6c1ec5626"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e337af45-7c4b-4bed-b8fc-6773d4cba72e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e318bd-fe67-40f0-9511-a45acc70e149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69955e27-e72f-4093-97e8-bdbd91c8e0d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef317057-e8cf-445e-b1f3-ac984d3c7fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e11622e0-49db-455d-8d42-13ba3477e7e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b9abab-d042-4e82-b00f-0df99b88a91a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c692fe-d915-44b1-afb3-cc4d7234aca6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53fa062e-a413-4148-9633-6422e6d6d7c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cde24c1-8dea-4650-82dd-24f58272fefb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4cc8b0d-1d1d-40dd-8c15-5f12dbf59620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177c993e-c3bf-4a3d-9cad-905435cfbd72",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e93160a-66aa-4100-a7a0-5305bcae5700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1b46052-8428-46e9-a68c-f7bac2c07e31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "564fed5b-1689-498e-9343-ca753406a2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce32067-8f92-49c5-bdfa-c9291a102f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3909f9a-b271-4cd5-aaf6-4704c33fa8b2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec3e9d17-afa1-4d81-b5f9-7a6b5f1b7127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe0056b-50c2-4671-b48f-10400c0d16b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f84daf-a2c6-4914-add2-a53cd1ba4587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12e384ca-1fdd-45ee-8a2c-94a12d482e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cba650-82bc-4670-b617-33c1c7b4f035",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81807041-a720-4ea3-9183-6e9a84e9f513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d49bd89e-f249-463a-83a5-0130fa3cee72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8fc417-8768-4851-a215-e2e6f63ff9ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4bd932b-b18f-4e24-8893-e8b9f4578f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36251d2b-82d8-4c0f-b6a0-4f618fd264e3",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60bfb336-bba4-487f-a86d-86b856a6e56f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7accd740-4d45-480e-8408-c4249172d243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b043f8-3003-44d1-9a52-c3742f1ed1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48ac2259-6626-4692-8695-0e972de0cd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3bc26f0-b1b8-4860-8fd4-6dc508ae9dfa",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb2ea112-73b2-4a4b-98ad-0a90a9f7ffb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b847177b-e588-4a8e-a7f5-9b9ba649b74a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a80f6b0b-69e1-4395-93c7-d0d6a77102ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c003b83a-2b45-4ad5-8439-6b661910df42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae040d7-f13b-4279-a98e-b49f36e7fbe6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda1e840-4dca-4728-a97e-ed078e456575",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "945706d5-fea2-48e3-8e11-79f0aea7d54c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc4666d7-ec14-4bea-9d18-ffba0dd4e08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5129935d-4c8e-4095-bafd-c8ef801cfe72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262cf726-161a-4b29-9614-c762afb01651",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb04b01e-a736-4e86-95db-42c0ccff128d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948362e0-4a6d-48e8-b9d2-bac520d3c996"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbcaa33-1fa7-4fc0-996e-a91831bde026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6e6cc6-b967-4b92-8ad7-c9a1c891acbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0eb27f7-fa54-4f26-8f77-c6260936a45d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbffbc6f-d474-4a23-9d1b-cbc8987a3474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "181b86b0-b854-483f-81dc-803e18bd7a03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02743348-6e39-4383-a453-f0b58b836550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86dd822b-fe07-4f76-8288-4f9a2a0d1116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88d9674-dd60-487e-813b-2e38f7c7ed19",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b1c8bc-af80-46d5-a8b6-d1279e3e84c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed3af379-820f-4d9f-944b-2e288e2750e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f405e15a-2b06-4ede-8192-83d4e670a28b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93784b9f-2625-4f64-b002-ef673f5ae941"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e50f55-c955-48a4-8809-a6befe17e7b1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c341a04b-9cb4-439e-b7f2-26e962fe8ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "82e4cc02-a08d-4ded-8278-37dd14d7effc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58b61cc-5ce1-47df-a46a-089e7d5df9d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac57ee8-c668-406b-9a7e-9aad0c5e513e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58369a29-b896-4726-9be7-b80bce094f59",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea37178-9d5c-453b-8a16-7c0863dcccda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aeba43b-8575-4c9e-b27f-d21ac254b734"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "74e7e65e-97ab-44e4-8021-2f59d7e52de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b98d595-cbff-4d85-81df-674d32d87996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e056055-0494-45d7-9b21-ea5fee7d841e",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a25367fc-3b2d-4456-a066-487acc32dfea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4add3dec-3521-4690-b68e-1300602b2b2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "422c3b4c-9095-4750-b3f2-a99519d89a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d442cf9-3971-4463-b990-efc33a2f71ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fed04e3-a17f-4aff-9152-af921c71d328",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8aeb7c9-a0d6-46e2-9ac8-94ff63dbb50a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a9f9ec-971a-45dd-a10c-4705c9f0ff7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "daab07ac-da56-468e-8251-993a5fe70a31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4bf5173-d48f-4226-a53a-71d0b28a6575"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75a23e74-30a3-48a9-805b-e9970d31cf44",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5d58cd-ed6e-4adb-a07a-76d9491937d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9275570f-11a6-4239-ba75-8fd716441127"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ede4eb1-7490-4097-a4a5-42e8b404fa72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "872c5685-96e9-4165-9b4a-86a3974f4065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8242a232-d990-4b33-a6b3-99befd238820",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc8f975-bd60-4c81-8b0c-3bc6942f4b66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7921a594-a2e9-4962-9801-78aec8ba4b8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "802e9ad5-6c11-4dd8-b0a3-ee27a70d8258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a075d2fa-6637-4fd5-b54f-83e3e605456a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92309f61-3912-4bfe-a2ad-36e5c7365268",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5018636-93ae-426d-814b-9fe18eb19fa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0252c9fe-2dcd-4f2a-8787-48d01340e0db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff60e475-af01-404a-bde9-8697cddcaf3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef8fca6-17a3-40c3-a349-cd4d1e0e2778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747fd524-3dc5-4b21-81fd-f36c60190e91",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "282bb6fd-2041-4bcd-a767-b288a68a30e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "867c06d0-f111-45e8-b3ce-63250520b406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "facc7ba3-003c-4961-8648-d834b3f0afdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f994f44-3b28-4462-bb2d-204c4ecad818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652574e9-7491-497b-8644-ba100e932cd8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09cade13-9f15-4c1e-aeda-71bb77a8d406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20b1cf47-c6c8-4389-afa3-8e994bf2e367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc0a923-7314-4857-8622-28d6839e4d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6297c2a6-434e-4ef1-86d5-61406d4222ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1e3ee8-53e5-4122-9bc9-e9e48120091b",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c88d08-5c71-43fa-8894-6cea84112c06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc72bbf8-4a67-4bba-adc9-add8eec64b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa3c1c8-4508-406c-a0a8-56ec5673d358",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7f47fcd-2868-4021-ae8e-690beddde149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51b006c-9597-41b4-b6bc-5ada55225343",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8adf64-065f-4bff-89f0-2f8f3b84333b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa45537-5669-472d-b382-73896ecefdd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "461d38cc-98df-4e58-90bf-a7080b1aaa42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab2a8144-0b67-4e79-8f29-304d9351c725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "751210f1-45e1-43f8-8119-a230c2548870",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e195276b-3b33-4231-9465-a7c722690b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9e3cfd9-4248-46d3-9d77-c99752b746d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8d2caaa-2e8a-497e-85cf-8bf0e9eb7387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "303118ac-f19d-4dbb-b79f-209c66633feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9902f0f-d379-4ae1-80f1-f5e6aea93f01",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c9cede-f76d-4d72-8c5d-d8e504441890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e343ad-0227-4084-9c4a-e2d0289a3585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14393ee3-530f-456a-aaa0-6a2ec531c0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d00f98f-2d24-402a-9d4f-ca99d90c3abe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa239f8c-273d-4c50-b0d3-a4a767979025",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d246692-d9cf-496f-8dd8-225e0b296401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d120dd3-439f-431c-b005-ae4448af1a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c57eb5-e021-476b-8472-1a8cc5def5bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73fb71d-2df4-4e41-9d8a-bf0f76e0f80b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed368161-edfa-405d-a5e4-4bd86dbe378b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8d08748-f427-4970-ae99-edf20864ec4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e52f6052-d792-489b-93c4-48865ab25eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c78989f-1bef-40ed-883f-e0af21022486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb3b33f-44ef-4514-8282-b014ada79293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ffe3716-1251-448d-9795-4609e10103ff",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eee7edef-5c17-47de-964c-8d0adcf3d709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efde7586-4602-4e68-a7d7-d3764d527788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15855e54-f5c0-4e31-abcb-14555978251d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60662a58-1866-4746-acf5-b2c339ee59fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20319a75-1a92-4c2b-88b0-9036848482cf",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e323d70-73c1-4143-9546-77a7d3f20469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d47a41-2cf7-4862-9e55-3d1ddc9d7218"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21eee23-1217-485a-9c08-110dc2659d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f0c246-e6e1-413c-b413-04226854c5cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9554e5-0c49-4b62-99d7-628e1994e0c4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117d399b-b814-4933-a92c-41726e2266a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d2663b-75cd-456e-9e49-e99c6f586710"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c768ddee-aafa-413b-ab4d-1c6a421d7921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78ac087f-46fa-471d-b600-efa044e95abf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf192b2-6b92-47ec-9ad5-1b9fd1d65307",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5429033e-fb09-4129-947c-1fd9148a5f30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8de8a3b-aad8-4e1e-a6de-baadb1486cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01492c0-7484-4be8-9bb7-1fa3a7afad0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d6f478-44ec-46b5-ab19-4d478659cb67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ae4816-1d93-4728-a7dd-99358850c052",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0381fe-650a-4aaf-93e7-d6e95b35f0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd86d24-d09e-4dfd-a0ff-5d115fb1b58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76cc492-5ee9-4eee-95d0-a3a755d3b3cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44bcc12d-cf3d-42a8-a6d7-4fec38754869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfadbda1-e822-477b-bfd8-342c3a6c2457",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22144197-35c4-4c11-b8b9-09e8b911aceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef204d1d-c757-48e2-9283-fac1fa718f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7c7d2e-04c2-4549-86ca-724c935dc65e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94a55537-d730-40a7-8326-31f6f3deb13e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d6aa248-caf4-442a-a5f2-363bb79afa5f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1cf713-1bce-4fd1-a244-676bf8e3c76f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faef042b-5c73-4624-94d8-68a47c4d59b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f64ed5eb-1104-4955-bf6e-7b8f00235999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc52323-e9e5-446d-ad0c-62bc860f5f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2e04de-8423-4e81-b869-14f86d4d3124",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2323d25-679c-4f75-86be-e2a158f2694a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64461f37-294e-40e2-b006-de711287f174"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c542088e-3686-4466-9cc5-a745dab5cf36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53112ef3-c6be-47ba-872d-692e2ad6520f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0251b1-09f5-4321-b425-873b8489d668",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecb2a79-d3c0-4054-ad08-b627685264ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bf4f2ae-5e26-41b6-85ee-6280d8300b1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5c3ac3-c463-4216-ba10-506fdf6965c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8481013a-b66f-4ada-934d-321b591d41dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad703a7-66cf-4f4a-a9cb-64586c6dbb8f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f995dd-8b38-4b9b-8364-b971d7b65f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1524b375-d9c9-44e5-8a23-4576aa05a9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6eb2e61-1780-42e3-80fc-932486ca5deb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c5fc6d1-0f48-4096-819b-139c475a7699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7096c7a-9c72-420e-a885-223f42b6ed73",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ff27fdf-540f-4d3c-9462-ab1d37fef090",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02aaceb-c184-4f46-947b-bf994a8e7242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "386e68e5-5c31-4548-972f-5aab7d2301d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6b42d8e-4787-47d1-98e8-de84872fd00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c669a0dd-f761-466a-9391-d04dfe814f3e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50990aca-9538-4c5a-80d7-3925377e87f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86509e6-4c4f-4dca-9573-eccb38b87914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0cd3de1-9789-4f24-86a4-db55c39860fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd0ac340-0695-453d-9cd4-59262dcf9fcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ade1a4e-0cec-48d5-8b87-94ff0be10e06",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6716ee9e-5ddb-4ae3-adce-6a59b55d7ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51de38fa-2267-46cd-9267-18cfe3c0588e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21dfb6b1-94b0-45d6-8004-0176a78f4444",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c37440c-9cd7-4199-9afa-5f3b4cd316e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd43e2f0-1fb8-41f7-a8b6-e6b3389c8fd0",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7330c2-6bf3-4cdd-89ca-a38d175b290b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6930d2d-4e49-4bdf-a664-29664dcaa02d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9883ad0a-2b67-4808-9d34-e603a375cf4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d36b060-6a07-4c7e-9a8d-d02ce12f35fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6e6d201-68fd-4b5d-a9a1-a9a6880fe97a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088d4efb-9ed1-4d59-8f88-5b21affdc398",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce8127d-07ca-44fb-8329-2571e32e5298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "487a69c5-1385-430c-9228-c79fb56eb827",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0cf76d-4d75-4c6c-b3da-10e5bc642da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eacb7d12-db61-4631-a779-09d7c9be56e8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59fed8d3-fc26-4e5a-a291-726e7b20a76d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6aa8f1d-e6be-4139-a95e-f31b92e24740"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45368b8e-602a-439b-ad25-044ff4d9659f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b2d688-e1ae-4846-b850-26d6b99d87fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3c8d60-82af-4106-855a-a153560e8397",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7802c444-20ad-4bee-9969-d002defc685a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7672be51-c79d-475a-82e6-137538753c8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0639ce-d0db-4085-b2de-6cda0c06a652",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f56fabe2-5f68-4282-a2cc-007352d0fee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5016f24b-478b-45f0-a69a-a7bc22ed04b5",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d91d079-5a3a-4534-8588-3ece4c0a1d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645e9ebe-7df3-4655-a4f6-6610a8a52c9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cdaedb7-88fa-449e-b49c-318c7dcb09fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e083260e-d5d8-4e3f-8840-3ca6f539523c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5140a8-6c1c-42d2-9858-d142ea576727",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5ea50a-e4c7-4e29-94f8-23ccb13dd440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cabbdeb-4d16-4b77-af65-bde9976ab8fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8b4af5-dafe-46fa-8993-d7878c8f5fd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80044b4e-a007-442f-a238-73e690244481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abed2d65-1f57-4086-b4c0-a7e979c21f46",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acc36ac3-1012-4ee3-883c-5b7d5228f8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9eacfb3-9a82-4d63-9154-5da377d984a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "899c5a62-38f8-440a-a8c8-f771e36a8abc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6ab5109-2454-4de6-97a9-62abb06945f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48207689-26c8-4367-a9c4-567951d7e84d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfde72c-c6ef-4700-9a19-eac5d1dda69d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0df38f9-b96f-4076-a007-3110b258996f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6374824-d9af-457b-854a-6d5b459ce061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc88445-a1b7-4d61-a33d-a42ae7bd9771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d84ea0e-ec00-4542-b373-93b034e53a80",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "589f7924-72cc-4d5d-b9d9-417e61667387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "271050db-4dea-4f48-bafe-b693fe7ee3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca5b661-15b3-4ee8-b5c1-5e094ab2fe64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63452ace-f874-4c70-9bb1-fdfafed828f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa0170f0-aef6-421a-bdb5-ab376314960e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6774b789-f439-433e-ae95-c93653f98937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "385d8579-645e-4905-a210-84dd64b493b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db05c2d-6494-4a84-9e54-414e53155abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02d7f93-3392-4c1b-afb4-1b334d532b30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1314ae42-3768-4141-b45d-6c1383cd4f27",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60515348-e90c-43d4-b675-af356b708113",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23d71865-b8b4-44c9-b261-d62198629843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffdc86a-95e4-4625-b3f7-dc12305e2c8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2e87ad-424a-4752-a6a9-f9a52803f578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e229f8e6-bbbb-45f0-b726-333d02b182cd",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e93ae57-ce52-4ed8-91ec-d53c4bf3946f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e9774cb-14da-4953-beda-bb675d818fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c887f1-73b0-4758-9b7e-bab60cb3db82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21d774f2-8020-4a6f-982d-5bcaee1238d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f261551-c106-4289-96e6-b66a4473d78d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b6a187-0098-4cc7-969e-62a4610841fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a807231-ea3f-4ad7-a391-e179a9acb2aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c03a0b-8245-4aa5-a02e-b922f17db7ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77a6db01-44d1-4010-b030-011099c01b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15361839-4aef-4ea9-86af-9552af54b1ce",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c488e60b-da79-40a4-b3ad-97b09c173f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789d042a-2d5c-435f-bbcc-5358443a6d28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "254f6208-0c08-455a-bd92-eecab79d20a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fab05d-d22b-45fb-ad90-1b18134edab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb0dfaf-9efa-498f-8832-e76c2504f34f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72b5ec21-1a07-4646-982c-9ef6a6ef92bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a483f9b-13bb-4e96-85be-2e3981da8e1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fe6f6f4-e684-4f7d-8ba3-23389a7f81a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6275f5df-3148-48d8-8111-cbd86a20f078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f555df-e12c-4138-b5de-a536c7de5840",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af1a43f5-13e2-42a8-bc90-af15964c8dcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eee0d1b4-bd3a-4835-b320-3184473f9027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e3f4388-17bd-4f35-95ff-bdc250daa5b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ee54e6b-d159-4b8a-93a8-b5745bc39bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7193a6b1-0a9b-4704-9121-30a0561b2521",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5fa05a-39d6-433e-b3eb-50f48abfc985",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0355f482-f166-42f9-8f14-e7c8495a5524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25c87d4-f0ea-46b9-abc0-bd7e64ecee49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2fde677-0483-4fd9-adb2-e03c646c917d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0680f936-1ff7-4b4a-b035-ee6bb23cddfe",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62041f0a-aa31-4bb1-87e1-3dd2f68826e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6e30724-441e-41de-9206-bf0db4507a7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c363567-27c7-4e9d-ac2e-15feec0889ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8dbc44d-f4f7-465f-9880-980402a4cd1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d37c81d-f10b-44de-90bd-a7539f683e84",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0da142b-69f8-475c-ba5b-fc05ddf053fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b2f0768-cad0-46c1-a05e-a697da2a18c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf64347-1d5c-4f15-ba3c-d781fa0a9c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1913990-7f6e-48ad-b252-1f64c358ac65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc69ff52-86b3-4933-a38d-cfb1f44f23e9",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce4fe64-3409-4fa5-83eb-7c7f359c52ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d24e1f7-c1b6-4704-92a0-9f95a0d3805a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85af981a-a0bc-4996-b1bd-1e557811241d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e303c0ee-ee11-47c0-9ffe-c7f2fee7c1f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13f801f1-6aa0-4907-8428-58459a86d214",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d657a2-47ce-4794-aae6-e4a52695c6b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb5bec6-86ae-433d-9b7c-ec898649f95e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c21d5d4-ea0c-4531-9a42-bd57a5c886d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fde5815-ec1b-4a0f-85d5-dd21a19702bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebe7cae-8147-4272-849b-597f29740168",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ded9301-e3f7-49e1-adc0-fe31ed8e76dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f9bc77-8245-4e14-9508-23cf80b1f270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0454fc1-6047-4c5c-bf46-64ecc072a947",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f253c09-f86d-4066-b9d9-ae3ff1cf8a68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a6f323d-e97b-4c9e-95af-bd3faf8927c1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df308c90-1472-4c4d-8cc5-a80f23379db9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5746a1b0-c1b0-4708-bba5-f3d73a24b984"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebb98f47-ab50-4808-9195-bf1abc55b80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1694d681-5df3-4f88-b15e-900c298619da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12cc84a2-a93a-4285-9de7-0878d61e2c96",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ebad8ff-c845-4551-8aab-506207102b72",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d7816c7-8c5c-4e5d-bfce-bc1fab0d23b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ee8b03-5c0c-49a2-84b8-fd9edc5bbbf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac344cab-5519-461c-935d-3c21bf900ae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "082d0f28-2014-4b0d-af3c-a469512a7304",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "338ed6ad-a358-45c3-8569-2fdc03a9e88d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "244d373a-37fd-4436-af6e-5779c9ea611c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d53775c2-2bcf-4d28-8f2e-36ef14a41f61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4d74e31-7ad1-424f-bbb1-478daf923780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65610aa6-2dff-479c-8798-571cab793dae",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bb8928e-f47c-4d5d-9105-4be3a0a7df40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7de282f-c275-4ceb-adaa-ef00ff738f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0799c01-78df-4b1e-9916-fc7e8fd7f1ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03d19c41-81e7-4a91-af4a-73cdbdb6cdf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f18b529-7af0-4fe0-8b89-ccbcf267da4f",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30b4d2ad-3747-4cad-be9f-a2520d8f9644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4e4c648-abce-4e58-964f-013643826c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9761bf2-c59b-4cfc-86a9-79d68ba64f7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb2a65c-b7f1-455d-bab1-b8b8112b22df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b66c0a3d-de82-4b9b-9247-127b513644c7",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03a15ccb-d67c-4902-b981-a34b70f8cecc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "effa69a3-e7eb-4cb8-8c10-2c9a9777bb44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cab1495-2ce0-4110-a562-4771f93b938d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b971239a-b13a-448c-b1e1-18023ceae9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf55a538-3318-4114-a5b1-fe153ddb194f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0af05c-5f5b-4b41-8bd7-c47a359e20f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2688893c-cf47-4323-bf3e-3c9285b608a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "892fcd22-7b68-479e-8483-e02c34e1b30e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbca961-f1b8-4e95-9b35-daded51cffc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bbe6ee-5a18-43fe-a5f2-2087a3868807",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdeab9d-230d-48fc-b83a-fbb5431636b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d345c608-37be-4bcf-8f34-6d61222a3386"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b644f4b-7821-49e2-82f9-0bfa89ffd4fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7aa17c9-19bd-4685-a43e-8bca9fea7c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65f12b7a-d02f-470f-8999-c07e79f4ef4c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a02b5f1-b7ca-49e7-b51f-8d46ec57df2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b79bc92-86e5-4885-bb64-3e0c2b43a630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60fc35c3-b244-499b-9520-05bd6704c413",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a1eb1f-ff80-4e03-a1dc-f43d2e44ebec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9c66ca9-0b76-4e8d-a905-0de164e174ae",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d10ad3a6-ab79-4bc9-b972-74b13ea088fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc645de-0d67-4ce5-8d7c-67fe87dd647e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "466662f6-4d27-4c59-b661-a9595f1ab761",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8824608-209b-44b1-a913-00a427502fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b3e9db-8896-480f-9389-c2c366b99508",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb10e62-80d7-49e1-bdcc-e1a074004ada",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e254daa-f22b-4a81-ac21-06b1ee667260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9b08157-22b4-441f-824f-130d8d41554e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "220464d6-1e2d-42a1-9a7e-ce4b45d78b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b00a7c1-be85-4364-95b8-1dbdf1f898fc",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffd179f-2ca3-411e-af2b-c7568c7ccd57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3be690bd-bf6b-4a84-9956-2166fc283ed2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a20641-9e14-4ff0-9843-f0ce55e8be08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb8fbb8-5157-4a13-b0c0-17749c4bd0d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c38e1cd-fce7-4dac-b2e5-897bb56bee47",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d153c2af-fd1f-48a0-acf9-9d8096c0a223",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b4bd91c-6044-4b7f-b4e8-8ce6be2aacd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6835dce5-3131-4023-8902-c97b65b135ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f03a9c6f-06e9-446c-88cb-2cba099cc907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96d2439c-9a83-4691-bb55-2f9e9896fa93",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8847b7ce-cc82-4428-b6cb-b01d53ba1879",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8689309a-fee7-478a-8ad2-345e25d6af24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ebf5c47-f4b5-448d-8872-03ef82cae071",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5f7b1d-1f37-45b3-8ed5-6ee7b40ee945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d18d3a-281d-47e4-a8e3-ba6da0240353",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb42bf43-ce35-4db5-bc44-ef54d4b87e32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a014d3fe-086b-4507-b55f-cab782bacf7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4ed3d5-05e2-4e35-b7d3-b0af7c29d16e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26ee31a7-a719-4e20-b610-c3cb13d50da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64082527-42bb-4a9b-a3f0-7bf3f5ec493d",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14d26ed1-e20a-4dcd-8c6d-513190ed069b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edb76143-04a8-42c8-af2a-6a1777fb51a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60cbfd7b-5ef6-45fe-9d64-9133ffdc6190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da760c84-6ddc-465d-99d8-32b6f58cf192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303802e9-c402-48fb-bfd4-97ada9fc2080",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a492e237-080d-4671-a52f-da2de6227d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2452c83-7c7b-488b-985d-c36a4bfdf58a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99f5070-c5fc-4d09-84f9-bb45d856e8ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7933393d-d410-4f58-a04d-1be435d638fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1414c9b3-7849-4a95-869c-5142ef558d96",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c47e57-33fd-4284-8632-f0e9f7499eed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f7abc5d-f395-4a62-9644-61dd91f8cf52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd6a4dab-bda1-4b2c-8b29-45e1b1d1d34e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "315bc1c6-8397-4b65-a754-32160b4bf46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feea3ea2-c316-4e2a-95f3-9db39a8778ab",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5498b2f0-6e3e-41aa-8183-ecd7d3f6e9c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5982acb9-ef08-4650-bd32-3337efba3d78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e3444c8-ad15-4275-9749-354e411b688a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6bf3826-0e89-41ae-a84b-083b6235e326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7be061f2-550e-4cfa-9c09-5348c52eeac0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d51fff-b5ee-4a84-971e-986ba456bc11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e15b289-733c-4047-9ccf-f38c5b8ea9a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "613d812b-7e4c-49c0-a18b-e13520da3d04",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "229e7f07-df1f-4be8-8a36-0d238a079bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51b27b4f-0de0-4702-a463-ee99247fcb66",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cad6f7bd-cf36-4d08-9409-ad6c8b530b80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e57e284-04d3-4e20-b02a-479a30cc753e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ca07a6-2ea0-4a27-bcb9-283db47cb703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5d5701-aa3e-4c49-8d3c-d9e12d815ebd"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebb22bb2-4bb8-4d6b-9f37-33ce01814c19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fc80d144-d35f-4afb-993a-e3ee84e84bc1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "36bb01b5-af54-4133-b8fd-f7b8ec1d8a90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33a0edc9-2916-4097-8d25-79c164d5626d"
                    }
                  }
                ]
              },
              {
                "id": "d4b098d0-a340-4d3b-b37f-e4a02f564fdd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0368ca83-55fc-47c8-8821-1d8092267c7a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed25d389-0b41-43ad-8396-628ac0d51264",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "12c75740-da37-4116-88a4-63e607cf14d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d491ce-dafb-47b4-921c-09829fefb34c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d95c050-7be3-4f2c-919f-d61e8b9d7b2d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3abfebde-eede-476a-9222-f70a266898bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5a2f451e-77c2-493c-92a3-f5340e17d511"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6598d536-38f5-44a9-873c-8c2f64b4dfe2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abb56b79-eadb-41da-a63d-03c5ed067dad"
                    }
                  }
                ]
              },
              {
                "id": "abe69daa-418a-4bd2-9ac7-2f1cdddc2edb",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f9541b5d-b3a3-43cb-8d56-fa9c480f6812",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fbc083-82fb-4cd5-9a8b-902d8229e045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "fc99c596-6686-4bf4-a102-a4aa32146f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29c95efd-c9db-4597-a141-8ccf149ae7d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c660d64-991f-4838-91a5-da872f4dee07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b80b1dd8-9cf0-4d5c-b7a1-c0f0b2c27bad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c0f00355-4de3-43e1-8c0b-f93d29277e5f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f293068-db9a-4bc3-89b8-df8f84ceb6b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6cb0546c-295a-44ba-a934-341ed861f003"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "346fffaa-7e9e-4650-a5f6-eaf752644a95",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2fd23d20-755c-4f9e-afdf-3fba9413d63d"
                    }
                  }
                ]
              },
              {
                "id": "26446c00-20f5-455a-a40f-c5b9fde65c92",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "27e16678-6322-44df-9c5f-a6ac2b7ea9b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "28a2fbd3-4130-4a82-824e-8050c42a3d23"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9dfa2570-fa6a-4b2b-83a6-45add19549b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b98d853-e4fb-4630-8aad-8d79bbf6a5d8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c151a07-a528-430a-9706-a4b0ebe2e37d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "182d63d9-cf4b-4922-a3eb-93bd4125c7d5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "78931442-77ac-4e8a-9801-9d767a9b2f23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1900e9d4-fabb-4eb1-b564-c30623a7c82a"
            }
          }
        ]
      },
      {
        "id": "efaabe77-ee42-4833-93fe-efdb5db761ba",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "1d9ef7ed-7d47-4da3-86ba-8cd03fa5b7b5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "74a0079d-f8b3-4388-aa5b-aed2c5e879cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e5485e2e-4aca-46a1-9980-7c61379db74b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f8be31-73f9-4f4f-b44b-8c3be3c5605a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ee56af8d-88f1-4537-969c-e2b5b0cd11f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b81a42-9d2d-40b6-980d-c78fce70161a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b86597d-af14-4df8-a967-b8e44c3d2900"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c96ec60e-6c74-4481-bb76-1613434037cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7232daf8-91c4-4b0b-9f3b-b8e04cf3ddd8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2381b56c-6d6b-4d40-b36a-c0ff578ce14b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8b5a173e-37e6-454b-9613-1538e0e52de5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "580af363-75b1-493a-aab6-7e6febd1a908",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "fb5a167b-a29a-403f-84c3-4ef226026aae"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a45e87ac-8ad9-4340-a531-1292e9d98b46",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e04d4926-94c3-4a54-8cd9-031d0ceca06d"
            }
          }
        ]
      },
      {
        "id": "f5730a4f-f114-4526-b6ec-eb03e0f05428",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "dc3ce71e-9402-4cda-a944-339f544ece36",
            "name": "Negative Testing",
            "item": [
              {
                "id": "64efb573-9cf7-4819-93ab-04a94d1ee020",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e941614f-73c7-42f0-9596-cc1fc9ef3818",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14c1bae7-8970-4fb4-ab93-91757d9dd156",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f6e374d-4111-4edc-9695-b764939a9f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0353454f-8e19-42b9-bc85-b7dc1f393539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0573197c-a921-4b7c-8ba9-9eabcf15135d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b5a81c0-c029-421a-b69a-f92348dd843d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "744b8d45-eca9-4414-8f53-6aac12098d57"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0221243b-04e8-4ab0-8778-6b92b59de017",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b769374-4edc-41f7-96ec-3e8bd1490312"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "160b433b-11b4-49f1-ba61-d852660f0dc5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fcd2736a-83fe-44e6-a4f3-c42d704c7d1e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "307de8d9-de8a-46eb-916d-7248dfe37855",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "07101466-d5b0-495e-b440-142527a20856"
            }
          }
        ]
      },
      {
        "id": "28978ced-c0d0-4886-b560-6132aa602210",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "bdb567d6-24e7-4a67-b6db-7573ce840e28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea4dabbc-814a-40d7-8fd1-97fdf3be3159",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0bfd9730-965a-48a4-97af-e66c20799b5c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37d92b4e-a615-47c5-a418-f2a6dfca4ca2",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f840f79-cce4-4292-9521-c775ef2dcfa6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd51297b-b87c-468d-acc6-7d4913473da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ffa8fca3-84e0-4092-83ac-9112a93177fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2243c3c1-3ccd-47a8-ab47-c6bcfa3efc26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41e1e936-9718-42d8-b61d-e03162edc562"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a11f50b6-7dfd-4e63-a032-b50d27cb1816",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8aec3b5a-87ad-4c81-bce6-d9b721e531ae"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bbd70be7-d4cc-4eb0-be86-e441a8bf79a6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9f0acdca-3656-45a1-97a9-3862d49a81a9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cfc2940-57e0-4834-8709-c9c854833e10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8cf22287-f135-4177-9085-3f098260ff97"
            }
          }
        ]
      },
      {
        "id": "0fcbeac3-b821-46a1-a3c9-b41ee2991e71",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "83f3cb53-6b76-4fc1-8e95-f1da7694c3d3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b6f3318-615b-4a7b-959a-fd414c892fb6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "1d94fe09-5ffb-4377-8244-47d0b6fbebc2",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "47556efe-b58e-4963-b03a-43c43cb92584",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef808575-f138-4e68-abf2-98d1fa90c230",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.557894736842108,
      "responseMin": 2,
      "responseMax": 270,
      "responseSd": 22.5194103204747,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1707957234828,
      "completed": 1707957245799
    },
    "executions": [
      {
        "id": "becbefc3-0d2c-4cac-8b92-6f195c541162",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "97d6422f-4ac0-469c-a753-f1dd318ff21f",
          "httpRequestId": "24b71e0f-4dbd-4f96-98fb-6d4f30c9c11e"
        },
        "item": {
          "id": "becbefc3-0d2c-4cac-8b92-6f195c541162",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "96a3767d-968c-41a5-b2f9-910cd34ba3fe",
          "status": "OK",
          "code": 200,
          "responseTime": 52,
          "responseSize": 0
        }
      },
      {
        "id": "95bd287b-4ec5-412c-8f57-883842cd344c",
        "cursor": {
          "ref": "a65e203e-492e-455d-9fd9-1356c1e61413",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "144fdb16-c344-4062-9aaf-6beca6a25bca"
        },
        "item": {
          "id": "95bd287b-4ec5-412c-8f57-883842cd344c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "61ccb79a-c37f-4790-8bd8-523239ba6844",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "70564b44-9075-4a31-9309-de278d46ff16",
        "cursor": {
          "ref": "c4bb146b-c916-4ec2-9888-53c43aead3f4",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fc5c1ffe-9b66-4616-8e32-8ceafa5d7666"
        },
        "item": {
          "id": "70564b44-9075-4a31-9309-de278d46ff16",
          "name": "did_json"
        },
        "response": {
          "id": "28e21651-acc6-44ce-8488-0927967cd899",
          "status": "OK",
          "code": 200,
          "responseTime": 195,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e128d9-d40d-4288-bb3d-28966c32cac5",
        "cursor": {
          "ref": "5d129832-aa5d-4b16-aefa-9e4ce3f812d0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb1decbf-7ca9-4e08-a539-240c08f144b8"
        },
        "item": {
          "id": "17e128d9-d40d-4288-bb3d-28966c32cac5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d70a9230-0c1d-426e-8966-8b2b7e26cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e128d9-d40d-4288-bb3d-28966c32cac5",
        "cursor": {
          "ref": "5d129832-aa5d-4b16-aefa-9e4ce3f812d0",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "fb1decbf-7ca9-4e08-a539-240c08f144b8"
        },
        "item": {
          "id": "17e128d9-d40d-4288-bb3d-28966c32cac5",
          "name": "did:invalid"
        },
        "response": {
          "id": "d70a9230-0c1d-426e-8966-8b2b7e26cad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b6aab9-d9c2-4b0d-81ce-a40b800f397b",
        "cursor": {
          "ref": "b31d04a0-e6af-4a96-bd91-1f1cd1844fe9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a0539eb7-1ba4-4657-ae4f-1514ab344685"
        },
        "item": {
          "id": "f5b6aab9-d9c2-4b0d-81ce-a40b800f397b",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "1a589bbc-3ae3-4e6c-b4eb-8952723d2c52",
          "status": "Not Found",
          "code": 404,
          "responseTime": 55,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46a1c3f-10ce-4b83-802f-a82f3f9b3075",
        "cursor": {
          "ref": "df9260bf-b79c-442c-a936-359949bd5b66",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8059fe4c-5953-4eae-9511-75e49d54bf04"
        },
        "item": {
          "id": "e46a1c3f-10ce-4b83-802f-a82f3f9b3075",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c1a2d65d-06b5-4e0a-bd92-12e3c252ebc0",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d474401-ddb8-44ca-bdac-d6bf2398ec11",
        "cursor": {
          "ref": "ca5a3846-14a5-4e0e-b90c-aaeea82dafa4",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d8960796-077f-460e-aaa4-d661254c20cf"
        },
        "item": {
          "id": "0d474401-ddb8-44ca-bdac-d6bf2398ec11",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d095e3f5-d547-4497-8144-0d255b5baebc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b67474f5-7e65-4d63-a9d9-5384207e01df",
        "cursor": {
          "ref": "d33a9aa4-201b-4b81-9b4c-953ce4b1a833",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "1aa60248-b373-441c-b001-54c1708ab8e8"
        },
        "item": {
          "id": "b67474f5-7e65-4d63-a9d9-5384207e01df",
          "name": "identifiers"
        },
        "response": {
          "id": "cbba64a5-1677-4da9-a0dd-c6a621753bd0",
          "status": "OK",
          "code": 200,
          "responseTime": 82,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb660fcf-3d61-46dc-a9a1-988a8fe5ce29",
        "cursor": {
          "ref": "0bc6361b-089c-4c99-ac8d-7acb45367dba",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "44e20f9b-dd80-42dd-b932-206667e063be"
        },
        "item": {
          "id": "cb660fcf-3d61-46dc-a9a1-988a8fe5ce29",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "399f3f07-c24d-4acd-9f4c-7393cafb675a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d2574a-0fbb-40cf-bc1f-96d75169bbc6",
        "cursor": {
          "ref": "43b53047-11c5-4f38-9ebc-f924ec3bcdda",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "c42853dd-0aa2-4c72-8bd0-708bbff738c6"
        },
        "item": {
          "id": "d9d2574a-0fbb-40cf-bc1f-96d75169bbc6",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ae738b7a-aa5f-4ef4-a023-82a4d988e9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94409e35-a99c-41e4-99a5-21c979ee56e1",
        "cursor": {
          "ref": "cadbd250-48b7-43bc-a95e-f9e61272d5d7",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4fc1cf8a-047f-4fd1-9716-b95b92ec5e9e"
        },
        "item": {
          "id": "94409e35-a99c-41e4-99a5-21c979ee56e1",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "7d017fa0-5a1c-4afb-a68c-0218a2d0c444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4082743-2c9f-4059-9f85-80317b9440c9",
        "cursor": {
          "ref": "42130dce-b573-48c4-94a9-b2d01902e7cd",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "94862e77-853b-4879-aef3-9c37adf041c0"
        },
        "item": {
          "id": "f4082743-2c9f-4059-9f85-80317b9440c9",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8a44f098-a955-41e6-93cb-91ac3f97f095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb9a357a-50e1-4721-babe-803c1b80b8b5",
        "cursor": {
          "ref": "4dddb5a8-d18c-49e4-8405-34a13eb9dbc2",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "c7224a5d-6806-4813-8c13-4f34a85ee4cc"
        },
        "item": {
          "id": "bb9a357a-50e1-4721-babe-803c1b80b8b5",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "66ce9468-a326-4980-b064-4b473a527399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f4d700-a381-42b2-b273-b43fbb0533fc",
        "cursor": {
          "ref": "d657af76-80b3-4f15-b2a7-f7e9bf6ce642",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "9312b2a7-0498-4a55-8dbd-557a5b72ef60"
        },
        "item": {
          "id": "85f4d700-a381-42b2-b273-b43fbb0533fc",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "29d44465-8c5d-472f-9c39-806bdd95d0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0245f050-8705-45c6-bcd9-a725e4aa01bf",
        "cursor": {
          "ref": "77f640b9-6aeb-4312-a356-7c6e700108df",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "a8fea831-c3d7-4d3d-bbb2-4a07da26741d"
        },
        "item": {
          "id": "0245f050-8705-45c6-bcd9-a725e4aa01bf",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "65e77aa3-00ce-44b9-992c-c3792e2100f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2739c729-1bae-49bf-beef-4b9f0f4bcb13",
        "cursor": {
          "ref": "e3de7521-94b3-4286-980a-a0465100504e",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bea8c67b-7d4c-4a1f-a548-8747c21df27d"
        },
        "item": {
          "id": "2739c729-1bae-49bf-beef-4b9f0f4bcb13",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "75eda7c9-d6cf-4e02-92fc-bfac2dc411b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "022d3830-3493-4053-9227-47d06a1a6881",
        "cursor": {
          "ref": "53f4d41d-60df-4e1a-b966-68dd96235a06",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "42c820a1-8465-4baf-acb5-f8418aaad808"
        },
        "item": {
          "id": "022d3830-3493-4053-9227-47d06a1a6881",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "40092e08-dd5e-489d-a39d-3dfe5b289dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdeef9fc-ed88-4101-92fd-ecd834751935",
        "cursor": {
          "ref": "0ebd4679-59db-4949-b51b-44a4df9926fb",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "8164d88d-c1bc-4040-a736-aec85452c3c2"
        },
        "item": {
          "id": "bdeef9fc-ed88-4101-92fd-ecd834751935",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "209b34aa-495c-4bdb-88a5-6a69524142ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35a6da9-9e37-4b15-8281-25caa8bf6257",
        "cursor": {
          "ref": "a37bc2d3-8eaa-4f9c-91f9-f394c23746c5",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "aa4e6351-befc-42d9-9e84-c8d3b660cb35"
        },
        "item": {
          "id": "b35a6da9-9e37-4b15-8281-25caa8bf6257",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "4de79571-c855-4b00-9ce0-f6edb4abf99e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d05db310-a4b4-45d2-a857-58bcc364a5ec",
        "cursor": {
          "ref": "553b9095-6bd6-47bc-ab19-5195aa8554fd",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "299115d3-541d-4992-8da8-ff9302bf5645"
        },
        "item": {
          "id": "d05db310-a4b4-45d2-a857-58bcc364a5ec",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d7c9bea0-66a9-4260-8a76-6a2efbeda174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "523d5dc9-766e-4c11-84c3-ba388e093fbd",
        "cursor": {
          "ref": "7e731a0d-e347-48c3-974e-fe340625ac5a",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ea0375c8-47d3-43f6-bb09-e34b2de0ea4f"
        },
        "item": {
          "id": "523d5dc9-766e-4c11-84c3-ba388e093fbd",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "0f07621f-c931-4b9b-a4f2-66834a6a7076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6552c9cf-7adc-44f1-96af-13e868f7170c",
        "cursor": {
          "ref": "5694d4ea-fc5b-4082-961f-5f4acb23fc88",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cf37c8d2-2098-4591-99bf-9144242a1daf"
        },
        "item": {
          "id": "6552c9cf-7adc-44f1-96af-13e868f7170c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "58a9fb42-c7ae-496f-865a-bb247baffd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c1da09-474b-4d55-9b0a-2ff1d7e97224",
        "cursor": {
          "ref": "e746bbd2-c753-487d-9953-ea48789a82f3",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f4657a67-209c-4a88-ad0e-dad408cd76ab"
        },
        "item": {
          "id": "97c1da09-474b-4d55-9b0a-2ff1d7e97224",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ffc40671-3c00-4b66-920f-1b8a73e38367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44793d55-5749-4dad-897a-ef91f9d8cfb9",
        "cursor": {
          "ref": "a8758484-c8be-4db8-9501-1ba283625b61",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "283fc23b-135f-4590-bca1-de485e6f3872"
        },
        "item": {
          "id": "44793d55-5749-4dad-897a-ef91f9d8cfb9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cd9269fa-93fd-4384-8993-f4eedb0eea4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd908cc6-e99e-488c-b2f8-ac8ed72177bf",
        "cursor": {
          "ref": "bb8461da-09d3-42e5-b0ad-093842293236",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "b5186519-dbaa-43dd-b05d-5e056ed06306"
        },
        "item": {
          "id": "dd908cc6-e99e-488c-b2f8-ac8ed72177bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "e6fbfe2c-85d0-4357-bce4-9cc78ebc18f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edc4218a-0e9e-4611-8fb8-8b6023abbc14",
        "cursor": {
          "ref": "316c3a58-7c2c-492f-8716-0d313ac6e0bb",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "91913460-15da-4eb5-8e36-ff04ab67b92c"
        },
        "item": {
          "id": "edc4218a-0e9e-4611-8fb8-8b6023abbc14",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "bbd36b8e-19df-4558-af04-3b61e0481b13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbdf986b-4518-4f41-9f49-d7b5d5a6a178",
        "cursor": {
          "ref": "bf7b77a9-4e19-4d85-9f50-f1be10c6a931",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "b54eafa5-068a-4c31-8366-219fc39b312a"
        },
        "item": {
          "id": "dbdf986b-4518-4f41-9f49-d7b5d5a6a178",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "01f8d07c-d640-4d1c-8121-0a27e2168fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa369854-dee0-4308-976b-c536e83afa8b",
        "cursor": {
          "ref": "844dcfe0-80b3-495b-9cbc-c791d97258b7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "7702df31-1157-473c-b347-b5ecf78ef856"
        },
        "item": {
          "id": "aa369854-dee0-4308-976b-c536e83afa8b",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "cb1e60d4-2838-417d-a475-039c53382db3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a838594-8ee5-4b7f-a1f3-ed56fe272e3f",
        "cursor": {
          "ref": "14d72c71-0541-49c5-a6c0-9d112dbaef11",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6ac6c6d7-b934-452c-842c-77d7612ca684"
        },
        "item": {
          "id": "7a838594-8ee5-4b7f-a1f3-ed56fe272e3f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1bb5dd79-b17d-41a7-a91f-64fc04f7804b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3fe34d-6800-4ed8-a2f0-fd600e09d6d8",
        "cursor": {
          "ref": "e7ff55dd-6df1-4b7a-a5df-fc960b9088ba",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "84fab8c3-2edb-4f9f-bbe9-c373e344da48"
        },
        "item": {
          "id": "1f3fe34d-6800-4ed8-a2f0-fd600e09d6d8",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "2a431211-67f4-4d81-ac8d-6ec34c741965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf4109-7f65-4ced-938a-f2856080e85c",
        "cursor": {
          "ref": "502c0dd0-ef9d-400f-aca2-f8e0c89add65",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1c2f7902-c6f9-469e-9ff1-90332b609647"
        },
        "item": {
          "id": "fbdf4109-7f65-4ced-938a-f2856080e85c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "09c2a145-2581-4fba-b0a1-67bafd2d97b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581efeec-c1de-48ab-9021-58e74826bbc1",
        "cursor": {
          "ref": "0668eb73-db6f-48d2-9b10-70d5128b1a71",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c7f7bdb2-c79a-4057-adf3-6263c01c5684"
        },
        "item": {
          "id": "581efeec-c1de-48ab-9021-58e74826bbc1",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "7f5b2a7c-47a3-4db3-a59b-759c89239a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad043238-da3b-4b26-8fa6-61a9ccc1f872",
        "cursor": {
          "ref": "72417426-9ebb-46b3-a338-db00ce4a47f8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "e6baead1-2159-484f-864d-3278d721b36f"
        },
        "item": {
          "id": "ad043238-da3b-4b26-8fa6-61a9ccc1f872",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "0e2c5e1f-7480-4513-a2fb-9022cf3ab3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0239be-e329-4d4b-8192-706129822fae",
        "cursor": {
          "ref": "ee62aaef-50d3-4e08-a52e-fb01f19d4786",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "023101d6-487b-4720-81ac-ec61227645c2"
        },
        "item": {
          "id": "6c0239be-e329-4d4b-8192-706129822fae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "6166c7a8-412b-4399-8201-fe6adea8d0f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35f4a23-71c0-4d4a-b2f2-46f54e6e5555",
        "cursor": {
          "ref": "bc5514f4-f832-4a77-ac48-5ba0c453a0c4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "e5b0e31a-951c-4183-b887-02c11d10ad7a"
        },
        "item": {
          "id": "f35f4a23-71c0-4d4a-b2f2-46f54e6e5555",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5b96ec9f-193a-4159-8c1a-ccefcab73cd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f851266c-34e9-46e8-89d2-ef185cca78bb",
        "cursor": {
          "ref": "065c45fe-c5a0-4997-86a2-a059e6e2d1ed",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "66bf97d8-be70-488b-89e6-d37b3a0387c6"
        },
        "item": {
          "id": "f851266c-34e9-46e8-89d2-ef185cca78bb",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "acf6d8c1-c3eb-456f-a024-1603ba1db518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93700f7e-c193-46f8-b9d8-db4bae4bfd69",
        "cursor": {
          "ref": "6fe4b065-b9b7-4cbf-bf96-180540e45643",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9592da8a-f001-437d-8d14-9acc637b7b6c"
        },
        "item": {
          "id": "93700f7e-c193-46f8-b9d8-db4bae4bfd69",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "07f28afe-f214-4839-ba68-2cd0fbba1a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "518d0814-c621-4bc0-8cb1-4bf13a91b953",
        "cursor": {
          "ref": "0e7c94e3-237f-4c68-bf1a-bcca067ffe3f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d03c2d2c-7985-4a66-b98b-60a371ce7359"
        },
        "item": {
          "id": "518d0814-c621-4bc0-8cb1-4bf13a91b953",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "d2f3c7f9-ea47-4077-bf8d-8d74cecea1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc52c1b-4c28-4a3d-a1e9-b77b1e5b444d",
        "cursor": {
          "ref": "3059b092-ece6-4d59-87ac-2822b510702e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "66a46fc6-2930-4fe4-b61b-fbdbe6e29c80"
        },
        "item": {
          "id": "cfc52c1b-4c28-4a3d-a1e9-b77b1e5b444d",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "c5d66edd-4bd0-4bb5-b391-c1a4ebcb6da3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce9882f2-bda5-40df-a699-024bf8bd9055",
        "cursor": {
          "ref": "5c111396-7a18-4e24-a5bf-36df047f9f46",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "fdd08d2f-f7fa-459c-9717-325945f3d331"
        },
        "item": {
          "id": "ce9882f2-bda5-40df-a699-024bf8bd9055",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "098894cb-5093-405a-b5f0-04f96a791492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8466c4-2e99-43c7-a255-4cbba7518a85",
        "cursor": {
          "ref": "2090e5c3-09c5-481e-a1c2-c254d0fbd0d2",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "acf7a5d9-36b3-41c4-9bfa-4329f8d3bb50"
        },
        "item": {
          "id": "be8466c4-2e99-43c7-a255-4cbba7518a85",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dbcddedf-b721-4bbd-95b4-2118eb6942d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e21896-7af8-4830-b4c4-74ca30c50ca0",
        "cursor": {
          "ref": "c1218ce2-bf8b-42fa-aa41-7a67ce01bf28",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "b5a644e4-60e0-47c1-b2ed-38a8659289b6"
        },
        "item": {
          "id": "94e21896-7af8-4830-b4c4-74ca30c50ca0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "8abce1a1-b341-4dc8-9ea2-22d1d9dd5411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8354466-a66f-4e50-9587-a65a4b0cd0f8",
        "cursor": {
          "ref": "afe078a4-ccd3-4d33-a2b2-0f194ebacc4a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "52b2690d-407d-43a4-9ac1-b24fc3bfe7e4"
        },
        "item": {
          "id": "c8354466-a66f-4e50-9587-a65a4b0cd0f8",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c3b6f867-a13d-4289-85e2-5cc7e84b11f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1387dac-1ac4-4991-a5a0-058283da6cd0",
        "cursor": {
          "ref": "695237d2-1352-4f06-ac7e-d2d2519012e7",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "045d3388-2136-4ecc-9475-ea7aa9d58338"
        },
        "item": {
          "id": "f1387dac-1ac4-4991-a5a0-058283da6cd0",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "23208792-c5c7-49f3-8957-e710be8f2a7f",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 27,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8fcbc9-62f8-46e4-8c71-ec6d42adc2b0",
        "cursor": {
          "ref": "f056549a-d700-4db6-b8da-85ca781be475",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f9e55ff6-9399-4a18-8668-d8cd11de9ccb"
        },
        "item": {
          "id": "7c8fcbc9-62f8-46e4-8c71-ec6d42adc2b0",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1f9ac6cd-570e-4a29-9bff-4d6860269893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd42c043-236e-443a-9285-808089a63feb",
        "cursor": {
          "ref": "72092096-6da6-4b38-8fea-12be1bb10941",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9040e7f6-c7fa-4126-8559-73371539ebfd"
        },
        "item": {
          "id": "dd42c043-236e-443a-9285-808089a63feb",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "68029bdb-c023-463a-9d2a-9bc227c27bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97733b60-265e-46f9-bdca-155421ebd8f9",
        "cursor": {
          "ref": "e525bf10-39a4-489b-952a-927b36e59ab2",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "06692816-034c-4f11-9315-d4e00c4f12e1"
        },
        "item": {
          "id": "97733b60-265e-46f9-bdca-155421ebd8f9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f83ef12a-8d86-4949-b9dd-06b906385b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86bae6ba-03e4-46dd-8a1b-86b4a8bff9e1",
        "cursor": {
          "ref": "4cdb4506-fae1-4d97-8a77-162e4c3f2631",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "be57c67a-69fa-4f2e-a3ca-8a787dfc17a2"
        },
        "item": {
          "id": "86bae6ba-03e4-46dd-8a1b-86b4a8bff9e1",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "fc67b365-eb96-4e9d-9c30-b847c98322c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe679f-471b-42af-94c4-74396e4d60a7",
        "cursor": {
          "ref": "439a7337-d671-4f66-b6aa-7e6bc74ae7a0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "694908fe-9633-49b1-8d3e-b7e9c9cb7b69"
        },
        "item": {
          "id": "e1fe679f-471b-42af-94c4-74396e4d60a7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "31bbbb66-4bd4-4277-a0a9-46a681394333",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62c80737-e7b3-4be9-a500-42422389636f",
        "cursor": {
          "ref": "422605c1-691a-45de-9d11-5f9e2266bcd6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e6aa341d-d4ba-4c2e-83ae-65fadbade9bf"
        },
        "item": {
          "id": "62c80737-e7b3-4be9-a500-42422389636f",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6936fd81-4bfd-4d99-9669-78a0ea0dcbda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09ef69c-5684-46ca-a083-503eae7e813b",
        "cursor": {
          "ref": "b49e6d20-3566-4517-866c-f772b4529189",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "2ede4677-bc53-403f-9203-eb98ac16f608"
        },
        "item": {
          "id": "e09ef69c-5684-46ca-a083-503eae7e813b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "161085d2-f532-4fa0-aaf3-89067335e075",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 17,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bef7d87-3072-4483-a0b7-60027c61719f",
        "cursor": {
          "ref": "53c4b602-4571-42ef-a6fc-650065ae06b9",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4c89e69b-c860-4704-b477-57f7b384b20e"
        },
        "item": {
          "id": "7bef7d87-3072-4483-a0b7-60027c61719f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "84b6512f-77f2-46af-a9c1-b01f19d9b0cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be18d819-e03c-4cfa-a488-b5709e67c0b6",
        "cursor": {
          "ref": "483c0d39-dae0-4c7f-a578-e22311e02715",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "8e702e34-cf63-40c2-8c4f-5caace04b3c5"
        },
        "item": {
          "id": "be18d819-e03c-4cfa-a488-b5709e67c0b6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a2628200-300a-4f5c-9180-2d709cb19754",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67cd7c5c-4ba8-4446-bb07-90f1f5cc6d25",
        "cursor": {
          "ref": "79aeae8c-897d-42d2-b48e-af8bf7e3b860",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d8df14fb-93b9-4750-882c-7324e748a269"
        },
        "item": {
          "id": "67cd7c5c-4ba8-4446-bb07-90f1f5cc6d25",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "332b337d-dbca-47a2-b237-639d87856b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487fce4c-b1c7-470f-b062-a116e5a8102b",
        "cursor": {
          "ref": "06dd220d-34f2-4026-b071-315ac4d113c0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "ef38e7e8-2cdd-4752-a391-da20538cc460"
        },
        "item": {
          "id": "487fce4c-b1c7-470f-b062-a116e5a8102b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "8486c226-dfd9-420b-b198-9cb702d15492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e1e50c8-ab20-4503-98e0-0a7bdbd334fe",
        "cursor": {
          "ref": "fe11e876-1b8d-4651-a7d7-98ca4c444d45",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8a5c5f3b-5653-44e2-ab97-17f048a85f3d"
        },
        "item": {
          "id": "2e1e50c8-ab20-4503-98e0-0a7bdbd334fe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "978784b8-1318-422b-9286-3fe2917aebf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5797b75-7197-44a4-ac3d-751fe744a7ba",
        "cursor": {
          "ref": "36d64aed-ae3d-4963-9ba3-8adba742b2a4",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "95561cbe-cee3-44b1-b1f0-2d5c3ff25404"
        },
        "item": {
          "id": "b5797b75-7197-44a4-ac3d-751fe744a7ba",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "96ebd95b-4ea0-4209-86fb-fb46a1e690b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8986f16-40b4-4cf2-b572-698f793c053e",
        "cursor": {
          "ref": "9dbc6157-9a12-46a8-84fc-e05710d069f9",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fb0fe7e6-625b-4c16-b725-11ed697ed69a"
        },
        "item": {
          "id": "d8986f16-40b4-4cf2-b572-698f793c053e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f54a4268-24f0-4c3a-a745-7d9819b782e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41f44cd2-71e2-4282-88b1-20cdb26cb237",
        "cursor": {
          "ref": "e3841ede-9e00-493a-8f08-807aca00fcb5",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "60b5d219-0e56-4346-bbdc-a4302a9060d3"
        },
        "item": {
          "id": "41f44cd2-71e2-4282-88b1-20cdb26cb237",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0d01493e-f9d9-4239-8793-50b21ab8da27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d5f616-afe6-4931-8e4e-b502ae6da5e9",
        "cursor": {
          "ref": "80f3c662-3588-401f-acb1-b72d6605986a",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef8e4f13-0029-4da6-ae10-6dd6a1c7718b"
        },
        "item": {
          "id": "63d5f616-afe6-4931-8e4e-b502ae6da5e9",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "72b48dab-fc8d-4b40-871e-016acad00ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0a13ba-b69f-4715-8548-84611ff5c88b",
        "cursor": {
          "ref": "6b6eb83a-c202-40a7-933f-39850f802777",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "33249e69-c45d-4608-abe1-c342f863bec3"
        },
        "item": {
          "id": "4a0a13ba-b69f-4715-8548-84611ff5c88b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2d07557b-4b99-40fa-98bf-86c6fe68722a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dfd474b-45a5-4ac1-8ee4-f7c090bb38c4",
        "cursor": {
          "ref": "b15f0303-4537-4d07-9eb9-28e1fb60ae7f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f8f6f6e1-4d42-4c4a-9e64-10ae76357e8c"
        },
        "item": {
          "id": "0dfd474b-45a5-4ac1-8ee4-f7c090bb38c4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3956190f-884d-4a88-bc65-2afce8648708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f53f1ab-dab9-4b01-a62b-a54a208135f4",
        "cursor": {
          "ref": "a1043b48-3094-42da-9843-17b2ba936ed1",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "999b7367-1852-4430-bd69-0127ede23533"
        },
        "item": {
          "id": "0f53f1ab-dab9-4b01-a62b-a54a208135f4",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "5c128cb1-4462-4adb-ae5e-d43227ff9341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87bfdf2a-631c-4c75-adc9-fb8dc7a71ba2",
        "cursor": {
          "ref": "3508ce4c-3376-454e-b42f-9b47b3dc1342",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "3d9fcddb-05fb-4b23-954c-f0755af2bf1f"
        },
        "item": {
          "id": "87bfdf2a-631c-4c75-adc9-fb8dc7a71ba2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "874e56bd-6922-4af5-9dc1-3e7fe7eab1f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "487819e6-9c2e-49dd-81af-020026b99dd8",
        "cursor": {
          "ref": "ad06eb70-b77e-4b7d-a769-0584fa073dcc",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d0624728-9478-43b6-a487-ebd8a423bd77"
        },
        "item": {
          "id": "487819e6-9c2e-49dd-81af-020026b99dd8",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "36c414f5-6021-4fbd-a543-7dbad76d11bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13ee2c0-5a91-47e4-b959-6145f299dd85",
        "cursor": {
          "ref": "9e85986c-d052-49f1-8e7e-c1fa62cdbc9a",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "0e3c733b-7303-49ac-a196-ba95ce6d1525"
        },
        "item": {
          "id": "c13ee2c0-5a91-47e4-b959-6145f299dd85",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "401f8e56-066d-48d2-8332-d67fffe792c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad15cc2-4571-4176-9378-abe31a67d721",
        "cursor": {
          "ref": "4479258a-87cf-4334-a9ab-bbb19a8742b2",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bc809560-e2f1-47f7-a94f-fea32072bb5d"
        },
        "item": {
          "id": "5ad15cc2-4571-4176-9378-abe31a67d721",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "513e7994-c9c5-43ab-9e22-e9357dce041d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e622f0e-17ed-4989-b312-1cee76744ab7",
        "cursor": {
          "ref": "cf38c115-c0ed-45c6-97dc-fbbb257bc166",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4f1c3cb2-697a-4eb7-ba04-bde91c0f252b"
        },
        "item": {
          "id": "3e622f0e-17ed-4989-b312-1cee76744ab7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c5968c1c-a0c1-4975-bfd8-8ee0f67c4bac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb46e58-9a2e-480d-a2ae-4d13f32f82f1",
        "cursor": {
          "ref": "cd99c95c-153d-4a01-9b14-c4b47ddd4d25",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "affb3691-b29e-41d0-85fa-1ab5f2c593c3"
        },
        "item": {
          "id": "9bb46e58-9a2e-480d-a2ae-4d13f32f82f1",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5ea3dbe3-3610-46b9-88c2-a9f1fa6e0ed7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e52ea1-e5df-4b6b-8543-b4d0f4587605",
        "cursor": {
          "ref": "cde0803b-a9d7-4f05-9c5a-88ec59207bfa",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "fb707183-f0f0-4675-9eda-1897351fc411"
        },
        "item": {
          "id": "d1e52ea1-e5df-4b6b-8543-b4d0f4587605",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "92bd342d-4c77-4479-9e42-c4432e1c1be1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de2e078-5f7c-4230-9db7-d64273183862",
        "cursor": {
          "ref": "a240d4d9-68da-437b-b097-a8d7a51793b6",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "54582fe7-52b2-467d-b8d2-911ba9a90361"
        },
        "item": {
          "id": "7de2e078-5f7c-4230-9db7-d64273183862",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "beb8f721-8626-4e1b-9b9b-d53c764ac979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb697a2a-33ae-4cc3-bb2c-8abbe7530d58",
        "cursor": {
          "ref": "60a7dc24-50ae-4ba2-83cd-d65eafdbee98",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3aa019db-430e-45ed-a071-e22802d0e4cd"
        },
        "item": {
          "id": "cb697a2a-33ae-4cc3-bb2c-8abbe7530d58",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "46fd728a-c5a4-4d26-b547-4d7b526306b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41ed729d-e3e8-468e-8d07-6088179fad46",
        "cursor": {
          "ref": "476f27a2-457e-4df4-b9f5-cd0215141a56",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "96351357-3c33-490e-940c-91392e6b368a"
        },
        "item": {
          "id": "41ed729d-e3e8-468e-8d07-6088179fad46",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "507a29eb-aa52-4ac0-a698-d35a24341138",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ec6f67-c950-4e26-a34e-9073008516a7",
        "cursor": {
          "ref": "81ce6815-2f6e-49a6-a552-a69574f5ad07",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c92e5116-1ecc-4f6c-b089-a8451c0f1e65"
        },
        "item": {
          "id": "87ec6f67-c950-4e26-a34e-9073008516a7",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3df3f224-0f6f-4936-9eeb-065529d9a1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22394305-8476-4829-ab6a-6afa1f335785",
        "cursor": {
          "ref": "06cb8f7d-a391-4568-980f-7e3d9e4efdb2",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "99633d25-dcc5-4da6-a3e6-e228d69baee7"
        },
        "item": {
          "id": "22394305-8476-4829-ab6a-6afa1f335785",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "3c9a6601-78f6-4d69-a4eb-9116c9bd4ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d4d116-ad07-481e-8ff7-f4756016e5b1",
        "cursor": {
          "ref": "2fe94fc0-7174-43db-9e4e-6c85751a50d1",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "dcff02bc-5a9b-4ad4-85a3-6b936cc55035"
        },
        "item": {
          "id": "36d4d116-ad07-481e-8ff7-f4756016e5b1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "347b3c12-2e17-4145-abdb-18a9506efaea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7c1bc2-03ab-4a57-95d0-f269234496c8",
        "cursor": {
          "ref": "fd6c832b-c55e-4947-a4d1-77066c8a573c",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "83fe13e3-c114-4831-ac32-b155b41f15ca"
        },
        "item": {
          "id": "bb7c1bc2-03ab-4a57-95d0-f269234496c8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ea185b79-9ee2-4eeb-9db7-87505824d953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc8b04c-eec6-4e29-babe-84dab592cd42",
        "cursor": {
          "ref": "512cb53c-b1eb-4c13-946e-94ae26c1f112",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "96c04860-9b32-480f-9e19-049431be592f"
        },
        "item": {
          "id": "2fc8b04c-eec6-4e29-babe-84dab592cd42",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c3d0730d-8a48-4c53-bce6-4d026d0fb0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32f8d317-51b6-44d0-8556-7bc68bc43ba2",
        "cursor": {
          "ref": "7733c31f-be0f-487d-be3b-fb85be7a43bf",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f1081595-4350-4eaa-881b-ee28ea810f73"
        },
        "item": {
          "id": "32f8d317-51b6-44d0-8556-7bc68bc43ba2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9128d5bb-6332-4d5f-849b-3cb2e8498965",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe422367-d5e0-4daf-a172-55919d17440b",
        "cursor": {
          "ref": "fe09a03c-8616-4d62-8b2a-36217107cd16",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7403057e-2164-4ff2-a5cc-2364047907ad"
        },
        "item": {
          "id": "fe422367-d5e0-4daf-a172-55919d17440b",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "cc4706b3-e032-424f-9acf-0b460bbbd776",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1b788a-2880-4dbf-9053-88043c8e6471",
        "cursor": {
          "ref": "a6086839-e73f-42a6-b923-bf98dd02dd75",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "553f9919-1892-4c48-aff9-1e611bb535f3"
        },
        "item": {
          "id": "7b1b788a-2880-4dbf-9053-88043c8e6471",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa7d6f0f-c99c-4809-904f-89c7e080dec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4113f03d-ad13-49a4-9d44-bec408582365",
        "cursor": {
          "ref": "0cfafb99-3969-4c4d-bc5a-0ab368685b76",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0035ee83-7067-4a9d-91b7-f7f449901537"
        },
        "item": {
          "id": "4113f03d-ad13-49a4-9d44-bec408582365",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "05163575-5fbd-462a-9e17-21c7e43d9bba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5056b57e-d6ae-4574-a031-56afa7781b14",
        "cursor": {
          "ref": "4dcbf3a4-78ab-4806-b16a-f2335f2aa0bf",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "befec52f-56fe-4f53-91fc-163d3fb6b6fc"
        },
        "item": {
          "id": "5056b57e-d6ae-4574-a031-56afa7781b14",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a7abb2eb-4fa0-47f3-94da-cd022efeac01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cb16af-4305-4c5e-9fe5-0e2f817efe24",
        "cursor": {
          "ref": "6831f950-9bb9-4589-817a-709207eea0e7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2fdefc13-707e-4565-b8a3-b4871e743a2b"
        },
        "item": {
          "id": "40cb16af-4305-4c5e-9fe5-0e2f817efe24",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "a7fa38ec-7a63-4e41-a0c8-3d3aefce9ebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fcfa15e-c5ef-4ea5-ac63-923045b7fa75",
        "cursor": {
          "ref": "f798cd93-084a-45a4-a2de-96047d9944d1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5b0e8794-fa2e-4858-8cc4-adbdfcb0a69f"
        },
        "item": {
          "id": "0fcfa15e-c5ef-4ea5-ac63-923045b7fa75",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "244b444f-1b2e-4def-901b-6897f57e06f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3f8976-e2f3-40ec-b27a-744e555e4586",
        "cursor": {
          "ref": "4d93963d-79c3-4b2e-a9eb-d31b4989ab0c",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "407a6fb0-17be-4a77-9e41-5174908f50c2"
        },
        "item": {
          "id": "ca3f8976-e2f3-40ec-b27a-744e555e4586",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "741a1f2f-b4e4-4871-bbb2-c5bf1c45b3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "550e24fb-870d-410f-bd82-6a3929e11e58",
        "cursor": {
          "ref": "98351b72-f52b-4943-85ea-b0d3e839b46d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "0600060a-f41d-4962-9808-0f1cb3e19396"
        },
        "item": {
          "id": "550e24fb-870d-410f-bd82-6a3929e11e58",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dd980ce4-337a-487d-9041-869e66290226",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1628b260-568b-4eb3-9341-ae0de5cbb218",
        "cursor": {
          "ref": "ea1cbe00-4cde-4cbc-a29b-72cfbbd6c11a",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e4312cbb-f454-4092-9e4f-e8d4a7f1a611"
        },
        "item": {
          "id": "1628b260-568b-4eb3-9341-ae0de5cbb218",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ddf8c6fa-800a-44cd-82f4-9fce7d486d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cbdd497-96d3-410d-ab76-2132883fdbba",
        "cursor": {
          "ref": "d0b232d2-ef2b-4f1a-9750-656cbb9f7b55",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "1ae11593-9089-40d5-951d-dd31b23b8ca5"
        },
        "item": {
          "id": "6cbdd497-96d3-410d-ab76-2132883fdbba",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "5deadb20-acc9-4d74-bc86-70ee4f8eb036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5cc16d-824c-4331-9ee2-70390e34639c",
        "cursor": {
          "ref": "7c2811b7-3346-4fe7-a9e6-e19b825d21c1",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "9ed9a129-4197-4440-b3d5-f6547e5cb877"
        },
        "item": {
          "id": "7c5cc16d-824c-4331-9ee2-70390e34639c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b4661226-eaf9-4da9-90f5-1592d3c15f71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec91f8da-5173-43f3-9d2a-03a1427824fe",
        "cursor": {
          "ref": "ab03545c-b4b9-4f94-8a6e-72d1fe8b9e6e",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ede2d92a-4182-4a9b-b718-9bc7930be5dd"
        },
        "item": {
          "id": "ec91f8da-5173-43f3-9d2a-03a1427824fe",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2b323f68-eb98-42dc-9c23-c46754d1f563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd68fe2a-ce8f-47f9-8ec8-0f1ae6e59283",
        "cursor": {
          "ref": "b05bfdc5-3432-4555-8f24-04ffc19eaa5b",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "3324c019-64eb-4efe-b9f5-bc254b29690f"
        },
        "item": {
          "id": "cd68fe2a-ce8f-47f9-8ec8-0f1ae6e59283",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8956aded-c1d1-4083-bc8c-ccf531103db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c510124-5e55-4309-839c-fc321c53b862",
        "cursor": {
          "ref": "59de02c0-8d06-4c70-9aab-1df2600d05c0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "69749bb1-0189-4ddb-95b1-2c3e69a4f3cb"
        },
        "item": {
          "id": "6c510124-5e55-4309-839c-fc321c53b862",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bc6dc9d7-88d4-4c40-a710-ad2dabd41b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29fffc54-58be-4451-8aae-9d1a9d45fc17",
        "cursor": {
          "ref": "c8b45f2c-955f-4137-a6b1-b6de3ee636e6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bcc5cc5a-1fb3-419a-8ceb-852a789023d9"
        },
        "item": {
          "id": "29fffc54-58be-4451-8aae-9d1a9d45fc17",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "ff20cf19-6934-46fa-99a5-737952c8fcd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e894b39-2453-48fb-97db-645aa8861533",
        "cursor": {
          "ref": "a6fa8127-a796-43d1-9b26-0511c3d5d388",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6ba86549-ee9a-4965-9813-d4284849a82f"
        },
        "item": {
          "id": "4e894b39-2453-48fb-97db-645aa8861533",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "910d06fd-d722-4b02-9452-b8e6af503d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca1441f6-40a8-4f4c-9fc1-c590b6b15708",
        "cursor": {
          "ref": "91c28d64-353b-4870-b912-241cd6720db5",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3797c9d4-2bf6-4aff-966b-496ac3525143"
        },
        "item": {
          "id": "ca1441f6-40a8-4f4c-9fc1-c590b6b15708",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d7be5029-d254-4ef0-9d38-e169975cb270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782d3c5b-be5c-4c9d-8e58-d026d14e5d27",
        "cursor": {
          "ref": "26d3ae65-546e-4eaf-b2ef-2537cc7c0674",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "633f5b53-f3a4-4475-9f8c-df38c6e87f0d"
        },
        "item": {
          "id": "782d3c5b-be5c-4c9d-8e58-d026d14e5d27",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f1a75968-38b2-407f-8d4b-f6556940ef43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3365a422-176b-4253-b128-7ee0b09020ec",
        "cursor": {
          "ref": "97ae2087-31bc-440d-b527-15ef19f0c3c2",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "10d1c683-8a46-4c23-bfac-2a8f2fd49022"
        },
        "item": {
          "id": "3365a422-176b-4253-b128-7ee0b09020ec",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "988cc5ea-c6da-4814-92d7-79a14aa7026b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e21ae2e-3987-4df4-885a-a1d7935fcf09",
        "cursor": {
          "ref": "010aca28-0fe5-4294-a5c3-d78a16ced31b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e8a0d164-ee6f-4b92-b4af-84637c9ccc55"
        },
        "item": {
          "id": "8e21ae2e-3987-4df4-885a-a1d7935fcf09",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "225d73ea-2c29-4937-ba24-ccd9846ffca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8281770-f917-4b21-96e7-679335272a4d",
        "cursor": {
          "ref": "3d41a023-8678-49d0-bbfd-ae874576b2f5",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7ed2db35-0ffa-4c73-a861-51ea2baf0726"
        },
        "item": {
          "id": "f8281770-f917-4b21-96e7-679335272a4d",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a8ec64c5-98f3-40bd-b490-21f48704cb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab009ff-ad87-40f5-a203-ae715025cfa9",
        "cursor": {
          "ref": "2b2ab268-f476-4ad8-bbee-cab31536cedd",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2035712e-f7e5-454c-aa09-5b7e74b5c106"
        },
        "item": {
          "id": "8ab009ff-ad87-40f5-a203-ae715025cfa9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4e82d563-bded-4c89-a348-ca3144a3d8af",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e177116e-dc26-400f-9ee8-018d8cc06dd0",
        "cursor": {
          "ref": "0347bea8-a215-4674-9c97-f520e1271cea",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b40b9cd9-97f4-4b25-b372-3d20a7d58ed7"
        },
        "item": {
          "id": "e177116e-dc26-400f-9ee8-018d8cc06dd0",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "f5625ba6-efd3-4ae7-b7e9-b721ab7fa709",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e071c9be-89e0-4ed2-a4b5-322029b6617a",
        "cursor": {
          "ref": "cfd635b1-a3e9-4e30-a79d-20dda502bc86",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1fceb088-d77f-4a57-8938-148ca0975af0"
        },
        "item": {
          "id": "e071c9be-89e0-4ed2-a4b5-322029b6617a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "85c8027b-a633-4c15-9aac-6b1fce7f26c5",
          "status": "Created",
          "code": 201,
          "responseTime": 147,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "84110247-25e1-46ae-a3e7-7b36482993e9",
        "cursor": {
          "ref": "813acb4c-4fb5-4e76-945c-3e73ba28a39f",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "31314b17-3dc5-4567-8549-734dc2e86cbc"
        },
        "item": {
          "id": "84110247-25e1-46ae-a3e7-7b36482993e9",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a6d48aa1-c011-4974-84c5-6dd01df6a8d7",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b316f81-9ebb-4304-becc-e097a8bf02a6",
        "cursor": {
          "ref": "a3ababfb-1e8f-489b-adc9-37ffe625a91b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ed5d8f09-ca42-4e95-b764-d15478619044"
        },
        "item": {
          "id": "8b316f81-9ebb-4304-becc-e097a8bf02a6",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d2e520f5-87bb-4c36-b056-7ac116f6d016",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "778fb555-1550-4e48-be68-b99d88ad922c",
        "cursor": {
          "ref": "3acfc2ae-d333-4579-8773-6a042907deaf",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "d1ffa84f-fdc6-4216-bc31-9f819f932a28"
        },
        "item": {
          "id": "778fb555-1550-4e48-be68-b99d88ad922c",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "050c8e6d-22af-4469-845c-086c6d0a9ac6",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "79023616-903f-4f8b-90c0-421c20ec76bc",
        "cursor": {
          "ref": "d9391cd1-bc3a-4c3d-9eaf-c8d8863c9390",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "007cfa21-b5ed-4711-89de-cd53b3d3cc08"
        },
        "item": {
          "id": "79023616-903f-4f8b-90c0-421c20ec76bc",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "309777ae-d1b6-437c-9580-4d8d3bb8cf28",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "eab7e9e6-ba18-4d0f-878a-aa7c8583cbaa",
        "cursor": {
          "ref": "e1fa5a15-13c4-44a8-90ed-fcc77954af64",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "94987825-e928-477e-824b-28996e06d9af"
        },
        "item": {
          "id": "eab7e9e6-ba18-4d0f-878a-aa7c8583cbaa",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "c86b5ad2-f911-47ed-9dad-2737a3e3e4d2",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74b33d2-d86d-46d3-9b8a-8b1cbd992f6d",
        "cursor": {
          "ref": "0992e0ba-7124-4aad-b59e-a55aefacfff5",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "583d44a3-bf8d-4429-bd4b-4de6cae93042"
        },
        "item": {
          "id": "c74b33d2-d86d-46d3-9b8a-8b1cbd992f6d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "61442d59-40bd-43bf-a518-0a4704593fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb3f44f-b1ce-4f8a-9f56-91a78bbf1822",
        "cursor": {
          "ref": "2319a962-74ff-4d8d-b3f8-f4bb7feeceb9",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "138a4940-91e8-403a-a199-07203b7e8998"
        },
        "item": {
          "id": "dbb3f44f-b1ce-4f8a-9f56-91a78bbf1822",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0055ae65-cd84-4c2c-b2e1-3cf0dc00d27a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49430cce-6680-4476-93de-d1729505a8aa",
        "cursor": {
          "ref": "2dcfada3-1bbf-4a4b-83b7-84e4ccdf6732",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a6cdea20-3c6c-4d84-929f-ad9c22e4e9e1"
        },
        "item": {
          "id": "49430cce-6680-4476-93de-d1729505a8aa",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "55d4902c-a284-44ea-a213-5e0ae9eb7e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f491c7-59a9-4eae-b69a-795e276d8e43",
        "cursor": {
          "ref": "9df30ccf-2f74-4a2e-a9df-3fbd2518619e",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "9beaa357-e215-4bea-be4d-8edb08737f55"
        },
        "item": {
          "id": "01f491c7-59a9-4eae-b69a-795e276d8e43",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b111b1c0-4edb-4343-bd8f-f67c8a0b6f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12be24b8-5e2b-4e94-84c4-985c322430c5",
        "cursor": {
          "ref": "93654eaa-4959-424b-8eb2-ed6d776c83ea",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "df80e0cc-63a9-414c-a07d-6a5f10703c49"
        },
        "item": {
          "id": "12be24b8-5e2b-4e94-84c4-985c322430c5",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aadff463-8ab5-4d96-891b-2675f453ceb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76559a6-21c2-45b9-9058-067cf0aa7ba3",
        "cursor": {
          "ref": "7af9cee4-dcf0-486a-bbe3-0c39d65edf2a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "675e4e46-5132-4269-a69d-e9e839e183d6"
        },
        "item": {
          "id": "a76559a6-21c2-45b9-9058-067cf0aa7ba3",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "93788b38-9dc6-4890-be3d-42082ad44fc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dd6f79-3b97-452e-9b7b-65930eacdc20",
        "cursor": {
          "ref": "f00ae6c5-5a05-4395-a440-9013b89579c0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "7b95f687-f3c3-4423-8d00-d6e2dbeaeb68"
        },
        "item": {
          "id": "33dd6f79-3b97-452e-9b7b-65930eacdc20",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "71803dff-e396-4efe-a095-b2258ca6952b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff1ca00-a895-41a7-a225-8f2385a1b668",
        "cursor": {
          "ref": "ed322ea4-45d2-4edc-9e44-fd2292588626",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5c9ff604-a602-445d-b653-0fd1f379fdfb"
        },
        "item": {
          "id": "1ff1ca00-a895-41a7-a225-8f2385a1b668",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1f468d3c-6adb-4eeb-b648-fc02d33267a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3c0772-51c5-4748-8266-ad282da6749f",
        "cursor": {
          "ref": "ecfc3c52-701f-42d9-bd7a-e3aae7f92ee7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "52e763ad-2427-4b61-a20a-5c7f14583d2c"
        },
        "item": {
          "id": "0a3c0772-51c5-4748-8266-ad282da6749f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "421f2c1e-b8c4-45a2-892e-32cfd9a06210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf285056-24ae-42fc-a383-5b4cb90c6036",
        "cursor": {
          "ref": "90bca08c-8172-4133-a53b-d36e3ae076ca",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c541e0f9-d9d6-4150-851b-98446958ef0c"
        },
        "item": {
          "id": "cf285056-24ae-42fc-a383-5b4cb90c6036",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ebe133bd-8ecf-4bce-85f5-a11202eb845b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26ba573-2f13-4d19-825e-9eb66e9b5851",
        "cursor": {
          "ref": "8edb4563-8cc5-44f4-a6e8-92deee24c9b9",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "662e43aa-ff3e-4e08-8d6c-f174380d909b"
        },
        "item": {
          "id": "d26ba573-2f13-4d19-825e-9eb66e9b5851",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "3ece383f-7c55-40cb-97ee-0042cc66cca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47afa2b2-4994-4a5e-8f7f-b6a85398476c",
        "cursor": {
          "ref": "7831a138-f838-4c10-b1ee-04d2825e4d8f",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e3aa7e56-ca42-4afd-802f-bc7c4ae16f43"
        },
        "item": {
          "id": "47afa2b2-4994-4a5e-8f7f-b6a85398476c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d04fffb3-b31d-4087-b56d-f107f8d8c74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb26847-1699-4337-b57a-402c92cf5714",
        "cursor": {
          "ref": "911d5f33-35d2-46bd-80e2-7ecc998ff357",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e235393a-d6ec-4eb8-b6ba-bac68f7c16b9"
        },
        "item": {
          "id": "ecb26847-1699-4337-b57a-402c92cf5714",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "120f250a-096b-42e5-a206-d39be28eb9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b4609e-bad7-4bd7-8caf-c3f8f02fdb2d",
        "cursor": {
          "ref": "86eeb7da-ed67-42ba-96cc-c6f3391d7431",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6ad9cc4e-8065-4dad-9680-34f52266eb11"
        },
        "item": {
          "id": "f6b4609e-bad7-4bd7-8caf-c3f8f02fdb2d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0391ee15-a627-4ee4-b2f0-4f8646e7bf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b86124e-3b03-4d75-a996-93360bd50dba",
        "cursor": {
          "ref": "d2c5aa71-0366-422d-8c79-b595ac233daa",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8423266c-9d6b-46cb-b5fd-0ba07667a602"
        },
        "item": {
          "id": "5b86124e-3b03-4d75-a996-93360bd50dba",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c2962ad9-525f-467d-9d0b-fe6d3bd1cb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483c0268-dfc4-4724-a680-91479b76521f",
        "cursor": {
          "ref": "8e372aae-7342-4d39-8522-cb3c26adba41",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6be2fccd-338c-4dbc-b296-1bee1945aa3b"
        },
        "item": {
          "id": "483c0268-dfc4-4724-a680-91479b76521f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9c793dee-68bb-46d5-9ccb-e85823a61eee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90dd589b-81f4-4bef-b411-b3a5a14b26ae",
        "cursor": {
          "ref": "b9c27478-ca5a-4a9f-9cb9-4b65c75ae424",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "d2b2ca57-82dc-4057-8000-c2092036651f"
        },
        "item": {
          "id": "90dd589b-81f4-4bef-b411-b3a5a14b26ae",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c0d4829-6dfe-40cd-a9bd-091760fef929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c582811-b6f6-4a72-9dd6-757c5b43ddd2",
        "cursor": {
          "ref": "48b1a79e-5d60-4168-94ea-a4721f006665",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f104cfcf-a8e6-4ee0-847c-723da734f116"
        },
        "item": {
          "id": "7c582811-b6f6-4a72-9dd6-757c5b43ddd2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "75b758e8-20aa-4349-b1f0-8098907ab3bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "800dcb15-0f44-45e7-9d1a-5b6c47d498df",
        "cursor": {
          "ref": "a66a1aaa-0d6d-4545-99af-c58c2a2e4f5c",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a7b400c5-76c7-431e-aab9-99b2154c0188"
        },
        "item": {
          "id": "800dcb15-0f44-45e7-9d1a-5b6c47d498df",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0d06665f-1124-4a6e-8f36-e67fb76ef737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0b3eb1-b0e3-4a7d-816b-b0269ca160f8",
        "cursor": {
          "ref": "fcdbe06c-d133-4ba7-8cd8-0c67295ca477",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9d17ae37-faca-43e3-abf4-112c7fde3b6b"
        },
        "item": {
          "id": "cf0b3eb1-b0e3-4a7d-816b-b0269ca160f8",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4ab4c668-38a4-46d2-b736-ddc477b4bfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a935215d-c8cc-4560-b84d-0ef4a0393c13",
        "cursor": {
          "ref": "4fd0c2e0-6e7b-470b-8af3-e6909779c71f",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "b308cb83-7edc-4b35-b9db-97a237c3d605"
        },
        "item": {
          "id": "a935215d-c8cc-4560-b84d-0ef4a0393c13",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "00aba5d1-733a-400f-a0d9-108eb36b12d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7bb091a-6f79-4802-a3cd-5f3f7a7ad650",
        "cursor": {
          "ref": "45cefecf-97ef-4687-a7a4-27f33f2a6d4c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "777f6ac2-527f-4593-8425-817897eb4c22"
        },
        "item": {
          "id": "d7bb091a-6f79-4802-a3cd-5f3f7a7ad650",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4cb39d94-dd67-4c6d-84e5-d9921921fccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7987f6-10cc-4d36-8bc9-39f039130e7c",
        "cursor": {
          "ref": "2b994559-1a40-431c-96a6-7f03491d40b9",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8d016c7e-1d2a-41e2-9e9a-4baf782340fb"
        },
        "item": {
          "id": "4f7987f6-10cc-4d36-8bc9-39f039130e7c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a7f7b921-f196-44c5-8a32-30af08f980bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9494880-cf35-435d-a829-237138341d62",
        "cursor": {
          "ref": "0730a2aa-ebc8-4b48-ad09-f37e7e607580",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e193f8ce-46bd-4ce7-b027-b55c8df9e04f"
        },
        "item": {
          "id": "e9494880-cf35-435d-a829-237138341d62",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "91c63f99-244c-4f70-8062-cca61357580e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8204a6b-ec12-4af4-b38b-294b7ab4b6c5",
        "cursor": {
          "ref": "11726aa2-9c4b-44d1-8de5-c52b0011b6a6",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "e5cfd5c4-915d-4e72-a20c-a6357e5433ee"
        },
        "item": {
          "id": "d8204a6b-ec12-4af4-b38b-294b7ab4b6c5",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb6ecb08-090b-47ae-b28d-ca8dc82c7d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42d81257-eefd-4fa8-b1f7-5446e3375bf8",
        "cursor": {
          "ref": "54b0abf6-46df-4958-9487-1ab1fe18b4b1",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4aa47825-cc74-404e-b032-2ad926f5ee88"
        },
        "item": {
          "id": "42d81257-eefd-4fa8-b1f7-5446e3375bf8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5e9d0a71-7b70-4999-9d99-4fc68a90d5d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df57237c-43c7-413a-8e91-3f5b3afb38ac",
        "cursor": {
          "ref": "2e808b21-24a2-4879-99b2-bf35939fcd04",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "dbc5915e-f04e-44ad-8301-fedbe7cd71c2"
        },
        "item": {
          "id": "df57237c-43c7-413a-8e91-3f5b3afb38ac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "9a1d7e44-1234-4796-936d-41371d790373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad8b7f4-0456-49da-9714-6b5f90aa93a9",
        "cursor": {
          "ref": "c8126085-5df2-421c-bd2a-900cbd0cf970",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "062c208e-bea9-47b7-93e7-ac3d94959e85"
        },
        "item": {
          "id": "bad8b7f4-0456-49da-9714-6b5f90aa93a9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0b461e5-b5b6-4ae9-9eb0-c954463f2eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "885c11e0-bb11-4cf5-a2d1-4e1705c6862e",
        "cursor": {
          "ref": "ad378109-5c31-48cb-974e-a1b491c00924",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f353cb0e-1618-4cc8-af32-3a1bcbcb0c73"
        },
        "item": {
          "id": "885c11e0-bb11-4cf5-a2d1-4e1705c6862e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6429ff15-63cf-4148-91ab-7e8f7e81f399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10b5781-3ed1-4bbc-aa8e-9feaa55170b2",
        "cursor": {
          "ref": "4e13ebb0-f517-4956-82d5-f7d3fdaf067c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7fe1af4e-d06b-418d-b664-59895732f80b"
        },
        "item": {
          "id": "b10b5781-3ed1-4bbc-aa8e-9feaa55170b2",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "df3e65e6-5faa-400b-99a9-011e310ffe17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7a919d-7ee6-4263-be21-fd7318751852",
        "cursor": {
          "ref": "eead5823-8a1a-4a33-8b34-340c1ccb5383",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "468a4aba-6bcf-47fb-a0d7-5cffc8eca0d7"
        },
        "item": {
          "id": "4c7a919d-7ee6-4263-be21-fd7318751852",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "79efe51a-ad8a-4695-a286-5240a404866b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3413db6c-ed77-4089-b657-3b8081f7c5e5",
        "cursor": {
          "ref": "30e18a45-ed7c-479a-ae14-9de75e61e67c",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "103a42a7-d0b7-4dd5-9865-d1d6b11e4333"
        },
        "item": {
          "id": "3413db6c-ed77-4089-b657-3b8081f7c5e5",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5f6b5e96-4d9d-4718-8d33-02505ea84edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1cfb42b-a185-4e4e-8093-7e253789770f",
        "cursor": {
          "ref": "c3c2afa6-7755-4321-a351-cd6baf20d5a8",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1b44ab1c-a212-4cd4-8f42-4d1a0f9207f5"
        },
        "item": {
          "id": "c1cfb42b-a185-4e4e-8093-7e253789770f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "565f70b0-68ea-4aaa-a0f7-9a179d00a19b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbbb24a-73de-47a6-9b61-6320f87fcaaf",
        "cursor": {
          "ref": "4a0a4873-9c97-4cd8-a9e3-6bb817cacecd",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "32348f8b-1a81-4315-83f6-68b928c0146b"
        },
        "item": {
          "id": "1dbbb24a-73de-47a6-9b61-6320f87fcaaf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d2fa1dc3-d96a-429b-bb44-37b4413dda26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d9399a5-ed9e-495c-b8b8-974f2e90459e",
        "cursor": {
          "ref": "b33117cd-abfe-404e-88f4-df08e99561ee",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "478e1851-d79a-42fd-933b-3b8a6a64da79"
        },
        "item": {
          "id": "8d9399a5-ed9e-495c-b8b8-974f2e90459e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "149ca831-11e4-47ae-930d-5ad47416898b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c85045-4e09-4610-ac5f-d68a0643bf2d",
        "cursor": {
          "ref": "5ccf67a0-ea72-491b-8217-48fe42e4c601",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8366e510-7c67-424a-8afa-4ba67074b0e0"
        },
        "item": {
          "id": "11c85045-4e09-4610-ac5f-d68a0643bf2d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b29685e9-52ad-449a-b1cb-da52e01a5fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7e9d3b-b2cc-4c97-bfa4-78221417f16d",
        "cursor": {
          "ref": "706a99b9-67f6-4145-ab22-e5581017600e",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "c0e4a08c-29fa-49b4-9372-9292b92103ca"
        },
        "item": {
          "id": "0b7e9d3b-b2cc-4c97-bfa4-78221417f16d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "284f4204-4083-4d00-b60f-ec500d41d769",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348c5261-5b08-4d2a-b0cf-7a83fd898996",
        "cursor": {
          "ref": "ff985c3c-465a-477b-a12d-6f67a1ce549d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "26b97298-fbf1-48bb-aacc-d8b8c7ff17fd"
        },
        "item": {
          "id": "348c5261-5b08-4d2a-b0cf-7a83fd898996",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "623fdbab-6140-46b2-b3fd-5ef8a5001840",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ba653e-c0a6-415a-9680-8b0680f901c1",
        "cursor": {
          "ref": "0ed3dee6-1182-4dab-9f57-69b769176335",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7e589615-813e-485c-870f-ffb86f6793ca"
        },
        "item": {
          "id": "c3ba653e-c0a6-415a-9680-8b0680f901c1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "292e4114-7a9e-4e46-97a6-3cf5841c89b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e40a82-7a61-4c68-bdd7-f16cd58b9466",
        "cursor": {
          "ref": "2ed6c393-559b-4374-919b-d3739c659594",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ada90d03-ed5e-4d74-ad03-e034511fd133"
        },
        "item": {
          "id": "96e40a82-7a61-4c68-bdd7-f16cd58b9466",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b5c7ed2d-e067-4844-9dd7-ca2f79fb317b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31e2dca8-869a-4969-b5e8-f94d3e894164",
        "cursor": {
          "ref": "fc69bfd8-7527-4d66-bc4f-114d8b9331a0",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e78ed911-5420-4e06-ae2d-95193963b664"
        },
        "item": {
          "id": "31e2dca8-869a-4969-b5e8-f94d3e894164",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "37882b2c-6e1c-48da-84cf-462c82b275eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "138b7e12-6fc5-4437-beb5-d4b65a6c1ea6",
        "cursor": {
          "ref": "a8f26512-de1e-496a-aea9-7bcfa77eafe0",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "d2512a2d-0e36-4565-88a5-6c615260fdc8"
        },
        "item": {
          "id": "138b7e12-6fc5-4437-beb5-d4b65a6c1ea6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "f9fb7736-358b-4460-aae8-ef5a5532b45d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4186c7a2-6c1c-478a-9cf5-91731bca2139",
        "cursor": {
          "ref": "b057b122-a4ad-40b9-83c3-bd3470e197a7",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "bf0fecfe-4e6c-463f-a7f5-8ce3b96ac228"
        },
        "item": {
          "id": "4186c7a2-6c1c-478a-9cf5-91731bca2139",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "befe969a-622a-47dd-b58c-0f26cd82832e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5199260-fd96-43fb-8b24-62e5ba88c27e",
        "cursor": {
          "ref": "b0bf6791-a100-4ef1-8103-7d8ccc83e1c7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "cc31b590-754a-4b54-b12f-06eaee85e97f"
        },
        "item": {
          "id": "b5199260-fd96-43fb-8b24-62e5ba88c27e",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16694157-19fa-4fd6-aa7c-75a3fcccdcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90cf6fea-4229-4156-b1a9-5053228d11ee",
        "cursor": {
          "ref": "0b5ff7bb-291d-4717-b79f-6b5aadf2326c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a475391a-f24d-48d0-9c22-0ef93da73924"
        },
        "item": {
          "id": "90cf6fea-4229-4156-b1a9-5053228d11ee",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "8008f51c-18ff-416e-844f-499403b8fc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dde850d-7c07-4ff6-bfb9-47ccbb099aab",
        "cursor": {
          "ref": "592270d8-0825-4470-a796-ffb44579417d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c9638f14-41af-4a08-a9a7-14b36fb15c5f"
        },
        "item": {
          "id": "6dde850d-7c07-4ff6-bfb9-47ccbb099aab",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d3c9a8bd-3726-4caa-b5ca-a19df5bfed4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2f565f-49b0-4f94-a7fa-b30b135b0fdc",
        "cursor": {
          "ref": "2f19b5a0-69e5-448f-baf2-fb94970a767a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "918484e0-1e78-4ddd-8e2f-a191adf202e4"
        },
        "item": {
          "id": "bf2f565f-49b0-4f94-a7fa-b30b135b0fdc",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ec56519b-4959-444c-b5a2-2e0a96abaeb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f24476-0411-4cb1-a009-968f9bb52022",
        "cursor": {
          "ref": "81e39aa6-3b2c-43dc-b198-c84e3e59a7f3",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5a282422-5cdc-432e-9be3-bf078c5c542a"
        },
        "item": {
          "id": "20f24476-0411-4cb1-a009-968f9bb52022",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6325577f-a19e-4cbc-8d0b-aa6f93717466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937344a4-eb00-4747-aa4e-381ba756e45f",
        "cursor": {
          "ref": "c802dd07-17ae-46e6-be5f-94a3676505b6",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "24936aab-67c1-4902-8e6f-34816ad67626"
        },
        "item": {
          "id": "937344a4-eb00-4747-aa4e-381ba756e45f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e93918b0-a1c7-46a8-9d5b-d1360081f421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "462058d5-9e8b-49a7-8b26-ad55b4264d09",
        "cursor": {
          "ref": "aa2daeac-0326-42e2-9df1-e990154274a4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ad6e2b34-abaf-4945-ab8d-0d5f5d239fff"
        },
        "item": {
          "id": "462058d5-9e8b-49a7-8b26-ad55b4264d09",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "a1239810-6d04-4124-8d8e-58bb1a70e4a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1b765a1-0a48-4403-b012-236b8830ccc2",
        "cursor": {
          "ref": "b01ee5e5-f0a5-46c4-b2d3-773fe2082f23",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0137a7a3-eef8-4357-a5e9-12378db4a604"
        },
        "item": {
          "id": "f1b765a1-0a48-4403-b012-236b8830ccc2",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "04a601b1-8af3-4c68-94ca-513a2e59efe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4eb1051-f0a6-4e8b-bf7a-13d045a0e285",
        "cursor": {
          "ref": "8e6f74e1-9469-4993-bb1e-cffe2076e9c6",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f27c5229-8a65-49cc-9d77-e6a4f6e922bf"
        },
        "item": {
          "id": "a4eb1051-f0a6-4e8b-bf7a-13d045a0e285",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c45db690-fd58-4269-b553-6fb615bb1119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55432f42-ace7-434a-9fca-3b1916d6411e",
        "cursor": {
          "ref": "737aea88-face-40f2-aada-15ffede38bac",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "1bf7813a-3ca7-4edd-b977-189ba5b94b0c"
        },
        "item": {
          "id": "55432f42-ace7-434a-9fca-3b1916d6411e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "435e4813-1ecf-40da-9e8a-470336d860d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe374f2-973c-4834-8832-c243c97ec48a",
        "cursor": {
          "ref": "2fb55306-4088-4c4d-80ae-88c75c86fef3",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "71d29c5b-f367-4175-bfce-cdd555778346"
        },
        "item": {
          "id": "0fe374f2-973c-4834-8832-c243c97ec48a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e436637c-4d96-48de-9ff2-40f062807c15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d404f1d-af6b-443f-80c1-102371201e4f",
        "cursor": {
          "ref": "864c47d1-8028-41d0-a343-cc38141c9f20",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "3c4dfe69-c1d2-46ab-a766-f49dbcfa1dfa"
        },
        "item": {
          "id": "8d404f1d-af6b-443f-80c1-102371201e4f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "fbca9854-90cf-4394-9749-8a6cb20db0d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "003de801-9c04-4357-ae83-a30fd45362c9",
        "cursor": {
          "ref": "c32fb848-18ef-451d-a72f-13963c83e5f7",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "deca87a3-3415-4668-b41e-56a7d6164d19"
        },
        "item": {
          "id": "003de801-9c04-4357-ae83-a30fd45362c9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6f14f7ef-653a-4108-bd96-feaf0d48c788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "065f3d10-e411-496f-8e22-583ac40b0055",
        "cursor": {
          "ref": "38b74790-ec74-4215-a9d7-1e3b6bc8e852",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "61f91749-6e00-4fce-82f1-7ffdb6f7377b"
        },
        "item": {
          "id": "065f3d10-e411-496f-8e22-583ac40b0055",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "554aa781-d1ef-413c-be28-fd0ed0449798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4cd57d-7d80-42f6-bda8-c6f2bfe44051",
        "cursor": {
          "ref": "15457c8f-783f-4345-8365-82875a866741",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "5cd006c0-a6a9-49df-927f-72f6c379596d"
        },
        "item": {
          "id": "5a4cd57d-7d80-42f6-bda8-c6f2bfe44051",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "282f4faf-6963-4f2a-adea-d25710f5a392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30615b87-e1ea-4806-b9ef-90fa0ea34c8d",
        "cursor": {
          "ref": "4137384b-08f6-4732-8c89-6466010fd9df",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "140dfcb2-961f-43dd-81a5-bc7930a63965"
        },
        "item": {
          "id": "30615b87-e1ea-4806-b9ef-90fa0ea34c8d",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "cbab16b7-f220-4986-91ef-fe0d6628a53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0332b7a1-624e-4ba9-9c10-ba0f7a56197c",
        "cursor": {
          "ref": "6bc23aab-ceb5-47e9-bad7-b55c2716a12b",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "748c4f79-99f9-4cc4-9231-da0809929208"
        },
        "item": {
          "id": "0332b7a1-624e-4ba9-9c10-ba0f7a56197c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "20fb6072-2b5c-46f9-bb8e-125ea0b2f1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c64a866-3653-4c6f-9997-292d43010ffc",
        "cursor": {
          "ref": "e9fa94c9-bd05-4633-9bae-db3783a9a546",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c36a61fb-74a5-4579-9791-13c372bd1ad8"
        },
        "item": {
          "id": "1c64a866-3653-4c6f-9997-292d43010ffc",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "767b3785-ffec-4dbf-bc20-3731595d6356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2957aac-e9cf-4c2d-bbee-6bd89b01d5e3",
        "cursor": {
          "ref": "ca61449a-67f2-420e-a170-a8b2fda56d12",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "c7169e1b-92d8-41b9-bea4-a9e230c7f358"
        },
        "item": {
          "id": "d2957aac-e9cf-4c2d-bbee-6bd89b01d5e3",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "3480c240-7ac2-4c9d-acff-493af745e24a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66b98eb8-6adb-4ca0-9c32-3d1c40048af0",
        "cursor": {
          "ref": "9a1531cf-8d01-4601-ae80-90c8776149dc",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9e35ddc0-0cbf-4450-be80-6f7a58b02bbb"
        },
        "item": {
          "id": "66b98eb8-6adb-4ca0-9c32-3d1c40048af0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ec603cc2-aa7f-4992-bf09-cb824917af4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9efcc6af-d91f-4a1d-ac36-4f5c98c70fcf",
        "cursor": {
          "ref": "bf08be17-a0bd-499a-a75e-c1a7fa20cd8c",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fd036ef2-18ba-425f-b7f0-afecdde67a74"
        },
        "item": {
          "id": "9efcc6af-d91f-4a1d-ac36-4f5c98c70fcf",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "10bc90d8-abf1-4ead-895e-98d4687f19be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382e03e1-1202-4670-9fa5-3f1e62a9262b",
        "cursor": {
          "ref": "336f1923-1cd8-4fcc-add7-f81ba55c3dbd",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "19d4e466-0e68-429b-a446-e42fefe2fe4b"
        },
        "item": {
          "id": "382e03e1-1202-4670-9fa5-3f1e62a9262b",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3e2575f1-e46a-4c34-a3a3-ad2d29b931ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1d87f0-0fb2-49b7-914d-c2295309d5ce",
        "cursor": {
          "ref": "6c304e66-eb66-4bf8-8ee3-997b108885fa",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0122bc89-ff13-4e88-b6f1-bddbfbfacb21"
        },
        "item": {
          "id": "bc1d87f0-0fb2-49b7-914d-c2295309d5ce",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "a507e5fc-0653-42a7-8f63-a8face1cf137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "430c1981-6851-4697-9a8b-bb6c93707051",
        "cursor": {
          "ref": "f90b8e52-3b59-4200-835b-172153013b39",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6b854697-1fd4-412e-94bc-6fc2af516fe7"
        },
        "item": {
          "id": "430c1981-6851-4697-9a8b-bb6c93707051",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "caf9b628-01d1-4885-aa91-af2b11613fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45fc150e-de7b-47ea-a8b0-3aa36afab90b",
        "cursor": {
          "ref": "a64a1529-9d90-425c-9a44-c51c8693268c",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "522ccb2f-ea4b-4003-95de-66b6fd5edf83"
        },
        "item": {
          "id": "45fc150e-de7b-47ea-a8b0-3aa36afab90b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3605c3d4-a72b-4ed3-8fd9-dc14d4e5d8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203ed48a-49aa-44b2-8db8-e826c0a42063",
        "cursor": {
          "ref": "85204764-bb8d-42c8-aa29-300dcfd2fb7f",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ff487a32-700b-4fc0-b3c8-313e3a451ece"
        },
        "item": {
          "id": "203ed48a-49aa-44b2-8db8-e826c0a42063",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "40d77411-d549-456c-8efd-a82f7f68d6ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7eaf9ac-7e9e-43b6-9ee7-240962b47ee8",
        "cursor": {
          "ref": "111d5a13-0ef9-4817-ac6e-0b8a974635de",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cee47c35-f93c-4a26-97b2-2d656c1be7e2"
        },
        "item": {
          "id": "f7eaf9ac-7e9e-43b6-9ee7-240962b47ee8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d1351397-a44c-4dcd-945a-512f41279d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0746b6ad-7689-4faf-b0bd-766c84d7fdf9",
        "cursor": {
          "ref": "9070fb6e-5ca4-4a66-9588-662f8f51fd4c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "60a24d87-cc8e-4620-8a6d-5cc1da77792a"
        },
        "item": {
          "id": "0746b6ad-7689-4faf-b0bd-766c84d7fdf9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "ce8ad13a-c958-46b1-920b-f00e32abec1e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9f4e73-e893-4319-a65e-77d7a2db764c",
        "cursor": {
          "ref": "369fb503-6166-49ec-bb36-163f7d9bd8e8",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "5d45a8a7-12e1-44d6-a2e1-f2b0eac9a286"
        },
        "item": {
          "id": "ef9f4e73-e893-4319-a65e-77d7a2db764c",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0387946b-e58f-44c1-b7d1-0379a2fe429e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6eb23eb-ee5e-4c25-acb1-f111bcffccd9",
        "cursor": {
          "ref": "2bb24a80-f3ba-4363-827a-6c2e2110ac3a",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "442c18ef-11d5-4f1a-97f0-9cf5125d1add"
        },
        "item": {
          "id": "a6eb23eb-ee5e-4c25-acb1-f111bcffccd9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "97aaca67-6dc0-4aca-b6af-daeadbd9ecbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46ca7085-9769-42e4-9db8-118772c362b4",
        "cursor": {
          "ref": "3092e39d-5563-4311-b368-10e9e37aee77",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "91be43db-df3c-4a81-ae89-f6b71b085672"
        },
        "item": {
          "id": "46ca7085-9769-42e4-9db8-118772c362b4",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7d925dc3-a842-49e2-be8f-13570b84ebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07302419-6f9a-4bca-bb91-399cde4ddadb",
        "cursor": {
          "ref": "a2341ec3-2f33-45b6-a7ae-09ea69f97d36",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2d8665eb-20fb-49e8-a898-ca920b7aa88c"
        },
        "item": {
          "id": "07302419-6f9a-4bca-bb91-399cde4ddadb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "4107bbb6-763c-470f-978e-b4b2e667c925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c9610c7-12f6-4a9a-bef4-527f46dfda89",
        "cursor": {
          "ref": "dc679cd5-c6c5-4def-82e5-089952f1b4fb",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b94be8e2-83cf-4c84-8379-479ad092c016"
        },
        "item": {
          "id": "0c9610c7-12f6-4a9a-bef4-527f46dfda89",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7ca30f94-bedc-4899-803c-e649661e5cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46fdca6a-4287-4c62-82da-a69a793b5502",
        "cursor": {
          "ref": "2fad3583-b6d7-4f1b-8f5e-de2936312a99",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9b8ab321-1d12-4431-824c-157a08775c00"
        },
        "item": {
          "id": "46fdca6a-4287-4c62-82da-a69a793b5502",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c2337ba3-35dd-4673-846b-8e612b98134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56d1da8-93c0-4c94-90c4-b37f62951e7e",
        "cursor": {
          "ref": "c8799df1-a1cf-4a63-85a2-e777c434a7df",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "4169ef92-1964-4eec-a86c-02d2d6bb4079"
        },
        "item": {
          "id": "a56d1da8-93c0-4c94-90c4-b37f62951e7e",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "b4a0f134-6e84-4d5f-8248-180680094849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cd46e37-372d-44d2-9143-5b71670f08e7",
        "cursor": {
          "ref": "b198fa63-ae38-469e-aea5-5e7b24739b98",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c4bad719-0302-47bf-8517-dc7a4c7b08e1"
        },
        "item": {
          "id": "9cd46e37-372d-44d2-9143-5b71670f08e7",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e812a4e8-3441-45c6-8db4-14ba97d61c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ec5db0-da9c-48ea-902a-777a6dd38fc3",
        "cursor": {
          "ref": "985f3c4f-1b19-4fa5-9322-3493dbb94e75",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ca4cb8fa-4f39-4171-85fe-b4f7d9755c7a"
        },
        "item": {
          "id": "29ec5db0-da9c-48ea-902a-777a6dd38fc3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "a55587d0-00ec-4f92-9339-c5b18926edd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93f528e-3421-4e0e-9aca-2d3595a3dc47",
        "cursor": {
          "ref": "be23c326-b02c-4526-86bf-caf60a522ed6",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c5761817-2c89-4a3b-a641-8d68b983d295"
        },
        "item": {
          "id": "d93f528e-3421-4e0e-9aca-2d3595a3dc47",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "c501fe9c-2a86-40cf-b6bf-0e335f418b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a22250ac-39bc-45b8-9e04-dcf00affefc6",
        "cursor": {
          "ref": "bbf92979-14a8-4bf1-beb4-044809dc6328",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ecf17c78-29e3-45e3-922e-b543e6a1ae88"
        },
        "item": {
          "id": "a22250ac-39bc-45b8-9e04-dcf00affefc6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "89607158-85ad-4d7b-9d15-6aa62a96fda2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19789e7-a0aa-43b2-99d2-50e70590777f",
        "cursor": {
          "ref": "fde11da4-625b-4c12-bf70-4cfae45bd39f",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "74e1a8ae-6e6c-4fc9-aa14-8751b63a1a79"
        },
        "item": {
          "id": "c19789e7-a0aa-43b2-99d2-50e70590777f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "23ee4ac6-bd71-43d0-ac61-79a4e9e8d5ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f72c3b19-9546-4aa3-84e0-c760daff920c",
        "cursor": {
          "ref": "92cfb2c8-ad3b-477a-bfe9-d6fad977c9fd",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a4616e8c-9cb0-4ec6-a140-d15ba0b471f7"
        },
        "item": {
          "id": "f72c3b19-9546-4aa3-84e0-c760daff920c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "80082265-5eb4-4e66-a12c-d190ef38c357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9431a15a-16be-497b-94f7-6b8b6a056634",
        "cursor": {
          "ref": "21f477a3-c9e3-4c89-b954-23a115f2af96",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "6582b355-6fd9-4c30-bd95-4a3c07610bdf"
        },
        "item": {
          "id": "9431a15a-16be-497b-94f7-6b8b6a056634",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "559a1281-5b7b-4aa5-a41d-e829014399b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51661cf0-6e0f-4363-b001-4d680cf08a24",
        "cursor": {
          "ref": "e46d47cb-e4c2-4901-86e6-fb5c89730bb1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "af58a033-a5f6-4a41-81af-3be81db75361"
        },
        "item": {
          "id": "51661cf0-6e0f-4363-b001-4d680cf08a24",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "e339e962-741c-41bc-9d13-437b2d1a2c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e337af45-7c4b-4bed-b8fc-6773d4cba72e",
        "cursor": {
          "ref": "6c1613fc-d284-42bd-a814-3cd450fdec12",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c58e37d6-cf14-4b38-8438-324d58d246f9"
        },
        "item": {
          "id": "e337af45-7c4b-4bed-b8fc-6773d4cba72e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "f8ceb1b5-a02b-4e0d-afd9-f4e789fc142a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b9abab-d042-4e82-b00f-0df99b88a91a",
        "cursor": {
          "ref": "5976ed80-8ef6-40b1-89f5-e644bec82e6d",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "6656c40b-4668-46f1-a44b-ddc203944223"
        },
        "item": {
          "id": "c2b9abab-d042-4e82-b00f-0df99b88a91a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "04349ed7-9596-407a-b513-4d2095d439de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177c993e-c3bf-4a3d-9cad-905435cfbd72",
        "cursor": {
          "ref": "8fde651c-21bc-4bfe-888a-c62bdf1bcb28",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9e1111fc-f644-4e3d-8a26-a20882ea49ed"
        },
        "item": {
          "id": "177c993e-c3bf-4a3d-9cad-905435cfbd72",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "41995f5c-3dda-46f4-b16b-789df7a902db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3909f9a-b271-4cd5-aaf6-4704c33fa8b2",
        "cursor": {
          "ref": "f9346fc7-367f-4a86-8c68-5839416956ab",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a1aa1f5-e86c-47a7-aef5-60fc1bff62c2"
        },
        "item": {
          "id": "b3909f9a-b271-4cd5-aaf6-4704c33fa8b2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "baee4063-6395-4f11-8df8-9bdd59989030",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cba650-82bc-4670-b617-33c1c7b4f035",
        "cursor": {
          "ref": "1cc5c7da-5c83-4918-b324-acc4d298721b",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6850f7f0-b425-4103-aed4-9d4a49eb90da"
        },
        "item": {
          "id": "51cba650-82bc-4670-b617-33c1c7b4f035",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "69b94ba2-a91a-4df7-aa3a-fdd49d9d80e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36251d2b-82d8-4c0f-b6a0-4f618fd264e3",
        "cursor": {
          "ref": "e7e44e53-40a5-45c2-a706-1209f23c0874",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1f5f3a6a-27fe-40a2-9dda-a8d67112d263"
        },
        "item": {
          "id": "36251d2b-82d8-4c0f-b6a0-4f618fd264e3",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7fd7d9b4-d3d7-40af-abff-0c86aab00547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3bc26f0-b1b8-4860-8fd4-6dc508ae9dfa",
        "cursor": {
          "ref": "68a2fbee-85d7-4b7f-8ad0-1fcb2885b46f",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "14aa048d-1f9a-46c4-a647-9a3fa1739e00"
        },
        "item": {
          "id": "c3bc26f0-b1b8-4860-8fd4-6dc508ae9dfa",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "7993fe4f-0526-4a50-ab35-89bb1884a195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae040d7-f13b-4279-a98e-b49f36e7fbe6",
        "cursor": {
          "ref": "dcad7fac-acfe-43a7-ac5f-0cda68a5c8be",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b62658f5-a3d8-46ce-be13-ec5a5b3b65f2"
        },
        "item": {
          "id": "2ae040d7-f13b-4279-a98e-b49f36e7fbe6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c5681fb9-828b-4750-845f-f54b902d5f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262cf726-161a-4b29-9614-c762afb01651",
        "cursor": {
          "ref": "05c2cfe3-0e26-43c5-88e4-bc9c1b007493",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "09b35b7e-4ecc-43b8-a127-6efce48925a3"
        },
        "item": {
          "id": "262cf726-161a-4b29-9614-c762afb01651",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0eaf3f0a-ef31-481e-8fc3-f80d53de3f1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0eb27f7-fa54-4f26-8f77-c6260936a45d",
        "cursor": {
          "ref": "7da85a63-23f4-4939-b41b-bd5eec794bad",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "77f877df-33a3-4038-9c07-058c0db9ad68"
        },
        "item": {
          "id": "d0eb27f7-fa54-4f26-8f77-c6260936a45d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ec9ae64c-9f4a-4349-9117-870d76d1a4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88d9674-dd60-487e-813b-2e38f7c7ed19",
        "cursor": {
          "ref": "f2af4bc2-2f6c-4c2c-b6b5-17f163709250",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "53f60898-c59b-460b-be3e-7e98ba0a561c"
        },
        "item": {
          "id": "f88d9674-dd60-487e-813b-2e38f7c7ed19",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "932ca663-3409-42e4-93dd-3981de75b9db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e50f55-c955-48a4-8809-a6befe17e7b1",
        "cursor": {
          "ref": "7d9526b8-4314-401d-ba11-257028cff6a7",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fcc4401a-6a4c-476a-8f16-91fa0b908cc3"
        },
        "item": {
          "id": "f0e50f55-c955-48a4-8809-a6befe17e7b1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2ba3f556-8729-44f0-9fc5-9352de54b209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58369a29-b896-4726-9be7-b80bce094f59",
        "cursor": {
          "ref": "b70049a9-5e40-4b7a-b25a-9f2979c2a03c",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "c1752ed5-2a7a-4da3-8575-26dc40808db1"
        },
        "item": {
          "id": "58369a29-b896-4726-9be7-b80bce094f59",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7829267f-19bb-4ad9-b09c-9bedad54bebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e056055-0494-45d7-9b21-ea5fee7d841e",
        "cursor": {
          "ref": "fc3efbdb-b05c-49f6-9eb7-c2e526354038",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "730589f3-d658-47ff-a492-fba070a07c51"
        },
        "item": {
          "id": "3e056055-0494-45d7-9b21-ea5fee7d841e",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "fd210d16-90c9-4e7d-8942-8b23265b7eec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fed04e3-a17f-4aff-9152-af921c71d328",
        "cursor": {
          "ref": "8a17b378-c852-4328-9579-e4f57bf938af",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f6e2e99e-7ae8-4633-bd06-bb0fece7bfe1"
        },
        "item": {
          "id": "3fed04e3-a17f-4aff-9152-af921c71d328",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "c4a6ffc0-0b73-42e3-ab0e-6aeaadb66396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a23e74-30a3-48a9-805b-e9970d31cf44",
        "cursor": {
          "ref": "db154cbd-5090-4996-b204-c9b3e6f831af",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "a463bd0a-c02e-4503-ab3e-a8cbb31465c3"
        },
        "item": {
          "id": "75a23e74-30a3-48a9-805b-e9970d31cf44",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "16ad19dc-009b-4de6-b72f-f485e133bf61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8242a232-d990-4b33-a6b3-99befd238820",
        "cursor": {
          "ref": "f5683db0-4f88-4f1f-9efd-636fca70a3ad",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2ec38909-9bd7-4692-bf37-ec13b82de314"
        },
        "item": {
          "id": "8242a232-d990-4b33-a6b3-99befd238820",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "ed82c953-7ee3-4b51-b83b-8b34d513439f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92309f61-3912-4bfe-a2ad-36e5c7365268",
        "cursor": {
          "ref": "fd4166dd-a0e0-44e9-a920-77a9d6be9a2b",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a8329d7-e29a-4baf-b526-bc7c34ae71b5"
        },
        "item": {
          "id": "92309f61-3912-4bfe-a2ad-36e5c7365268",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "acd7e23e-554b-4ab1-9099-86380622e52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747fd524-3dc5-4b21-81fd-f36c60190e91",
        "cursor": {
          "ref": "07ac2903-c93a-4fb9-b58a-761bf0e2b1ba",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "267dc2e7-50f3-4612-a77a-efbc50ff3f23"
        },
        "item": {
          "id": "747fd524-3dc5-4b21-81fd-f36c60190e91",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "7a7cfb45-74ab-4d01-8267-a7c93de0d6f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652574e9-7491-497b-8644-ba100e932cd8",
        "cursor": {
          "ref": "786b7a09-db47-48be-aa42-91e98830e2ce",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c4909e1c-d0ac-4302-9a55-bf2c3023a11d"
        },
        "item": {
          "id": "652574e9-7491-497b-8644-ba100e932cd8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "a4379844-06b6-460a-b61a-d8a02a0c818e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1e3ee8-53e5-4122-9bc9-e9e48120091b",
        "cursor": {
          "ref": "3b3cf5b5-bf5c-4fe8-8a60-1a7e734e17ca",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f5dadcda-eeea-42d2-931b-68134faf4454"
        },
        "item": {
          "id": "cb1e3ee8-53e5-4122-9bc9-e9e48120091b",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "4a954d17-c898-4851-b6b2-6528d305ac58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51b006c-9597-41b4-b6bc-5ada55225343",
        "cursor": {
          "ref": "caae0228-243b-45d9-91fd-1cbd68bb56d8",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "be65691a-b6c4-4a7d-a402-1794bcb83c23"
        },
        "item": {
          "id": "a51b006c-9597-41b4-b6bc-5ada55225343",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "144c800d-f7eb-43fb-8063-fba78dad5f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "751210f1-45e1-43f8-8119-a230c2548870",
        "cursor": {
          "ref": "2672c87f-5147-4662-bac8-ef851be1a339",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9f529bcc-f3a2-4018-9b3e-d47d839dc878"
        },
        "item": {
          "id": "751210f1-45e1-43f8-8119-a230c2548870",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "77eef267-d039-437f-9a60-2562ab34fd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9902f0f-d379-4ae1-80f1-f5e6aea93f01",
        "cursor": {
          "ref": "c57ce23c-7f90-403d-a6f4-83cfbdf9f03f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "06e986a5-b75a-47f7-a844-89681d33dce7"
        },
        "item": {
          "id": "c9902f0f-d379-4ae1-80f1-f5e6aea93f01",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9a7431e5-9093-4f1b-a506-4ab871029ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa239f8c-273d-4c50-b0d3-a4a767979025",
        "cursor": {
          "ref": "02ea9140-2244-402f-b26d-7dc3847eabd8",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "07ea3cfd-1270-478c-8928-894dc08012c9"
        },
        "item": {
          "id": "aa239f8c-273d-4c50-b0d3-a4a767979025",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1cf0366e-5dac-4b5c-a90d-8e8696b465c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed368161-edfa-405d-a5e4-4bd86dbe378b",
        "cursor": {
          "ref": "eecedfb6-3025-4072-96ea-cf3b5df081dd",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e435acf0-31f7-4445-b2d0-0b883d9d4c77"
        },
        "item": {
          "id": "ed368161-edfa-405d-a5e4-4bd86dbe378b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d6de58ed-335a-42cb-ad83-f8a7a3000d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ffe3716-1251-448d-9795-4609e10103ff",
        "cursor": {
          "ref": "187a396b-8e44-4f24-88fa-0838b9750d5c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "ab63f621-7521-4698-865c-47209513fc1d"
        },
        "item": {
          "id": "1ffe3716-1251-448d-9795-4609e10103ff",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f337944f-aeea-43db-828c-c71d76b2ae7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20319a75-1a92-4c2b-88b0-9036848482cf",
        "cursor": {
          "ref": "e7d54da0-a5e0-49cb-a1ae-bbdb32a957fa",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e9f2d2e2-5aa8-4c87-960c-1e684a5178d4"
        },
        "item": {
          "id": "20319a75-1a92-4c2b-88b0-9036848482cf",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df56a722-ec5f-4257-8e48-f7d6df22d667",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9554e5-0c49-4b62-99d7-628e1994e0c4",
        "cursor": {
          "ref": "38a7cd18-a54d-4b43-a2a5-daeb6459f450",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "236a36dc-3d54-40cc-a693-d641e8ed5a59"
        },
        "item": {
          "id": "da9554e5-0c49-4b62-99d7-628e1994e0c4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "89b56045-ee99-4318-aab3-07717849a1c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf192b2-6b92-47ec-9ad5-1b9fd1d65307",
        "cursor": {
          "ref": "b10d5a5b-13e7-4cbf-a310-5c412ae26ec0",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "4ca7e84f-f748-4afd-8387-74bd80275414"
        },
        "item": {
          "id": "eaf192b2-6b92-47ec-9ad5-1b9fd1d65307",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "e57c3a2e-8ecb-42d7-9581-0402b48a92f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ae4816-1d93-4728-a7dd-99358850c052",
        "cursor": {
          "ref": "51b293cd-3d1c-4f8d-854b-30a4c62c7db5",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d6bf259c-9240-4339-ad58-d37c1f5f7020"
        },
        "item": {
          "id": "d4ae4816-1d93-4728-a7dd-99358850c052",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0d95c282-8729-490e-b348-6f91cdb28daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfadbda1-e822-477b-bfd8-342c3a6c2457",
        "cursor": {
          "ref": "5e52a1c2-219a-4fcc-835b-b849494cb9c1",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "afb59fa3-f336-4577-89a7-8aee941eb7d1"
        },
        "item": {
          "id": "dfadbda1-e822-477b-bfd8-342c3a6c2457",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "73bdba88-dbb9-490b-9607-6e166e0b0b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d6aa248-caf4-442a-a5f2-363bb79afa5f",
        "cursor": {
          "ref": "b401dd5f-2a33-433a-bf85-0b5d09b02a18",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "1c319ae7-1bb4-4962-87bb-913d9b118442"
        },
        "item": {
          "id": "9d6aa248-caf4-442a-a5f2-363bb79afa5f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4e0cca3b-e823-4548-87b2-ce0d75a3a107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2e04de-8423-4e81-b869-14f86d4d3124",
        "cursor": {
          "ref": "de999fd4-551c-463c-acae-3c3f0f67d1e5",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "a56311e7-b3df-480e-817b-1b8d3bd5f932"
        },
        "item": {
          "id": "be2e04de-8423-4e81-b869-14f86d4d3124",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a0ab7147-e921-4487-8fe3-b08d29178330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0251b1-09f5-4321-b425-873b8489d668",
        "cursor": {
          "ref": "aae0d92e-a837-4d6f-a68f-df636ba23b48",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ce81a2e5-4afb-4f90-9d6a-69fabbfeaed4"
        },
        "item": {
          "id": "0f0251b1-09f5-4321-b425-873b8489d668",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0824c2d7-08ab-43ed-aa7b-cefaf4e37480",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad703a7-66cf-4f4a-a9cb-64586c6dbb8f",
        "cursor": {
          "ref": "98c70bd0-c741-4d7a-9321-612c9ccc1172",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "6b72319a-e236-4cc5-96a1-0ce78ce99240"
        },
        "item": {
          "id": "bad703a7-66cf-4f4a-a9cb-64586c6dbb8f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "46719507-90f2-43ff-8796-74095719d861",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "f7096c7a-9c72-420e-a885-223f42b6ed73",
        "cursor": {
          "ref": "985dd18a-d11e-47c0-8067-583784745502",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "4a48b88b-21ca-4a51-85a7-f334cec69cb7"
        },
        "item": {
          "id": "f7096c7a-9c72-420e-a885-223f42b6ed73",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "af5153f4-c6ae-431e-9587-adc78e78fa7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c669a0dd-f761-466a-9391-d04dfe814f3e",
        "cursor": {
          "ref": "48119bd5-5ea1-4059-b66c-7a19652d4c32",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "dc197a20-5f06-4eef-8167-08e0e4d97ae9"
        },
        "item": {
          "id": "c669a0dd-f761-466a-9391-d04dfe814f3e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "62d4beb1-b8e4-4b2f-b6b9-64136dd98a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ade1a4e-0cec-48d5-8b87-94ff0be10e06",
        "cursor": {
          "ref": "b7aed78d-1ecf-41f1-bc7d-ee751db8a81f",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "e44c2e6f-352e-4d7e-919f-867bf5832941"
        },
        "item": {
          "id": "7ade1a4e-0cec-48d5-8b87-94ff0be10e06",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "35f4ccfd-8270-4e98-8ce6-14adaf3ae33d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd43e2f0-1fb8-41f7-a8b6-e6b3389c8fd0",
        "cursor": {
          "ref": "43bf4c69-3033-4770-b8c9-2c1c3d233e02",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "b1ae9ced-30be-4a97-9dd2-dc8a8b72749e"
        },
        "item": {
          "id": "dd43e2f0-1fb8-41f7-a8b6-e6b3389c8fd0",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aca4d53d-6343-49a2-af11-60a1b9c6fabb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6e6d201-68fd-4b5d-a9a1-a9a6880fe97a",
        "cursor": {
          "ref": "ea8532c0-8bda-4b8f-a4ac-06a09780e331",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "36778740-0ef5-4c9c-957c-fa071fdab3d8"
        },
        "item": {
          "id": "a6e6d201-68fd-4b5d-a9a1-a9a6880fe97a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "7c504a13-035f-4be8-ad60-14165f477c85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eacb7d12-db61-4631-a779-09d7c9be56e8",
        "cursor": {
          "ref": "d7ad1f24-4904-41cc-9d2a-c99f8850fc0a",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "d8a805c7-0caa-4e1e-a844-8ab5b983cb31"
        },
        "item": {
          "id": "eacb7d12-db61-4631-a779-09d7c9be56e8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "898357e6-dbc4-46ca-98a2-13003b65517f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3c8d60-82af-4106-855a-a153560e8397",
        "cursor": {
          "ref": "18f3349b-1af1-40d6-a343-821d5158d300",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7ec99b9d-2804-4ebd-82de-cef382a4ae93"
        },
        "item": {
          "id": "ca3c8d60-82af-4106-855a-a153560e8397",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c1a25126-da5a-4890-aa39-5106928147b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5016f24b-478b-45f0-a69a-a7bc22ed04b5",
        "cursor": {
          "ref": "9fe1391f-7f0a-404f-8dd3-60c996877189",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1e0cee9c-a66c-49d3-bd7e-fa12cb7cbd06"
        },
        "item": {
          "id": "5016f24b-478b-45f0-a69a-a7bc22ed04b5",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1920c694-b0ea-4def-a59a-0cdb3df2d65a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5140a8-6c1c-42d2-9858-d142ea576727",
        "cursor": {
          "ref": "3cb1fc99-4c99-4836-b1cc-1489a03cb28c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6e3ba0ae-c43d-4c02-b234-cd7bd221f3b2"
        },
        "item": {
          "id": "1a5140a8-6c1c-42d2-9858-d142ea576727",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3f2427d1-089b-4c2e-96fd-67a3183ff5b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abed2d65-1f57-4086-b4c0-a7e979c21f46",
        "cursor": {
          "ref": "d7b76a13-b0fc-4f09-9009-ed25268ba197",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7edd201b-fb05-48be-a6ae-1f17231205f7"
        },
        "item": {
          "id": "abed2d65-1f57-4086-b4c0-a7e979c21f46",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f10dd0a8-8188-45da-89bf-70df74e816ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48207689-26c8-4367-a9c4-567951d7e84d",
        "cursor": {
          "ref": "73bd7b37-e3f1-495f-b8b1-322036a53533",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "0f01fa63-3d95-4e0f-ac49-f37511320618"
        },
        "item": {
          "id": "48207689-26c8-4367-a9c4-567951d7e84d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "c0a22673-ff0a-43ce-926b-1508ab98ea93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d84ea0e-ec00-4542-b373-93b034e53a80",
        "cursor": {
          "ref": "82ab877c-218d-4842-b186-c56607088554",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "9fd35639-7b0e-43d8-ad96-50b93bab0840"
        },
        "item": {
          "id": "6d84ea0e-ec00-4542-b373-93b034e53a80",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "b214f97e-0652-4ea5-9617-8318fca7d4e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0170f0-aef6-421a-bdb5-ab376314960e",
        "cursor": {
          "ref": "132a438d-aab0-4fc7-bf55-b772860410cb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c485e8cb-31ad-42b4-b54c-62ea6370608d"
        },
        "item": {
          "id": "aa0170f0-aef6-421a-bdb5-ab376314960e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f0af9af4-668a-4133-a6a9-b2c57cc9de0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1314ae42-3768-4141-b45d-6c1383cd4f27",
        "cursor": {
          "ref": "1fa872c4-1ce5-4644-972c-219ffa19826b",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ea65b1a7-f1bc-48f8-8d0d-1c76e4806337"
        },
        "item": {
          "id": "1314ae42-3768-4141-b45d-6c1383cd4f27",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b01c892d-ed49-48fa-9b70-9a9daadb9a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e229f8e6-bbbb-45f0-b726-333d02b182cd",
        "cursor": {
          "ref": "820d1125-93a2-48c4-9a14-8caa0fafa480",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "98a6b73e-a7bf-41dc-9599-c682708ac5bb"
        },
        "item": {
          "id": "e229f8e6-bbbb-45f0-b726-333d02b182cd",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "125e6d0d-8418-42bb-b9eb-c65426d78624",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f261551-c106-4289-96e6-b66a4473d78d",
        "cursor": {
          "ref": "452a80ca-3fc6-4b96-81af-780a1f64cfb0",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "47e1244c-0f4d-41ce-8518-72f63ef7a321"
        },
        "item": {
          "id": "1f261551-c106-4289-96e6-b66a4473d78d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "0bb370a7-de14-49e9-ae4b-db1097102d2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15361839-4aef-4ea9-86af-9552af54b1ce",
        "cursor": {
          "ref": "720f6c40-75cd-4119-b4b3-a6963677d890",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "ad538e42-7de6-4926-9cbb-3c6544028082"
        },
        "item": {
          "id": "15361839-4aef-4ea9-86af-9552af54b1ce",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "fe37a436-c31f-409b-a5df-233412370fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb0dfaf-9efa-498f-8832-e76c2504f34f",
        "cursor": {
          "ref": "f5db9ec6-5d0d-499e-8220-1d35e5e2f28c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "9382a823-347e-456a-a2d4-dc0fe6b286f0"
        },
        "item": {
          "id": "aeb0dfaf-9efa-498f-8832-e76c2504f34f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b7963d8a-cc06-4596-af80-f299bc6ff5d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f555df-e12c-4138-b5de-a536c7de5840",
        "cursor": {
          "ref": "d70fd017-f1e0-4a79-94de-97152ab3f967",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "3ef9c4c4-9795-4149-a693-ce6b78fb3bed"
        },
        "item": {
          "id": "54f555df-e12c-4138-b5de-a536c7de5840",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "fe1c24c9-f8df-46f2-9458-2472db44e542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7193a6b1-0a9b-4704-9121-30a0561b2521",
        "cursor": {
          "ref": "65baec93-6d2a-4dd2-8987-23339f194db4",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "8774189a-8f7b-421a-9793-ee62199cfbd0"
        },
        "item": {
          "id": "7193a6b1-0a9b-4704-9121-30a0561b2521",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d66f5a35-2d2f-49b4-8f09-ac091aeebe8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0680f936-1ff7-4b4a-b035-ee6bb23cddfe",
        "cursor": {
          "ref": "e5a6da8c-99e1-41eb-a65f-443217ce6ae7",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4cf3578a-74ed-49cf-9e91-f888ba0e36bf"
        },
        "item": {
          "id": "0680f936-1ff7-4b4a-b035-ee6bb23cddfe",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "1c2f0c96-2665-47e0-9850-6ee6a5fb97f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d37c81d-f10b-44de-90bd-a7539f683e84",
        "cursor": {
          "ref": "c29edd11-4374-4cb8-b823-91db25e88d15",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "89d96cc7-e305-49a8-9e93-550b5d79d42b"
        },
        "item": {
          "id": "4d37c81d-f10b-44de-90bd-a7539f683e84",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "be1b9fd3-9fcd-434c-adcb-7c2b52cff3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc69ff52-86b3-4933-a38d-cfb1f44f23e9",
        "cursor": {
          "ref": "25258f2c-c871-4e21-bb8a-b71d8192b733",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "da74561b-70c5-4efb-a4ca-206a88db94ed"
        },
        "item": {
          "id": "dc69ff52-86b3-4933-a38d-cfb1f44f23e9",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b0714109-c2ff-44be-b556-cd73a4039f15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13f801f1-6aa0-4907-8428-58459a86d214",
        "cursor": {
          "ref": "7889a266-2ee3-42b8-a7bc-6579241a073d",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "bddd9009-5574-41f0-aef4-46c4e9cf10e4"
        },
        "item": {
          "id": "13f801f1-6aa0-4907-8428-58459a86d214",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "12e0f1e9-15cd-458a-a6e9-dbd8fc1f5a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebe7cae-8147-4272-849b-597f29740168",
        "cursor": {
          "ref": "fef5298b-8317-4e9d-b66e-1219cf34f04b",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5276c0bc-1275-4b5b-81c1-189c171e6eac"
        },
        "item": {
          "id": "cebe7cae-8147-4272-849b-597f29740168",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8185755b-e258-40ee-b78b-ab391d210e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a6f323d-e97b-4c9e-95af-bd3faf8927c1",
        "cursor": {
          "ref": "3ed9c38b-62ae-4c14-b6bd-fe29faa3152a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "cea4d55c-3d80-4172-8794-0823d8224497"
        },
        "item": {
          "id": "2a6f323d-e97b-4c9e-95af-bd3faf8927c1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "81a4eecb-bcbc-4246-9034-3fd8f62eb325",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12cc84a2-a93a-4285-9de7-0878d61e2c96",
        "cursor": {
          "ref": "97c3dd7d-3fb6-4dd8-a4a3-c5e894f2cac6",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c9381978-9489-4d4e-bbe8-73fd5ec9a8b9"
        },
        "item": {
          "id": "12cc84a2-a93a-4285-9de7-0878d61e2c96",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "7f0cb31c-68c2-4490-a1be-374244031afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "082d0f28-2014-4b0d-af3c-a469512a7304",
        "cursor": {
          "ref": "b5166c58-dbb5-44dc-8284-0e8de0873b0c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "da9fb5c0-c9a2-49ee-9f27-ee198a14db30"
        },
        "item": {
          "id": "082d0f28-2014-4b0d-af3c-a469512a7304",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "de96286c-fe3d-497a-935f-e9ccf96dc7c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65610aa6-2dff-479c-8798-571cab793dae",
        "cursor": {
          "ref": "0c761d48-39d6-4931-9bb8-0de5e2f49216",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "61659eb0-7646-4dd9-9254-c14cd5e72ad5"
        },
        "item": {
          "id": "65610aa6-2dff-479c-8798-571cab793dae",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f1468c6f-7a44-4043-a2e3-3006631b23e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f18b529-7af0-4fe0-8b89-ccbcf267da4f",
        "cursor": {
          "ref": "b16903db-b145-4266-a4d3-4ef4c1c73bf2",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a3b0bc81-c417-46c0-8884-1bbb661ebb07"
        },
        "item": {
          "id": "4f18b529-7af0-4fe0-8b89-ccbcf267da4f",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c377e1d8-cc47-48af-ad5a-9e4f5537b8e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b66c0a3d-de82-4b9b-9247-127b513644c7",
        "cursor": {
          "ref": "143d2daa-da66-453d-a2d6-cc779f102bf0",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a21a5397-a6e3-44de-a6b6-e6aa0c8c1240"
        },
        "item": {
          "id": "b66c0a3d-de82-4b9b-9247-127b513644c7",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8c190780-fc1c-45ef-906d-3238f6989e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf55a538-3318-4114-a5b1-fe153ddb194f",
        "cursor": {
          "ref": "4ecb8ac0-1a92-41c9-a5d3-bca51553e0d2",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "e180b16b-2775-4a97-a9e0-c6c78a73a75c"
        },
        "item": {
          "id": "bf55a538-3318-4114-a5b1-fe153ddb194f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "4762216d-98e1-40b0-a323-65d9bd9e5305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bbe6ee-5a18-43fe-a5f2-2087a3868807",
        "cursor": {
          "ref": "b405c746-21c0-4ff2-8ff2-a5624ea1f0d1",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "80bd4aa9-1e0a-4666-b933-e98021646033"
        },
        "item": {
          "id": "11bbe6ee-5a18-43fe-a5f2-2087a3868807",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "26e0d80f-ab42-497e-a8a4-8dcc0020db8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65f12b7a-d02f-470f-8999-c07e79f4ef4c",
        "cursor": {
          "ref": "0136c9cc-4c4a-457c-85d3-85c4b6d8a0f3",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "bf01cb60-c2b3-4c85-8fdc-92873bb54c2d"
        },
        "item": {
          "id": "65f12b7a-d02f-470f-8999-c07e79f4ef4c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "03de63b6-8688-405e-b20b-98e913081220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9c66ca9-0b76-4e8d-a905-0de164e174ae",
        "cursor": {
          "ref": "f8ba5fd4-92bb-4a99-9073-81f58483d310",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "2c3fa187-4b06-452f-b420-ceaf16cc694a"
        },
        "item": {
          "id": "f9c66ca9-0b76-4e8d-a905-0de164e174ae",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "73700af8-759c-47b7-96b5-a0eed6509e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b3e9db-8896-480f-9389-c2c366b99508",
        "cursor": {
          "ref": "0a51aade-15a3-4996-8b48-35c901c4a60a",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "2f382832-17cf-4f31-8e25-9f2d8ce7dde2"
        },
        "item": {
          "id": "72b3e9db-8896-480f-9389-c2c366b99508",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "68990363-4b8a-4a83-86d9-3fc89cc9e515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b00a7c1-be85-4364-95b8-1dbdf1f898fc",
        "cursor": {
          "ref": "38bac933-09ef-492b-9d74-aee6ea76dcd1",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "4e0317de-720b-4589-b3a1-9c9fa0c75917"
        },
        "item": {
          "id": "8b00a7c1-be85-4364-95b8-1dbdf1f898fc",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5b0ded5a-279e-4772-87dd-ae81dc1b6485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c38e1cd-fce7-4dac-b2e5-897bb56bee47",
        "cursor": {
          "ref": "8005e32e-74ca-4b91-91d9-1ac091ded19e",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "d693365d-170f-4edb-b21f-89f8a285719b"
        },
        "item": {
          "id": "1c38e1cd-fce7-4dac-b2e5-897bb56bee47",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "271507b0-d844-496a-b583-ad7e3282f1e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96d2439c-9a83-4691-bb55-2f9e9896fa93",
        "cursor": {
          "ref": "5bf53587-24ca-4307-bfb0-11f6ada3241d",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "d5340bc8-e648-42f0-884f-ae11fea216eb"
        },
        "item": {
          "id": "96d2439c-9a83-4691-bb55-2f9e9896fa93",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b0aea6e1-5877-4c79-ad22-ec86bcf0a19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d18d3a-281d-47e4-a8e3-ba6da0240353",
        "cursor": {
          "ref": "79902b7e-b621-4a17-82b0-b288b069648f",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "025abc54-4c46-4253-9e34-094f89820685"
        },
        "item": {
          "id": "a2d18d3a-281d-47e4-a8e3-ba6da0240353",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f9aef082-fa99-430e-9f81-9e8cc1e123b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64082527-42bb-4a9b-a3f0-7bf3f5ec493d",
        "cursor": {
          "ref": "9765faab-32af-4166-806f-7434e7328b8b",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "1ea6c757-e18f-4bce-83de-7900c5c199b3"
        },
        "item": {
          "id": "64082527-42bb-4a9b-a3f0-7bf3f5ec493d",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "4b9b4fab-b68b-4f64-840c-79b8cf18027f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303802e9-c402-48fb-bfd4-97ada9fc2080",
        "cursor": {
          "ref": "a61b891f-ff70-491a-8768-953095ef6b89",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "5f3d596a-29d7-4187-908b-6b00e18d35b7"
        },
        "item": {
          "id": "303802e9-c402-48fb-bfd4-97ada9fc2080",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ca761252-3ccf-4ffa-b5ca-3fc5393872b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1414c9b3-7849-4a95-869c-5142ef558d96",
        "cursor": {
          "ref": "dbebd447-e6b0-4f37-a4cc-3eaddfef0136",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "1c2aa4c3-c861-48ce-b5a6-ca2d44097b9a"
        },
        "item": {
          "id": "1414c9b3-7849-4a95-869c-5142ef558d96",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "46c54a61-1d81-40da-98f2-b07ce01c22cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feea3ea2-c316-4e2a-95f3-9db39a8778ab",
        "cursor": {
          "ref": "d0e21b6b-7be5-4c84-b738-e17e747c671a",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "8fc28aaa-9b0e-4909-bee3-bd42d43e1a72"
        },
        "item": {
          "id": "feea3ea2-c316-4e2a-95f3-9db39a8778ab",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "069f1aad-5809-4ecc-a7f8-69c77b32ff00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7be061f2-550e-4cfa-9c09-5348c52eeac0",
        "cursor": {
          "ref": "aefcafcf-65e6-4dff-8c29-b0bc053e1cdb",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "1702d909-b834-456f-b407-244a9a36021d"
        },
        "item": {
          "id": "7be061f2-550e-4cfa-9c09-5348c52eeac0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "92ebff17-cbd1-4f65-a9e1-6710840cd199",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51b27b4f-0de0-4702-a463-ee99247fcb66",
        "cursor": {
          "ref": "19ecef37-d3c4-4e36-8018-4db0a833cb77",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "f1abebcf-3c28-4750-a3ae-7fe6bda6fc6c"
        },
        "item": {
          "id": "51b27b4f-0de0-4702-a463-ee99247fcb66",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a94fb14e-11d9-4410-9c2f-d6f4368c6c61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0368ca83-55fc-47c8-8821-1d8092267c7a",
        "cursor": {
          "ref": "910bd7dc-4f52-409f-83d1-fe99a9edeeff",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "7373f484-63dd-4826-b85d-4937a80336da"
        },
        "item": {
          "id": "0368ca83-55fc-47c8-8821-1d8092267c7a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "3bf70c83-7825-4937-815b-3b79c2bc6169",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9541b5d-b3a3-43cb-8d56-fa9c480f6812",
        "cursor": {
          "ref": "ffa4a3dc-cafd-4cd1-9c99-d52e3bfd47e3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "05b2568f-c88c-4321-97d7-b33ed75738ca"
        },
        "item": {
          "id": "f9541b5d-b3a3-43cb-8d56-fa9c480f6812",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3f0d988b-7541-4655-8c67-d7d43158b4cb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f00355-4de3-43e1-8c0b-f93d29277e5f",
        "cursor": {
          "ref": "22ae28da-4cc5-4640-b440-9f1d251617fc",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "9af3bdc0-632d-4034-9f88-1281a0665086"
        },
        "item": {
          "id": "c0f00355-4de3-43e1-8c0b-f93d29277e5f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "20313e22-00b5-47a6-8801-e8d15db9e544",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "26446c00-20f5-455a-a40f-c5b9fde65c92",
        "cursor": {
          "ref": "1f8f5466-d5fb-4c09-b706-0d7a5f516b70",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e2bca889-1857-49cd-b9a1-374c59e89810"
        },
        "item": {
          "id": "26446c00-20f5-455a-a40f-c5b9fde65c92",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "bc5e6fca-98ba-4e02-84ba-d53f1ae974f9",
          "status": "OK",
          "code": 200,
          "responseTime": 16,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5485e2e-4aca-46a1-9980-7c61379db74b",
        "cursor": {
          "ref": "059aabf5-cdfb-42ab-8067-4022136fc9bf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f7684b00-ba7c-4ba8-b34f-848f77ef437c"
        },
        "item": {
          "id": "e5485e2e-4aca-46a1-9980-7c61379db74b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de8c0be0-94c3-47e8-81ee-8d30c4697170",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5485e2e-4aca-46a1-9980-7c61379db74b",
        "cursor": {
          "ref": "059aabf5-cdfb-42ab-8067-4022136fc9bf",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f7684b00-ba7c-4ba8-b34f-848f77ef437c"
        },
        "item": {
          "id": "e5485e2e-4aca-46a1-9980-7c61379db74b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de8c0be0-94c3-47e8-81ee-8d30c4697170",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e941614f-73c7-42f0-9596-cc1fc9ef3818",
        "cursor": {
          "ref": "b316f24e-fc97-4bc6-898e-7a89ad94d097",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "d8dad3e9-6fbe-4d15-a4d5-69277e8908fa"
        },
        "item": {
          "id": "e941614f-73c7-42f0-9596-cc1fc9ef3818",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f2c862db-5c07-4a97-9467-b9246094da4b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfd9730-965a-48a4-97af-e66c20799b5c",
        "cursor": {
          "ref": "109b8e2a-919b-4e98-8ea8-ea0405120bc3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0b706f8a-9d81-4cd7-acfb-f69ac55b049b"
        },
        "item": {
          "id": "0bfd9730-965a-48a4-97af-e66c20799b5c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2730ffea-9fdb-43a4-89e8-951881bb87c5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}