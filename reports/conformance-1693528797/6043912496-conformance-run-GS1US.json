{
  "collection": {
    "info": {
      "_postman_id": "faa02ea8-9433-45af-b9a7-893a98130da9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "9ff97f34-4c7e-460f-a68e-ec13c657649e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "73cd34fb-e65b-4707-9143-798dcfdd386d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "974aa069-a8d8-4a8e-858c-5e6cb5b75e9f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8752b60a-7e72-458d-945d-23ba0f89034b"
                }
              }
            ]
          },
          {
            "id": "04bfc283-0b40-4cf0-b85b-aa62f6a0aacb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0356becf-6b4d-4765-b7e4-c80943c3f0ca",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9a85edba-d1a5-4f1d-86c3-88cdecd48eda"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "21568e12-eeb5-4068-a988-ac2ef3cb024a",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "181424d0-0780-4948-a2ab-ce7cc54e1306",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f6a93c93-eb39-42e6-ba61-efd1ecd5772c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a503de5-9e63-4eb0-a07c-649046d00713",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "625eaf30-4ede-41ad-b68f-aee488c65ec1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f0f79859-b39e-4c89-aed1-2dc8515c68b5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e09b9277-8b14-4093-8de2-59b098867d39"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bcb5ada5-624e-41bb-a561-3d1102d28c0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "950aaedc-97ed-43c6-aca0-441998424069"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5aa0d474-18b1-4e6d-b852-e13efaf9cba5",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "19bf9e05-8968-4118-8526-eac1ebfad14e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ec3b205b-7ee8-41d4-95e5-7c40cf49a5d7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b13aa2e1-5c8c-471c-b2db-e26e168fdecf"
            }
          }
        ]
      },
      {
        "id": "17731275-fff6-4bd0-92a1-481bcb610118",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ef443866-b7b6-4c15-a319-b59fd70067cb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d1ad63b1-9085-4b2b-971c-ba3b7e9c1dfa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8038cd2a-10ea-43ba-8294-ac4debaf8c49",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1afa16fb-2eaa-4dde-9d31-ff054bf46029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5aec526-6d96-4017-a0d4-5a3c35962544"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b37ae3e5-d09a-4db0-a4e5-bc770a69cbe0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14269d24-10bf-41fe-81ad-fd46a66dd517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84910d01-15a5-49ab-9654-43ae7eac985a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426a0b5e-931f-4898-b63d-432d693841d6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c14b230-201f-4839-8c16-90dc4ed737ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d39d852c-ef81-43db-adf0-9ae4b8774acb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fd730243-ed09-4abd-8c7b-45ea647dee28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "cbd960a9-9d28-4ab0-9662-5d343c850376",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9752a9d4-2d96-4bb8-896d-d4e7bf0dec17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19a7e2de-00b0-41a1-829d-9fab7cf1d652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029c5121-c664-48da-b29b-5aec471e865b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fc1a960-ba6e-4f86-880f-15a72b2b9ff3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e9bccde8-38ee-4ae1-b86e-5245d2eec934",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b25fce2-90a5-48b0-b435-f269eadc110f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "31b55169-9982-46d5-8485-a92d1bb92f91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e5dbdec5-0f65-4d0f-9739-c5c2c823f976"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96f91faa-bbc1-44b2-bac1-6af8843167d5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4005688d-8a34-4554-b031-d211178856d2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2837978-f5c6-48f6-841c-86f0ec342a81",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "60cdfaed-449f-4c95-b64a-5faf310b88a6"
            }
          }
        ]
      },
      {
        "id": "3372a39d-2b1d-45b5-8e2a-7f3636ce667b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "91d2f6f4-ef9d-4f29-a725-2ad7134c1635",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3fbe121-d085-48aa-9585-1aedf1b31a40",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "77a14c39-30ee-4a05-a027-6b1b278455da",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca3270d-e8b0-4152-a277-7b5daf90bbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca1c579-6697-4eaa-865b-7ba19afa6f4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6192356a-ef8c-4460-a9d1-39c7389ecaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e20f021e-9f00-4fa8-b48b-490d7e66639c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03d1432-3eab-43f4-bb43-dfe027f745cf",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6ef0ac1-3069-4a04-9e12-10da2146decc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0605ae4-0b6b-46e1-aaa8-735bef6154bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036973ba-ccdb-4bec-90d8-674cb8b06a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f44f6ab-5b1f-4460-b956-5847b8ae34dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67918dd-2d33-413c-b055-18139eaf8e0c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e38eee1-a0c2-40d9-950a-e6873bdc2054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27427cd1-2c13-47a9-a8dd-f0d06662c219"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42067d61-e8e6-46df-b6b4-bde94ffc74e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f50e129-e441-4abe-a2fd-a8a209e19628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20c8e02-846c-4a7b-ae5c-e14fe7f5b644",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c48dd242-a617-4e8c-96fa-59fab07d7d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da42dc6-4f07-4d49-960c-9194a1c48b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f14537-4cde-442c-9845-85ce41e33fb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6bf8d52-333e-456e-92aa-ce1f925ed651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5aa1d81-a9d9-406c-9f0c-464429e07647",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6152756e-9767-4642-85ec-ce287d27319c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff4c247-5223-4a9f-bf70-bec2cf057fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc31f25-3dc8-42fa-bdf0-af0e9187f301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b98fef3c-428b-466f-b02e-d49fc452102a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc6962f6-ac47-4465-a69b-90840d2e0e8f",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85890bab-d101-41dc-ac87-d75676855035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4204439-cd8c-42f5-b2fe-347bec7f187a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fb5dec4-8c71-44ed-9ce7-ec8d3a48bdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bf663d1b-bc63-467e-b0a6-c3086ae0f504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62bf3113-d6ac-4122-b32a-a3fc6317cbff",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0e0625f-b3ab-428c-a392-71413cb29eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392c2dc8-626e-4dc5-9273-8b7f4236be85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220aa045-2352-49bb-ab1a-fe597979eabe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac466da9-4401-4623-8ddf-8ea49d1d0b84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c991249-ed4b-427c-bba4-006c5bb20cb7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6fb1b3d-46ee-4b69-8300-33e375593fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6085da12-75fb-46c7-8cb7-49d0e028c1e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "504d3e15-4571-430d-ba15-22b8e7881f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1d4e69ed-fd66-412f-a950-ab1ae529100b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b4e965-4579-4d0a-8f77-8d188caa2a25",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59688fce-6aa3-4971-96b5-52ee6ec87536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2437b845-2566-48da-ae9f-fb2af5823b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c632077d-0b87-43f6-a0b7-2214e11a7305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "673b5507-7f33-435e-8733-dea9f012adcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d07f5ee-be16-482b-926f-171811e8d327",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afce2073-c29b-4fd0-8c17-802624731161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "101c8529-b259-4b67-beb9-5e27539b9829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9f7ca8-1aee-4731-8556-5c9b0d21a765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "075672f1-6073-4c39-adbc-047960bbba48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "668849b2-1491-472f-bcc7-920dcc77992c",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c28d41d-7d58-422b-a415-d03be02e58f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517afa04-e7e1-4edc-8986-384b9fd14ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d964569-9027-42ce-8b6e-a604a24b6fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a5a5844-dfd0-4c31-bb5d-d3bb374d0d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5350f2d-b747-4ce1-88d4-02316f5797af",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86e1df2-ec28-4641-963d-91e3b43e3a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "483e5dd7-d218-461f-b2d4-f166bb018293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6624a0bb-d271-4fb7-abb1-043fb9e1f0e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e9035a4-13a7-434f-98e5-da71fd5ec872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472fb199-53ad-4361-94bb-d111aba28a42",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a0a9e1-6707-4d71-9f58-248dcb1daf0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69e4a43d-1cf3-4ddc-a648-9d5415cda239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "083681df-612b-4275-8fd4-07b06fb43a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "37aeebec-994c-4cf7-aa88-9b85258f9aeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1316e8c5-cc54-4baf-98d9-84a48e4af778",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53361769-a295-4e3f-b59a-4a2592d043cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b1c6808-f03e-4d3e-965b-e3d579df4443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0207096e-6736-4d3b-a0fb-bae2af947bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "890b9f05-b598-4380-ac9a-6855e77502bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01cc1b9-3ee0-47bc-b701-36177b56fdae",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aa989ea-8bcb-4a04-a296-d1960a507227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa52517-ef75-4a25-a9f1-587cc252d800"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715e1ddb-58b2-4f77-8d8f-92d947dd2e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab0ab48a-44de-4468-b38f-d36a89e9fbd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b085935-f3b2-47a1-ae96-1b1d06c9fcea",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7ef00d-d5ee-48c6-b4fc-1d79622917e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294891b6-ae75-438a-888c-11aa62ab2e7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9b0ffc-9b07-4044-bf07-ca93f6a2342e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39409380-c4a2-4374-b363-74d07a11c3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b76052-b1be-4f26-bb0f-0f9a94167350",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95676ba0-42b3-4ccf-886c-0b2baf1a7b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c02822a-4015-4c47-91b7-065d04efdbcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20471548-41af-4a22-b9ea-bea7d621588e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d255073-4a54-484f-b081-6aa83b64cd92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fed977-dc89-4194-b1cb-bf45d9c9790c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a092578-7fb0-49e6-bd04-24906d76bfee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f60be03-2bc5-4158-b6c0-880609be072d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a04ba9c-13e0-405f-a4dd-9d5d6ec7d0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ddc9a5a3-2018-462d-9005-68d9888170e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75d98a4e-2c6c-4e33-9544-f9982333a48b",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8460ef0c-1d2f-422a-a3eb-c928bc195cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d44a2d-889c-4037-88a1-327683583fd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312f5936-a768-42cf-9781-09b85ced494e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd9c2a9-cd71-40b2-9bc9-d707c7e57bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2367025f-671d-4909-aa2f-2dfb4ce291af",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "206daeba-a492-440e-a4c2-d5fe9d7f6855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85967eaf-3c7c-4478-8c11-54aad0686325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80f9c248-685d-4fe2-ba4f-b71c56d81346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04c3f5fd-de8f-44f4-b84f-fdf2b7f1a770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a4acca1-8a27-4a4e-bd05-53276dbd9fba",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a2f96df-9dbb-41ab-9327-2e90eb34ec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc6e7b5-861b-49a0-9c16-a3cc369df35e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90074236-92cd-4ece-a0d2-d62cca4d6c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "575aba9f-6bb1-4252-8f27-08956cb93078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a80fc7-e8a1-4563-8b9f-1982df1a5f6b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c874b75-f156-4323-8100-d0497bb15d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c555b4ee-f410-4104-bc56-7da43f3ce744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9e0b5f-a7c5-467d-89c9-1f702fcba405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2de27f0b-5081-491e-9856-07c76e19bc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6947ed3e-a420-4f2f-bd7f-4008f10692c2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5520f1ba-b83d-44bf-bff3-0741b32b806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6db627d-e84c-465e-83c4-37d40f2b8586"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e039c3bd-1bc9-498c-9ae3-26a990ba116f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b5447ff9-03ee-4697-8651-9b4e5cc99239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad2c3e8-a38c-47c3-a7ee-c6878cff53e6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23a3567-c86c-4f22-b1c6-01307e4f0f4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c96175fc-ea3c-46af-ba3f-29a98112f432"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46eac0f0-5a7d-410a-a6f8-a886432d9161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ca6e748-557e-4376-9f1e-5e09801cbe59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f8cdf6b-e71a-46c5-ac9a-c8d7cdb1d762",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a97bc6-0c4b-46d4-8942-0a7073aab5d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7229d158-6d04-4d39-b638-1c5116adc691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47dd23ad-8d02-4a8f-88e3-3337bfd076dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d3d547-eeb2-4840-b1cb-ad6baa818381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b83f29c-9ed0-400b-b2f5-5c0d20f9264d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc36725d-e3d8-4122-8ee4-885283e1a19b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65ca5aba-7b77-4f10-8601-664b51a0d9d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae48150f-19e5-4bae-8c10-b64d60f33503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8ef27a9-9da9-4fc5-ac02-c0e15d98abbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db35e23c-f90e-41db-aa57-6c03d218bced",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54c1511-1f8d-4c40-8549-55c0d1200a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23386f0a-c9d5-4753-bbfa-bba5c86922da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a74117-6bcc-4554-838c-83e8f13162cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "853bcb09-8844-44a1-8bc2-359644b47e59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd002f26-f29e-4d34-bf61-0d7cbd8c4ac9",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c56757-3722-4887-a4d7-f8ae81be95d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6d217f-5878-4b7e-81ae-dc0e4ad1e8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "625b50d7-eed0-4c83-98a5-dbe9cbdc74c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1191f0f3-b034-4db9-afd3-0863d07c547b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b51259-47d9-403e-9adf-351697c0b77b",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30270d2e-dae9-4fdd-a6fc-c0d995b5f7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46de1f06-8532-4c7b-b2dd-aa1c237d026b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68486c2-4a1d-4abd-8c1d-2eb3dc6b8fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ccfd22-0679-4800-8ca3-b3c6fd433a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf3f1b6d-7f65-4e7e-be24-0e27cfa65722",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ada472-fdcf-4f3b-9633-384edf3cf9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cebaecd5-a351-4ca1-a019-6c45a1e3343c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07153429-3cfa-4d1e-8212-0b4c376da5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f54dcb29-f9ef-44fc-9dda-1ec42550e4cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2feefd4c-fa0f-4112-ae99-b7674ac75e55",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0168641b-56ca-489b-bbe0-bf4d38ee7f21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a6aa3c-3010-4b68-9b12-619bff85331c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a52e56-a47c-4c1c-baec-b1e507597d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff765bf-9b9e-4dca-bf6c-d6d360c42961"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e45b0b65-8568-4b15-9b6f-f74e4eb0b87b",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa93c3d2-f196-433d-97b6-11a07ba9f49c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bafe9f41-139f-4846-886b-e4db11a8f036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f3c5590-2367-48c0-b4d7-228c57a36851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6dc94df4-57e5-4f78-8e9d-00baeed69b81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75636b66-0a3d-4343-acee-6cb7a1cdda39",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3a0bb9-c75a-41bc-9fa2-1538773bd417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2536164-86f8-498d-b035-efb89f5a4ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0508b21-beb6-4e7f-92ed-563ee295331d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a75d54-bfba-4911-820c-489d6c66782a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04d8b649-319b-4f08-a29c-446cbb538b16",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c61ee6-bbca-4d31-8e7b-3ce3b99adec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e76ca3ca-6c7c-4723-a347-6bff244925c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f3e2082-147e-4981-b9a0-950fbf01c4bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf280333-4ef3-4b86-98c7-aac9a7f04b53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f3edebb-9dd4-4bcb-81a4-c37b3886bd10",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2bc481-f87e-4f4f-a27e-84a72549dc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e440c44-bb08-4aee-ba9f-e8f7418a48a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bda44de-da56-45c4-a687-e1cc67cde07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "006061c8-87e4-40a5-9774-e63f2636aa5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca415618-32b5-4f27-b0f4-60c2787b9574",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1206c6-6077-4079-9fcf-2e0709571ae8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04ad25d1-3b10-4130-a386-79dfc14e9f2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0927adfe-6f6b-4e5d-9c3d-1b21e8168c89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a8366ac6-6598-4d41-817c-fecbe9bb158d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac27ff73-040a-4d10-9920-6c09c781f344",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92524033-863a-467d-a9b6-d756dfa7eefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20645d33-a6ac-4296-b92f-f4339d3864eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1513db4d-ec4f-40c0-8c9f-6ba028ae74a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "332917cf-5a4a-4cce-83fd-f13d845cb00e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c8809d-c688-4573-93c8-de1caa440623",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21e1907a-ad7c-48e7-a686-96663a2297d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08ba67e-e272-4a66-aba1-3d9df861dca5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8d884c-adbf-4b54-9e74-42ac3023d23a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "371dfae7-4669-44ce-9093-6e233ca9afa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76d1d64-79d7-4724-8574-3bb81fb5f596",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d92e332-1065-4eca-8447-04580d134401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52e87f4b-58ad-4bf8-8f50-d074fe3453b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100d9977-87c3-4bc6-9a0b-4a74e8dcb325",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d00128f4-88df-4809-b5ac-964e52708192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6068b5c5-c836-422a-bf22-04fa9bbed0c2",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55eeacb0-eb87-4538-b3ed-8b2c390700ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7274b6fe-166a-41eb-9dd0-f3c6a17b428f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8994f757-c3ac-4291-8b00-3df0dd2685c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1007acdb-c546-4dd1-a9a4-a281a164bc62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27bcb50-760a-4760-b2ef-c348483177ae",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4aa621-4d63-404d-af92-09f56ed8b3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae2956c-0ca5-4645-b9ae-8469ea1c1572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72d90085-82e0-4ea2-ae21-38d8c3c17ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "41ece874-cecf-473c-b90a-6b44995ecdac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3b3826-c152-43a7-9b62-e26498c0cad4",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafdb2ff-6e49-49b8-8d18-e16d4d47ac98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02c88da2-970d-429f-ae15-0b03562c7768"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd21fc94-39c4-4f07-9a3c-2e465e8a7d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a36608e4-e1e7-4644-9778-f43b92fbd089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533388e6-5a9c-4b85-816a-cbcc3fe2caa7",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39fcebd-c533-40e5-b474-ba65314670c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0adcd3-bfad-4ee7-80b3-698cf7c3476e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e7f77e-43d3-43d8-85cc-6eb8d37059a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "47297f1f-0acc-4681-ae2a-cbc95d3870fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb6c1aa8-1f89-4bc2-858b-70c8b6b34f16",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98fd1e6e-26a9-4e70-a3c1-2c590a840103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac6cd5a-8dc0-419b-ac8f-49988ff3e919"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ea533e-4e9c-46f9-888b-e776e39a9673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "601723bd-d66c-428a-b9ff-18dcdd73828c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0995d62d-203c-4fdb-926e-81d3cb207f6e",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6435600a-804a-4f9f-8454-dfb811042b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58a4cc67-4be0-4c89-bff2-779f136cf9d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd432e1-a3de-46a8-b187-e280e4fae624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afb82165-ef24-4810-893d-2497d5d696a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956a7dda-1dc9-41e6-869f-c05d5f107992",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f87ce9c5-88f3-4517-87b0-4df27f47462e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09aed819-6c64-45fb-a751-10d67f829ab2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d2f90c-1344-44fd-89b9-078359780786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6a86b96-2fa5-4e3c-9130-51c366632afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea05dd11-e873-45bb-b0a1-93494bf8555a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af5b8eab-67df-4c2c-ae8b-9f44f4354283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cedd66d5-a2ed-402c-ac3b-06ddd9ae983b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e843fe-d095-460e-aec5-da45f0936836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f6c3dd-35cd-4e4f-8bed-49d6e51cdd7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d326a5b0-cbc9-4fae-bd7b-9b7b30945ecd",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b38dba-41de-4db4-b87d-8a170d9e6607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb9bd18-0dcb-42bc-9a69-a63612aa13f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6800a75-409a-49ca-86ea-fb98f4803ee7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "26529026-c41a-4aff-ad5c-1be8772dbd10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e16ad2-21b6-4fbd-a5e9-cde9ccb636db",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7e5e37-4874-42de-a86e-236a7a11df55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8173fe4-c102-4457-89d4-e0f7972c4556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2cdf8bc-58a2-40ca-8df3-d08dbcd68667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d31ccba1-8afd-42be-a5a4-72e1dca94c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67940c55-1420-414d-8dcf-e9d8d718df75",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c417fb10-f7b9-4c61-8833-3efae4f80f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ea00ac-3201-4884-8087-f4c6d32db9d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33447a0c-c433-481e-9191-136637a31a8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d6738cc3-d894-43cd-9ecb-c2af0ab61ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff5fbc2b-ed80-444d-a69d-6ee021488b47",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "884923d5-1f5b-4ee2-a2c7-e578ecff9ed7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256ce0da-3075-403c-81a8-48971be33c9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0043e826-4d97-4cc2-b634-53e4562708c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d52c6a-e216-453a-8508-fc034365254c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1b540a9-c6f6-4850-98b9-4b1041aaf40f",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "548422c6-7f61-4134-98d9-93ab6edfbda5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14cfc739-d73e-4cf2-9c18-75614083ba65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4751564e-bcc4-45e5-886c-f8a12036bf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9ed9b67-31ef-4b49-8720-57fa898bd034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fddb01-6d8b-46fe-a64f-5ab530ee2a38",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2f2e18-ce7c-4f4f-b4fc-234e14644b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f75f0850-699e-4541-8f6e-8117f48be17c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429b157e-0e6a-45c4-9503-00baf209f8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3974db7-6813-49fe-beee-84e7feda8696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7917f9ee-7f74-4d89-afaa-504d41edc327",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eddee83f-6648-43d3-954a-95e9e7fe96e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae10c09-e974-405f-b0fb-89531a4c3170"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c65a8e5d-5692-49b9-b97e-35ea1e5f2d0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa9d8b9c-67d7-4418-abad-8c71ac9f3954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9aa1e3e-035b-4944-9d1f-55a0869ebb9b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1208a4-111e-4647-923e-71400fecd4cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87873dac-d48c-4a52-a3a8-1119e3b04ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cba2fd-c6c7-48f7-93dd-34d563eec3a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa86953e-858c-4147-864e-efaf29cbdf96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40915a23-ef78-44ef-b5a8-4d7115e10631",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd18404-6099-42c2-a7d9-ae7ce08ac0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b35a5a1f-739e-4ae5-ad25-ce1019d46a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "513699f3-0b7a-4c1e-9d96-6767bff20ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "d782b2dc-ef24-46d3-9466-a282310b88d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ed019c-2fea-49b6-83e7-117598071fc4",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e86f82-4bb6-4aee-bcd3-59827fc3daef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe3e822-490c-4a18-860a-f4c234a0c302"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bef59990-5301-4d46-8541-6042a602ae64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bfc71be-fc56-4fc6-a378-77e7784482ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b32ff4b-2e5d-4a28-af5b-36a4b03a53a0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1bc5227-8cd7-484e-b951-202455c860b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577aef93-91e2-4269-b280-9b7289489707"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6ceaac-406a-4869-98a5-84d78ab8a3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc87b87-11f6-4f2e-92ce-a20e8ec8b2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe76dc9f-1e86-4104-bc8b-a465f737551f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b0d1376-825d-4c1e-b0b7-64d32334a8e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d79cd5-4bea-4fe3-9c87-54330056f5aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2a729c-8713-448d-8995-fcf1fbdf7699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e1684adf-b6fc-4289-9b2f-8fc3c412f0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2740bd6e-8b39-433c-bc53-8a924c840594",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69573927-356a-43f6-9a20-a26b583221bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b5d9fbd-3d40-4d31-ad67-bf1743b7525f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2225395-4ad6-4d74-9a4e-9537ed4d675f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "deb5cf39-6ea2-4d8a-865e-c11de6035d62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961cfc53-76ae-4b2d-a3b2-4f8c32193900",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1f4d3a-32da-4a22-b58f-bd18e55a6e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da2b836a-0632-4401-8dbc-dea02447d042"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74add6ea-bdae-464a-b072-c08637049ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e6a8aca-eb33-4af5-b46c-602d46c68c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f3d8201-2c39-46f4-af5f-46dc76de8dac",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dd220f-7817-408d-9a02-4ce166419933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c134f8b-a90b-424c-8209-5f4b3b19a063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7bc478f-7bfb-45ef-a985-96c1b54bd030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "08506259-7d3f-46f5-8410-8a4ba4c36a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44e1c9c0-748d-481c-bde3-72f8d99cceac",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff1b740-5bdd-420d-905a-cf3cdd5718b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0058ef2f-4439-4828-ad83-cb1d9982094b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6dde221-f4c1-4edd-920f-dfe8c6a7b55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c53f3259-8d64-4c70-9f61-c81ed76034a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d44f35e2-f9e1-4e1d-a848-f1b88cf90aad",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641d0e56-140f-432e-90d9-344e79e0cd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db579335-0a9d-4afd-a2e9-ac8d8853b517"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3b62b3-8879-40f3-ad71-7db14590efbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77f1fa9a-bf77-46dc-8bb4-e701ae6493bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efb94b4b-d01a-4ac8-847e-75f1eaf83cab",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acbed28-13d3-4f81-9c77-2d971eb56a5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf4543e4-4f52-4f5c-9876-48a73991db93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d936e75e-f078-45b2-b0a7-cef92f00f25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b48c4d8-f549-4149-8e6f-b8d27ec3c71f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ae21b5-0243-40e3-a8e8-10854c7b762c",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571e2a9a-0a57-44e9-b1d5-1d47eab0127c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53df63fc-f4c1-48e3-93ee-f451aa3b493b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47970bd-787b-4938-a68a-663754125847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70d27a6d-1849-4c76-acd2-1c748bbd2aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db23ed3-646e-457b-8704-5a23641696c5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19c26629-481b-4118-90b4-0ccf6be991a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8ef0f6-eb42-46af-b08b-035be7395987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b8e8050-0465-46ef-83b4-9881a3a1de2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "946e2032-4488-45fa-8971-5b0d9c35a75f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3b7eb4-889f-4411-8390-dfb22088abdd",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f87545f-2c78-4048-945b-b3178850911c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18eec940-95f3-4c77-a3a0-9d82748984bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f5f15c-4c18-4a69-b6d5-17cae3e4fb4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9a940250-f149-4be8-b07d-c29863335fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a008febc-144d-4453-bf97-de5ac292fe13",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c040275-51d4-414f-aae7-ab4b94839bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1af9773-6bdf-409d-b90e-fb69f3ace739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b6d511-2cf9-4daf-aa01-8e4c6861fffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d784856-a179-46d6-8333-ab8efeb48526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f674ae4-0fb3-4045-8fe1-3615aff7d742",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d0b42a-36e3-4384-9301-4926ce1bcab0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73e8d14a-c0a8-4e05-a365-d64b93b1d9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc0a183-ff7a-472d-8a9f-b00a88292ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "786f2a2a-ed33-4656-91ff-e57bcec8d907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36eee0a7-0ae9-42cb-b1c7-a71d219c60a4",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56f9878a-48f1-4def-904d-04963009a7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3bd510-2424-4f7b-921a-e337fcddd1ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b0ca3d-faf4-4018-bd4c-8db69486c6ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d6f36ff-ce5c-407f-906c-e970bacf39fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8672965-a29a-42d6-bc6a-944de33da43e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99031ce2-ba01-4fe5-9dc1-aff69b4e92c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfe71acd-6b63-400c-8112-3d819eae5b9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e1c06fc-8ae5-41d4-9c8b-15645a664911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e5480e1-a2e8-4c32-8db1-f6e7e1ef1052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcded55-8e43-4f96-8f3e-2c25add81b0c",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c798cdd5-92e2-46bf-b06b-c3f08528c434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e112200-edda-44d7-8885-eafaacb945b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248bcddb-86cf-4ba9-8158-483978f46371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55886ace-3d69-45f2-9d95-9756aa28101a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1d1040-13f0-4483-b407-a8092eb6b688",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2c32ec-da05-4b58-9a9e-d4b41a5f637c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cc09eef-7f85-4715-aaa5-1a3bbea63df9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "812006b5-999c-4d2c-b90b-1ce7643830df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccb92b6-19be-4e64-a0ed-bbaa569f755c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fa21b8-5055-4b78-be94-a6b1e5e5cb8d",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab1977f5-37cb-4f07-8c3f-0d2355a386f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f229205-ea55-4e17-a6ce-a5ed4f17ea89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae54acb-9714-4898-b101-e0c73a35694d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "54341bd5-a141-40ef-97bf-02d0cdf1d329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e88aa27b-1d93-475f-90e3-5ea822519ee6",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe09c2b-edfe-45bc-9f68-e481627c30a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b95907d6-2b11-46da-abc7-40f160e75101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f2012a-10ed-4713-9886-601ba1844f6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c456b9e-5005-4722-8061-16b9b8a44fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b2cb22-bcb9-4550-b345-8a05ff0b08b1",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f68d04bb-a727-47c7-8c70-2f932035419a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f2085e9-836a-46d8-84ae-36e48d41a754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47571808-033f-457d-8444-922651733138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0874e41-a098-4059-ad03-b4a8f013784c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f69832f-0132-44c6-9db0-c288c4bf149c",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f03aa63e-fef9-4629-bd43-83c757e0033f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12791c87-c7f1-47f0-9ee0-590b2118c61e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723653d9-41a3-4fd7-8735-05a2e7d45c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a07c7b80-2e57-411b-b8c9-a1bdfdee8d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e9f060-ac28-445d-9544-67eca7dd2821",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62602ee2-cac1-4d06-8274-9eee0e2cf96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c04198c6-e96e-4b43-9795-fcf76e52cce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d8170b-58eb-494c-b77f-6e338de290a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b25f7100-5bb4-49eb-be88-d3b8d107bad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09b2c8e4-1e57-48d7-8498-d93c846c8645",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e93cb363-9d8d-4cb0-9971-024f9008327d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28b9ef5-03fa-423a-9b4f-1c98bba7cf8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9766faf8-fe25-4d89-9982-825931df63ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "22512608-4b33-48c9-8850-8ab24482ddf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be1eccd1-2053-49b6-8a6e-fe45f3c4bb1d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7551aacc-83be-461e-b46d-75414757ea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "199c8804-c924-44a4-8a03-ea00b5c7b04f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e91af5-bd2f-442f-8c7f-0974771a4d02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3025392d-6c6d-4275-9620-7ebd8df4e1f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff52e1ea-56af-4019-bb5c-ac8f216152bf",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "678779c3-5e7e-4fb5-8b29-1a9d6be31ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86983ea3-9842-4764-9cf9-6d8201921477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "068630ee-8a28-4dea-a2ad-9b12e3469039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d627666-8ab3-45b5-b6de-bc25018d7f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "514c63de-c7cf-4625-b291-db2d7749e8bb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c232fc85-933a-4858-bf2b-12163e5a135b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d021b0f8-de09-482d-a94d-0946c926285b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55126944-9491-4253-9dd3-072998d85679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59ba09be-efc3-498a-b613-9ff9da9aaf0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f618d107-b6f4-4553-ad5b-aac5b5b27df9",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bb6f072-35ed-4e4d-bbb7-1086167071ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e3f9bb7-2c6f-4954-95c1-9fa9f99ddfe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8c88c6-a2a8-4654-8715-08a819a40373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "84f80032-79e6-4d9b-a257-a45c5a60a889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e63b673-9aed-42fd-9e4f-3adf6c31bf34",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd67a5d-bc97-4c84-af62-f756e0220c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e1724fe-60f5-4c98-ba21-98ea91529db2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be903c5c-f801-4734-8de7-9db2b7ef0ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c4c04690-886e-4a90-96a0-e4765ae14380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8155a93-2b55-462c-81fe-4f8b293e2afc",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1519211a-bc63-4b1e-ad15-d3f6a3dfdf8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc8b7df-ce90-4198-826e-ee29265810b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4900341d-49fd-443f-b1df-9383f1a3d756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b36b47e6-5109-443a-9f88-de98a4a75929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c6f24f-1260-4cf5-aa3b-f2d49f4f36b5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c104e029-cba4-44bd-a23a-4d320b2fb625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb134185-11db-4efd-bfaa-af3c3ebc6a88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8114f37f-d50b-4aaf-9bea-1bacc194d7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "82fef936-5dcb-4807-b0a3-3d14c6f05c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc27e05-e9c5-493c-8f58-adbc864e898a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f255b88-1df9-489a-a97a-46e264724bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f128c441-4e98-4f07-a4bf-35a010aa31b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b46b300-4e1f-4d94-98bc-9e95d0178201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5c5d9c4-d035-4948-9a8a-7347d8b3f826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b6107a6-f988-456f-bcef-33236c8dbafa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f4eaa4-5d39-4a52-9f35-20ba640236e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f64ca84-a831-4616-9a29-d9f8dcf0d2b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6de05ab4-25c9-46c9-b194-22766b6c5e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "be9a1b99-22b3-49de-a50c-4abf3e8feada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48beea88-f7ca-4cd3-b8c7-1a28d3ddd87f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68c1a67-d97b-43a7-8615-be8cd726a3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47895d49-d47d-46cb-be30-969ae77ab7ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d5aab3b-b904-4a47-b695-c07fad5ec441",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "20166276-3769-4e0d-b5ab-b657b087969e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da8ec6b-78cf-4a08-89bf-42aa5a6bba6d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fa72d92-0112-48a8-8260-1962adcfec27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630a5005-6d7b-4c70-a0a1-678b92250c3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ba9b77-2e76-438d-8598-e931ee8a2d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e61535fe-8f60-4440-b305-849c9661a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed3a1b10-6c06-4bde-aa7b-b3e96aa71afb",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6eb1dc-9dbe-4aea-81b7-c02bb8be8230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d126e59-aa42-4ede-aee9-455cd43900de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8168fd5-33ac-43f3-b03a-9cdfa64958fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b6398cb-1717-4537-bd32-64f1619f1786"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "fcce5c09-cab6-4c75-9a6b-6cd5b4d12bcc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a23f1497-3b2d-44f7-9fc6-3cecbfd4f9df",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84780dc3-32c6-49d9-848b-03dad0d18fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8828d674-5341-4003-a407-3688148289fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9263196d-93ba-4ec8-bf6a-80883ca8f6ee",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0465633c-fe14-4a29-8cb7-0c47da5f6687"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6cf97d17-bf7d-4dfd-a40f-2b07e2e81702",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77a52f79-175a-41a6-9a6f-e0ff263c42fa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "918f6c76-0934-44cb-bb65-119d108c1873",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2bf0c496-f0fd-4156-a4f4-bc5b8bd5eb7b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3309cee8-d87b-41a1-922e-bb96c049c295",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "03d2099a-b9c9-479e-874a-42ff71821782"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "6935340a-03f7-44a8-ae36-0cc0bf14b10a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "226a0ad5-0fdb-4a9f-8dc9-770942ec5880"
                }
              }
            ]
          },
          {
            "id": "777d7ac9-f7bf-43b6-8fa5-85b623e60abf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cdf20826-cabd-4498-8522-787982d1c364",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "01877fd3-a610-4109-a774-12505c372858",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1508774-22e0-4c19-98fb-43982db300d9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e434ae2-d8fe-4fe2-b7ad-c754021ee5a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4b9c64dd-a7d2-4813-814c-babf7ab96bcd"
                    }
                  }
                ]
              },
              {
                "id": "a111f1f7-2f2b-4674-ae57-a63d23ed7132",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2cf473b3-1b0f-4082-b1fa-e512e88821f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3a2754e-80aa-41f2-887a-e073d9933a90"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43a65040-05f0-4aa8-b483-524bb69d7966",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6ae0915d-7856-4bd9-91a6-f47b1b28b1a7"
                    }
                  }
                ]
              },
              {
                "id": "02d8aa61-e36d-4bc7-af63-90ef44f78a69",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fde44ce-3c3b-45f2-9432-ab20ad4f0d21",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f655011-13ec-4719-8f2e-a36848172257"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "41c49fa1-2937-4118-947b-4204a536432f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d1ff962f-0ae1-4afd-8c9f-0a643d6fdf30"
                    }
                  }
                ]
              },
              {
                "id": "2d9fb542-c4b3-4db5-bc70-e614793fbb68",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "58e7f33f-10dc-4ea1-ad83-c73c919d7da9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fd9b5d52-e9f6-4975-93a3-6ed9f358bd4b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bfaa2a9-b311-4136-b818-21d2487e0d08",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "cac5fba4-be5b-4a02-8f4f-f2a899642ef7"
                    }
                  }
                ]
              },
              {
                "id": "df3bdae7-cc36-49f8-bf7b-3c98958b62de",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "95efd3d1-8441-4f4b-a94c-526aa1292a3a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9475e473-08ce-4048-848b-84f21fd5cc11"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f19b2b05-4ad7-4cc9-ad4f-2a9f42894263",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "0dd28b82-e16b-4e78-858f-f3364eacdd37"
                    }
                  }
                ]
              },
              {
                "id": "50699e2a-a9cd-4346-818b-e304496f1393",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b784e9eb-e9ae-479a-9b33-5bdea5b15cb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "170da48e-a1e7-40ec-966b-07a269f6aa75"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93e8de01-294b-485b-9c54-eaa8eb362c0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7e272609-0c1c-45e7-bb0a-2eb12d5f1b10"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c33f584c-45b4-439a-a2f7-3facace9c8ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "444985cf-c782-47de-9bee-5f4675f819c9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e2d95892-9126-4338-a7a7-8e383a4baaa0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63a4f27c-e4c8-4317-bf31-418c6712620d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c7edd165-4719-45c1-9477-ec1749e4686e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "01d53a3b-f6e1-4f1b-bbc6-b430b775c0da"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "359338cc-95df-4f1b-840f-a38192c5a0ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "03a761f9-ac01-4327-ac05-8b39c3167970"
            }
          }
        ]
      },
      {
        "id": "f736a9bc-9a32-4b8e-943b-6ab899b7f81e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "b8db9604-0bbe-4a8b-a96d-e54282bf6ea2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a3c0a69a-fae1-487b-b6dd-3dc683bce553",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "df36d672-eab8-4f8e-a1d3-9525006b4a3e",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "019c385d-cb97-4ea9-8c87-b5b75fa53022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83a58082-2863-4192-8782-3c5ae25d6003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634002ef-84ab-4d8a-a7e5-67a28975c57d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "568931fe-942c-4e4d-92d3-30e8a6d5b383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef79f43c-a64c-4cbd-9baa-163928402955",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d54a8a48-c87e-423d-a9cd-3d5b16586777",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8856ea0e-1ddd-4595-9bec-8f0bf7ff0b45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb73cfe9-38cf-4001-b459-a9eef9f3591d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c8e20122-1688-4351-bc42-fde3a1eec9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53076f6a-76da-485f-8bf9-9a45ce636418",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7c80ae-f7cd-477c-877f-2da087074573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ee15a20-7f77-4ca1-8020-9849ba4a8c9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3079fee1-2f04-4f00-b814-8100c601614b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "00141722-521e-471d-8eb2-319362f1ede5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c405cd2-5fa1-4680-a991-a3510733b172",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "995eadc0-6a10-41ee-8ceb-f99ba0d2234c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d854f8-bf51-45d2-b23b-146a55d49d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5705a71f-3927-4f08-8fe4-50afda9a7607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ba9157-740f-4e58-9ddf-b20599e5d223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19fa9a2-301d-4071-b8e3-b443e06886a3",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b9247b-493c-4ed3-8707-687a64a9799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4806463a-8661-4a37-85d7-e5ef411721a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a37dcf8-1608-4d93-9641-e630c5404b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6d6e87-bead-4da3-8ee8-2f6177ebd44e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16103f18-205b-4bbb-819d-9e12142c9020",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e621276-d9cb-439c-8c07-5ffcb11b8cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60948f3-96bb-47ef-a017-47b605233b2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "631f041a-ba15-4a21-bea2-932a3dcc2682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dccd47-fdc5-43f8-825f-f93057e4755f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1a1498-9ca1-422e-84c0-21ba2bd305ff",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b5a8f0-73b8-4464-ab12-43f5dad85bf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b144d0-e39f-45d0-9cb0-7124f4993fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea063598-c5be-41f4-abb9-091ae7f202a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ad0ae0-4715-4313-8ecf-f01731f801d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78877d5e-5adc-40ef-b3d5-f70f17f4773e",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88eab5a5-06be-45d5-ae38-cfd7e036c6b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be3237c4-039d-482d-9574-8b45b5d828d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8154f0ac-e0ae-4b2f-82dc-0621e69ca286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d108f6ba-727b-42e4-a985-811c790569db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ede47c-2eaa-41d0-b3e6-68569be724a1",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb38eea0-9fe6-4bd8-b05b-8a8a89229e1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e485af-a934-42d5-a891-38993af18243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27939b24-0c21-4119-ad21-e060ffb32711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e14462b3-ff38-49e5-8e01-16e31e3c7173"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4388f7d7-c02e-48a1-9a8a-999f32e5d2c4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aecb91b4-a18b-49f2-a294-0a06eb137d2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc5732c-65f5-409f-944b-498708baec25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5efde446-5299-4794-86e2-bb4b35340c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2325cf-276b-46a2-9ef5-1f1375aa8651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62dbfff-77af-4705-b47d-2c614dbfe80a",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d53be3-dea5-404a-aaab-c3dc22df003d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36bd479a-21d3-4311-b415-85fad0183c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb40eca0-b68e-421e-9ab2-5f629e93fc92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "55ce57e9-7a6b-4368-a955-5bfb0f22015f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f409d6de-9781-435a-98e4-5769ff3477b0",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1888026-ea4d-4b9b-97e8-83148043bd55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cb455c4-fe72-4536-ad13-8e0202d2cbc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "385604cc-f620-4049-8746-6d77b7999284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c8912096-2351-4450-88c2-30a8a7ac7f33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6274e93f-b6f8-4ba2-9ed5-449c1d5671be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eafbaa8-ce0c-457c-b6ca-2ec753771c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56cc110-cf78-4c16-9e1b-ae9e51773863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472946b6-1be6-402d-b946-4c6b51c5ba28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a4cb4f-752a-49c9-a801-32226ee15020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bec36376-adb9-4e15-a9a7-4617fa809a2c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "639b3ab5-1d87-4721-ac85-b66bfc9da117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b00bff8f-c9e4-4bfa-a8ed-bbc9fd119584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6438d4e0-3d11-4abb-8eb5-10d812bb8641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f795a0a7-dc6d-475e-a8d7-1f61794efc38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9932a8ba-eb09-4722-a23f-1d2a29f4c2c8",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "709acf2d-af21-4234-8595-49a1c061c305",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0eacf1fb-caef-4e28-8a70-b3f77dfe8093"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aebe6b5b-42d7-4f6c-9abf-710608d99693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "de91d810-efba-4dd2-a693-aef9cfe92976"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c70a96a3-ad51-4399-97f8-134ff333535c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bebed27a-9419-4f41-9177-70d7969e443b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f19e55d0-ffba-4815-806a-99e0d3473192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdc7db8-0b59-45e2-86d4-02e3a0381021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "34a851d6-4fd3-488f-8466-f6861c5b6818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5af88ba-4483-4c37-a555-2a7ef6dcd93d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7a3501-ea2b-468f-9e90-25f33568575d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d1043f-1b69-42c3-a714-129436846135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1536dfd-3e05-4e69-878b-2c1edfc88867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "88464b1e-8905-465a-a9e6-99ca147fc1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "912100e2-c82a-45fd-b388-27574e6356af",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1b9b33-c915-4dc7-9a6f-7f0e704c8606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "750b6127-92ce-467f-98b6-0ed17ba4eb29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d31eddd-e241-4a5d-9a41-9d7e0cdc5eb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eb5ae87-f780-40cb-8a78-dcf0a2c55a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11b86090-5846-4514-a2e8-319abeea223b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08c03bb-9e90-4ef4-942c-a86cbedd9968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131efb60-f23d-4959-8719-9da25961b15c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "859452e3-4f7e-44f3-9c89-874785032602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb0cee58-6d65-4c78-b3b4-428dd85866a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faa7e78-368e-4094-8885-fe96d41c7637",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ebf213-8f7e-4a5f-afcb-db716fd89175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5672298-7db5-4136-8eb5-9796716a53a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39f5346-cbbe-455b-a029-ab7722c1e57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72bda9c5-8258-4109-b67e-1119a67c0d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04abfee-b9f0-4d53-8e29-a3b1ac8d2ba8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b0f0a5-4c4f-46e5-8ba9-3b4ac8739b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "164297bc-21a9-4ba7-b64f-1e4d0776155c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980be44a-3e7f-4cae-ab5e-630bc920214a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d3a0128-c085-4c32-b611-59cfebe5a87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007df4c7-2aac-4cc8-aeff-58668c3f28cf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0000b34-fb52-4c85-8ace-6fca75da408d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5abcee9-b6b7-470d-a5d2-a1be7dc3baca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57b56b9f-b148-436e-a560-fcef18d5b9a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a54a4f81-1510-48f4-92be-e5271dc0a31a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d60cb633-9b5c-4aa6-af55-e9ac8bddc1f7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f5885c5-88c9-4803-b042-31002b649a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "605d02cd-c48f-4386-ab0a-0ed738d2a86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78ea93d-1cb4-4afa-92a1-9e4744ca7fd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9028f4f-04c8-4cd6-a4e1-a993ab455f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cde0fe7-92fb-4894-9929-6422bbc2ce8a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "523b9299-163b-4c07-a1e1-c899dd9065a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66fd0050-c901-4955-840b-de442ece5c0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f60b911c-9365-42a8-a1f2-11b2e9fa8157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecc339c-3c54-46eb-9eaf-71662ae70569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67d1f1ec-7e45-469d-a3a3-f709bba54fce",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8f5ef7-da15-432e-ba09-08c563096208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b31099bb-ba8a-4458-9880-f27f4c977e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288e9892-2d7f-40e6-8e2f-ff8cd1ea9b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a6f88c2-8ad4-4ab2-8611-07d9a04942b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "895609ca-37cc-4648-ade0-f5ad317daba5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fbb1748-2673-46c5-a57c-515cb6bbdb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e881c927-7e35-423d-99c8-14fc9817679b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b7b173-fcd8-4402-a43b-e47fa79826e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eded536-104e-4ef8-bcf1-e0f291f65c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18ced3a-e5a3-4360-a994-facea4adc530",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5a80b4-b16b-43bb-9ca9-8fd01fc8844c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47b6747a-579a-4733-b3a6-0f70f37c193f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8008d0d9-fd85-4319-9532-97fa20516d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a522c940-a8d5-4b90-84bd-d2b434d1cc15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c156df-ab66-4f1a-887c-f142210eeb63",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53070ed9-f38b-4466-8fda-a5166a89b004",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d54cf024-58f5-42bd-af01-4ea9c4d00e52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1bc066-4a77-4d9d-8b72-53c5cafca386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b0137e-da06-49bf-b11d-e18fa4d070a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d6c6b48-69c0-46c9-82ab-c7f85d356a6b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "590ae8b9-d095-4c7e-b8df-1b0c5f578aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b297a59-3f42-430b-829f-0600718f3e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0eb07ae-14e1-4083-a4c7-a0894dcb6e75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81107e5c-4a6d-4475-91e1-412acd863668"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fa6f95d-a374-4c9b-baba-f38fbd1e2f3b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca6d83d-b5d1-472b-8268-7f6805bee350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18dd4dc9-cd09-4fe3-a3cd-64c06f07fd3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d538129-683a-49ca-95a5-676dbf9651df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd6169f2-03f6-4c32-aa20-ccb40e6c7647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1170962-d008-4bdd-bb17-dd92b9c6d261",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b606db91-55e4-4ce0-b380-5804e4f793ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110cadc2-ef42-4772-9589-c0c8f959bb3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be2f0b1-af4e-496b-b840-f9142478c4a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a932eae-ccdc-4afc-abad-a36f971993de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16862a8b-642d-4312-8403-71a3f9898c63",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a68fb30-7154-4d80-83e0-a29d50f5624e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea29ca1e-6d2e-42eb-871b-aa267ea0ae7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "221b3a7e-589e-4b68-aa75-397a6eb56e29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec5c814f-409d-43a7-b876-6aa6c1aa366f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0f567ec2-0509-4e53-a659-c4ebe535e71d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fecbeba6-5029-42f2-8933-9e57d260f2e5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575bbab9-eec0-422e-824e-54d44671b852",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecf4d1f-df0c-429d-8909-730cf9d234e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be523602-bfb6-453c-b8d1-6fcd9f8be2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d45cc646-32b9-4af9-8ea2-e5f474c60bfb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "080978a0-0cfd-4adc-8ea8-d8b419e80608",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6d66fba-9375-46ca-a55a-93953be2089f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7376ad73-235f-49cc-bdb7-a0664ae8847d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d1a780ce-04bc-4f1a-932c-eb6ddffe835c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "517bce61-e69b-42fa-8390-b721213fa0df",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d7164226-0149-46d8-8567-1d9295d87036"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "697dc8fa-77e3-4ab3-b0a0-309517099fdf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b8b1530c-bde1-4e6d-a926-a94b8d71cafd"
            }
          }
        ]
      },
      {
        "id": "77cbc081-89f1-414d-95e4-0eef748d5dc3",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "fdbc8965-2f47-40b0-bacb-d3f300b72245",
            "name": "Negative Testing",
            "item": [
              {
                "id": "62c0f733-edd6-4e7d-818d-0ad5322593de",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "057e8909-3ba6-4801-9721-e1ab4b3f8337",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e624a05e-ec25-40ff-b413-f7944e74664d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f20a08-9ee4-4e3d-9b21-b030c50aa255"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73ac4db7-dbd7-4fb1-92f9-0f069227258e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "770a42ab-b9dc-49b4-ac1f-8b9fd7fe3f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd4a89b-b224-486a-83bd-1bedca1d105e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e53ad36-3f98-4892-a4cd-039295f06d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baa673ba-7f9c-4f50-be42-74fd32d2b97b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea02d022-a773-4974-b8d4-f3c3d0c05199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8f87017-4f04-45b4-a663-ff187104b23b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d5c0855-940e-4185-80c0-2adab1145129",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84d4250-ed8c-427b-a6e8-f3248e7bce69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4fc9e48-bb0a-46d2-a840-a3936edf104c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9dad9d-520e-4815-89e2-fbc9c6d57010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28290f18-c406-4746-9f8d-aa9aaa8bed9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c040df63-24a6-41cf-bf64-6a21c86b2737",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4688ea0d-c686-4cb4-9f2e-c7d64cdb42cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62428e0e-197d-477d-a22f-dc42951d982f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd1d9ff-ec0b-44ad-ace4-bbd18da15e3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8d9448a-2b3b-4350-b844-d351c4240e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b57784-0e93-426f-885f-1bf2d47e7e12",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c04d0ec-9481-4af8-9859-5fc95004b52a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed7244cc-a141-46a3-87c8-bc3980912f97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b101911-af5b-4f16-bed1-cda134099934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe6e2c7-c7d8-4d45-975d-62c7dd5ce91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30f6c854-b4d2-4355-bfc6-74c858f1a68e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e93477-7817-4245-88f8-8c5d2a3ce673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "005f2dee-84cf-46aa-9c64-69ee70205f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2ac8cbe-a23f-45ed-b4b5-84f9fdae2b47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8a770ef4-f1f0-4f12-b6a7-885645dd5379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6150a0bf-4bc2-47b0-9f4f-cb391ce193c1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf4f95fe-44d1-409d-b3cb-2a5295561fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4dc086e5-f5e3-41e1-980f-cf7cc6ae9737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c378821-80fa-45f6-8eda-6258bc444347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7efffc8-063a-49f3-b1e9-3efd782bc6a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cbb01f-5c3b-40e8-8169-33fd72929fda",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77a135f-7dd9-4699-823c-6cd2ccddf35f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa6057a1-3438-4dea-af32-e9d4b3e582db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1defc823-44aa-48f8-a2a3-828e9563ae25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d63cef9-9935-4c9d-bb4d-6b740804e16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a664e76-99f3-4615-a860-912d3e0913da",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74c088b1-e2a0-4edf-9c50-28ca93505995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ef7c450-5786-4a7f-bf4c-ec36aedc1a1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e257500-9c00-44b8-af9b-b28e1ae357ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2e8b25-d4e8-421c-9ea0-822fe56a7065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc5c301-333e-4c81-b90c-e88ef87dd7a0",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e71290-6af5-4edd-907f-2260b57b949e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "417d9c1d-07c1-4f16-9dc1-12f6254c5efe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad7c092-dd5b-44d6-b066-cbef6849c7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c48b3913-339c-48bf-b078-dfde5e7b279d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7517be3d-a17c-4a48-ba2b-c7caa97a2292",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15d7261-fad3-4260-8473-5812f868f263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fa6585b-d298-4905-8a84-a81995eebc2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c16198-9e86-4152-bfa0-918ff5cd81fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "bda6f176-b260-4aa4-8b53-099ec418dea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9055fe6c-7dc4-4eca-8d49-47148f918629",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "967be7b7-c880-427f-a236-6161a71912c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c953c5e0-a725-4706-93ce-1f5c2fcf34ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797489d3-21e3-4335-9bdd-409f83e2301b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d39137d4-3ec4-42e6-b7fc-afda82dcc3a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d48f0467-f57c-492d-b3c9-6bdad200745e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b23aa9a5-f813-4dd6-bc38-73150b86922f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca8c5738-bee3-49fe-b368-ddb79bbc1fb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f75d0eb-8a42-4b1f-aa0e-0fd3a3d63d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "301e96a9-5683-4f28-90d4-8e6025a05314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b28fe07-645c-4b90-8c64-2e562f49ad76",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbad031b-1f74-40fc-9483-8413c416052d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0f83565-a366-421e-807e-64745c5f44a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a6f618-cc9e-4b88-a849-bec0db1eb905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8d6fa7c-235e-45b6-acf8-addf554713b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a580a15a-4cdc-442e-8ad1-c6228564fc86",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af36d01a-124e-4239-98f9-8df210ec8020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3449d76-2efc-4db2-b9e2-4a8dd5215b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3605540f-9850-4b4f-b5cd-a07b8cde1a34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "adee1bfe-f625-4d4d-a8b2-51abe95ff91f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70886b03-4048-4728-a7c6-bbe6953547c8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d1c1ef-6b86-43fd-945f-2fc6b1e81e80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e175d40-1623-4ee5-8b54-22258019203f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9622e972-2241-42bb-8ffd-c134d4f5929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "212d48c1-f67f-4aa5-83c8-c6ecb2a9d912"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e105108-bf15-4988-aa0c-323c14a16117",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc8cdc4f-c8eb-4842-a169-962fc7f5483b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afc440b0-67d1-4aca-b33c-f4b98a6ae0f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2b5310a-89cc-46b0-8bb4-91a0cea1123c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f91cc6b-544f-4199-99a5-b36fc581d00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1ee46f1-ebca-4a3d-960d-1291666968c7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f550f1b-c28c-4eb5-b6f5-a2eeb756965e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd6d0b96-acc2-421f-926c-c42cd6548e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f5a741-a792-4e4d-8054-fd371abce8de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ada1164-fef6-4150-a1e6-e3c009103025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7cf5ed5-df7f-49e8-8c9d-8e9fca7f0ab0",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07802d65-7bdd-41e0-b4a8-6b0171bb2215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0070466c-9d86-47df-915d-1d434e2d46cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8355a18c-d0c0-4914-8b1c-14eda58ce679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a40d39f9-b157-48f4-b541-917f9a202ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa82147a-ec13-4514-a969-1da1afecd514",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2752f8-3b84-4d32-a764-c9cf922eb26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5368a01-5419-4168-8e5a-72ac320becd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366d4537-4b27-4d76-b366-6e5cd9a87b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fceef4ba-487d-44e0-ac5b-46635535897d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c12cd971-766a-41a9-aa41-96e8a1da0d8b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fe53ab-65ce-4832-82e5-0af36053d755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25af0e96-48eb-4cae-a901-e7d2cb4bc354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc79676-f90e-426e-955c-d297c13cd8ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20e8bc1e-a627-4020-aced-75377d1655e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e38c747-c984-41f1-9b09-ea8dd449a5e6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bc6f73-5f77-45a3-b42f-195fa2a5c367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e04aae-9bd4-4d7a-898f-5fde24fe6b2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea65382-9231-4f65-95e2-b686edca4815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72ddb31c-a69a-42e5-bd89-56fa2129e026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09d50aee-ff6f-438e-8f9a-400f35e517ed",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1820d47d-8ba9-404d-aaec-de37f99032b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb8b65a-a001-411f-bb13-a83b1206f659"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7bdb33f-dfce-4cec-b5ae-20a021692b51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6ac56fe-696d-489b-ad18-af6d565abb43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35eb685e-31f4-46de-a503-b4572b73ca60",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ae8a00-bd5b-4710-8745-f31cb402fccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c68492-a659-449a-be82-8d92393cf1ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab955f1-af70-49df-abf2-b2e8c9879899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90195bcf-85a4-41a7-9ef4-9ca0c0ea6195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68bf4441-2f11-4045-b8a6-e5878b4b1a13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615789cf-0728-4119-b1fe-6b410aabd702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb7607a-f62c-421b-a23d-299434344788"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb617e5-c628-4205-9c43-e1996d9da970",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "02a6540e-75e3-4114-b2b3-3c0ccbd0fb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23b85eb8-9743-4ef4-9b71-2205546a3795",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87926d18-b88e-4bbd-a663-7f4a3b9b9781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf10bceb-8f59-4d34-9c82-e556f7a8434f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c499fce-415e-47e8-b2be-f873d0b7616d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b142625-0897-4574-b2a4-b87d3ffbbc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa8a23bb-4d9a-4b2e-8d1f-4b96c0e661c7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34f910c-c555-4392-89e8-87f744ca0540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25956724-e9b6-45ba-a570-725e51e0d8f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "380fd6d3-a85a-43a2-a515-8814b4d23b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b640a394-14f5-438f-9d57-3b63cb7b5138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36fcd418-6135-4610-82a3-cbf653d9d60b",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc10529f-704e-495d-adf2-c8ea1a6f71bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05764010-4852-4d6b-b09c-b2a72c3a3b09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83db08c1-c44b-4ceb-b07f-7a48cb8db89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1043b669-d699-4a8d-8944-15b0b34ca05e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78781de4-6611-46dd-aa44-849b3a26cdf0",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c1c1c3-df41-46a2-9999-3e7143c6da9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "754a2b38-1cb4-45d0-b372-17dbf4cc3030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9172256c-87a7-4e8d-985d-de271c0ab5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b79dd6be-0281-4ee4-8236-39bfd41cdb21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07e727-a651-4352-88f1-80b6644c028d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f708e0c3-9022-4d49-a6b3-cdbc285c7523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3072417-658a-44b3-ad3b-0ac88fa60dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6c213e-0a8e-4816-b970-f9f414628d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f00880f-f1f8-4991-a2d6-fba547dd0eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9343e128-506a-419c-8380-e81651b78f9d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf12266-87d9-42d0-a7ba-f8d631a3c573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb32b2a9-6415-4fcd-941c-7bea61366d35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f5c4f-8eb1-461f-be4f-3911efda8258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21bb06a8-b5f8-4a70-86eb-2b76240a39b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26054cb6-5e4f-48a9-8a01-68c013d7c109",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb196354-1e1d-42d7-b34a-c28c1c2da738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe211fd-12e9-409c-af45-e0b3c5f445b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "348e7411-b7d0-4b26-83c3-d09a38ea10df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6b88361-fb02-4a3a-b912-6d65b8f47594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efd77fd-7d8f-40ee-8012-350c8decb471",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39970d61-9ca9-4efd-bfc2-73b9da394a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98db50cd-3d22-4a9f-b5d4-e2383b569250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8ded164-8d2e-4b30-852d-a10b2e489833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef474c6c-7d3b-46d3-88cb-b0fdbae07553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acac7a82-34e6-47e3-886d-c46551898908",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5045a93b-8cd4-42f6-a0c3-71553704c185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dde0217b-4ae7-4253-961a-5a2d95f322de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64c05f74-9326-4234-b836-f6832f9514c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59efda6e-f9e6-4f41-af80-1bb9f2ccd24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee799f1-5a77-4fef-a35d-b3913624ac07",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d19e2b-df26-40c3-b965-4f8ffae65d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dcc4398-f89d-44c3-baff-a1ee59b31d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3eeb705-7318-48cb-8337-e5669e451043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e51eb5-a668-4467-ac13-2e0bc02effa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268a13bd-1a74-4514-a5b7-f7ae9fa29147",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a1c0fe-b7d0-4a10-aed5-202d4d2516aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc18bad9-1759-4250-8b9a-feb61c01f5d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42455d84-273f-4344-b4be-bcdd8cef937e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73ae79c6-d3f4-4ac1-982f-74781d00c1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7225e0c9-2d31-4aac-96f6-952fa6264cd6",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1521ea5c-3ecf-4a8a-9cf9-488f848eb855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1524e6e-e18f-4965-989f-e6c9939bd241"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90ccb87b-4a42-4421-b000-548ded352166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "049e3a1d-6402-4dac-9fb1-fdeb18b0af7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "51c9ae1e-ec30-4dcc-a83b-16f02daa9bc8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d5bfdaf6-57f9-4499-be8d-9cbeba2665e3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc30a9db-582b-4abe-80c2-03a8a75b5a30",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0beb1f74-3e39-4263-a308-2e4e027ca469"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1906558-543c-4694-bd5c-4fa88aeda160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f992582-be80-4882-bf3f-bc8084faa3db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "131843de-0cb8-4526-9693-b058515ca350",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "284c4a58-adef-46fd-820f-6f7863d35651"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "02fc546b-7b92-4cdf-b566-47eee1a57e01",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c0d1c2c9-15b2-440e-9ede-1f666662be3c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58bac7b2-b40c-41f3-9267-2efecf951126",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a34cf8f-6b6c-494d-bc55-b0e32340b534"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1991f324-16bc-4fa5-95eb-162657161529",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1420c5f5-1868-4b72-af92-6f7c50c028a0"
            }
          }
        ]
      },
      {
        "id": "e443960c-ba22-4d92-aeea-e60b337f03a7",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8cd6034b-4840-41df-a6d8-943bd7e5ba3f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71cdc42b-e599-4378-a4e9-177b2f872a8b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a2b409b2-774a-425e-9447-d4c8318ccc1a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb62821f-5b41-47ed-91ba-34f9437abeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6743f7b-ab87-437b-9a2d-7f96cb31acc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e10c5af-8494-4a52-8c0b-fc79ce9f78ec",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41fc0106-e684-4633-9dcd-c8427b44fa10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d73d6c-0c6a-4145-994f-94b3befba76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a929c2b0-6f90-4aa6-9a88-1f32fb0410f3",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11736e8e-e610-4670-8d4b-20afe79930f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9b8b865-6eff-4ed6-a764-0b1b58cf60da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e353249-e412-4049-b46f-c7c7a0604549",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26eaf9cb-3109-48d8-b7a5-14973de987ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5940db9c-d056-4fbf-adf9-5663f6aa6344"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf168016-8474-427e-a892-9d5a404bea91",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5904764e-32c4-46ce-bb78-d15f02f5adee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1061b2bf-9948-45eb-9ce3-364d2c7eac7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95612b95-f12d-47e1-8a3e-6ab94d04d158",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4d2ee06-85c0-4c19-bd14-2adb3ebdd7f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78f17825-be1d-4e24-a939-066ab3225494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbaeb0bd-2d42-4c21-8867-f20a463da626",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3912725d-269a-4514-8242-2c2f424dc884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0bfc465-0e8f-4049-bcf7-f3e6a7acaf4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a956591f-616f-4e38-b8b8-74e619d88855",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c2ddcb3-4b52-47f2-9434-ac59d7987e16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ba5fe5-98bb-44c4-a58f-9fffaba7652d",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad2ca3c-1e64-4056-9df5-2deb788364e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8a75175-ae95-41cd-bd62-a3de816afdc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff12347-9a1b-4c93-b0dd-73feb0101f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59a9d5c1-b0d2-48cc-a527-b3938506f869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f80a39-0ef1-4d41-a4f1-bdafd5028128",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e7922-8124-4bc5-8ebb-e21a97791e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be28d35d-2963-4637-a2bb-e78cb92ee382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c156699a-fcdc-4d84-8432-f9c03921763c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1f1d95-9c17-420f-a7ad-755cd5cce96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60129237-4172-4851-b716-7b6a747661ac",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68005c6-6a2f-4eab-a07d-c25feef0d528",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d8d5b32-f66c-4f1d-be8d-0a0af796d934"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "423b4cb5-bd3b-4700-9cad-ae0ec2857e1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dea4a7-0381-4860-af59-d5a33e23993b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0210d220-b0a5-4ce8-8177-27a7701bc26d",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3e44282-580b-4f90-b3f0-e5a013e26930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73318e3-ee9d-4824-84f8-0050664b5b08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a05877f-1f34-4d70-8b4e-cb133159f033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51cc9931-d6b5-4e86-99a3-b0d5d28fbf6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a4dd651-9bfe-4a7a-9a8f-2c91f2b2f865",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c920db7-b39f-4698-8aac-e8d63b62b7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77220510-c831-4f32-bfc3-250c2ff7214f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86632af7-1764-497d-98dc-c8f724d01227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41586848-0a67-4eb1-824f-dc42847bfd6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05de810-85ad-4a92-a9e7-989a1616eb49",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3927b02e-2122-43bd-8930-29382311c222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3fb17fa-eba4-4339-8f57-412333da5dd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9fcf09-8d64-4895-85a7-40382abad8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f621798-f58e-4805-ac29-4fa4a9659b88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af069884-a070-41a0-a04e-f377d4b5c330",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c13aba84-c2bd-4b24-a89e-13ff12e6f220",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "318498aa-0f62-4f8c-b6de-905ec0b577ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d982d916-bb58-4f87-b9b2-7131909600ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce2cd91-c76d-4440-9a6b-be438e50775f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a7f0148-b262-403d-860c-504ae8806a75",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00894337-3f0a-4bcb-8c8e-99af4e3f5e49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2e706cb-5291-4277-ba59-4161f3a13bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c64cabd0-0fc8-43ba-8ca6-5f7bd459aeee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cc1a054-ffcf-44af-ad98-c8c7db4d6e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025d9561-be03-4da0-9c9e-f3bc14896f3e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b72c1f-478e-4d72-90a7-72870a3cb601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e43f6b0-80cb-4462-b774-7a2cb9e86b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc0ca44-21f1-4560-ad2f-daa08d2d7513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c775472-fd45-48f7-abf0-e1b45b030174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "501ec0c7-402d-40f2-8bb0-bd540af0fb88",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7122330-fd75-42df-8201-3642481bc5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0b3110c-15a5-4e57-8057-0985510c79ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7f8450-6a01-428b-91f6-3af061608da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c3c09c-3972-40ba-904c-e6ae128ff02c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62cce6fe-44f6-47f1-9d4b-ab45c11bb0fe",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987a0e54-c2c1-42c6-8151-4489c8d18a9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57eacb32-55b3-493a-bc74-147b88c752ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8c93845-e9c2-437f-b6e0-0298b12ea0e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d74f12-de4d-436e-a89f-6c9da3198225"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b4a966b-0f64-465e-961c-bf3915ffdeb9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22eb8822-afbb-4cd0-a003-2bddc43b9b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6aa2dff-b4dc-451f-b630-82b99bbc40ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2d7c52-bf87-4fe7-987d-70ce239def98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e007af-c490-462c-a542-c9c39af1b6ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80089c21-e0fe-4d63-a091-d1e6c5601f04",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e1adf3f-124b-40fb-ad1b-84a1eb055e99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da308646-cdee-44cd-88f8-d01ea55ba09d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "215d99e8-a9f8-4bd3-9f99-68e4e530b0ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdce1797-4252-4ba8-b7a0-a804dcda428b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7c51c1-5240-411f-9345-ebffa0f08a55",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e1fbcc3-70f9-4bea-a7c4-4ad854589871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adfa8bc-db45-487d-a682-e26a9ba681e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da4599b4-1b69-4e8f-aa6f-00370cf56eb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f12044b-bf74-4c60-8dbc-063b4f0d99ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492044bf-557d-4f23-b4e3-f77ea337ceb8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e495135d-7f5e-4ca9-94eb-8a581513918d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13eee5ba-41de-4ae6-a883-90bf4dd9320f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fcbb9fd-2bc9-4fe7-a31a-0d92955be26a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d55aa40-5a56-4e80-8cf4-8fb3e62c3489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd64dc32-60ea-4677-b845-c04bd9513522",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd426a8d-4123-430e-8a01-3af87ee81a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdd76ca-45bd-4b7d-861f-ebc40aea588a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e43a5f-f6b2-4b6c-aa99-1abae272a2ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822b328c-6903-4263-a8cd-6275bc8e01b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e3ab88-1cf2-4b80-a6da-d3dd3a79d7c9",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9982ed42-ec7f-4d2a-909d-c5e5a8d9f8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2faf5023-2e62-49ea-8044-6c3b18afefd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c3b517-9394-4c6f-bfed-82ea2697722f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c09cc8f-b63d-4f08-bbc5-a7eac46d3dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf2129b-8ec2-4718-8ffa-24cd7ec768f1",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b4bb4a-a224-4380-b0ff-996d4672923c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7612e64-7348-42af-a31e-924aaed2c8ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63679524-880b-4d16-a382-d522e26fa30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aadfc91-1ec1-4c08-ae26-4dc35fc261b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d23a01-92f2-4fd0-b27d-5f314076fa94",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e496c4e-a203-49ba-aed3-1821b8416622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b735bf9-eba4-49ff-9391-254a77043db7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "631448da-5156-4960-b87b-9d626ad130aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b924da7-f470-4ded-84e5-ef935fba923d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b2080c1-b9cd-4583-a612-dc3493e4be51",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00f265eb-1a7a-449e-abc7-43677bdbf17a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2129384-ad80-468b-b2bf-81fd9f2133a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c962a4-41d2-44bc-8796-3ae197bbc161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fff3bd9-4130-40db-8fb1-babd3e16498b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15fc5264-bab7-41ad-8f41-c4baa83ce81e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc5662bf-6160-4260-b05d-69ff1b248983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31d7f3c6-34e3-4342-8a40-68559274c737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2533e7a0-1ef1-4a51-a9a1-e492273de815",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e46235-2709-4b51-82ef-310906694869"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff6161a-cf28-40fc-8160-60c3b8f983df",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcee9c14-fbe1-4d69-b0ac-8148afe825fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea3693a8-6fb8-4fa5-b5ac-f7a777674c19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e1235c-6e79-4629-ad9c-0532f6f00e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0787b948-bcd2-4522-8e0b-7e91c3921eca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baba0864-3fe3-4552-b0c8-ef4e26b22387",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "577b6265-0d91-436e-8c64-ab8f1702d705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9015fd-8bdb-4a0c-a5a0-03ff3a513214"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a3dd46-6824-4bda-991a-2ec8cd32112c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b8731b-3a1f-4701-b842-3fc1f0b91778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb26a44-f3d2-4c6c-83f4-67336ab2e869",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79991657-b2ca-48f2-94d8-232e293c3ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "93052cc0-bcb2-4d8e-9ea6-e36b5cec488e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45bae016-836e-4cb1-bc3c-b703318b1e66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dcb7059-6624-4dc9-9a4b-042e3a6f87a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ffcc18-8490-4984-8316-cdea6d5b7ed7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69cd5269-560b-4d3b-96a0-384b8faf2c5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "99b3ed70-b974-4227-a41b-101230188944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221a504c-065d-4aed-ad79-5c6688f3f7e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bf6dcae-6972-48f1-bb05-c1e4f602bab2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d3b194-301b-4711-9df2-3061a3c53ad3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bb6111-5bdb-44ce-93d6-05feda183728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0dd2b4b-5b66-4c4f-b529-0f37c7bcef0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9bac42-1117-4c16-b315-221fef0c7b9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9dc66d3-26bc-45e6-93d6-51861b351bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a940d9-4dca-471e-bffd-a5e7ed501298",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08c0c06e-61c7-4ed0-beac-c58bc070e197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28584c79-7d17-4fab-8757-c54eddc1bff0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d032da0-91af-4493-9e47-88ff9cf5cfa4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16b81ba3-add4-4ce6-af87-c0b18e4a3424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5f7e46-cc3b-4d0a-976e-0aa062107c28",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded9b25d-b6fb-4438-a4e5-39a8f4348531",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ea8851e-04b0-4806-b29f-53f6455183cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2be421-d3c0-4d13-b514-e21d7f46ac4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd10b1ad-c4fe-4e4d-8793-fd40f9ab9f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc59d94-fab9-4aae-83ee-30860cd6c99d",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe829edd-b12b-41ec-9f92-15be91e1f5a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7c7168-4b0a-4420-abc3-76b139256a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f8228d0-419a-4cd6-bfb4-c7b077272175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb639fe4-595e-4f0e-b843-98775a90e021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e1ccc9-9b6e-4310-89bf-9049dc0ac01e",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a401df02-600e-4253-a81a-24e379677850",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea9e98d-ecb1-4682-8083-f4813fa0779d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f53c01-756a-4d6b-8796-e97e88209e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8255f109-3e12-4bc3-9ff3-a4a56f48f936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd318c1-e396-4d38-b64c-4740de710bf1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0af5a6-0aed-4960-a4bb-ac457140fed8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "010fc5e2-ba0c-439a-9cef-327bbc9150ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "680b9301-030c-4bf6-9b4a-37933ed779fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ffa0b9-74f3-4569-ad1e-6d090ecf72f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9063dcb2-6cff-4a2a-aaf2-a29b37f2249b",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5784b6eb-6f89-435e-8f34-03c2dba3d290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f3397d-3ce9-47b2-9e01-39296407e3de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93c82556-4902-4410-ad18-000e4a2b6d0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dbbdcf5-6ea0-493d-afb2-b4456640b2f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44f946fe-60c4-4468-acc2-84b557129f07",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9935e6ce-c491-4aa5-8500-568e86b07b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e02339f-3809-46ce-857b-734be6101744"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e43b4acd-c383-4835-86eb-21ae01d3520b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a1375f1-75c4-4ddc-aab9-ef41dc6bfd30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c20d583-aeed-43cf-9c13-d3f204d44d67",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509dad21-38cc-4435-bf84-e5463b747e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50170b39-2436-4b55-9f3f-7742674f40d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73c88f7-1b4f-4925-a561-ef82cd6570fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3bad9c3-abe2-472b-9c13-35ca012778b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c14ad84-c238-4a40-8200-16b71b22be21",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833ef344-f897-4419-afdc-8693ddbc43f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e492eb87-5b7f-4621-a0ca-4596a03c489e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8089517b-621c-4905-89db-a42ee98e24fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "387839e8-379f-4175-bee7-45e62daa3863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5495b566-553f-437e-907e-df875fef7ee1",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598f2e2e-22dd-4fa4-ad0f-298f795cfce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34134346-4d67-404e-9369-e9a089c0c270"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1466c2e-9231-4027-9754-3169d1b851a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5c8df1-733c-4755-9edb-5e7a8db5ff09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c1bd25b-ea4d-4461-ba3c-de37180fa1f6",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9b5e57-59a0-48d9-9032-bad2b357e31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f565ef27-0f78-44a0-b5a0-37a85ce16879"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ccecafd-9d96-4295-a2f6-d46355053729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c32b672b-3770-43ef-8402-5f5eec3e80c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "161b2447-e758-419a-82bb-cfd7275b59bb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35f3605-e262-4ea2-8ea2-a290de131ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e15e1ed-f72b-4e77-8ee0-1e955634fd64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3909e872-87af-4ebe-8138-a663b4e1e0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c17dcd-6eca-4cbb-9518-ca2e999ab960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c2dd19-e9de-4059-b228-93bf75c67e30",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d776481c-2861-4e53-9083-9d0c48f56d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "670e4cff-3837-4e43-84b6-a6ba00d0dc39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c2658a-7681-48db-acbd-76fd3bd9c2e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f427998-0ee3-4045-9b03-c7600240fd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2d7149-49ab-47b6-a6b8-2ca27b9cfa88",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5d1e91-0d1a-46ac-992e-4ba7e4b40841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "038b678a-225c-43b9-84e0-0c3e457f3d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d68a7f3-9676-465c-bd05-6e3c2e081adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "989aec92-99a0-4144-bfc8-d08612284cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339d3200-a9e5-4644-a2f0-5de0ef96621c",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a8486d3-dfea-489a-95c0-83c6fcba6ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27ed62e1-e8b7-414b-8aa3-2efafaaaa56d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b002f9-d7b9-4a3f-b79d-61f02389211d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbf8c1e-7a57-44d8-b024-056665bf8644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8843c6-d2b7-4b4c-a829-7b795bf6bb2c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea98e6d-6d6b-4063-8817-25efb369da4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac6d019-181b-4781-9d74-e83dd517d601"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a7fd55-f335-4f70-bc13-0572f631b6fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7a462b-6e7b-4313-9055-b9eee3a8cc79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad728584-369a-4b74-8e4a-4da7efeebdac",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcd89924-27e0-4a24-973f-05f0639eb272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7510e4aa-0d70-4b30-b9c6-06415d11da9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f39128-7b9c-4cb6-8aef-778486a51381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3f7922-8f4b-459c-83f9-da2f171ff0e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd3bfd2b-5be6-4205-969b-5f44b5a633d3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbcbd751-fc97-4a77-a454-4169a955d73f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6de01247-9af8-4ed5-9b54-889ba75a6a1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de374ad9-7353-4c8b-933a-af74babd517d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2dd8afcf-1493-4dfd-8638-1d38e754facc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3907579b-f1fc-4cc4-b571-64112c5c0aa6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58027d4-1863-4569-8217-0196586c1914",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80f2e3ae-33ef-4d4a-9527-9def2ed57a4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07afec5b-dc85-4a79-ba68-1d7433083f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3308ade-aa44-4393-a4e5-1a29798f1972"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12191cb3-9072-4e47-a1cc-736d15f0082d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448dfc07-837c-4de9-bb03-d26e96c278b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7a9dea-1f63-42e6-b932-cf1024861dd8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a239d8e-8e99-4bc5-83f5-fe4931c3258f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2687470-8f88-4db8-a8cd-bfb6c9c0a023"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0c732b-1f6e-4073-b2dd-8f87f56cb443",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9450d893-5682-40b2-adf6-3051835ec8e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e05a99-9d27-44b6-a803-0db06f0645f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b77719-aa0e-4c3c-b593-a6bbb6e047bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9f6b7b-ad9d-4cc0-9909-6fae93809984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e259eb13-6508-452a-87c8-51350f1f0728",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418a9d14-c1ca-4717-85a4-f887db522885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6b91b9-0566-4db5-b8f2-4c9834f6ca2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "831ba820-0385-4608-9d0f-45a3acd331d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51e84e1-38b5-47a5-a902-65ee31826a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae286b2c-bdd6-4e1b-9d17-1240090ea57c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a05b31-9e09-4a96-a8ae-a706356fe5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6f76c0-678c-4532-9e4e-02019ff9df54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "701da724-eab6-49da-a973-1a30648da2c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c97fcb9-ca6f-4f82-964b-e633233178fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db894a91-dffa-4c96-9a60-3ac675f5cc24",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0e51b5-41b8-4275-acc9-8446ad61e31a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea131d9-2631-4e39-be80-b5f96c3ffaec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97466c86-ee31-47cc-938a-f3eb0d3423db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c808d1c-955f-437b-9723-39b01adec69c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3434353-887d-46c4-8408-9a1d39019149",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec503edc-5526-4637-a43a-c94da375f992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47d7d6c-4772-401d-80bd-55d6ebbe2d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a38bc9-5aff-44b1-a9de-953e44a9bdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d35d8e1c-a104-4520-ac55-efae427089e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92773c6-6aca-4d37-a571-5027e5e0f2c1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0987dc5-7cb7-4c9b-880a-8aca4b0fb5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30b38f99-8f80-485a-899c-44ad2014481a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d28c0e-d2fe-401b-92fa-7b270a82e63a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a72635d1-0263-4454-9c56-f4d5332cf7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed08a946-d44a-4334-a0da-144149875a02",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a014984-31ff-4736-beee-3b122a41086c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67a9f8f1-c80b-44ba-93dd-2ee4da9f4786"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5089b2-7d70-4119-97ee-85d4a480d5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b13fd0b-36c1-4ec3-b01a-d8c88082ec35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc18ac6-6103-4eab-ada1-a0db98a4fa6f",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7967d581-9510-43ce-bd1f-5df08133ccb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd9e542a-9d36-4ae9-9ff3-b9d2c2f87a0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f7b4f9-7776-449c-a774-05bba99a549a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c010abf-77e9-4e21-afba-9b20d3aadb7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c410332e-eb88-480c-b8df-3370b3455096",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053643b1-c21b-4231-9013-b5f87b6cf9e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8453a489-80b5-4503-b2c7-75aab3d763ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a053b6f-898b-418d-a328-1be41e11d0e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25bd25c7-547a-4f71-b97b-7ae192280af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ac3231d-6307-4104-987f-232583bd6843",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ed57f14-0d7f-4258-80f6-ab3ff634cf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae8627cc-a54b-4f2b-aadd-9aaba60f63d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c877562f-36bb-430a-83b1-07d44fc684bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8339cf1-d7cb-417e-a49f-a20060f7ce56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c71eec0-1c8a-49da-a9cb-854e59118926",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5bab5a-6004-4cf5-ac49-15697a0a4f1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b769ecac-9cf2-49e9-973b-e6412fba8c6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b5b055-04da-41b5-8b61-67924897dc13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c789f73-30bd-4f8b-9966-32390980a6aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a047b89-287f-47f8-b019-1ceed952b532",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b492acd2-cdf2-4628-b455-f42a70708763",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "249cdc23-f2c6-4453-833d-7e5715e3761e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea9d5ac0-3c05-43bd-8b3e-4a5eb3206a05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d87211f7-292b-4e23-9967-6efa1ec83d10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e38a2618-1108-41ef-9018-764e647d5af1",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d0fbe0-398f-4e92-951b-ca25ef17ea58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d4959ff-a067-4b98-a54b-f4b2895a325c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23290b23-277a-4194-9837-547bdc3f9c00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e077efe5-da10-42c8-a06e-f37790ff7919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54de1b7c-2e9e-4058-b51a-cb36db28e1b1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49f3fe7b-a078-4bab-a3ce-a85b01050124",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd31d898-a7ca-490e-ace8-1e142646c9a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62cc5f26-90d5-4bca-896a-ede08aa39a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4af0114d-7642-4251-abba-a95ffb115b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830cc359-5480-4cd4-959e-b09539d9238f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "448533ce-4d93-4bb7-9eea-6da4d2087ebe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9035ff02-081e-4a4f-a3c0-83c62787fb91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e203e30-b257-4295-afed-4b1151e57459",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa2d75a-a42c-482d-82e7-980200702499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eae3b2ce-a060-4ab2-b750-b275e9e54231",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f1066e-e333-4704-9a4e-a4de6665647a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f675a21-73d6-4190-8d7c-f657e8684649"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7581d1c-9ef0-4c02-bbad-79ac2cc7243b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cb1ca07-194a-4540-81ce-a1bc72dc3c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b085b5-72f1-4cb3-8725-13b3364d71be",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7349508-b51c-415d-99f6-cb65c68f0d66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69d35aa0-6c9b-45b9-ae5b-40c5c0c6095d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c0c1c5-8eff-4d13-879d-28f74ea81f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b67a836-2cec-42d7-ba0e-019773fab0c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b02019-152d-404a-8fd3-93113e49283c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b3f03ed-af94-46bf-8c36-aec359715846",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a3ff99b-1def-4ac3-9f94-84c9b2bb169c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e6acdd-09e2-4a0e-b76e-0ac6ad0e85aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01971ca6-06e9-4549-9073-a0b922b68066"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ea9029a-2755-4fbc-872c-40a5d6ab9c50",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d83f1ebd-97a5-447f-b095-522df8337ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f9aee01-4e0c-4a9d-8c10-9fd48db58512"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2add1-a346-43c5-a03d-c81f80de7220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01e8079c-536e-436c-929c-8d52d3b231ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9527b9-a5cd-471c-9266-8b43b49f4786",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d015af7b-11e3-4892-99dc-2b8a2347b122",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a01456da-884b-4272-8792-70b0cd674a4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d550217a-577d-46ce-9d61-25651a4b725e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3964718-6529-457d-b292-c65b2db6ce1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f466cb6-5010-426b-8343-8e62e4fd57c6",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de3bdf3-9ea4-414e-a6bc-792db15331a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40995d3e-84ba-4fdc-9daa-cb9da4ace581"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d070762a-2b5c-4987-b911-fdeb37dd8bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3bab0e-0222-46d8-b9f6-0edab8aa9a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc191fe3-784f-40d4-a111-5a849d71b083",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f234fd90-daf2-4123-baee-f7505fb24695",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336f4a0e-5499-482a-86a9-8f6fc453b27f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08c1b504-5008-428b-b884-4f87b0ab74e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19389c88-c809-4040-9d09-7f11b7860fc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd53040-347e-4ca0-a1ad-620c6bcf4911",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c0a8db-12e7-4ef3-a624-fe39e7b4844c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfcdf909-00eb-452a-8e29-a2a6f9f6c77a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34c43e9c-fce5-42cc-b36b-5750567f0a16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db66ad4f-8eb4-4bbe-a5d2-d3a4e2a90c31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ce7d44-de9e-49b8-9de2-ee950c8b7ea0",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d21f363-bcd4-48e1-aa5e-2e33859bab73",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f2f6bf9-ec87-4d84-91ee-7ad5b1af0a27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b8405ea-40e0-4e4a-80ef-24df154d342c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0195968-bcaa-444d-b47e-67a471a7fa73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f8249c-ad85-4d28-b92c-95cb1004b8ce",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76844b37-afa9-43b9-bf6d-d910529f2f15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be2237d-6210-4dd2-b079-81c93c1664f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3307818a-9d75-4138-8357-cf0bb065ff07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd3f7923-85e5-46f1-8be6-44ed9e9956a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5368262-b5b3-4bea-b0b3-a09d8e708c19",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f8d679-4401-4367-952c-f9393a0204d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a64ab10-b6b6-4b36-b0a5-eb4f00d8404b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e89dc7-1844-4bf5-9b54-359e445cc3a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed7b4a29-c24c-40b7-9dc1-88d4d0c4fdc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b781cf-15b9-4daf-b896-53642045d6f0",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30ad1f2-c13f-4c98-928c-18c9c04c7d4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08bdb16b-cdd1-42ef-a56d-3ec43660182a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96640729-a3a3-467b-9bdf-735327909eaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f85b12ea-e054-4867-8998-e8387d1a1a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "decae4cb-d889-4199-9d7a-f54aeeebdf45",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7a6e0c9-4868-4cac-82b9-f56d16880864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12202d31-5e83-4320-8a32-83887b3d2db1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86ad596c-8584-4630-a57f-065d91959e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa3a347-0d71-45eb-b611-f35ca771362d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b113ac52-3d18-472c-8008-6faa26c4e9ba",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "497a3386-6c8b-4fa8-865c-992eb458cdf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ddae128f-c62a-434e-9b87-bc372abe3c17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f241d7be-a810-499d-b1e3-749bc467bf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de62f7c-f103-47fb-998b-28ea66cc1419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8375d15f-31c0-486c-8258-87c9c56679e2",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329899f9-323d-48fe-a066-a04063cf5e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c055a3be-b61b-4db4-8b13-ac410fe7c77e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa4e97b1-4ab1-456d-b7ac-31bafc573e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2a24aae-162d-408f-a1c0-4047a4443e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc59e48-cfd5-4740-816c-8f37bb0bcd2f",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3c44dc3-a80f-42cf-a40f-6007864cef28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e784b37-d342-47be-b882-e7679dbaa775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb4665e7-3af0-4eef-a27f-e58650ba2f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d52786-3b7e-4b73-b4fe-fa5e06fc3853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46b226aa-9f7d-46ae-b5c7-d389220c3a57",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d084ef-e8a3-4c13-9db7-38f7290da74d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb03147-d021-470a-aa09-aa34114d125b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24428dd5-dc51-4829-bf33-15d8a38f94c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46ca7222-c3dd-4026-88af-49fae8354396"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa46cc05-78a4-47c3-b156-abb4a935e776",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebc430d9-2de2-4a3e-bd29-1db6052c929c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e09faf7-a509-451c-8840-7e40c110b78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a44135-77ff-4f3e-9b69-7ac78015f5bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "076cd29a-2564-4717-afea-b930b9b37e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17925765-9a38-430e-a26c-ede79e2b5a8c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a8d3961-ca8c-47e4-ab1f-dc1ef6ef8be0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15bb6041-04c1-4f81-ad10-59b20ccc2278"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "870f732c-bd6f-41cf-8904-eb545bbd5ee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f52090f0-ac20-4669-91e7-f1f11c7bb7aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da6a33d-4cb7-485a-ac59-e92efce6241b",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941591b1-6729-4954-9c51-b9388ec88fba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ff90f2-3556-4c1b-a7e3-b669e80af71d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a13d230-f2e1-4b42-afa0-6988e1857a74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66a6de74-50f6-455f-ae10-3bb91a83226e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c473ed40-16f0-46bb-a731-631904e03ca3",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7688dc38-7f29-4d92-b7a9-b211b0d99067",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "134fa66e-34d9-4380-853a-0b202281b440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ad8a09-6751-4ece-92e8-5126d5aae7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d4ada91-6d39-488e-9f28-7fb6ac089d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4dd893f-10aa-42b0-89c1-f08db66004ad",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6edac30b-7498-46f4-8059-992c08cdf4e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c2ec1c0-8d78-4ecd-9373-82df22760805"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb021118-f09d-44ec-b5ee-756a76185861",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b08453-939f-40cf-a747-7f365f056186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcd484cd-9a26-4c5f-9241-acdd156c14d6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a78215d-0b0b-414e-a265-3a51d7de2bcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f688143b-81cc-44bf-a45c-4749f78d8b07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab1d0db-52fe-4f4a-908f-b2e00c524fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aeb12896-4b6b-4759-9599-e011a8cc880e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "937938bf-5d8f-4e11-8d94-dfa44a40ce6b",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd4be458-6652-4c40-a01a-27b55ffc61ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98a56585-b3ab-4db8-b0dd-b898429b2eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e143d6-679b-41f7-87a5-98ac4c179316",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9063a5e9-9127-4615-b961-1b1c00cc1845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed52120-2e60-4c72-9c57-f5df7de3eb87",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449daa89-a18d-4d87-aa59-9a039343e613",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3352c780-ad3e-4c55-8369-758353d66f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd7c3b78-33f8-4741-9ee1-dfd575155405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e8b3014-5bde-4a86-8afd-bc8691da702b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f2c6f3c-60a8-4625-b7b2-3961528b9655",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acbe37af-e445-41d0-bd49-8b4dd1a0c57b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e3fc23-94cf-4ec4-9134-794b3019e030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d873095-03c7-4888-b948-040461300cbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30347f2-bfd5-465d-941a-87ca7bb1fd62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4180387e-c57e-4f13-9870-3a3982e241d9",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "975509f3-5b46-421e-978d-295a781dd16a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "953fa1d9-550f-4300-b7ad-e952daa1771c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f01479-10fb-473f-9c5c-ef30844e0bd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "027f0741-a955-49e8-bb37-dff85fe025bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417bbcdb-3b30-4211-b199-835f969cd8fd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4a2a31-8d51-4732-8149-d8181ea26480",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae668272-9711-4cd3-b926-d98754101da0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e6d9de-f38d-400a-b5db-539ca2364568",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd90a39-749c-436e-828e-0e4d67c75a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c546dccf-3e91-477b-9c23-8b575435afe2",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a66b83f5-3a12-481b-bd08-dac7bdd43461",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb97a957-1cbe-4ccb-8288-e1d9b8e2063d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ab5ebe-4d35-4dd4-aa36-669d9a64476d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d23fc23-0b53-4f91-8d74-a05a5107d864"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec49128a-c719-48c4-a7e7-dadcc65eddb4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4166389f-d84f-4b93-b645-909591289b95"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0ad4e42-3944-45fc-86f4-69da3d603e10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4abbcf5-f433-4274-a02e-56e002113c16"
                    }
                  }
                ]
              },
              {
                "id": "20d71088-ca5c-4992-b0af-db3057fa6148",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "abbe97b6-0e4e-45e6-b283-3c350db5e3cd",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3119e0c1-977e-4dad-8fcc-4fac33223d94",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d9f2138f-2cb2-4682-ae96-6dd9baf26bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ceadbe-6830-4b24-9f0b-2e1e3f87c37f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ba6fef3-5686-4a3e-976f-29896f18b449"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "482964bf-5598-4b15-9533-9feeeb08b62d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8a3936fc-fbce-4585-8b06-111a4e7585b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0299e9a7-45f6-4e83-b00d-ae94d6c4455a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b1d404bf-c50d-4018-bc94-99d3af369bda"
                    }
                  }
                ]
              },
              {
                "id": "b2d0b8fe-80f4-41fe-8051-46aa8593b670",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "64875624-30cf-468d-93cf-e54b8f70524b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "500d8025-bbd4-448c-862c-8b929e7ce1b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a5302309-f82f-4c02-b022-ba5cc796f3e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b593c56f-dfe1-409c-8c65-affeda1423f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52f5a06e-267d-492c-84ad-ed3b36c7a311"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8b1f4fbf-4fa2-4d0b-b50d-2c46ea8891c5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "75a0ab3e-5d36-4954-9ebc-1eb276fd86d5",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7b839a5-ac5c-4c81-ad69-59f95b007c74",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e7f1009c-3df8-4ef5-8b48-616d0d90c41c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c8f871f9-0cc8-4aaf-b4f9-c03121895ee1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f07379a7-02c6-4df3-811a-0de7dc6b5ba5"
                    }
                  }
                ]
              },
              {
                "id": "8605ad91-59ba-440e-af40-5bb259fd8d1e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "742cfa68-8ad4-4ea3-af5d-e93b0c883f7a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b2db0933-9f8d-44ce-b47e-8d43a97e3ff1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7f092bd-2117-4d23-a0eb-d6eb67039809",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ac4f9e7-dc3a-497c-9232-247baa9aa26e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "096ccba1-8648-4f31-922c-569e91c8e65f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "aad38744-ea3a-494e-b15c-20d0f708e42e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f64be285-c091-41a4-8fe5-12a8e65e33f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7e5a6d25-1ad7-48e1-8d39-5ea3ae08ccfe"
            }
          }
        ]
      },
      {
        "id": "3700da2d-d4eb-4da2-aed8-28ef3cde729a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bd5229ed-c184-4591-aa68-7a7c900f6f98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c83970e7-5146-4820-89eb-b7c3035f23d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a9979b9-761b-4590-b14e-e6ca95324fc8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "240ed1b5-17f6-442d-808c-05b87a522961",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "735a4655-d2cc-427d-834d-5d7d8012ca0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "095776a4-cb3d-47c8-814e-6067b7104d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8c51128c-1f83-4ede-b0b9-cb91cf04c10b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c1b22cba-97de-4dfc-a388-d93253d2864b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "506909c6-43b6-4b77-b447-9c3f7ff79bcc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "162b85ad-c178-45ea-95fa-dfba9380d5a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ff640d8-debc-4a09-a867-ea59fc1b792c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "db95f3ba-75a2-4eeb-802a-7e9995b69837",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2f9e14b0-15c2-4faf-9b8b-d65a2a92efa3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8952cd28-c2bd-42c4-b500-5f856290078d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3717c9c0-bade-405a-b881-331599beae7c"
            }
          }
        ]
      },
      {
        "id": "223c2ac6-1231-4f5a-b01b-c596a830f855",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a6a8f49c-a467-4acd-b7d6-4ae41708db8b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "eb4bbcf4-0cb7-486e-9d78-53e0ac66dc25",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "319ce7b3-eebd-478c-a476-e90aa53158d5",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e69ef06-2303-4556-8117-98c4c523cef6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "741bc6b5-60b4-406e-93be-56398bfb8724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b2185e-49db-4002-b1c1-b037c0d42fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93b066f3-a805-4048-9e25-a3ad792163c1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8b7869ab-a527-4f20-8d04-b4ed258039e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abe985f5-4645-4da2-a8dd-1a43ddba49bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9ebf9e6-d35a-4832-800a-af47501d058d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b2c1bf7-c297-4a5d-a25a-e2970c655a26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "95bdee85-d159-46e3-ab6d-0e6e2a918983",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "422a6d84-6bb5-4585-864f-f6143373fd85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60ce9994-eeb7-4129-ae34-92b6a4cf0889",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7654babf-1324-4227-9c0c-eb469b7d9a9b"
            }
          }
        ]
      },
      {
        "id": "8520f73c-42e0-4582-838f-a12a6aa19359",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "95a87adc-17b7-42eb-8895-e2642e5963a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb3b11c7-b2fb-4abf-995d-fb9d29004504",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac633208-9483-4363-814c-97e6b5c19681",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aeb0220-8cd7-46f9-97b3-ab2fc3742c13",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cbcccb84-bd7c-4d3e-885b-da07c87768da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0259d8bb-c7a4-42c9-bc9e-cde23e93c8ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76d2152a-de71-4417-a63c-a9588f8445d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39dccdd7-c3ea-49f9-8150-067efd5430e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3152d160-6605-488f-8b0d-c7aaf9f89ae9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cfa727f7-12e0-4999-a874-4c804f7f38f3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ffdaf5c4-a3c7-4fa5-b822-e0d315fd92be"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0f732ed-3072-4ef3-a128-1eb98ea360ef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4966eef0-b53b-4a8a-a40e-6f82af6914e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3047a41d-48b6-4b84-8dbb-44fb8726f3e3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3ba0901b-120a-4553-afc8-3dacec3dfcb5"
            }
          }
        ]
      },
      {
        "id": "1b6bef26-7038-415a-be75-7701e85d008e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bcdf4b0a-d241-49ba-bd7a-08e448530fef",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b0896df0-d027-48f4-acd8-ef9a4f46725c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8703be0f-8ebf-4637-b714-5db4b872ce98",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15c51f92-b4f4-4e3f-b259-7c28dd7a3b35",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b8576270-ef30-401c-bf00-8611ea426ba3",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 570,
        "pending": 0,
        "failed": 21
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 95.47183098591547,
      "responseMin": 10,
      "responseMax": 4889,
      "responseSd": 417.2062548256695,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1693528514549,
      "completed": 1693528553643
    },
    "executions": [
      {
        "id": "73cd34fb-e65b-4707-9143-798dcfdd386d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "afcef1d1-07d4-4b5e-896f-ffa08fcb23fa",
          "httpRequestId": "65fec426-7d1c-4468-8ca0-9a63d66a13a2"
        },
        "item": {
          "id": "73cd34fb-e65b-4707-9143-798dcfdd386d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ae5369ca-6589-4b1e-b0a7-44be95a23249",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "04bfc283-0b40-4cf0-b85b-aa62f6a0aacb",
        "cursor": {
          "ref": "8e1f6307-0a2f-4ee5-86d9-5e801fc31e7b",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "ce5e375f-4234-4ec9-8dfb-3e489935df84"
        },
        "item": {
          "id": "04bfc283-0b40-4cf0-b85b-aa62f6a0aacb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "05ca9567-7735-4cbc-a770-6e45565a4ad2",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "f6a93c93-eb39-42e6-ba61-efd1ecd5772c",
        "cursor": {
          "ref": "0239030d-abbb-4355-b9a9-7e85b1d48002",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "57a37db6-6e32-4f45-99b4-1c5ec8f8262e"
        },
        "item": {
          "id": "f6a93c93-eb39-42e6-ba61-efd1ecd5772c",
          "name": "did_json"
        },
        "response": {
          "id": "4c7c3093-4b9e-4ed7-ab0d-ee8d6568f4f1",
          "status": "OK",
          "code": 200,
          "responseTime": 169,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8038cd2a-10ea-43ba-8294-ac4debaf8c49",
        "cursor": {
          "ref": "104f9ed5-d3e8-49bb-9849-6f6aac88b560",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ef2adf7a-97cd-4074-bda8-91dd1de98195"
        },
        "item": {
          "id": "8038cd2a-10ea-43ba-8294-ac4debaf8c49",
          "name": "did:invalid"
        },
        "response": {
          "id": "7e82262b-98df-4e14-a4e9-8bcfe473745f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 896,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8038cd2a-10ea-43ba-8294-ac4debaf8c49",
        "cursor": {
          "ref": "104f9ed5-d3e8-49bb-9849-6f6aac88b560",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ef2adf7a-97cd-4074-bda8-91dd1de98195"
        },
        "item": {
          "id": "8038cd2a-10ea-43ba-8294-ac4debaf8c49",
          "name": "did:invalid"
        },
        "response": {
          "id": "7e82262b-98df-4e14-a4e9-8bcfe473745f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 896,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b37ae3e5-d09a-4db0-a4e5-bc770a69cbe0",
        "cursor": {
          "ref": "bfae9d55-6503-425f-a5e7-9f02784c3299",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "482cb1c3-47c5-40dd-bb63-f7abc92ee376"
        },
        "item": {
          "id": "b37ae3e5-d09a-4db0-a4e5-bc770a69cbe0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6d59e273-b387-4298-b7cf-b79befbe24b2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a0b5e-931f-4898-b63d-432d693841d6",
        "cursor": {
          "ref": "666de653-beb7-492b-829a-b776ec201d5b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "a47189fd-619e-4be1-af41-d92deafe1c62"
        },
        "item": {
          "id": "426a0b5e-931f-4898-b63d-432d693841d6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "149e82c0-e106-4bb1-bb59-992b9ce6a391",
          "status": "Not Found",
          "code": 404,
          "responseTime": 35,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd960a9-9d28-4ab0-9662-5d343c850376",
        "cursor": {
          "ref": "8efe324d-33b9-4798-ac3c-3ba8311a0bef",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bcc032ed-ebd1-48fa-8a43-e06853770efa"
        },
        "item": {
          "id": "cbd960a9-9d28-4ab0-9662-5d343c850376",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b637ae0f-cffa-4c1a-945a-bca42a620634",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b25fce2-90a5-48b0-b435-f269eadc110f",
        "cursor": {
          "ref": "dc8936d9-cb54-43a9-b3f2-6cedefe72517",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "e85e3fc7-9238-4450-abe1-c84268f41f70"
        },
        "item": {
          "id": "2b25fce2-90a5-48b0-b435-f269eadc110f",
          "name": "identifiers"
        },
        "response": {
          "id": "22020dbc-4c3f-49a7-adff-4e913fe3f310",
          "status": "OK",
          "code": 200,
          "responseTime": 71,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a14c39-30ee-4a05-a027-6b1b278455da",
        "cursor": {
          "ref": "c9403e9a-abbf-4121-8363-ef43dd0c7363",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "35b6b62e-54d0-4a12-b60f-cbc77a7114c7"
        },
        "item": {
          "id": "77a14c39-30ee-4a05-a027-6b1b278455da",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d364aa2f-bcf4-40a5-b848-f623bc7277a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03d1432-3eab-43f4-bb43-dfe027f745cf",
        "cursor": {
          "ref": "3458ea7e-e5db-48b0-a17b-b99ed80fa5fd",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "aa31a4ed-b661-459f-a7e6-12e7633de905"
        },
        "item": {
          "id": "a03d1432-3eab-43f4-bb43-dfe027f745cf",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "be314bf4-b889-46c3-9806-8472254cd8b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67918dd-2d33-413c-b055-18139eaf8e0c",
        "cursor": {
          "ref": "070a30d7-6902-4b15-a4fe-b3d6bad38b52",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "672ce56f-ffcd-4101-8534-7553b81dc648"
        },
        "item": {
          "id": "c67918dd-2d33-413c-b055-18139eaf8e0c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c2bad855-0176-437b-bf37-0724db0da225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20c8e02-846c-4a7b-ae5c-e14fe7f5b644",
        "cursor": {
          "ref": "27c6bd63-103b-4458-b723-1ac456da47aa",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2d80de9d-43ac-4ab3-865b-deb7e77bf697"
        },
        "item": {
          "id": "b20c8e02-846c-4a7b-ae5c-e14fe7f5b644",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d9a87330-5af8-4c03-88f8-9bf98973627d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5aa1d81-a9d9-406c-9f0c-464429e07647",
        "cursor": {
          "ref": "142330ea-163f-4457-803f-b02a3b28664d",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e6aea914-3c97-463b-9d51-99a82ae69ccf"
        },
        "item": {
          "id": "f5aa1d81-a9d9-406c-9f0c-464429e07647",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c55b6160-8af3-4061-ae58-ac2d66ca9511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc6962f6-ac47-4465-a69b-90840d2e0e8f",
        "cursor": {
          "ref": "281e6e49-b0e4-4e04-af7e-c2fff541b1f9",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "52f1b0f6-4335-4322-bd41-dac664c64805"
        },
        "item": {
          "id": "dc6962f6-ac47-4465-a69b-90840d2e0e8f",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "55939da6-1e42-45d3-b319-be7b01671b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62bf3113-d6ac-4122-b32a-a3fc6317cbff",
        "cursor": {
          "ref": "e2396db1-a0ea-43e3-b263-f1629ef97664",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "97f8a60f-8f21-411c-b717-87ffe59761b1"
        },
        "item": {
          "id": "62bf3113-d6ac-4122-b32a-a3fc6317cbff",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5a1a9f5d-ea9c-4164-a92e-06192c868222",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c991249-ed4b-427c-bba4-006c5bb20cb7",
        "cursor": {
          "ref": "62dec239-e3fa-4f36-a686-58158fc71faa",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "61a4baac-83e2-4399-8d43-a05927cdd092"
        },
        "item": {
          "id": "8c991249-ed4b-427c-bba4-006c5bb20cb7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "39ce7d62-4762-404e-a991-3c040a296293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b4e965-4579-4d0a-8f77-8d188caa2a25",
        "cursor": {
          "ref": "06336d50-edf3-4e3c-93db-48b97a2b7bf9",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c5068d65-40b0-4c76-a8c0-0bc6ac853db2"
        },
        "item": {
          "id": "07b4e965-4579-4d0a-8f77-8d188caa2a25",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "c83605f9-6bc7-41e0-b96f-d93fb8d46b35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d07f5ee-be16-482b-926f-171811e8d327",
        "cursor": {
          "ref": "11a3e3c9-25e6-4e6c-8490-bcb6b6e2f18e",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1c6623d9-1ab5-4b51-8b66-4c1ee9ae8b1b"
        },
        "item": {
          "id": "3d07f5ee-be16-482b-926f-171811e8d327",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c2474884-7b5a-4dc2-b0db-5d218182857f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "668849b2-1491-472f-bcc7-920dcc77992c",
        "cursor": {
          "ref": "ad9cb0ab-2fe1-4a1c-a450-338957cfdc28",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "da3b9e02-69b7-4a3c-8cad-ddbf81a9f8e8"
        },
        "item": {
          "id": "668849b2-1491-472f-bcc7-920dcc77992c",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "cdf79c90-453f-4734-9ebb-dddf4a0e273e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5350f2d-b747-4ce1-88d4-02316f5797af",
        "cursor": {
          "ref": "ab828568-99f1-4dc5-9e67-58cb44812be7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8c52bef1-aefc-436b-81c7-9817aa012ab6"
        },
        "item": {
          "id": "b5350f2d-b747-4ce1-88d4-02316f5797af",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d91b0548-6f8e-46ae-8564-9b33e322df4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472fb199-53ad-4361-94bb-d111aba28a42",
        "cursor": {
          "ref": "46412f8a-0b04-427c-a4a4-90a50efd1050",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "52dcf1be-d404-4594-b896-ca7a71001050"
        },
        "item": {
          "id": "472fb199-53ad-4361-94bb-d111aba28a42",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "8f1308e5-4419-4aa8-9258-72079538d547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1316e8c5-cc54-4baf-98d9-84a48e4af778",
        "cursor": {
          "ref": "e7bf0eb8-3f93-4f34-be82-9e34620620f2",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "723fb0e4-f134-4105-88ee-0ffc2b0a3dc6"
        },
        "item": {
          "id": "1316e8c5-cc54-4baf-98d9-84a48e4af778",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "1551d191-9bf2-4039-ad34-566bf287f70b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01cc1b9-3ee0-47bc-b701-36177b56fdae",
        "cursor": {
          "ref": "de243079-007b-4714-bbb3-51c0d48f28b9",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "467f50cd-e5ac-4b77-9f0e-100dac597e11"
        },
        "item": {
          "id": "e01cc1b9-3ee0-47bc-b701-36177b56fdae",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "d9eee853-7663-42fd-8011-ab59db05050f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b085935-f3b2-47a1-ae96-1b1d06c9fcea",
        "cursor": {
          "ref": "153d95af-eebd-4250-ae99-a428faafb676",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c83ff6bc-f27d-4efd-b98d-365c020d5d38"
        },
        "item": {
          "id": "9b085935-f3b2-47a1-ae96-1b1d06c9fcea",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c3d22e6e-efeb-438c-9a4f-b7785e462d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b76052-b1be-4f26-bb0f-0f9a94167350",
        "cursor": {
          "ref": "1dd2c606-a159-4e8f-bddc-7e19dd9668a0",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8ad43d8a-4af7-4cc0-b67d-2518abe76ce5"
        },
        "item": {
          "id": "c0b76052-b1be-4f26-bb0f-0f9a94167350",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "605e67b3-6eb9-4f85-89fa-9b2ef86d482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fed977-dc89-4194-b1cb-bf45d9c9790c",
        "cursor": {
          "ref": "e89d5f84-40d4-4678-807e-ab3db98eddbb",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7a2fc63f-20b8-4e41-8a03-81e748c6c077"
        },
        "item": {
          "id": "26fed977-dc89-4194-b1cb-bf45d9c9790c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "2efe5193-9813-4619-a7a2-c5ce2e7c400f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75d98a4e-2c6c-4e33-9544-f9982333a48b",
        "cursor": {
          "ref": "d46853ed-d805-4ecf-88d7-1b145815f7f9",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e7198e54-9a88-42cf-be36-15b477d79eec"
        },
        "item": {
          "id": "75d98a4e-2c6c-4e33-9544-f9982333a48b",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e0c0e197-eb63-4257-a954-39a257d482a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2367025f-671d-4909-aa2f-2dfb4ce291af",
        "cursor": {
          "ref": "5a386c50-c728-4b10-9b44-07f0840afe38",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "51a69677-e291-40df-b92b-9ec6691d8aee"
        },
        "item": {
          "id": "2367025f-671d-4909-aa2f-2dfb4ce291af",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b5630d28-bc93-402b-96c7-908bcbacf926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a4acca1-8a27-4a4e-bd05-53276dbd9fba",
        "cursor": {
          "ref": "3cabfa48-2fda-4daa-8bb3-c23ed62b8833",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "7e44e6b5-9dbb-4e9f-9fd1-866eb10e9c91"
        },
        "item": {
          "id": "6a4acca1-8a27-4a4e-bd05-53276dbd9fba",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "415a1ef1-8e73-40b6-88d1-339b68e10430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a80fc7-e8a1-4563-8b9f-1982df1a5f6b",
        "cursor": {
          "ref": "9fb9ebd3-3910-46c8-a075-3163192f1dc3",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "33237e86-3283-480c-8e90-fd9ad0499921"
        },
        "item": {
          "id": "e3a80fc7-e8a1-4563-8b9f-1982df1a5f6b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "73548f75-1a75-44b2-80c0-b7510438041e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6947ed3e-a420-4f2f-bd7f-4008f10692c2",
        "cursor": {
          "ref": "12b527cb-8bdc-4daf-9bcd-c30c24b2b5c2",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c3aee31a-43d3-46c6-afd5-d6914d4f1ac8"
        },
        "item": {
          "id": "6947ed3e-a420-4f2f-bd7f-4008f10692c2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "210afeac-d501-4451-a162-87c91f8e28dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad2c3e8-a38c-47c3-a7ee-c6878cff53e6",
        "cursor": {
          "ref": "ce7d858c-becc-483a-be95-fba8e5b2c1e1",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d5c30dae-329a-4096-8d3f-91265b0cc344"
        },
        "item": {
          "id": "fad2c3e8-a38c-47c3-a7ee-c6878cff53e6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a078f1db-8e8a-4c61-9ad0-dd8e6251b834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f8cdf6b-e71a-46c5-ac9a-c8d7cdb1d762",
        "cursor": {
          "ref": "c6a63355-ee59-4032-bca7-70227ddc8c37",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3f15a4e9-727a-40a5-9166-d3ebfcc64cb7"
        },
        "item": {
          "id": "5f8cdf6b-e71a-46c5-ac9a-c8d7cdb1d762",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "4318c0c8-3d69-431b-8cb1-ebe9292a4ee8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b83f29c-9ed0-400b-b2f5-5c0d20f9264d",
        "cursor": {
          "ref": "39e352fe-9974-4098-b4fc-2289359f22a8",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "cfb7b654-d5de-4da2-b494-93747834a11e"
        },
        "item": {
          "id": "9b83f29c-9ed0-400b-b2f5-5c0d20f9264d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "69131b20-bdd1-44c6-9b29-83801aa4df5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db35e23c-f90e-41db-aa57-6c03d218bced",
        "cursor": {
          "ref": "7acade9a-dcd9-4e1c-a499-07f991be5d75",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "71cfb31b-2a65-4d5c-b94e-97152dc5eb55"
        },
        "item": {
          "id": "db35e23c-f90e-41db-aa57-6c03d218bced",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "406c344f-2b01-4ca0-bd73-47d1a9c8b368",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd002f26-f29e-4d34-bf61-0d7cbd8c4ac9",
        "cursor": {
          "ref": "b43cab8e-c527-4520-b8ed-b9219e092359",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "deb43dad-0312-4995-8977-1e8d1d12412b"
        },
        "item": {
          "id": "dd002f26-f29e-4d34-bf61-0d7cbd8c4ac9",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "eb5206e2-a1fe-472d-92b0-cb727290207b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b51259-47d9-403e-9adf-351697c0b77b",
        "cursor": {
          "ref": "14461171-413d-40ea-a48d-5b99b51c0332",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d328be14-c444-41aa-839f-5982261af97b"
        },
        "item": {
          "id": "90b51259-47d9-403e-9adf-351697c0b77b",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "154c4f09-3e99-401f-890f-a433cce76766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf3f1b6d-7f65-4e7e-be24-0e27cfa65722",
        "cursor": {
          "ref": "3656f830-4d08-4fa5-835d-eec4db8ca289",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "727da665-f656-4c02-8272-8719cc83e26a"
        },
        "item": {
          "id": "cf3f1b6d-7f65-4e7e-be24-0e27cfa65722",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "61669b64-5522-465f-853f-786931758fef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2feefd4c-fa0f-4112-ae99-b7674ac75e55",
        "cursor": {
          "ref": "43279924-465e-4099-b3ec-448cba7e0d61",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "880cd69c-aded-42be-8e53-c1087667855f"
        },
        "item": {
          "id": "2feefd4c-fa0f-4112-ae99-b7674ac75e55",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "a207ef09-d1f5-425c-a94f-e06d36b1291f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e45b0b65-8568-4b15-9b6f-f74e4eb0b87b",
        "cursor": {
          "ref": "ad7812a6-3431-4817-8e2c-e54553e56489",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8de82710-3200-4e7f-a58b-1b96692dabad"
        },
        "item": {
          "id": "e45b0b65-8568-4b15-9b6f-f74e4eb0b87b",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f5b881e4-5dcb-4236-9c72-4ee874ccfd21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75636b66-0a3d-4343-acee-6cb7a1cdda39",
        "cursor": {
          "ref": "ae755a57-2a70-42c1-a9a7-bf029b6643cb",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "6b87a462-92cb-415c-91c2-ddbb578e0caa"
        },
        "item": {
          "id": "75636b66-0a3d-4343-acee-6cb7a1cdda39",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4b7f2d17-e13b-42a0-a3ef-bf9c8d4d535f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04d8b649-319b-4f08-a29c-446cbb538b16",
        "cursor": {
          "ref": "39b86492-8e2c-4994-91ad-7c504abbe8d0",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a17c7917-c30c-4df2-be04-a5b86b6984b2"
        },
        "item": {
          "id": "04d8b649-319b-4f08-a29c-446cbb538b16",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "87344410-a911-4238-a264-11b99b61b914",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3edebb-9dd4-4bcb-81a4-c37b3886bd10",
        "cursor": {
          "ref": "7d90c6aa-b9ec-488d-bd3a-1f1b5200fbdf",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "36ef13d2-e17b-43ef-87cf-46e866335fd9"
        },
        "item": {
          "id": "8f3edebb-9dd4-4bcb-81a4-c37b3886bd10",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f8489979-f5e5-4677-b7b0-4704b79a70a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca415618-32b5-4f27-b0f4-60c2787b9574",
        "cursor": {
          "ref": "4adc4aaf-fa53-44fd-aa99-f2714d7e17d0",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9bd8e282-eba7-494e-ac47-9bd6ff891084"
        },
        "item": {
          "id": "ca415618-32b5-4f27-b0f4-60c2787b9574",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a2771e75-3e3b-4629-8501-7e93d68e4629",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac27ff73-040a-4d10-9920-6c09c781f344",
        "cursor": {
          "ref": "cf9e9d03-02f3-4309-b10c-e8cd295a2a76",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "096b5953-4f63-43ee-b28e-acc8900c7a35"
        },
        "item": {
          "id": "ac27ff73-040a-4d10-9920-6c09c781f344",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "aa410360-fc38-4ddb-8f9b-241fb795617d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c8809d-c688-4573-93c8-de1caa440623",
        "cursor": {
          "ref": "71aab250-3a88-4cf9-9700-7a52b285b1f3",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4ed0fac1-0606-4ed9-911b-b7691085fe0a"
        },
        "item": {
          "id": "55c8809d-c688-4573-93c8-de1caa440623",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "5794afbd-5833-435c-adf5-0a221375d987",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76d1d64-79d7-4724-8574-3bb81fb5f596",
        "cursor": {
          "ref": "e477b811-f82b-410a-9fc1-29c61c668b1a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7af05e44-0fa3-4458-b79b-196817c01bab"
        },
        "item": {
          "id": "d76d1d64-79d7-4724-8574-3bb81fb5f596",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "db319347-e7cf-4466-a644-dfe9052d0e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6068b5c5-c836-422a-bf22-04fa9bbed0c2",
        "cursor": {
          "ref": "b124ce9d-9398-436a-8656-48cfd733825a",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9d73a4ef-f335-484b-a6d0-227e3e17a313"
        },
        "item": {
          "id": "6068b5c5-c836-422a-bf22-04fa9bbed0c2",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f74bb327-72f8-46cc-be83-518ae914dc4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27bcb50-760a-4760-b2ef-c348483177ae",
        "cursor": {
          "ref": "61898874-fc8b-4079-97d1-17bc0a8934e9",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "83986c3e-b7bd-48b0-9679-098bb64702fa"
        },
        "item": {
          "id": "c27bcb50-760a-4760-b2ef-c348483177ae",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e3794130-9d2d-4f8d-9c07-b2480f34eae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3b3826-c152-43a7-9b62-e26498c0cad4",
        "cursor": {
          "ref": "ec4d9274-979c-4591-9aab-9769ed7e0865",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5eb64b00-dde6-4c6b-85f4-a2c555563360"
        },
        "item": {
          "id": "da3b3826-c152-43a7-9b62-e26498c0cad4",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "d89bb0ed-5a67-4bc9-8171-9123dc8bcf26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533388e6-5a9c-4b85-816a-cbcc3fe2caa7",
        "cursor": {
          "ref": "f8915350-f124-4481-b557-2ba8b78516e3",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "54197904-fa41-4f30-a269-8595c178be7d"
        },
        "item": {
          "id": "533388e6-5a9c-4b85-816a-cbcc3fe2caa7",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "db1cf579-95a9-41da-b5f5-9228caa8cf41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb6c1aa8-1f89-4bc2-858b-70c8b6b34f16",
        "cursor": {
          "ref": "b904bbd9-ee2d-4d77-85fc-8a74bf62031a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "20a8ddb3-96d6-4799-9afe-89c20be84e05"
        },
        "item": {
          "id": "bb6c1aa8-1f89-4bc2-858b-70c8b6b34f16",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b4fd3b1b-8709-4b2b-873d-41393bf487cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0995d62d-203c-4fdb-926e-81d3cb207f6e",
        "cursor": {
          "ref": "deed6158-c042-4941-9ac9-14bcd780471b",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "291199bb-da53-4ced-b286-3ebafd47bf2c"
        },
        "item": {
          "id": "0995d62d-203c-4fdb-926e-81d3cb207f6e",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "fb6b9b95-9704-49af-b687-b8cc14ec104f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956a7dda-1dc9-41e6-869f-c05d5f107992",
        "cursor": {
          "ref": "72424486-c0b2-4380-95ab-2f44217ddbe2",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "99cd39b0-6b50-4aa3-956a-35d6109f4fa7"
        },
        "item": {
          "id": "956a7dda-1dc9-41e6-869f-c05d5f107992",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "0692e440-6ffb-4a21-b6f3-517b535942e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea05dd11-e873-45bb-b0a1-93494bf8555a",
        "cursor": {
          "ref": "c0bed9d8-564c-44bb-9162-63442534f5e6",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7d46b9b2-be17-48c7-b6ba-5988c4d11a48"
        },
        "item": {
          "id": "ea05dd11-e873-45bb-b0a1-93494bf8555a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "73820950-bf62-489f-bcd9-4e9d707538bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d326a5b0-cbc9-4fae-bd7b-9b7b30945ecd",
        "cursor": {
          "ref": "e4963eb7-ae75-4e17-9245-5a5c66ccee0b",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "515a9ae8-76ae-4fc8-bc2d-db406f4ef841"
        },
        "item": {
          "id": "d326a5b0-cbc9-4fae-bd7b-9b7b30945ecd",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5261ad6b-6619-426d-a1b1-199a8065cfe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e16ad2-21b6-4fbd-a5e9-cde9ccb636db",
        "cursor": {
          "ref": "d861c494-ce09-471f-a759-124183b577b3",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "fd8b3a4d-7243-4cd2-b0a8-081e2fbf66f7"
        },
        "item": {
          "id": "59e16ad2-21b6-4fbd-a5e9-cde9ccb636db",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "65da901f-e5f9-4afd-9167-03422bca3e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67940c55-1420-414d-8dcf-e9d8d718df75",
        "cursor": {
          "ref": "f9a88ae7-cda0-4c43-90bb-d643a5af768c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "8fd69e9d-0714-423e-9127-e1d7ffe2c0de"
        },
        "item": {
          "id": "67940c55-1420-414d-8dcf-e9d8d718df75",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "63ec29f5-ec1d-430e-b7d4-1338ad4f6234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff5fbc2b-ed80-444d-a69d-6ee021488b47",
        "cursor": {
          "ref": "8810e2c8-1598-4a3a-9f70-e96ac2c2b182",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "325d576c-660e-436e-814c-4bab5f1d7043"
        },
        "item": {
          "id": "ff5fbc2b-ed80-444d-a69d-6ee021488b47",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "69a6287b-63c4-472f-a539-131ec33d6524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1b540a9-c6f6-4850-98b9-4b1041aaf40f",
        "cursor": {
          "ref": "4b720fcf-af57-414d-8435-ebdbafe04bb1",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ee5cf324-582e-46d4-868f-180e46f95dc4"
        },
        "item": {
          "id": "c1b540a9-c6f6-4850-98b9-4b1041aaf40f",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c496f091-3c21-4b45-8c49-19e793026bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fddb01-6d8b-46fe-a64f-5ab530ee2a38",
        "cursor": {
          "ref": "f40e525a-e94d-4c99-bc7f-a9bf73fa9ea5",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3eef4e51-9d93-464f-b6b0-b35a56693b9b"
        },
        "item": {
          "id": "95fddb01-6d8b-46fe-a64f-5ab530ee2a38",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "92f4ebb5-d95c-48e1-8bf8-3e957752a51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7917f9ee-7f74-4d89-afaa-504d41edc327",
        "cursor": {
          "ref": "39911c6f-cafd-48c9-b832-da3cec1df15f",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "8d037261-ecb0-48a2-8b17-ef14763ecb26"
        },
        "item": {
          "id": "7917f9ee-7f74-4d89-afaa-504d41edc327",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "00111919-8e00-40d2-9d4a-a239803a7596",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9aa1e3e-035b-4944-9d1f-55a0869ebb9b",
        "cursor": {
          "ref": "0e256179-dff1-4de6-a961-f3a57ce2ef81",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "28ceeb85-856f-4b1b-b0f3-20ca0fc64c48"
        },
        "item": {
          "id": "b9aa1e3e-035b-4944-9d1f-55a0869ebb9b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "85db074b-45c8-41f3-a602-accc91d2c033",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40915a23-ef78-44ef-b5a8-4d7115e10631",
        "cursor": {
          "ref": "e010ebb3-aa1c-4fcf-910d-4d2283b2135a",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "235e50d2-ee6d-4bb4-b7e6-f8522a69e2dd"
        },
        "item": {
          "id": "40915a23-ef78-44ef-b5a8-4d7115e10631",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0804bbac-69e8-49bb-8bd0-4358488ca83c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ed019c-2fea-49b6-83e7-117598071fc4",
        "cursor": {
          "ref": "243e6f7f-e6a0-461f-9d70-416bbc8a0a36",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a80e37de-66ff-41d0-adb3-81a5af0b80f8"
        },
        "item": {
          "id": "37ed019c-2fea-49b6-83e7-117598071fc4",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "a41ca563-1807-4171-8c97-f59407e8e5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b32ff4b-2e5d-4a28-af5b-36a4b03a53a0",
        "cursor": {
          "ref": "66989e8d-d463-4dcf-b34e-405be1bd1f62",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "f7c5495f-a1e0-41ca-844a-666137a590d1"
        },
        "item": {
          "id": "0b32ff4b-2e5d-4a28-af5b-36a4b03a53a0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a5dd3367-0b0f-424d-9a00-51d5a9f93141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe76dc9f-1e86-4104-bc8b-a465f737551f",
        "cursor": {
          "ref": "c3d53180-72fc-48db-b710-9187744fda5f",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b85b8233-f9be-4d0a-9ede-f870ac8662f2"
        },
        "item": {
          "id": "fe76dc9f-1e86-4104-bc8b-a465f737551f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0f7700d2-9fba-44e7-a65f-2727fd60809d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2740bd6e-8b39-433c-bc53-8a924c840594",
        "cursor": {
          "ref": "11fb19ed-4994-40b4-bd3a-fd9f38598c3b",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ba2dcc78-6d3e-43a7-82f5-64a9ab3bdb95"
        },
        "item": {
          "id": "2740bd6e-8b39-433c-bc53-8a924c840594",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "98f6a3e8-8d76-4477-93b7-b0447f28d1a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961cfc53-76ae-4b2d-a3b2-4f8c32193900",
        "cursor": {
          "ref": "ab951938-0959-430a-8b47-6947008eba3c",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8f09e193-fb43-4587-b8eb-0ebcb3373042"
        },
        "item": {
          "id": "961cfc53-76ae-4b2d-a3b2-4f8c32193900",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4a9f56be-e302-4672-900f-216a966cfe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f3d8201-2c39-46f4-af5f-46dc76de8dac",
        "cursor": {
          "ref": "96763bcc-1f35-4ede-a906-d0c9584d6d10",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "1ecbec62-09ee-446f-a9d4-031a1b319a8a"
        },
        "item": {
          "id": "6f3d8201-2c39-46f4-af5f-46dc76de8dac",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4f445889-c295-4eed-b4d8-bed58386f3ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44e1c9c0-748d-481c-bde3-72f8d99cceac",
        "cursor": {
          "ref": "4b81dec4-7319-4702-97e2-b29bdfe2a68d",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "ab5eb696-1c11-4375-9c9a-28e27af50d3e"
        },
        "item": {
          "id": "44e1c9c0-748d-481c-bde3-72f8d99cceac",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "114f576b-f70f-4553-958a-285d215e17e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d44f35e2-f9e1-4e1d-a848-f1b88cf90aad",
        "cursor": {
          "ref": "57c416e0-704e-4617-805b-6ff706dadf63",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "3d7b59e4-cb21-40e8-9f8b-e19495833262"
        },
        "item": {
          "id": "d44f35e2-f9e1-4e1d-a848-f1b88cf90aad",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "cc6fa352-0af5-4cba-befd-7e378e8f330c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efb94b4b-d01a-4ac8-847e-75f1eaf83cab",
        "cursor": {
          "ref": "1f44bdc9-0520-430d-bc85-ce245b83aec3",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "54433863-e111-4a9e-ad60-7abcb89d907c"
        },
        "item": {
          "id": "efb94b4b-d01a-4ac8-847e-75f1eaf83cab",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "15512457-4c0b-4490-b591-8e675bcd2e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ae21b5-0243-40e3-a8e8-10854c7b762c",
        "cursor": {
          "ref": "49cebb00-1b39-46b6-b66d-29d35fa91dbf",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "6b8bf761-0665-40b7-8bd0-5c07433155f3"
        },
        "item": {
          "id": "d5ae21b5-0243-40e3-a8e8-10854c7b762c",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "472dbd7f-6b06-466d-b321-8a75b7f44c86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db23ed3-646e-457b-8704-5a23641696c5",
        "cursor": {
          "ref": "7af4f61b-571a-4ab6-944f-3275298d16f9",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e6f31aa4-bf48-4055-a8cc-7b826a9f9b0c"
        },
        "item": {
          "id": "1db23ed3-646e-457b-8704-5a23641696c5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "6b0bed35-02f5-43bf-9bc6-964f1dc83f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3b7eb4-889f-4411-8390-dfb22088abdd",
        "cursor": {
          "ref": "26f64ede-8a4c-41ba-913b-9a7706985b45",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a706ab47-2860-4f6d-b013-60d0ac21cceb"
        },
        "item": {
          "id": "6c3b7eb4-889f-4411-8390-dfb22088abdd",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "f6e72e0e-19bd-4682-844e-bdf7fd4ac491",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a008febc-144d-4453-bf97-de5ac292fe13",
        "cursor": {
          "ref": "2945b98d-5a94-416f-b652-a92c43d54d4c",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "2ff721e9-352f-4bd3-bc6f-25f36abcd998"
        },
        "item": {
          "id": "a008febc-144d-4453-bf97-de5ac292fe13",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c3c0f3a6-71db-4a7a-b3a1-bca4cf872875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f674ae4-0fb3-4045-8fe1-3615aff7d742",
        "cursor": {
          "ref": "1c46cf50-2fe3-4ff4-920a-f337a91df2ef",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "820f5262-aca9-4a03-950a-49976e926fb8"
        },
        "item": {
          "id": "9f674ae4-0fb3-4045-8fe1-3615aff7d742",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3234dccc-fb87-4f7a-9ab4-35ad6cdbd83a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36eee0a7-0ae9-42cb-b1c7-a71d219c60a4",
        "cursor": {
          "ref": "207a6f65-de3e-4dec-a20f-3c6fd4c24e47",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "46ab698f-fe6e-415a-bd97-ce531c456b0f"
        },
        "item": {
          "id": "36eee0a7-0ae9-42cb-b1c7-a71d219c60a4",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c0a54250-f517-40ae-ba87-cac5a0baaebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8672965-a29a-42d6-bc6a-944de33da43e",
        "cursor": {
          "ref": "0fddbae3-e5ee-46d1-8ffe-3dc463e333bc",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "0217483d-aa39-443b-9692-52891241217d"
        },
        "item": {
          "id": "d8672965-a29a-42d6-bc6a-944de33da43e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "1f2c72e0-25b3-4619-83fd-46d0bf128fcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcded55-8e43-4f96-8f3e-2c25add81b0c",
        "cursor": {
          "ref": "f5ddf8db-3650-43c5-851d-829654032193",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "30023172-36a7-4829-88ad-ad37382a49ba"
        },
        "item": {
          "id": "7fcded55-8e43-4f96-8f3e-2c25add81b0c",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ca857f23-b2a5-4e68-bfce-8576525cfcb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1d1040-13f0-4483-b407-a8092eb6b688",
        "cursor": {
          "ref": "714b6429-85bc-40bf-88b9-d70b63122dd0",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "b464d096-4d3e-40c6-adf9-cbd699abcd5f"
        },
        "item": {
          "id": "cb1d1040-13f0-4483-b407-a8092eb6b688",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "60cf61e9-56b7-4923-b52e-9049fa4b55b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fa21b8-5055-4b78-be94-a6b1e5e5cb8d",
        "cursor": {
          "ref": "cdc3f85b-472f-4b3d-ae65-154a9dda0385",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "c00f642d-c444-4d87-b321-119bc914baec"
        },
        "item": {
          "id": "50fa21b8-5055-4b78-be94-a6b1e5e5cb8d",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "566c922d-207d-4044-a7cb-6a34e7473050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e88aa27b-1d93-475f-90e3-5ea822519ee6",
        "cursor": {
          "ref": "c4c1cc65-02f8-45f9-8afb-d7eb322856e4",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8a189441-f280-48ac-8a56-46aad2623bfd"
        },
        "item": {
          "id": "e88aa27b-1d93-475f-90e3-5ea822519ee6",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d1502dc9-ef9d-4302-a2af-f1232518d102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b2cb22-bcb9-4550-b345-8a05ff0b08b1",
        "cursor": {
          "ref": "eda39bba-d1f3-4c95-8011-7ecab5077be1",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8d9e3e0f-9036-4dd6-b41c-3c48ed2b1d2f"
        },
        "item": {
          "id": "68b2cb22-bcb9-4550-b345-8a05ff0b08b1",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "73ff6a4b-4c0e-483c-8491-db76d66568f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f69832f-0132-44c6-9db0-c288c4bf149c",
        "cursor": {
          "ref": "37bb315c-e473-4a09-830d-4b10d07de4ea",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "e46c0f7b-b020-42df-a563-3391297e4cc8"
        },
        "item": {
          "id": "4f69832f-0132-44c6-9db0-c288c4bf149c",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "b7264fe1-a975-4c14-9a50-28cb0eb0d1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e9f060-ac28-445d-9544-67eca7dd2821",
        "cursor": {
          "ref": "f9dbb508-67ac-4514-a665-3a9279b821b2",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "6668fafc-3943-4fbc-82df-daa650998fb5"
        },
        "item": {
          "id": "d4e9f060-ac28-445d-9544-67eca7dd2821",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0878ae69-59a9-40f8-9a34-c974bb2503dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09b2c8e4-1e57-48d7-8498-d93c846c8645",
        "cursor": {
          "ref": "422a281b-5b14-48d0-80f0-cb0631c49a93",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ee52882e-8f7e-41b8-8762-5023b67ce1fc"
        },
        "item": {
          "id": "09b2c8e4-1e57-48d7-8498-d93c846c8645",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "14dd5b8b-859c-4b5d-974e-29ec872920e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be1eccd1-2053-49b6-8a6e-fe45f3c4bb1d",
        "cursor": {
          "ref": "f6390da0-8641-4411-b4c6-45b8a4e1077e",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "0092e639-2a4d-413d-8a1b-ee0d1af6c00d"
        },
        "item": {
          "id": "be1eccd1-2053-49b6-8a6e-fe45f3c4bb1d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6898fd66-5f9c-4b14-b094-2e325894b632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff52e1ea-56af-4019-bb5c-ac8f216152bf",
        "cursor": {
          "ref": "2aeb7c73-2f88-4bd9-86ab-603f12227903",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6a203bf6-fbfc-4bcb-b496-de1235438496"
        },
        "item": {
          "id": "ff52e1ea-56af-4019-bb5c-ac8f216152bf",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "bcc77880-e528-492b-a836-19f3c8ee63e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "514c63de-c7cf-4625-b291-db2d7749e8bb",
        "cursor": {
          "ref": "d2490b5c-eafc-4a7d-af8d-75e6cb1445c3",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a37b33a9-deee-4ed9-8a39-9cb77a6d1e29"
        },
        "item": {
          "id": "514c63de-c7cf-4625-b291-db2d7749e8bb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "fe093798-4571-41f3-8461-19ceefe44606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f618d107-b6f4-4553-ad5b-aac5b5b27df9",
        "cursor": {
          "ref": "33bb1d0b-db73-4366-91ac-6d6073096b27",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "afe171e3-6af4-40da-95d5-64002305f503"
        },
        "item": {
          "id": "f618d107-b6f4-4553-ad5b-aac5b5b27df9",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "09df3800-7d6e-4830-957f-4ed1567d7c4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e63b673-9aed-42fd-9e4f-3adf6c31bf34",
        "cursor": {
          "ref": "be774acf-585b-4922-81bc-bcdd3c950502",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "755afca5-7fb6-46b5-9259-a5f6c4c6d8b4"
        },
        "item": {
          "id": "4e63b673-9aed-42fd-9e4f-3adf6c31bf34",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "88159ed0-b0f7-425c-bc0f-7ed68a4c8000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8155a93-2b55-462c-81fe-4f8b293e2afc",
        "cursor": {
          "ref": "d3540f56-76f9-4cc4-943f-ff5ea635d4f9",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "449e907b-777c-4d10-9acf-df060a8b35d5"
        },
        "item": {
          "id": "d8155a93-2b55-462c-81fe-4f8b293e2afc",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c500d327-072b-4a22-af01-b2c2ff21cece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c6f24f-1260-4cf5-aa3b-f2d49f4f36b5",
        "cursor": {
          "ref": "1641acd0-e36e-48c6-93ed-086563b1a2f9",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd3a5b04-4f85-4e78-9856-0ba3a0b8e9d3"
        },
        "item": {
          "id": "28c6f24f-1260-4cf5-aa3b-f2d49f4f36b5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4daa1eee-b6c3-4463-90a0-0d1f49237b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc27e05-e9c5-493c-8f58-adbc864e898a",
        "cursor": {
          "ref": "785a92ba-85ec-44c8-9e96-748be1bdd38b",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7ad9a827-da35-4493-848e-ad4bb60c0fcf"
        },
        "item": {
          "id": "acc27e05-e9c5-493c-8f58-adbc864e898a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fa12eb90-be39-4453-bc3e-a98cf7eb17ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b6107a6-f988-456f-bcef-33236c8dbafa",
        "cursor": {
          "ref": "6b891b03-dc47-4eff-947b-a2b33ef508ec",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "11c9bb82-cc73-4658-8ef7-490a403c0a49"
        },
        "item": {
          "id": "4b6107a6-f988-456f-bcef-33236c8dbafa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b168c950-8934-4ea7-a8e9-1dc30fef6b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48beea88-f7ca-4cd3-b8c7-1a28d3ddd87f",
        "cursor": {
          "ref": "d0650968-3ea8-4afa-88b0-02c27898c794",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9ad157d0-22eb-4fdf-b52c-4560640f2dc3"
        },
        "item": {
          "id": "48beea88-f7ca-4cd3-b8c7-1a28d3ddd87f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "1a0331e9-4e36-4d2b-a42b-378504aa03f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da8ec6b-78cf-4a08-89bf-42aa5a6bba6d",
        "cursor": {
          "ref": "d29db7ed-da67-4eec-a3ed-b99e9b8d27fe",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e95d9429-093e-4a24-bfc2-c1d87404637a"
        },
        "item": {
          "id": "2da8ec6b-78cf-4a08-89bf-42aa5a6bba6d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "dbb28167-3648-42ec-b45c-7f3a4a6b06e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed3a1b10-6c06-4bde-aa7b-b3e96aa71afb",
        "cursor": {
          "ref": "21772336-f9c6-486f-a033-def97018dc05",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "10210db4-9f29-49b8-a153-b6453b51b018"
        },
        "item": {
          "id": "ed3a1b10-6c06-4bde-aa7b-b3e96aa71afb",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "47b48fe9-8a5d-45af-9b6a-c9754dfe4f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a23f1497-3b2d-44f7-9fc6-3cecbfd4f9df",
        "cursor": {
          "ref": "5684613a-2758-4a6e-b9bf-528b5de8325a",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a795657d-ce9e-4de9-955b-fb7b716c314a"
        },
        "item": {
          "id": "a23f1497-3b2d-44f7-9fc6-3cecbfd4f9df",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d6350666-addb-43c1-904b-0cf77aff0e82",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf20826-cabd-4498-8522-787982d1c364",
        "cursor": {
          "ref": "4eaf1681-d2d4-4246-b147-caaa0906f2c6",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "87ec7bf0-17e1-4440-8bf7-6ceaa2529e99"
        },
        "item": {
          "id": "cdf20826-cabd-4498-8522-787982d1c364",
          "name": "credentials_issue"
        },
        "response": {
          "id": "45ea1771-e71f-40e0-b0f8-1991ee40bef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:102)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:102)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:102)"
            }
          }
        ]
      },
      {
        "id": "a111f1f7-2f2b-4674-ae57-a63d23ed7132",
        "cursor": {
          "ref": "ead15c02-5596-4a87-b0f0-b4b9608ef15f",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ba81feb4-53c0-42c0-b449-cf6d3267d0a0"
        },
        "item": {
          "id": "a111f1f7-2f2b-4674-ae57-a63d23ed7132",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "494a01bb-6937-4021-b4d8-37fbe8d66da0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:103)"
            }
          }
        ]
      },
      {
        "id": "02d8aa61-e36d-4bc7-af63-90ef44f78a69",
        "cursor": {
          "ref": "ff77673e-56f1-44f0-ac16-d8ace8505bf3",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "ffa6737d-9c05-4c2c-91ce-98ff65caed02"
        },
        "item": {
          "id": "02d8aa61-e36d-4bc7-af63-90ef44f78a69",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9cd24c44-3ff0-4783-9d68-122c8576d3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "2d9fb542-c4b3-4db5-bc70-e614793fbb68",
        "cursor": {
          "ref": "9c57510d-257d-4b0e-bc5c-6dbc8e77cfdc",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c470ea60-ac27-4404-a22a-7e0273023988"
        },
        "item": {
          "id": "2d9fb542-c4b3-4db5-bc70-e614793fbb68",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1709cd5d-fe34-447b-ba96-970729944475",
          "status": "Created",
          "code": 201,
          "responseTime": 4889,
          "responseSize": 990
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "df3bdae7-cc36-49f8-bf7b-3c98958b62de",
        "cursor": {
          "ref": "fc1423c9-d479-4025-9df6-addd463f3059",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "e09e89cf-2d59-40e8-ae06-47272f8e34bf"
        },
        "item": {
          "id": "df3bdae7-cc36-49f8-bf7b-3c98958b62de",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3ef0bea2-828e-4bae-b47f-647f0f8e3597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "50699e2a-a9cd-4346-818b-e304496f1393",
        "cursor": {
          "ref": "6493a482-6a43-45d7-842d-e0735fcc6a90",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6c4e5663-c71b-4d0c-9f12-9fa5b7007999"
        },
        "item": {
          "id": "50699e2a-a9cd-4346-818b-e304496f1393",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "32ca5bed-ac7f-4078-bedb-c5d91e8f0ddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "df36d672-eab8-4f8e-a1d3-9525006b4a3e",
        "cursor": {
          "ref": "6757326d-f172-45ca-86a3-aad203ee1dda",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "514ba54f-23a1-44d9-9bb0-14d3d4b40c36"
        },
        "item": {
          "id": "df36d672-eab8-4f8e-a1d3-9525006b4a3e",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "4195797f-6a09-4580-91e7-a68be32e0e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef79f43c-a64c-4cbd-9baa-163928402955",
        "cursor": {
          "ref": "aad4fa10-954c-4fb6-8035-3892063d7165",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "92b162e9-b949-489a-b75f-757cfab77dd0"
        },
        "item": {
          "id": "ef79f43c-a64c-4cbd-9baa-163928402955",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bebbabc6-f894-4985-bcf0-51a5d2b41a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53076f6a-76da-485f-8bf9-9a45ce636418",
        "cursor": {
          "ref": "09b4340a-a3bd-4ccc-9df8-66778e2a7617",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "ec90f248-117d-469d-b95a-83a58d3b5a0f"
        },
        "item": {
          "id": "53076f6a-76da-485f-8bf9-9a45ce636418",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "325fac9c-0377-4feb-bd05-aa1bf57654db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c405cd2-5fa1-4680-a991-a3510733b172",
        "cursor": {
          "ref": "3d92e6d0-02bf-4532-afee-847c8fffebe4",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "277923b5-a38b-4e52-9d04-93012fc21c9a"
        },
        "item": {
          "id": "5c405cd2-5fa1-4680-a991-a3510733b172",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3ae540b2-9bc7-4afa-a445-efaf345ac686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19fa9a2-301d-4071-b8e3-b443e06886a3",
        "cursor": {
          "ref": "ccb94295-fb20-49c1-9e9d-463c5e0c33ec",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "35132f8b-a23d-45c2-b332-69b2c87c6389"
        },
        "item": {
          "id": "b19fa9a2-301d-4071-b8e3-b443e06886a3",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "40c7b955-fbd7-4398-924b-70de6aa0f2ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16103f18-205b-4bbb-819d-9e12142c9020",
        "cursor": {
          "ref": "ac59b78c-7ffa-4921-8a89-9cad991a5ee4",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "4945317e-06ee-48ce-8b7c-79b9923f4ce2"
        },
        "item": {
          "id": "16103f18-205b-4bbb-819d-9e12142c9020",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2ee38d2a-3aaa-4b57-b149-43ce84b362b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1a1498-9ca1-422e-84c0-21ba2bd305ff",
        "cursor": {
          "ref": "00a0b720-6c7b-43d8-96a4-47de0588aa1b",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "dac6c4c1-3fd6-4e97-ab78-41586bc1a315"
        },
        "item": {
          "id": "ce1a1498-9ca1-422e-84c0-21ba2bd305ff",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2a46dd81-32d6-47ea-9b1f-a31471ba957a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78877d5e-5adc-40ef-b3d5-f70f17f4773e",
        "cursor": {
          "ref": "4368ccc9-8d7c-4e9b-b21c-4d40ae0cf27c",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "06768d24-b01d-488d-ae40-d27b5ad26c92"
        },
        "item": {
          "id": "78877d5e-5adc-40ef-b3d5-f70f17f4773e",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8487de13-8317-470c-9fff-71288411f6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ede47c-2eaa-41d0-b3e6-68569be724a1",
        "cursor": {
          "ref": "7b52f654-76b1-4e61-bf3e-24b79c494bef",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "81beb917-b0f2-4350-a06e-39c8810950fb"
        },
        "item": {
          "id": "29ede47c-2eaa-41d0-b3e6-68569be724a1",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5c4c68df-0a23-4cde-a9f8-4a2e51dd9323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4388f7d7-c02e-48a1-9a8a-999f32e5d2c4",
        "cursor": {
          "ref": "88e94386-bcc2-4b3a-b52c-f92defa8e07c",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f3721cfb-c703-42d2-a5ff-949acb0fb3db"
        },
        "item": {
          "id": "4388f7d7-c02e-48a1-9a8a-999f32e5d2c4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "993c01e1-a789-4165-8cad-3187da812e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62dbfff-77af-4705-b47d-2c614dbfe80a",
        "cursor": {
          "ref": "411d8d90-db26-444c-8118-70122bd21446",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "528d5931-ce32-4b07-9a3a-cff6fc7bcf9f"
        },
        "item": {
          "id": "e62dbfff-77af-4705-b47d-2c614dbfe80a",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bd896d21-f2fc-403c-bf0e-e1535d499caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f409d6de-9781-435a-98e4-5769ff3477b0",
        "cursor": {
          "ref": "f4b60c03-68d5-43c9-8a62-5c8c5eaf6a9f",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "61773c48-5758-4e68-a110-6f35ebe55c2d"
        },
        "item": {
          "id": "f409d6de-9781-435a-98e4-5769ff3477b0",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "bc58094b-a4a8-4bc0-9c9d-4ebc02b9196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6274e93f-b6f8-4ba2-9ed5-449c1d5671be",
        "cursor": {
          "ref": "5a101028-dbba-4ff5-bc3d-5ea93fb733a3",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "f43097fd-a8a1-4590-878c-2a4ca41f3470"
        },
        "item": {
          "id": "6274e93f-b6f8-4ba2-9ed5-449c1d5671be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "9b755088-ef6d-491a-9fdc-785b50f1c6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bec36376-adb9-4e15-a9a7-4617fa809a2c",
        "cursor": {
          "ref": "fbcc841d-f775-490e-b640-3ff1950355a6",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f4577c8d-cd1e-4561-b98a-7db17717892c"
        },
        "item": {
          "id": "bec36376-adb9-4e15-a9a7-4617fa809a2c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ce9d2d8d-1fb9-47f6-af55-ba011e887000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9932a8ba-eb09-4722-a23f-1d2a29f4c2c8",
        "cursor": {
          "ref": "c8391b08-8e06-496d-bdc0-8e87b2469d1a",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "eb72a02c-d988-45e0-bb68-063707e9d92b"
        },
        "item": {
          "id": "9932a8ba-eb09-4722-a23f-1d2a29f4c2c8",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f6e7ba30-cbbd-4e0f-8de8-d50e1b5bdea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c70a96a3-ad51-4399-97f8-134ff333535c",
        "cursor": {
          "ref": "06ea76a5-0a5b-427c-bc49-9a1de75d6d5b",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "6ae360e0-e460-47b6-8510-a9295f2233f3"
        },
        "item": {
          "id": "c70a96a3-ad51-4399-97f8-134ff333535c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "cac0f23e-8a6d-40ca-8003-2b436002ffa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5af88ba-4483-4c37-a555-2a7ef6dcd93d",
        "cursor": {
          "ref": "e8ec68e8-5c26-4f41-ab05-14a5ae9a09d5",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2d7c2766-ce25-4644-b939-0fc21f829c02"
        },
        "item": {
          "id": "d5af88ba-4483-4c37-a555-2a7ef6dcd93d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5cb8b8f8-6578-4364-949e-a50e6f49bf55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "912100e2-c82a-45fd-b388-27574e6356af",
        "cursor": {
          "ref": "a8e40f3d-74e7-469f-8f5f-1849564b1482",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "fddda3bd-1194-4d0a-9e8e-a256eadf0db0"
        },
        "item": {
          "id": "912100e2-c82a-45fd-b388-27574e6356af",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b0978f58-9f5e-47e5-9e2e-83de60495815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11b86090-5846-4514-a2e8-319abeea223b",
        "cursor": {
          "ref": "13f58233-2d90-4a4f-bffe-042930841b5c",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "2aaa920a-f4bd-4c1f-86a2-6fd852b4cab6"
        },
        "item": {
          "id": "11b86090-5846-4514-a2e8-319abeea223b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71303fec-5838-4a68-8756-be7104478c68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faa7e78-368e-4094-8885-fe96d41c7637",
        "cursor": {
          "ref": "153618be-6261-408e-a055-98a6b50ccd76",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "6de7811e-fb11-476c-8838-1990d2a0f2bf"
        },
        "item": {
          "id": "4faa7e78-368e-4094-8885-fe96d41c7637",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "166a2d91-f2c0-41ea-b718-3808064b275c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04abfee-b9f0-4d53-8e29-a3b1ac8d2ba8",
        "cursor": {
          "ref": "18bc29fd-10d9-4a05-af02-444e941c4b6c",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e4eadb9e-de7d-40dc-a541-ba5b4c2aae3a"
        },
        "item": {
          "id": "c04abfee-b9f0-4d53-8e29-a3b1ac8d2ba8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e5cf5d44-c92e-4d42-bfda-0fe758744e0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007df4c7-2aac-4cc8-aeff-58668c3f28cf",
        "cursor": {
          "ref": "503e6f85-2e7e-49c5-8d64-870819d73ff0",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2d40c163-9e33-47cb-bd7f-b39db8cdccf7"
        },
        "item": {
          "id": "007df4c7-2aac-4cc8-aeff-58668c3f28cf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3cef8cf4-e81d-459e-b474-4eb1aa3e17a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60cb633-9b5c-4aa6-af55-e9ac8bddc1f7",
        "cursor": {
          "ref": "e9c6b0d7-f851-4585-9d69-cd9369c8e8d7",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "bd33579d-5743-4ccc-981f-31a34b63a677"
        },
        "item": {
          "id": "d60cb633-9b5c-4aa6-af55-e9ac8bddc1f7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "0d485e4d-5297-4657-bfde-d1753ad512af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cde0fe7-92fb-4894-9929-6422bbc2ce8a",
        "cursor": {
          "ref": "149cdd75-8c9f-4e0d-ba56-e77844d74dd6",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "50a3ef2d-de73-478b-8859-2522f189156f"
        },
        "item": {
          "id": "2cde0fe7-92fb-4894-9929-6422bbc2ce8a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "fa5ae473-53b0-4bcb-b589-29758cfe6ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67d1f1ec-7e45-469d-a3a3-f709bba54fce",
        "cursor": {
          "ref": "be47747e-af89-44aa-8cdf-3a5f3f41102e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "594ce4f7-9a33-4c64-907b-9ebccb77e1cc"
        },
        "item": {
          "id": "67d1f1ec-7e45-469d-a3a3-f709bba54fce",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "18bbbd05-59be-461e-99a9-dbd2b1944c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "895609ca-37cc-4648-ade0-f5ad317daba5",
        "cursor": {
          "ref": "c0ed8580-d2f8-47e3-8597-03ad9c831a01",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "da093c8c-d166-46ca-af53-d846d779d5d2"
        },
        "item": {
          "id": "895609ca-37cc-4648-ade0-f5ad317daba5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "41d79f02-1d19-4110-a379-32f545dc16c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18ced3a-e5a3-4360-a994-facea4adc530",
        "cursor": {
          "ref": "e222ad33-6da1-43b7-8a27-e752c4e3a519",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "31811b31-8a6b-440e-9ebe-5818ff67e7c2"
        },
        "item": {
          "id": "c18ced3a-e5a3-4360-a994-facea4adc530",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4c60bea8-512e-466b-af42-4bd12a2fcbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c156df-ab66-4f1a-887c-f142210eeb63",
        "cursor": {
          "ref": "18715ab6-80f6-42a7-b439-7d3a4ba787fb",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "106b3370-5d9b-47b4-95c2-d17ca59cbead"
        },
        "item": {
          "id": "65c156df-ab66-4f1a-887c-f142210eeb63",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "20fac933-c335-4246-b05c-24aa88dd6ef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d6c6b48-69c0-46c9-82ab-c7f85d356a6b",
        "cursor": {
          "ref": "c5ef23b9-b5b9-4f56-887c-b2323e69d708",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "3c690fcb-897f-4d13-b32c-84f2fefbde59"
        },
        "item": {
          "id": "0d6c6b48-69c0-46c9-82ab-c7f85d356a6b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "bbba4491-41ab-4301-8de4-1b8e977f3913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa6f95d-a374-4c9b-baba-f38fbd1e2f3b",
        "cursor": {
          "ref": "0b7bb66a-b48d-44c6-8247-064009d7a6f8",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5143cfc4-ece2-4dea-9de4-b78f71556b84"
        },
        "item": {
          "id": "6fa6f95d-a374-4c9b-baba-f38fbd1e2f3b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2df999e9-3ff6-4f2b-bb27-6e8d1e8f0884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1170962-d008-4bdd-bb17-dd92b9c6d261",
        "cursor": {
          "ref": "aac9b395-bcb3-4b2b-ac2a-b465d0e74c68",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fb64255c-935f-41ea-bfea-ea8fffecd573"
        },
        "item": {
          "id": "d1170962-d008-4bdd-bb17-dd92b9c6d261",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0ed75b2e-68ac-4a43-a449-ebcfad3517e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16862a8b-642d-4312-8403-71a3f9898c63",
        "cursor": {
          "ref": "d3b2d5c2-cd3c-4c48-bd7e-15eb75e41ceb",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "cabde3f2-d0aa-4039-9d1c-e9d219fc47fc"
        },
        "item": {
          "id": "16862a8b-642d-4312-8403-71a3f9898c63",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9606d602-e9fc-4a50-8d43-4d21f7a24593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fecbeba6-5029-42f2-8933-9e57d260f2e5",
        "cursor": {
          "ref": "1619006a-2e29-4b52-8aa9-2924e71ab013",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3fe5f8ec-1857-4a58-8479-362af6a563f9"
        },
        "item": {
          "id": "fecbeba6-5029-42f2-8933-9e57d260f2e5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4640a100-9a4d-4572-bdb4-e8760267a0a5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057e8909-3ba6-4801-9721-e1ab4b3f8337",
        "cursor": {
          "ref": "ba9c7622-469d-4705-9736-12fb93daeb6e",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d3e3e5e0-4a1b-4709-a544-9399e33d2bf2"
        },
        "item": {
          "id": "057e8909-3ba6-4801-9721-e1ab4b3f8337",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2034091d-7432-4119-b733-b697810ddbb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd4a89b-b224-486a-83bd-1bedca1d105e",
        "cursor": {
          "ref": "2c207cad-f250-4304-a5ac-9b0a5d27a79e",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "74c3340e-76d1-44b9-a775-289503e8b89a"
        },
        "item": {
          "id": "3dd4a89b-b224-486a-83bd-1bedca1d105e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "2388378c-f58c-4d2a-9614-ae6764c3c345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d5c0855-940e-4185-80c0-2adab1145129",
        "cursor": {
          "ref": "6c1f87f6-690c-4299-8133-d6da56b61d76",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "95a56abe-6dcd-466d-8fd2-53d14c07c591"
        },
        "item": {
          "id": "6d5c0855-940e-4185-80c0-2adab1145129",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "f49d4fda-4540-4a35-9ca6-b46c9f609740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c040df63-24a6-41cf-bf64-6a21c86b2737",
        "cursor": {
          "ref": "cbff66cf-064e-4e03-83a3-11636569e9d8",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ed3e29b9-e540-4803-b86b-ba2efd3b54d7"
        },
        "item": {
          "id": "c040df63-24a6-41cf-bf64-6a21c86b2737",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e1a1bb20-9176-42a8-a425-7642c158cdc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b57784-0e93-426f-885f-1bf2d47e7e12",
        "cursor": {
          "ref": "46cc3a75-c81c-4e30-b820-8083736e5496",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "7dcaae4b-8dc9-426a-bf5b-d79ce0c3dd27"
        },
        "item": {
          "id": "85b57784-0e93-426f-885f-1bf2d47e7e12",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "64732173-2f5f-4e17-8825-3d0bec85caf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30f6c854-b4d2-4355-bfc6-74c858f1a68e",
        "cursor": {
          "ref": "dc0c3279-a357-404f-8bd3-998bd6be4a94",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "2461b600-ec75-47f0-b791-c13624b3d9b3"
        },
        "item": {
          "id": "30f6c854-b4d2-4355-bfc6-74c858f1a68e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "edeccda2-313b-4f56-b576-57c53ad5d2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6150a0bf-4bc2-47b0-9f4f-cb391ce193c1",
        "cursor": {
          "ref": "1306d3a8-1650-48cf-9b18-517a8187e7c4",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0a3472b6-15ce-482d-87bf-133f059c7543"
        },
        "item": {
          "id": "6150a0bf-4bc2-47b0-9f4f-cb391ce193c1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "cf6490b5-fb71-4795-8982-40f72d1cbc91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cbb01f-5c3b-40e8-8169-33fd72929fda",
        "cursor": {
          "ref": "66dbe214-09bd-4351-bb8c-7344da780a15",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "443e1c97-39c8-4f39-9a74-0905489c310f"
        },
        "item": {
          "id": "73cbb01f-5c3b-40e8-8169-33fd72929fda",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1c4d8072-fe8a-410a-91b4-36224b6b6c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a664e76-99f3-4615-a860-912d3e0913da",
        "cursor": {
          "ref": "99a178c8-e39b-4692-a89b-5bfec1508a53",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "19ad7a55-b06f-4746-8643-c03a15147252"
        },
        "item": {
          "id": "2a664e76-99f3-4615-a860-912d3e0913da",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "0050918e-fd74-4b66-a8c4-123da3b7bbf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc5c301-333e-4c81-b90c-e88ef87dd7a0",
        "cursor": {
          "ref": "49845b57-2d0d-411a-818d-f2e7ab79edb1",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "0500e73d-92c0-4aaf-ac1e-ec59e802c3e1"
        },
        "item": {
          "id": "dfc5c301-333e-4c81-b90c-e88ef87dd7a0",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7070fe71-e165-44e1-92fc-6026d983f628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7517be3d-a17c-4a48-ba2b-c7caa97a2292",
        "cursor": {
          "ref": "4176cd91-dc58-4b2d-b50e-7a73ded71c84",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "932ab81b-94db-4c68-94df-f771627091c6"
        },
        "item": {
          "id": "7517be3d-a17c-4a48-ba2b-c7caa97a2292",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "bb5cf059-1f14-47fc-bc16-b649de351da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9055fe6c-7dc4-4eca-8d49-47148f918629",
        "cursor": {
          "ref": "c99d225c-59a1-4ea9-819c-5cbf3bb86a24",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "9151c886-004d-42f2-ba14-692d2762654c"
        },
        "item": {
          "id": "9055fe6c-7dc4-4eca-8d49-47148f918629",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "3ea6de05-686a-4b60-aafb-534cd495f5e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d48f0467-f57c-492d-b3c9-6bdad200745e",
        "cursor": {
          "ref": "07ab43e1-c89a-4056-9a64-5ad9f93f3f97",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "582ae0af-38aa-4895-85cd-435904eaf839"
        },
        "item": {
          "id": "d48f0467-f57c-492d-b3c9-6bdad200745e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "7ede6d0c-8f4e-419e-8a0e-f788485f2511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b28fe07-645c-4b90-8c64-2e562f49ad76",
        "cursor": {
          "ref": "567b2690-90f9-430e-8bb1-57b2cbf03870",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "127b0ea2-42ff-464e-9e95-c4340efcfe4b"
        },
        "item": {
          "id": "6b28fe07-645c-4b90-8c64-2e562f49ad76",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5debbb87-2ba9-432c-a06a-a944bb36144b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a580a15a-4cdc-442e-8ad1-c6228564fc86",
        "cursor": {
          "ref": "81597c58-93b0-4c4f-af36-7d2a2bb207fc",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "0ac27e3b-f132-45a4-951b-fe886ee29cb5"
        },
        "item": {
          "id": "a580a15a-4cdc-442e-8ad1-c6228564fc86",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "da7b2c96-c1c6-4f35-a750-a3bec8937e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70886b03-4048-4728-a7c6-bbe6953547c8",
        "cursor": {
          "ref": "c0954ce3-4a76-4406-9b6c-e0119d0b8dc2",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "96f68c0b-9ff6-4f7e-b535-9173e9ce97db"
        },
        "item": {
          "id": "70886b03-4048-4728-a7c6-bbe6953547c8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "aa096a43-78d4-416b-a190-3a195fb0cf4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e105108-bf15-4988-aa0c-323c14a16117",
        "cursor": {
          "ref": "20db8673-df1a-4ae7-8682-97eefa36d237",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "6bdb6a60-b074-416a-a9aa-11c11a394b8e"
        },
        "item": {
          "id": "0e105108-bf15-4988-aa0c-323c14a16117",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6ef4836-9c0e-4aea-97ac-aaf0d038effa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1ee46f1-ebca-4a3d-960d-1291666968c7",
        "cursor": {
          "ref": "fb159b9a-58b5-4682-b967-c03e006b69b9",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f1af614c-2cd0-4c12-8809-35c3ef2cd034"
        },
        "item": {
          "id": "f1ee46f1-ebca-4a3d-960d-1291666968c7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "50605d25-caa7-4940-9e89-7399a5138345",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7cf5ed5-df7f-49e8-8c9d-8e9fca7f0ab0",
        "cursor": {
          "ref": "25cafeb4-546b-4a68-84c7-85456c3c8bdd",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "60b9f5a7-ff6d-4a4f-a36f-ca772ca98956"
        },
        "item": {
          "id": "a7cf5ed5-df7f-49e8-8c9d-8e9fca7f0ab0",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1efdf281-b42d-4bbe-855a-b02b03343c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa82147a-ec13-4514-a969-1da1afecd514",
        "cursor": {
          "ref": "45eca59f-4ce9-4640-af5d-fcff05f85744",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "514955e6-2638-4a4f-a9c8-b04a11e97803"
        },
        "item": {
          "id": "fa82147a-ec13-4514-a969-1da1afecd514",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "5104c898-c6f2-4f46-af80-6d2d7c897b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c12cd971-766a-41a9-aa41-96e8a1da0d8b",
        "cursor": {
          "ref": "a69a899e-f666-45db-b4e7-ba23c3ef3869",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "531891d2-a267-402b-8f66-8a16d60d6df1"
        },
        "item": {
          "id": "c12cd971-766a-41a9-aa41-96e8a1da0d8b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4dbfefe2-7667-43e7-861a-e14cbdcd3c9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e38c747-c984-41f1-9b09-ea8dd449a5e6",
        "cursor": {
          "ref": "12acda71-12e7-457f-b09e-7857955650d4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "23b68ede-756a-483c-a376-ad2026492ce2"
        },
        "item": {
          "id": "8e38c747-c984-41f1-9b09-ea8dd449a5e6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3f32c22a-e368-4a91-bae0-151da7e650cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d50aee-ff6f-438e-8f9a-400f35e517ed",
        "cursor": {
          "ref": "7e20a12a-d28a-45e2-80d3-9fd9c531c344",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "7f88f438-9572-42b9-93df-0a48bd32846e"
        },
        "item": {
          "id": "09d50aee-ff6f-438e-8f9a-400f35e517ed",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "206c650c-fc6c-4931-887e-8b9c9a78430d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35eb685e-31f4-46de-a503-b4572b73ca60",
        "cursor": {
          "ref": "98f038a4-e3c7-4ade-b1ba-56bcf0267747",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "ce1b9258-5f4c-46cd-b8a1-fccd6332dbb3"
        },
        "item": {
          "id": "35eb685e-31f4-46de-a503-b4572b73ca60",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "992092b6-a465-44bd-92c8-92fbe9ba4a1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68bf4441-2f11-4045-b8a6-e5878b4b1a13",
        "cursor": {
          "ref": "8f101975-0ccf-43cd-8bbe-1a4791e24b48",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "31821bc1-d5fc-4b01-96df-6c72e291de13"
        },
        "item": {
          "id": "68bf4441-2f11-4045-b8a6-e5878b4b1a13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4e2e57bd-16e4-403c-99bb-3f6bcde79beb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23b85eb8-9743-4ef4-9b71-2205546a3795",
        "cursor": {
          "ref": "e1dd3545-be94-4317-9128-c434693849d6",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c5f08331-66ad-4610-9552-2eaf4e8baa48"
        },
        "item": {
          "id": "23b85eb8-9743-4ef4-9b71-2205546a3795",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7a4d09b4-c8d1-4c75-b183-23beae6b8d45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa8a23bb-4d9a-4b2e-8d1f-4b96c0e661c7",
        "cursor": {
          "ref": "94cd5d94-29b5-43d1-9afa-131ed80a7081",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "e23c43b8-6ab0-4254-889d-26420cebbdc7"
        },
        "item": {
          "id": "fa8a23bb-4d9a-4b2e-8d1f-4b96c0e661c7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b7d9fc15-0f9d-466b-b38b-672849455eaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36fcd418-6135-4610-82a3-cbf653d9d60b",
        "cursor": {
          "ref": "46af1f1b-9e55-40e6-baf8-f62e72c43035",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "97103267-17de-426b-95a3-86a71610f278"
        },
        "item": {
          "id": "36fcd418-6135-4610-82a3-cbf653d9d60b",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f82bb870-16e6-4dc2-87a2-fe3df8b42bb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78781de4-6611-46dd-aa44-849b3a26cdf0",
        "cursor": {
          "ref": "a9391b55-8d75-4436-8306-34f8df13685b",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "3a41419b-9570-429b-8c04-1f3fad2c734d"
        },
        "item": {
          "id": "78781de4-6611-46dd-aa44-849b3a26cdf0",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "43d3a86d-28e1-4c65-8d6d-4f721ef99d2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07e727-a651-4352-88f1-80b6644c028d",
        "cursor": {
          "ref": "4aee8c23-ce71-459f-a775-b0403bf4ac3b",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "b3664e20-d4c7-406a-9d2a-3fae0123177b"
        },
        "item": {
          "id": "3f07e727-a651-4352-88f1-80b6644c028d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "37f2fa82-5076-4465-9104-d1c690c5ef2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9343e128-506a-419c-8380-e81651b78f9d",
        "cursor": {
          "ref": "7c56f972-9402-402f-9998-e52b52df15cb",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4f5ae47f-1015-4844-97ec-cac088b7dcd4"
        },
        "item": {
          "id": "9343e128-506a-419c-8380-e81651b78f9d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "5008d76b-4101-4eb9-af9d-1f38a50d34c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26054cb6-5e4f-48a9-8a01-68c013d7c109",
        "cursor": {
          "ref": "b2004d23-08c7-438e-9287-5377d632554f",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "15590701-e147-423c-bf69-2852b1c6cbfc"
        },
        "item": {
          "id": "26054cb6-5e4f-48a9-8a01-68c013d7c109",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "fc05664d-1365-40a8-afeb-b6d923164162",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efd77fd-7d8f-40ee-8012-350c8decb471",
        "cursor": {
          "ref": "dbb643d6-19dc-46ef-924c-0ee10f1c6a74",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ac4a9259-49e4-43ef-a37b-58380f811386"
        },
        "item": {
          "id": "5efd77fd-7d8f-40ee-8012-350c8decb471",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9effce76-2204-4d15-9d96-3e56de370919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acac7a82-34e6-47e3-886d-c46551898908",
        "cursor": {
          "ref": "3a58e85e-e1aa-48b2-8ca2-795253e7a134",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "3bf32c0d-25cb-47b9-b6eb-b531c9f188b6"
        },
        "item": {
          "id": "acac7a82-34e6-47e3-886d-c46551898908",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "ed9ea11d-d351-44f3-9170-744ce12f014d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee799f1-5a77-4fef-a35d-b3913624ac07",
        "cursor": {
          "ref": "920f305d-f6c5-4cde-b9ea-8c3f2cf68894",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "65b7f35d-4817-4ca3-b0ae-79ce399d4460"
        },
        "item": {
          "id": "9ee799f1-5a77-4fef-a35d-b3913624ac07",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a6ca7b8d-c83a-4684-a5ca-fbe3f3e12f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268a13bd-1a74-4514-a5b7-f7ae9fa29147",
        "cursor": {
          "ref": "61aec0a1-c50b-4b1f-8469-b37f4e15f939",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "06c011be-67d3-48eb-bd94-bd8838646db2"
        },
        "item": {
          "id": "268a13bd-1a74-4514-a5b7-f7ae9fa29147",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7bb40295-c3e9-42ac-9c41-32e0ff473295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7225e0c9-2d31-4aac-96f6-952fa6264cd6",
        "cursor": {
          "ref": "d1b58303-1e93-443f-80f7-758b52047624",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "29f5915e-7d06-4581-a126-ad1ebb9761fc"
        },
        "item": {
          "id": "7225e0c9-2d31-4aac-96f6-952fa6264cd6",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "1588c6d3-e04b-4a86-a53e-72ec40fba6c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bfdaf6-57f9-4499-be8d-9cbeba2665e3",
        "cursor": {
          "ref": "13fd9ac0-6843-448c-b771-ae57e5581e3a",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ef141dd6-207b-4f3f-8dd2-106f8db53b83"
        },
        "item": {
          "id": "d5bfdaf6-57f9-4499-be8d-9cbeba2665e3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "aa36e30b-4c93-4d1a-81be-e65577e4b45f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 103,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2b409b2-774a-425e-9447-d4c8318ccc1a",
        "cursor": {
          "ref": "893db331-2848-4f50-a270-9370d47d79f3",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e2ea8f0c-97b2-473a-92ba-caa920ea5353"
        },
        "item": {
          "id": "a2b409b2-774a-425e-9447-d4c8318ccc1a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "6f0fe59d-dfe2-4df4-8b66-d4dee253e284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e10c5af-8494-4a52-8c0b-fc79ce9f78ec",
        "cursor": {
          "ref": "1bd78d0b-08fb-4c72-a823-d0baf59bf432",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "fd167e83-ff78-42f5-b5fa-c3e5ec3f9bdb"
        },
        "item": {
          "id": "8e10c5af-8494-4a52-8c0b-fc79ce9f78ec",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "04b4e51d-36bc-465b-9584-c11665df101a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a929c2b0-6f90-4aa6-9a88-1f32fb0410f3",
        "cursor": {
          "ref": "a5691536-2aef-4855-b08c-d7eaafc20f29",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "33b9e60e-337e-4b55-8d5d-573e15eea411"
        },
        "item": {
          "id": "a929c2b0-6f90-4aa6-9a88-1f32fb0410f3",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "2107b132-6486-4677-b2e8-f1d9127ce89f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e353249-e412-4049-b46f-c7c7a0604549",
        "cursor": {
          "ref": "f93ec4a5-f140-489a-931c-30dfaee90ab4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "492bfd4c-1095-4498-ac7c-899d7c469515"
        },
        "item": {
          "id": "3e353249-e412-4049-b46f-c7c7a0604549",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e21cfe11-7483-480e-aa04-40f0aa237735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf168016-8474-427e-a892-9d5a404bea91",
        "cursor": {
          "ref": "36bee370-a70b-4213-b858-53e989240a61",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c8d57d4d-e839-4b6d-a600-837c3c87b3b4"
        },
        "item": {
          "id": "bf168016-8474-427e-a892-9d5a404bea91",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0e0eeb0b-10a0-4e57-b579-d7bf05e931f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95612b95-f12d-47e1-8a3e-6ab94d04d158",
        "cursor": {
          "ref": "0a86c29a-0b8a-4b1c-bd94-70edb85d1ecd",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "57d0ec4f-1895-4b32-a6bd-c43da6efe9d1"
        },
        "item": {
          "id": "95612b95-f12d-47e1-8a3e-6ab94d04d158",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "01cd4483-ff2d-43fe-8e30-c949550cc7f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbaeb0bd-2d42-4c21-8867-f20a463da626",
        "cursor": {
          "ref": "4461311e-3a2b-4664-ade4-b35d314c72f7",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "cd45f57f-4898-4048-80bb-60f88dcd8987"
        },
        "item": {
          "id": "dbaeb0bd-2d42-4c21-8867-f20a463da626",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "43f155bb-e3b2-4872-b0d8-62669b8aa636",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ba5fe5-98bb-44c4-a58f-9fffaba7652d",
        "cursor": {
          "ref": "b52e5e04-cf95-4c54-a412-4a2c6ee9ff4e",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f56f3c69-daf8-4d42-a2dc-bf02a24719e8"
        },
        "item": {
          "id": "d0ba5fe5-98bb-44c4-a58f-9fffaba7652d",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "e919a1b7-d80e-4195-916a-e7aa9a4fdaa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f80a39-0ef1-4d41-a4f1-bdafd5028128",
        "cursor": {
          "ref": "9729d535-0a50-4d77-9263-0d19894e9681",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "13a1e009-f937-47c8-ae5f-a4067ab7c9d7"
        },
        "item": {
          "id": "05f80a39-0ef1-4d41-a4f1-bdafd5028128",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "5a751ecb-b68a-47e3-94dc-17db51b87389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60129237-4172-4851-b716-7b6a747661ac",
        "cursor": {
          "ref": "85128ea0-b797-4358-9b05-42155ee1d513",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ab113692-7e05-489a-afb4-1d3edd5f0f86"
        },
        "item": {
          "id": "60129237-4172-4851-b716-7b6a747661ac",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "7a360e6a-a06e-4d70-8287-dc8d7a076ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0210d220-b0a5-4ce8-8177-27a7701bc26d",
        "cursor": {
          "ref": "21c85852-aa1f-409e-96da-d219507a39ca",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0d4f7a2d-bbe5-4a53-8149-c8f022629561"
        },
        "item": {
          "id": "0210d220-b0a5-4ce8-8177-27a7701bc26d",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "1856ecfd-d1af-4957-a00b-13a688190451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a4dd651-9bfe-4a7a-9a8f-2c91f2b2f865",
        "cursor": {
          "ref": "1b7765d1-e47a-4fa9-8623-002600029e2f",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ebf7a5aa-7045-401f-8950-c809682e8c1e"
        },
        "item": {
          "id": "7a4dd651-9bfe-4a7a-9a8f-2c91f2b2f865",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "01996a4d-614e-4dcc-b718-3906ea78bd9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05de810-85ad-4a92-a9e7-989a1616eb49",
        "cursor": {
          "ref": "49bd898e-7875-4368-a300-1297d8cb1146",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "56619913-4cfe-4ca6-9868-2abe64994f6e"
        },
        "item": {
          "id": "f05de810-85ad-4a92-a9e7-989a1616eb49",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "40055489-e47f-402e-a38c-c02dc4ebe377",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af069884-a070-41a0-a04e-f377d4b5c330",
        "cursor": {
          "ref": "9a15039c-b96d-4c17-85a5-d20c676a15c8",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "4ff0dace-4065-4715-b178-166b7631a6b0"
        },
        "item": {
          "id": "af069884-a070-41a0-a04e-f377d4b5c330",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "c701c6d5-ce06-4c55-88cb-34cac327cded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a7f0148-b262-403d-860c-504ae8806a75",
        "cursor": {
          "ref": "f4fc4012-3e1f-4ace-a0ac-2010a0d8993a",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fa6e5c6b-3e2e-4e1d-8a20-32c98d346309"
        },
        "item": {
          "id": "5a7f0148-b262-403d-860c-504ae8806a75",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "78f6d0c4-8ad5-41e2-a6e2-134f9d557738",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025d9561-be03-4da0-9c9e-f3bc14896f3e",
        "cursor": {
          "ref": "914f81da-4523-4d53-8253-be46bef39572",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8e12815b-61aa-4359-8a42-d505b7e1696d"
        },
        "item": {
          "id": "025d9561-be03-4da0-9c9e-f3bc14896f3e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b4a64eeb-52c2-4662-ac98-489b2990b6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "501ec0c7-402d-40f2-8bb0-bd540af0fb88",
        "cursor": {
          "ref": "d4245a63-46ba-4872-82d1-25aeb0b2b8c5",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "f5e7965f-cf7f-4d31-a0eb-d943bd065152"
        },
        "item": {
          "id": "501ec0c7-402d-40f2-8bb0-bd540af0fb88",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "8b246716-5941-45b8-921e-1c7a9e099949",
          "status": "OK",
          "code": 200,
          "responseTime": 161,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "62cce6fe-44f6-47f1-9d4b-ab45c11bb0fe",
        "cursor": {
          "ref": "d01dbc4f-1a2e-4199-a9dd-0144a7145df4",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5124630e-b8de-4e1a-b342-056bc62c7a17"
        },
        "item": {
          "id": "62cce6fe-44f6-47f1-9d4b-ab45c11bb0fe",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "44ed2f66-e344-4c1a-bee5-91f91c66870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b4a966b-0f64-465e-961c-bf3915ffdeb9",
        "cursor": {
          "ref": "1840bacb-999d-477c-8856-a1d50b985767",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "019efe45-6c7d-4fb3-929e-0b1e1c7c16d9"
        },
        "item": {
          "id": "2b4a966b-0f64-465e-961c-bf3915ffdeb9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "e123a70d-2873-4f13-9c10-404e8f80ccdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80089c21-e0fe-4d63-a091-d1e6c5601f04",
        "cursor": {
          "ref": "646890df-25c8-41a5-831b-b175d99a5c42",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2f7ed574-bc36-44f5-9a23-47b3ea091c26"
        },
        "item": {
          "id": "80089c21-e0fe-4d63-a091-d1e6c5601f04",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e507bc6c-de13-4998-ab5a-cd2f36b5ea89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7c51c1-5240-411f-9345-ebffa0f08a55",
        "cursor": {
          "ref": "a5f3e1fd-608b-44b8-9114-eab5e6491081",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "59d08b4c-d2ea-467d-a84e-195fc942455d"
        },
        "item": {
          "id": "af7c51c1-5240-411f-9345-ebffa0f08a55",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4f9f54c0-0f9e-42c5-8213-52920b730fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492044bf-557d-4f23-b4e3-f77ea337ceb8",
        "cursor": {
          "ref": "54947aa5-8978-4ca9-aac2-0a1b533db01c",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "7b1aef32-7326-4e91-af52-0d60772b1d5e"
        },
        "item": {
          "id": "492044bf-557d-4f23-b4e3-f77ea337ceb8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9a9ec7a1-1a25-43c4-aeda-0837898c15be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd64dc32-60ea-4677-b845-c04bd9513522",
        "cursor": {
          "ref": "c3c6eced-7573-4322-8039-b5893b30bcc0",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "364bff6a-c471-4fdf-a118-eadaa6c69588"
        },
        "item": {
          "id": "bd64dc32-60ea-4677-b845-c04bd9513522",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "5919eb35-9c2c-479b-8885-72fdcd174002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 759,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e3ab88-1cf2-4b80-a6da-d3dd3a79d7c9",
        "cursor": {
          "ref": "817a27d1-6f4c-485b-98b6-fed61f7a2d6c",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e08b7a50-0709-483b-874f-7232d25ca541"
        },
        "item": {
          "id": "61e3ab88-1cf2-4b80-a6da-d3dd3a79d7c9",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "94bda09d-f027-474a-beec-9f02c477ee3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf2129b-8ec2-4718-8ffa-24cd7ec768f1",
        "cursor": {
          "ref": "dfe216f7-c5c7-4196-bd83-d0050fdcd872",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "9ca1cf19-b845-4089-904b-e77dad3b0dd1"
        },
        "item": {
          "id": "caf2129b-8ec2-4718-8ffa-24cd7ec768f1",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "af2fd7d4-22fb-449d-b85f-93771bf94c7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d23a01-92f2-4fd0-b27d-5f314076fa94",
        "cursor": {
          "ref": "7acf1bcf-2a2b-41f6-8d5c-df597aabf423",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "0f33d0b3-687d-4f81-a0e3-9b61296abf2f"
        },
        "item": {
          "id": "a2d23a01-92f2-4fd0-b27d-5f314076fa94",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "99326696-ee07-4170-b14c-56e1558187e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b2080c1-b9cd-4583-a612-dc3493e4be51",
        "cursor": {
          "ref": "9221a218-a265-4740-b275-4be82a73a853",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "00ad1118-857c-4ba7-8254-06aa68562256"
        },
        "item": {
          "id": "6b2080c1-b9cd-4583-a612-dc3493e4be51",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "e9009465-76cb-459a-ad2e-3a3130c9f7d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15fc5264-bab7-41ad-8f41-c4baa83ce81e",
        "cursor": {
          "ref": "491cfec9-15ad-4eff-9a6e-afa7bcb936cc",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b7144059-b7f4-4c20-9d0d-8a3d913d0ef4"
        },
        "item": {
          "id": "15fc5264-bab7-41ad-8f41-c4baa83ce81e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ee6f6887-9884-4491-9d1e-1221a2aee12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff6161a-cf28-40fc-8160-60c3b8f983df",
        "cursor": {
          "ref": "5bc7b34f-246a-4901-872d-3b450d060b70",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "20a25cdc-a732-4d30-9fc1-174ef1339b51"
        },
        "item": {
          "id": "aff6161a-cf28-40fc-8160-60c3b8f983df",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a5aebd39-2027-4319-bb1b-4e0cda3cca44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baba0864-3fe3-4552-b0c8-ef4e26b22387",
        "cursor": {
          "ref": "35022a14-63ae-4bcd-8bc2-ae9e1f5e5486",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "985a5324-8af1-4d11-a767-53295123e5e9"
        },
        "item": {
          "id": "baba0864-3fe3-4552-b0c8-ef4e26b22387",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6ebd0030-70ea-49cd-b516-025ffe88fc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb26a44-f3d2-4c6c-83f4-67336ab2e869",
        "cursor": {
          "ref": "40dd5616-b4b1-45b7-b395-40e7adaf0ea0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "fc9f4a3d-a101-463b-b7a9-e1220bb9ccad"
        },
        "item": {
          "id": "ccb26a44-f3d2-4c6c-83f4-67336ab2e869",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "978f631b-b0f2-409a-9e38-0f66e3890c42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ffcc18-8490-4984-8316-cdea6d5b7ed7",
        "cursor": {
          "ref": "247b7574-c826-49a7-a81d-8b1447804557",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "62a14bfc-34b2-4c55-9552-27d3e86cc764"
        },
        "item": {
          "id": "a3ffcc18-8490-4984-8316-cdea6d5b7ed7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "eb5b672d-317d-4751-be24-a6600678e28f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d3b194-301b-4711-9df2-3061a3c53ad3",
        "cursor": {
          "ref": "e37c2374-15e4-44ea-a7dd-098dd458e010",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "640e31ce-92de-465d-8c64-ebdc80bc7bd5"
        },
        "item": {
          "id": "c6d3b194-301b-4711-9df2-3061a3c53ad3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fcc352a6-44a4-41c0-b02a-e1ee9817216c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a940d9-4dca-471e-bffd-a5e7ed501298",
        "cursor": {
          "ref": "f67208a2-5864-478d-b3b3-344b4f4f9276",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "340773d7-59e1-4bc7-bbb2-dd4c4dc6b703"
        },
        "item": {
          "id": "99a940d9-4dca-471e-bffd-a5e7ed501298",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "6d0964e9-6039-4ae6-832e-84cea1d5a1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5f7e46-cc3b-4d0a-976e-0aa062107c28",
        "cursor": {
          "ref": "6f4857fc-8456-479e-9333-935bfdd03229",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "cb7d98bf-65f4-4bf9-8020-07f2c13ac291"
        },
        "item": {
          "id": "1e5f7e46-cc3b-4d0a-976e-0aa062107c28",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "302b695a-dd94-48a3-8392-52261d271381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc59d94-fab9-4aae-83ee-30860cd6c99d",
        "cursor": {
          "ref": "2c0802f3-e8d8-4b90-938d-a0408594cfb2",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4b75c374-b919-492f-af89-f785d1102617"
        },
        "item": {
          "id": "1cc59d94-fab9-4aae-83ee-30860cd6c99d",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d9b65381-4bf9-45f8-bfa0-ac44ab4c6f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e1ccc9-9b6e-4310-89bf-9049dc0ac01e",
        "cursor": {
          "ref": "7c758641-109e-4fcf-afb5-72184efd4eb0",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4eadaa31-5c53-4f49-89d7-bcb83c950e12"
        },
        "item": {
          "id": "91e1ccc9-9b6e-4310-89bf-9049dc0ac01e",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "d722718a-7357-4b01-ae52-9226158bbe06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd318c1-e396-4d38-b64c-4740de710bf1",
        "cursor": {
          "ref": "a669cc28-7514-4065-b087-210c8f73767d",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "757b3703-0b40-44d5-a984-9785cae47c98"
        },
        "item": {
          "id": "7dd318c1-e396-4d38-b64c-4740de710bf1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "396ef620-7ac5-4660-8f3f-e73cfff607d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9063dcb2-6cff-4a2a-aaf2-a29b37f2249b",
        "cursor": {
          "ref": "be6c6747-1397-4f2f-9990-206b62db3439",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55dffdf1-fc62-417d-9233-7f61fccdf653"
        },
        "item": {
          "id": "9063dcb2-6cff-4a2a-aaf2-a29b37f2249b",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "853a366b-4e0c-4156-997a-eae1d558d40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44f946fe-60c4-4468-acc2-84b557129f07",
        "cursor": {
          "ref": "abc1cba4-aa32-4b9c-9442-012f1a3adaf6",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "47e69f01-a003-4057-8065-6f4198315361"
        },
        "item": {
          "id": "44f946fe-60c4-4468-acc2-84b557129f07",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d307b2a5-3f7f-447e-a791-c02a2943b358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c20d583-aeed-43cf-9c13-d3f204d44d67",
        "cursor": {
          "ref": "2d293f9e-4410-48c8-9609-cd860b4c4a60",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6695a008-10af-451a-9aa3-ea15269476fe"
        },
        "item": {
          "id": "2c20d583-aeed-43cf-9c13-d3f204d44d67",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "886dcbd6-af62-4050-8211-37260b4a309d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c14ad84-c238-4a40-8200-16b71b22be21",
        "cursor": {
          "ref": "d2d31c6d-004f-4d93-91fe-213fcd0d4e0e",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e807f179-368e-4865-b593-0b7a5961a75e"
        },
        "item": {
          "id": "5c14ad84-c238-4a40-8200-16b71b22be21",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "6769da27-8017-454b-8718-65781bec8e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5495b566-553f-437e-907e-df875fef7ee1",
        "cursor": {
          "ref": "4d220676-4bf5-49af-b806-ff9b1800c9ad",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e816438c-58ca-42c0-bd4a-07102161c4d1"
        },
        "item": {
          "id": "5495b566-553f-437e-907e-df875fef7ee1",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e4c71c40-a258-4eef-b33a-9a523291498e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c1bd25b-ea4d-4461-ba3c-de37180fa1f6",
        "cursor": {
          "ref": "24d1eab1-3096-4ac8-abed-49651e2e9d20",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1e3cd869-fd2c-4550-abeb-5d593fffa801"
        },
        "item": {
          "id": "4c1bd25b-ea4d-4461-ba3c-de37180fa1f6",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "db842bcb-b18d-4ea3-8ef3-c84e3dc4ea9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "161b2447-e758-419a-82bb-cfd7275b59bb",
        "cursor": {
          "ref": "665bda3a-06d9-4b23-a85d-3ed6f204d0ea",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "0f83861e-5194-441e-ada4-4d1c3b0a3e6d"
        },
        "item": {
          "id": "161b2447-e758-419a-82bb-cfd7275b59bb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "44037f35-c628-4747-ab37-3c61a106df30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c2dd19-e9de-4059-b228-93bf75c67e30",
        "cursor": {
          "ref": "15ae6363-e0f0-4939-9fb4-8de62aa4f173",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "2ae8b07d-5d7f-48a3-8a55-32dc46a13aad"
        },
        "item": {
          "id": "65c2dd19-e9de-4059-b228-93bf75c67e30",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "8ca5db03-a27e-4dbb-a74c-492dac276e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2d7149-49ab-47b6-a6b8-2ca27b9cfa88",
        "cursor": {
          "ref": "36848f5b-17ea-4581-a915-71beba7bddb3",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "809e3541-7c90-4cc9-a177-7f0ec60682d0"
        },
        "item": {
          "id": "6d2d7149-49ab-47b6-a6b8-2ca27b9cfa88",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2fa874db-80cd-44a6-8246-465fe867e12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339d3200-a9e5-4644-a2f0-5de0ef96621c",
        "cursor": {
          "ref": "98bec3a7-ef22-47ba-8027-423a7ea7f219",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "3fc1cbd7-c193-4f59-9a5a-c8fefcbea999"
        },
        "item": {
          "id": "339d3200-a9e5-4644-a2f0-5de0ef96621c",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0c4bfa25-02c0-41af-b813-a1e1494059d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8843c6-d2b7-4b4c-a829-7b795bf6bb2c",
        "cursor": {
          "ref": "b332f8ec-278e-475a-9f15-eb62805a7320",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec0b5432-9db3-44c1-bdc0-d56ba9581126"
        },
        "item": {
          "id": "9b8843c6-d2b7-4b4c-a829-7b795bf6bb2c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "6619c75c-8943-4c74-ba02-6dc2a7181abe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad728584-369a-4b74-8e4a-4da7efeebdac",
        "cursor": {
          "ref": "c7f3d1e7-5ae0-4786-b0d8-66ed4a1f1721",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4cb0b35d-98a3-4b03-9f28-f3dd018de604"
        },
        "item": {
          "id": "ad728584-369a-4b74-8e4a-4da7efeebdac",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5321d017-e61f-4abb-b0ca-65d7ce30eb0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd3bfd2b-5be6-4205-969b-5f44b5a633d3",
        "cursor": {
          "ref": "431a1427-ea2d-4be6-a4f9-03e2006babe9",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b2b4d5c2-2e36-4a2a-af25-f8535f7e9577"
        },
        "item": {
          "id": "dd3bfd2b-5be6-4205-969b-5f44b5a633d3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "44204aea-4387-4724-a8cf-13fa036788fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3907579b-f1fc-4cc4-b571-64112c5c0aa6",
        "cursor": {
          "ref": "8ecfcc00-9c89-42e1-8e00-47fca9f246ea",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a697d267-a787-4231-8ff5-d7170c92bfe8"
        },
        "item": {
          "id": "3907579b-f1fc-4cc4-b571-64112c5c0aa6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1836212a-1b73-43ba-b971-83e15090af60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12191cb3-9072-4e47-a1cc-736d15f0082d",
        "cursor": {
          "ref": "f13fdb05-1507-4fd3-b35f-2da89b30e59f",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d1ec3be6-c0c9-4ccc-8b86-8f310c38774a"
        },
        "item": {
          "id": "12191cb3-9072-4e47-a1cc-736d15f0082d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b534ab00-1b36-4f28-866f-29a216a49bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0c732b-1f6e-4073-b2dd-8f87f56cb443",
        "cursor": {
          "ref": "747fc493-d199-4afe-a0bc-1537191d89e2",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "df0352c3-c87e-4cc2-8c32-f00c4b58c5fa"
        },
        "item": {
          "id": "1f0c732b-1f6e-4073-b2dd-8f87f56cb443",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "eade25f6-a88d-4c9f-9224-f71ec11822c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e259eb13-6508-452a-87c8-51350f1f0728",
        "cursor": {
          "ref": "0524d2e1-0f80-4784-b886-b592b86c9aa3",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "60de3a59-2b40-4136-a650-2968419ac2b0"
        },
        "item": {
          "id": "e259eb13-6508-452a-87c8-51350f1f0728",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6588b326-1101-4559-a51e-6823c4f80229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae286b2c-bdd6-4e1b-9d17-1240090ea57c",
        "cursor": {
          "ref": "d7bf3e71-6357-4c2d-b4a2-f85fb8526e51",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f2357749-5ee5-400c-85b5-55333f721efb"
        },
        "item": {
          "id": "ae286b2c-bdd6-4e1b-9d17-1240090ea57c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "dfd5c9c9-6783-4fe6-8e7a-5ea4d18dc3c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db894a91-dffa-4c96-9a60-3ac675f5cc24",
        "cursor": {
          "ref": "8a123449-7d3f-42c5-b5de-bfc469c8935e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "95e95fc9-86f5-4ccc-9076-48170217b672"
        },
        "item": {
          "id": "db894a91-dffa-4c96-9a60-3ac675f5cc24",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "07ac5662-b594-4aa7-8dfd-deffa1898590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3434353-887d-46c4-8408-9a1d39019149",
        "cursor": {
          "ref": "7ffe05fd-cce5-4791-8704-051637151aa6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "42922033-f403-4c4d-a2b3-d98f71a8be88"
        },
        "item": {
          "id": "a3434353-887d-46c4-8408-9a1d39019149",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "61ab0b9c-ed29-40b0-b229-10f6a9194937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92773c6-6aca-4d37-a571-5027e5e0f2c1",
        "cursor": {
          "ref": "680a9ca6-9dc9-4a80-94c2-a5c807815741",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "b64c0a1d-955b-481d-9166-8d9b3d3b56ac"
        },
        "item": {
          "id": "e92773c6-6aca-4d37-a571-5027e5e0f2c1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "120d0611-9ccf-4ce0-b616-23a5a06086de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed08a946-d44a-4334-a0da-144149875a02",
        "cursor": {
          "ref": "a6c9fd18-8540-4cc9-93ae-23e9a77f9761",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "15116700-0271-455d-8855-a2432933483d"
        },
        "item": {
          "id": "ed08a946-d44a-4334-a0da-144149875a02",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "ad525a37-1575-449b-b2eb-4aa0d52b5aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc18ac6-6103-4eab-ada1-a0db98a4fa6f",
        "cursor": {
          "ref": "fa9d3793-5479-47dd-ad94-ca116ff206f7",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ec448faa-61e8-4096-8117-84e4437add71"
        },
        "item": {
          "id": "6bc18ac6-6103-4eab-ada1-a0db98a4fa6f",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "32a79b51-1e18-466a-bade-2ca7eb93cbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c410332e-eb88-480c-b8df-3370b3455096",
        "cursor": {
          "ref": "84d8fce6-63ff-4733-b930-d461fa3ed940",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "456b56c9-fefa-4824-b2f5-60815621ce2f"
        },
        "item": {
          "id": "c410332e-eb88-480c-b8df-3370b3455096",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "21ba160e-babd-4e70-b554-bc505db67e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ac3231d-6307-4104-987f-232583bd6843",
        "cursor": {
          "ref": "28e0ab7d-9a05-401c-a786-858ccefc89dd",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f4c0f15b-637b-435a-a1a3-e38dfa681acb"
        },
        "item": {
          "id": "9ac3231d-6307-4104-987f-232583bd6843",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "57fe95c2-cae7-46be-a932-f926f478d3ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c71eec0-1c8a-49da-a9cb-854e59118926",
        "cursor": {
          "ref": "7b991f2a-50fd-4eec-9fa5-225ed0674c30",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "d948ea64-f3d7-4712-bfe7-9f12e034003f"
        },
        "item": {
          "id": "1c71eec0-1c8a-49da-a9cb-854e59118926",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "cda90933-c1d0-42de-8f65-4d0c26d935dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a047b89-287f-47f8-b019-1ceed952b532",
        "cursor": {
          "ref": "43763fe5-4303-425e-9ea9-aa7da7526c71",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "de0fb8e8-38f2-4366-adc8-8fb58dc131b9"
        },
        "item": {
          "id": "3a047b89-287f-47f8-b019-1ceed952b532",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "fa534229-b118-4eef-895e-1155db137698",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e38a2618-1108-41ef-9018-764e647d5af1",
        "cursor": {
          "ref": "fbd1363d-b33a-4531-97b5-a916396a8a2d",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8da32be1-99e2-4960-9ee9-dec5f081ce31"
        },
        "item": {
          "id": "e38a2618-1108-41ef-9018-764e647d5af1",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "879223dd-49e5-4956-8075-12219830c7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54de1b7c-2e9e-4058-b51a-cb36db28e1b1",
        "cursor": {
          "ref": "707d98cd-6cf0-40b5-860a-e62a11f4235b",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4f5720ed-a130-4811-8e41-74f2a269c6bd"
        },
        "item": {
          "id": "54de1b7c-2e9e-4058-b51a-cb36db28e1b1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "e874bbec-07ea-4a16-b95d-76f4417e4f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830cc359-5480-4cd4-959e-b09539d9238f",
        "cursor": {
          "ref": "9b153d11-ee1d-4ab0-80d3-66dfcfec9b98",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "9c9ed314-928e-425f-95cb-31bd188468d2"
        },
        "item": {
          "id": "830cc359-5480-4cd4-959e-b09539d9238f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1ce4d7a3-1f31-4aea-84df-ca1a25ef4cd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eae3b2ce-a060-4ab2-b750-b275e9e54231",
        "cursor": {
          "ref": "184dd8dd-8f94-42b9-aff3-b6a26f978fc1",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "39892279-f9ab-4065-9e6f-004106eb942e"
        },
        "item": {
          "id": "eae3b2ce-a060-4ab2-b750-b275e9e54231",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "aea3d436-767c-4506-8f15-988cb020dc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b085b5-72f1-4cb3-8725-13b3364d71be",
        "cursor": {
          "ref": "86d80f89-5b03-47d0-b66a-412cdd894df1",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "be5ad842-4a6b-45d7-a505-7978ec12ec72"
        },
        "item": {
          "id": "16b085b5-72f1-4cb3-8725-13b3364d71be",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "d6cac71f-10a8-46fb-98f1-dcc74be9e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b02019-152d-404a-8fd3-93113e49283c",
        "cursor": {
          "ref": "bb63dc8e-c61b-4fbc-a7d6-56f1d75466b1",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1b779c99-ae03-45f8-8b82-076578edd0ef"
        },
        "item": {
          "id": "31b02019-152d-404a-8fd3-93113e49283c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "23e37b36-97d9-40ac-bee1-6bd44f26c119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ea9029a-2755-4fbc-872c-40a5d6ab9c50",
        "cursor": {
          "ref": "0aaf6191-8a51-4e8a-82fc-993af4e15bf6",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e6111b77-fcb1-4c9c-8527-a9702fdce4ca"
        },
        "item": {
          "id": "0ea9029a-2755-4fbc-872c-40a5d6ab9c50",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fa324c32-17cb-4911-bc52-45e912108591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9527b9-a5cd-471c-9266-8b43b49f4786",
        "cursor": {
          "ref": "0a27e9db-ac01-4e01-b981-4001c4512a34",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3b4cb3d0-c2fa-4c4d-bbf5-4d258e8aa1f3"
        },
        "item": {
          "id": "fa9527b9-a5cd-471c-9266-8b43b49f4786",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f85fb18a-284e-4cad-8c68-7ef8701532f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f466cb6-5010-426b-8343-8e62e4fd57c6",
        "cursor": {
          "ref": "7dcc1870-97e3-4ea7-a377-a2ececbf1b9d",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "eb4515aa-16b6-4862-9c50-ca5a39fa1e8e"
        },
        "item": {
          "id": "8f466cb6-5010-426b-8343-8e62e4fd57c6",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "5c6f56a1-bca4-4f65-9bbb-c60098e4263e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc191fe3-784f-40d4-a111-5a849d71b083",
        "cursor": {
          "ref": "95b744ce-1b9f-488f-b826-4b4d07933409",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "09070ae7-efe3-4aac-9b6b-2de4043e87bc"
        },
        "item": {
          "id": "cc191fe3-784f-40d4-a111-5a849d71b083",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3fb73c9a-29b8-4b47-8bc3-d21a8e790b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 189,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd53040-347e-4ca0-a1ad-620c6bcf4911",
        "cursor": {
          "ref": "a9dae145-4041-4423-8d17-704dfc444f58",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "fb6bf4ef-4b38-4c10-bc31-f10428656301"
        },
        "item": {
          "id": "afd53040-347e-4ca0-a1ad-620c6bcf4911",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "b85340f1-ce93-4451-97cf-7603b578627a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ce7d44-de9e-49b8-9de2-ee950c8b7ea0",
        "cursor": {
          "ref": "53145f00-d4b4-4c76-b117-d945a160eb3c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "290a21bf-3e39-467d-8987-c70063adf733"
        },
        "item": {
          "id": "b9ce7d44-de9e-49b8-9de2-ee950c8b7ea0",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "5520116e-56e0-4901-862f-5179c917e141",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f8249c-ad85-4d28-b92c-95cb1004b8ce",
        "cursor": {
          "ref": "b117e768-7715-4d15-938a-23379b1a2fee",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "aa7a2c43-8e6b-4dac-9eef-d9b5e2373ac1"
        },
        "item": {
          "id": "e9f8249c-ad85-4d28-b92c-95cb1004b8ce",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0cba2bfb-26e3-4ada-bd86-bec359d0f37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5368262-b5b3-4bea-b0b3-a09d8e708c19",
        "cursor": {
          "ref": "c34b0135-d964-47db-a9ba-a6c92be92266",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "696994c9-c837-4195-9c6c-1564aa2d47fa"
        },
        "item": {
          "id": "c5368262-b5b3-4bea-b0b3-a09d8e708c19",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "3312a24e-3cfc-4f17-a7e8-6e1f5ad91c38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b781cf-15b9-4daf-b896-53642045d6f0",
        "cursor": {
          "ref": "d803478a-1462-497d-8a5b-7264d9b71a30",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "46f8b2f6-fdb0-43df-af11-323e8dc68410"
        },
        "item": {
          "id": "85b781cf-15b9-4daf-b896-53642045d6f0",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "885ca221-0993-41c0-a7bf-977a0e0519de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "decae4cb-d889-4199-9d7a-f54aeeebdf45",
        "cursor": {
          "ref": "0a7cafce-57cf-4d34-b5d4-19902a68662c",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "43f2fc1d-d1ed-427d-83a3-26d76299fa5d"
        },
        "item": {
          "id": "decae4cb-d889-4199-9d7a-f54aeeebdf45",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "89d1a752-7e1f-4a10-8c57-b4e98e190117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b113ac52-3d18-472c-8008-6faa26c4e9ba",
        "cursor": {
          "ref": "317af1cc-2a76-4413-bb4b-e7bd4c845014",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8b68893b-785e-4c02-a1bd-803a405a4af5"
        },
        "item": {
          "id": "b113ac52-3d18-472c-8008-6faa26c4e9ba",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f1ce10fe-47eb-468a-befa-6e358333b818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8375d15f-31c0-486c-8258-87c9c56679e2",
        "cursor": {
          "ref": "b1babffb-d088-4728-b569-edf0bcfc479e",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "e07f7542-a3ee-4098-ab72-82829c029ffa"
        },
        "item": {
          "id": "8375d15f-31c0-486c-8258-87c9c56679e2",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ccf00c65-ebb8-47e2-973a-a2defe875c01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc59e48-cfd5-4740-816c-8f37bb0bcd2f",
        "cursor": {
          "ref": "4da3cbaa-91e8-4424-8c02-dbd0217d9625",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "a7bd8688-f6d6-4bfa-a4c9-b6f1ee395d16"
        },
        "item": {
          "id": "dcc59e48-cfd5-4740-816c-8f37bb0bcd2f",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7322f747-2875-4a2d-ad24-e3045a41fbb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46b226aa-9f7d-46ae-b5c7-d389220c3a57",
        "cursor": {
          "ref": "f60c9d7d-f8f8-4309-920d-14cdee28f929",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "34d55e81-fef7-4e25-9758-4c8f6ecfba0a"
        },
        "item": {
          "id": "46b226aa-9f7d-46ae-b5c7-d389220c3a57",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "25a596ce-e91a-490b-a9be-3008c890974d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa46cc05-78a4-47c3-b156-abb4a935e776",
        "cursor": {
          "ref": "6e446ca9-ffd7-4aba-af26-f118434c6e8a",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "c60cf4c7-fc4a-4d10-b46f-56a164556762"
        },
        "item": {
          "id": "aa46cc05-78a4-47c3-b156-abb4a935e776",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9385c4ef-86a5-4ef9-9ece-f7609dc175ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17925765-9a38-430e-a26c-ede79e2b5a8c",
        "cursor": {
          "ref": "6f9a1dac-fbd9-4199-adaf-fe9e6a199d5b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b5c50740-0ae2-4268-bc59-64487e362415"
        },
        "item": {
          "id": "17925765-9a38-430e-a26c-ede79e2b5a8c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f8b17b26-649d-4a00-9ef8-e127024524cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da6a33d-4cb7-485a-ac59-e92efce6241b",
        "cursor": {
          "ref": "9a217fdc-43dd-43b8-969e-537f8e1890ec",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "236cb3fa-6c78-41ba-9c7f-da6a81e16f89"
        },
        "item": {
          "id": "7da6a33d-4cb7-485a-ac59-e92efce6241b",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a069d1e4-3e10-4c7c-9989-5ea71c5f2d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c473ed40-16f0-46bb-a731-631904e03ca3",
        "cursor": {
          "ref": "cd5a621b-05ab-458f-85bd-9c41e890c790",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "a0191152-e3e1-4664-b08a-52fcec8de11d"
        },
        "item": {
          "id": "c473ed40-16f0-46bb-a731-631904e03ca3",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4abeb929-329d-467a-82da-7bf6350aa88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4dd893f-10aa-42b0-89c1-f08db66004ad",
        "cursor": {
          "ref": "a6fb1e7d-6d68-4e41-a57f-99daf77bf584",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a745e186-ba91-4087-b3d8-7b0a55bab99c"
        },
        "item": {
          "id": "b4dd893f-10aa-42b0-89c1-f08db66004ad",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "eeccb97c-dd3b-462a-b900-961f52f98086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcd484cd-9a26-4c5f-9241-acdd156c14d6",
        "cursor": {
          "ref": "5d75e408-a01e-4934-ba3f-6d153d65dfb4",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "56c189f6-9123-4d95-ac24-d0f9e0dc3184"
        },
        "item": {
          "id": "bcd484cd-9a26-4c5f-9241-acdd156c14d6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d67bcac1-ca11-40c6-a568-30c10fbf96fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "937938bf-5d8f-4e11-8d94-dfa44a40ce6b",
        "cursor": {
          "ref": "c76f2037-72a9-40e1-a369-f196883c1bad",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "3509bc56-88b2-4bcb-ad79-3e689eb6ce98"
        },
        "item": {
          "id": "937938bf-5d8f-4e11-8d94-dfa44a40ce6b",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "9c994ad3-9810-492b-b761-a5e51afb5811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed52120-2e60-4c72-9c57-f5df7de3eb87",
        "cursor": {
          "ref": "9422169d-9383-4692-8bb6-26f86603d1b5",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8dfd73f0-25e9-440c-bf51-4d7731abb866"
        },
        "item": {
          "id": "6ed52120-2e60-4c72-9c57-f5df7de3eb87",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "455570da-9c3a-4a67-b3d4-de657d47bc64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f2c6f3c-60a8-4625-b7b2-3961528b9655",
        "cursor": {
          "ref": "0677415a-9ea7-4c13-90fd-17e8231a2bad",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "16f2bff2-58b9-4f76-8609-6efe03cb2f60"
        },
        "item": {
          "id": "8f2c6f3c-60a8-4625-b7b2-3961528b9655",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5b0fad1a-7981-41f8-8192-91347b2b1727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4180387e-c57e-4f13-9870-3a3982e241d9",
        "cursor": {
          "ref": "f6330401-e199-44fa-a5b1-6cef84d8e49e",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "2ef792f8-872b-4a48-9007-b5c2bbeaeb91"
        },
        "item": {
          "id": "4180387e-c57e-4f13-9870-3a3982e241d9",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e2cdfd0d-d084-4715-846c-051bcdfd3cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417bbcdb-3b30-4211-b199-835f969cd8fd",
        "cursor": {
          "ref": "6d97da78-aecb-4822-9464-2547e934af3f",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "392d2434-78eb-4d87-9a7e-6d6bf61515b9"
        },
        "item": {
          "id": "417bbcdb-3b30-4211-b199-835f969cd8fd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c517ebc2-d659-40a8-ae39-7c1d613e71fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c546dccf-3e91-477b-9c23-8b575435afe2",
        "cursor": {
          "ref": "3b27e335-0fbb-4230-8e7b-44fae7ef6006",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "30c8de32-6a7c-4d2b-af44-94334e3958bd"
        },
        "item": {
          "id": "c546dccf-3e91-477b-9c23-8b575435afe2",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "62e43f81-6a2e-442b-93a6-e609e9348049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abbe97b6-0e4e-45e6-b283-3c350db5e3cd",
        "cursor": {
          "ref": "684140b0-35c6-43bb-83a1-f98f2c87cc36",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "5ed525a1-6c7a-441e-8f8b-dfbc75828ab0"
        },
        "item": {
          "id": "abbe97b6-0e4e-45e6-b283-3c350db5e3cd",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "78022202-485c-463d-a4a8-dfe1f2a1245a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64875624-30cf-468d-93cf-e54b8f70524b",
        "cursor": {
          "ref": "70f73d33-9f76-48d5-a83a-b475879f12e1",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "08834c36-b76a-44d6-9057-ae5870790e91"
        },
        "item": {
          "id": "64875624-30cf-468d-93cf-e54b8f70524b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "5f1e9758-0b75-4d46-9593-4d8085a8867e",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "75a0ab3e-5d36-4954-9ebc-1eb276fd86d5",
        "cursor": {
          "ref": "b7851b6b-bc8e-4315-90e3-707e1003a8c5",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "a3c494c3-4ce3-4e2d-a432-0dcbb0c4d7a8"
        },
        "item": {
          "id": "75a0ab3e-5d36-4954-9ebc-1eb276fd86d5",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0ce35d5e-14b1-4030-897f-0a7478483d9c",
          "status": "OK",
          "code": 200,
          "responseTime": 3849,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8605ad91-59ba-440e-af40-5bb259fd8d1e",
        "cursor": {
          "ref": "2a251c53-6a8b-4ef9-b91b-ab877b6e429a",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "97e1ff52-76a8-455b-a3ff-a47426b73efd"
        },
        "item": {
          "id": "8605ad91-59ba-440e-af40-5bb259fd8d1e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5bf0f734-fe48-4462-b61d-ad8f76892803",
          "status": "OK",
          "code": 200,
          "responseTime": 3035,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9979b9-761b-4590-b14e-e6ca95324fc8",
        "cursor": {
          "ref": "215779c3-fde2-48e4-9a26-a788b5205c3d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4d45a8b8-f391-4f6f-85c7-a2fc51901d0d"
        },
        "item": {
          "id": "6a9979b9-761b-4590-b14e-e6ca95324fc8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a62acf66-faca-4d14-819e-0110ffd260ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a9979b9-761b-4590-b14e-e6ca95324fc8",
        "cursor": {
          "ref": "215779c3-fde2-48e4-9a26-a788b5205c3d",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "4d45a8b8-f391-4f6f-85c7-a2fc51901d0d"
        },
        "item": {
          "id": "6a9979b9-761b-4590-b14e-e6ca95324fc8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a62acf66-faca-4d14-819e-0110ffd260ad",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "319ce7b3-eebd-478c-a476-e90aa53158d5",
        "cursor": {
          "ref": "770cd384-ed1b-4882-8c3e-a5723fc527bf",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "670b599d-ec5a-4673-a370-7fa15b7ba61c"
        },
        "item": {
          "id": "319ce7b3-eebd-478c-a476-e90aa53158d5",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "dbb018c5-fa8c-449d-8ac4-f0feae3bc4e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac633208-9483-4363-814c-97e6b5c19681",
        "cursor": {
          "ref": "99268ac1-3add-4c3d-81fd-da8a67b180aa",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "657c7d4b-d204-4b9b-9adb-9b26ea44b0f0"
        },
        "item": {
          "id": "ac633208-9483-4363-814c-97e6b5c19681",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "eb78c32f-0c5d-4962-8f46-b28129ca886d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}