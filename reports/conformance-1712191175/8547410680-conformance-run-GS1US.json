{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "23ca8816-c701-41ec-91d1-f6d7cb7c26b7",
        "name": "Clear Cache",
        "item": [
          {
            "id": "658c1c54-2578-47aa-ac56-aa3f02ab0450",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cec9e53d-e857-4076-a584-663d8e4779e8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "40bd5d68-6ec9-4531-84b7-a9a9f3e13a49"
                }
              }
            ]
          },
          {
            "id": "053e7815-d1e7-4ff6-9b98-c4dbd287b4fb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b60fab8b-5a35-4d05-9292-60f8ba012095",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "34f244a0-bddd-46eb-903a-28c77c395551"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "20724704-466d-40f2-aba8-65be7b76c6ec",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "3a9fdd92-49c3-48d2-a908-58acd67950eb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23c51cc4-20f9-42ce-90de-3a614daed375",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9a2ab8fb-3872-4ec2-85ab-7a6282ec090d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bac1fbd7-e616-4a77-bb56-406b135bdfe3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62ac2424-dcb2-4cff-acee-62da675306dc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e0071b0-8949-4baf-aef5-6c2d5739ab16"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "51c21845-845f-41ab-87e6-c7239f2d9981",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d51b8b82-dd26-45a9-bf19-0acfceceb95c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "78f82d7a-2b78-4322-ac0b-8fef7f17c742",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d962a74a-e7b1-4a40-a98e-4de85cd958a5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d41dde8-9af7-4433-bcee-6e46372782c1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7dbe99f1-a603-4f85-b0c0-91b9850e55ea"
            }
          }
        ]
      },
      {
        "id": "d9950282-b1f0-439d-a810-46501bb29e5d",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7bf4cc88-4256-4c92-aa0b-5fa71d93c4ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a63165d-fb07-43aa-b159-b13d30d6bac2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "de39b886-4052-4363-9dd4-3fbb23a3e161",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78bdf011-0efe-4b20-91de-6cfa84578e5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1a50edd-08f0-465b-9628-d2853ca13bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e7b807-cbb6-4e66-9a33-db2113556afa",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9691e348-0a6c-4a07-a7b8-f33e6d7c44a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87152d0f-ea6b-4da1-ad7f-ce5e0faf5acd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7a8afa4-7851-49d5-8f19-8ee991405547",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bf0682-27ff-4ae6-a4d6-0994fd4478c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1b59b90-984a-47e3-84c4-e4035e5431cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "30368b6c-6a10-4b69-b6a3-ade3c7d4c7b9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58b5c1f7-86ba-45a3-84ec-0261d80f35ab",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa94f39-f81e-4141-ab3c-17423953000c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a789257c-c057-4cdf-9960-cac49baf5b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c7b4acc-afe5-46c6-9f67-39de7a225079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f42aaf22-b14f-4aba-a49c-2397f90d5ffe"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7aa5a235-ed23-4668-8d23-a5489d76ce29",
            "name": "Positive Testing",
            "item": [
              {
                "id": "cbb25432-8d45-4f34-b296-4f2711e2a96f",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52aaca03-4016-4c9e-a318-84fdadc2ad47",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a17641d5-865f-4a0c-8e2f-4d96202d6f7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a41460af-0e60-469e-9b6f-377ba48e85a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "44496d16-afab-45d8-a7e8-9e6ca966b756"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67a07c30-d027-468c-8963-58c3a0186468",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c881379e-28b4-4469-b87d-8e7b4d9422fa"
            }
          }
        ]
      },
      {
        "id": "b49be567-418a-4a42-9a34-fbdae6c1e768",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f83299d3-2768-4d5e-9b49-cf44f3c5c064",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07e63742-78de-42e3-887d-73293a04eb50",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "df1f906e-f6e9-4549-9192-1c2d075281d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a11af1-b94d-4f66-8508-6627a74ec2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bdf3d0-f542-4e49-8cee-f31a9000137d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80fcc14-446c-4bc9-a80f-e903fdbbe2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a2a94cc-a519-4cd5-b6a2-08c3895287ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed89da6-f812-4012-9f43-48b30c5e9c21",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24eface3-b5db-4f8b-9e57-82e7528b9e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73f1db1b-2ea8-45b9-bd19-44a5d192b27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eaff033-3f82-4714-b75d-bcfd00c89b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f7b736a-216b-4b47-8f66-ab34ddf5d16c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec246721-7873-42b0-a839-f002914e5013",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f941106-d3f3-42bb-907a-818ccb982179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b541ae12-0ae5-40dd-9f49-c2ecc3773404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7896f08c-a5a5-4be8-baed-dba708dc3303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81355cf9-c394-4421-ba46-8dab0e4dd798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5225474b-acbc-4c80-b186-0add309e42d8",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1ce1191-7c90-4c34-ada6-20b836ea6d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39771987-d92c-455d-97aa-5fc5a8f4bcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2467022a-6006-4116-a1f0-8966f70e4346",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2a485fe-47ce-49d1-9d8e-14d066a53301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee54bf20-e3c7-4181-8de4-0ddcc71bd009",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ab83a3-5dee-4929-9cd9-80947810f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7299b431-686f-4cc5-8c6d-c6a88ee33400"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408eed69-a643-4169-a3fd-7f8c488922a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3b0d8835-53aa-4435-93a3-0651965fa726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be566e7-6bcc-40be-815c-e66905ec6438",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd7792f-fb14-41e3-b19a-77db4ef97579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8b986cf-4e65-4704-bfa4-1e6f602cb869"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbb412b7-f04f-4360-b83c-ae284443f8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79a87496-c549-4fa9-a357-30453b735890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5d4f82e-6708-484c-81c4-fe538e3ea428",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70431c9-8932-4957-878a-330d94842219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f691b1-f8c6-46c8-97c3-affc023f14b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80610c15-2e3c-456d-aa70-d1a1531d55c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bb91bc2-ead7-45f6-a4e8-6c39ac88d38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4f4416a-a419-4aae-934c-8b96b55c3523",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dcc21e-a26b-4edc-8cae-9ee653ccbd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aad2473a-0b35-4dfd-bfbc-2d15fcc71389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "060641dc-7067-4548-8d9f-4ff5259b2775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58966de6-42ed-492f-88ab-eab1a1bab958"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ca0940-9907-4c8d-b2ca-6d87ef581a44",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7baaae16-cce6-4337-934f-595be41e0197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f45727-4241-4f15-a0ac-d4579bda2409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9820cdd2-64c4-40e9-94d1-948951ba3491",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39bf83ff-1049-4cb8-bc4b-cf0dbae6dd56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801686be-e036-46f0-916b-229910bf7c9a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d290a64f-a19c-4da6-8b5e-dbce5998862c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f440732a-fe20-4a86-b166-41f5452a5c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712aa03c-f286-426e-b1c1-7abe544804a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bcb2006-4d78-4fb9-b216-cd178488b891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9b62a86-0638-4d4e-ad4a-c65c152f0c45",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3557e3b0-c204-4ccc-983e-98d322bc9eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3fa2ff9-e055-4484-b72c-d6251f0772d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20bc6274-1e38-4f42-a705-13c1ca34a267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "32fe8f32-8b3c-436b-8690-2276ba2d8db7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82022e85-de86-4693-a91e-164d91590dda",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d4df80-6bbb-4218-9a85-9280b9136517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c874eec-fb19-4162-b3bc-106e5e589571"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e4f158-f992-4bfa-bf72-0136af10cbec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74ca0b52-21b7-4531-b447-40326bff5265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9247881a-967a-4962-afa5-d1dd37a2a498",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521d1e22-0408-40f7-b06a-7addd5694627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db2732d6-039e-4564-99bc-85e443869a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee4b0477-f96c-4b2e-8277-9f3aca22950f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d540ea73-7951-4c1c-8797-3087cba39449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9b56004-003d-4ac2-97cb-a674a5c8e255",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50da8e4-31e2-4177-9edd-92751226b485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ba4180-e9f2-439c-a06d-a5ff333e7155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a471fe26-8f47-4fc9-ae13-95e080c95164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "437fae14-f236-448f-9cc5-1cf29164626d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de90c895-fe9a-49ad-a95b-5f31e6c7fcc7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "361bb3c8-d627-44d4-ae23-39b8504649a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d850963-17a7-4a73-a3d6-cad704927773"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12de7cf5-a040-4c3a-831f-2ef19dd407a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "275aeabe-3549-413d-be76-31c90d00ea3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc9df242-847e-45fc-8902-96d2b26e0120",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb47b49d-7766-442d-9fe2-08b92ea75636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0981abb-be8d-45d0-9f99-675a36d18366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da1de6b-3a92-41ca-9f73-61467dbe427f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14b13969-46ca-4d3e-a79c-97f0d47e23f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb4f69f-be43-4c05-a79d-f19bce0a43f2",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c3af6e-fd95-49cf-8638-57cd03488dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "639f6322-8fdc-4ec3-91e7-6976c64e494b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad08e7d5-cd7c-485e-803a-5b2624e1c5c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f9a141d-3566-457f-a886-de50ef1fe5b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8995e986-6945-49ad-a3a0-8f2ea8017ef5",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c078ef09-c2b7-4883-b731-137b76e29070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "309c29d1-960e-49a3-aae4-c4c169ccf16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8a1dac-9ff1-4835-8bee-af15ac5c4c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "49312505-0387-443e-9df3-6806ba15c497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9955f252-245e-4f59-ac0b-dee616b94329",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1313285-cfa9-4635-b11d-3efda37f675d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870ab702-ec52-4d9d-a5cf-318667fffc26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd6f1a49-e218-4616-b25e-039be4d75d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c52ebf1c-ca93-4edb-8ad3-e125639a36f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69927786-d7e2-4886-a9d2-d67df989fa90",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a23ef28-446d-4a22-b0f5-78d9c9f59db6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7770a2e-d909-42f6-b3f0-a573fcb077fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "698739e9-e7b3-4a16-af02-b21d307428f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62752c94-00da-4493-ae14-5b0f41f31cc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fde4e369-26ac-4ca6-8a3b-16854b80ce41",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e710ff18-74df-4080-8b73-df32064a23f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "045edbd3-8107-4c5b-a0ee-e8436b36911d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc3f22f-9077-4700-afe1-e28f8a060c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae80fab2-77bd-4667-baaf-81b7e2456638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c96cc052-2ba4-4871-82b6-b874625021ff",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19102a4d-bfb1-462e-9cbc-2944c435fdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b86b3b37-9171-4975-a175-fae5867ab7fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5148528a-30b0-4975-be6f-88fac832ea61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "109b4652-5774-4775-8cee-3fe97c4c8867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e2fcab-7f05-4fd6-9897-6bf18b17ebd0",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4b124c-8c6b-404f-ae12-7474c10f6d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d84af594-b3cb-4702-b330-8e09e2c3fcc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8d9aecc-ea97-42de-8c81-50473b0e20af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d19d9777-4621-4ac0-aaa9-7df61323479d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b46a95-1a96-4dd1-877f-dc4449191c72",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7cca3b-3c2c-437b-b713-2857c44196b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb13f637-7c58-4652-b0cd-2dead4ad9719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb0a32d-ccee-4d37-9623-3b1f498218b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a472e37a-5a72-49b1-8dea-7a0f90697ef7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40d313e3-6362-4dd0-92dd-c865906d9fde",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02a6a504-923a-4964-9387-6ec50376ae80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6620d863-248d-49bd-9856-b98963d57829"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8570bb2-cb3d-442a-b6f2-08e7113c0a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "af24629c-5530-4f1a-9437-14388e6a7889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64923d23-dd26-4b41-b271-0a415bd202f5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c49ac4e9-9777-4f13-a37f-7426c377b545",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2f4877-f35e-4f0f-adc9-800e46b50b90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf4b4a5-effd-4feb-a5d4-9e5c984b608e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "131a826b-d873-400a-9374-5057472c97ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24dcc2f5-b25b-4a76-91aa-b5dad4455ee1",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c366a7f-6d24-4e19-824a-e384ce758a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8139f543-9d2e-4af4-9a67-a679743e5475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c64e53-4c1c-431d-9c4c-6d80fa05ef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a4ef469-c0a9-4731-8dd8-11498da8f3ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e217e871-a14f-4c48-9378-d1d224baa90d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1945ec-237a-4a1d-8e09-3483ceb9dfdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30292cfa-f05c-4b2c-a5c6-952443aafac1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56d6dbee-6355-4657-babf-e5aef0ecbc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77418642-9923-41cf-a830-51a89a013f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0675084-05d5-49f6-b765-80ed4530f522",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f4c59a-7cc5-48db-b35e-3f8cf2d48a73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74386c30-a7fd-4104-8011-e27a139fefdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a0fe572-8f9e-45e3-97b2-a357e7e7ee8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b5ae991c-2fd9-4cc5-8222-57134f19a4ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c73a4f62-7a5b-4580-81b3-f958412093f3",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847a9b66-5128-4f4f-81a5-194dbd298429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "324724b7-2006-412e-9551-3cac7d64a9fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ef131f3-13fe-4b10-95fb-5e89d74149c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7cb6a449-78d0-40a0-a84a-f704d0883ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7db53e75-25af-4638-933d-06ebdff462dd",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "237d3015-ef6b-4be8-850d-86c8030da934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf0bfbe0-f967-47f0-add1-2809b9432f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ace319e1-22d1-45a7-aaaf-c3aaf4d8371b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a139fa71-fc4f-45a5-93e9-747793595276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac0f13d-d040-46a1-a2a3-e53fd5a5e599",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b09f0cdf-5e32-4a80-811a-8fa38d8df7dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47c96f3a-e2cf-4c97-87eb-af72fd6fba07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b5fc7a4-bfcb-4f31-8e02-7194ccb0ce20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b90320a9-8bf8-441f-8d4a-96dd0d189138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ff16ba-6e2d-4aa3-b1eb-5135dbdc4052",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b6608e-f5de-433e-92f2-7e571e01ef74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f20366b-2e1c-481f-992f-349194908c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc53fc5-5ffa-4cd1-95f4-3fd02c76c875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b931c726-b437-4cb5-9a0b-dcae61e73e76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cacbb20b-231c-41a1-a54c-f950cae047ff",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb85df1-c51a-45ef-80d8-20463012dddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7430e7e1-7caf-4a83-a1aa-593f699e300b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1a8400-a7f0-45da-865c-be8f64742613",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f9e2ba8-e16f-4523-9ec2-0673ce533c35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64d938-a187-4872-b376-60aa9a803990",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d34736cb-ae4f-435f-9b48-03a7a2a62b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8510eb2-46f0-4ec0-bdaa-f2f94e956031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "453d4084-2cd1-4bf5-8262-ccdbb76c9c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0119af62-d89c-4dce-a6de-e74c52da8e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "187c4412-dcf1-4bf0-ae5a-2362cf504758",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95797696-f85c-49d5-a779-31ee03a94533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c236287d-83c6-40d8-82a1-afdc36160ae0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153ee8eb-6a6c-4cf5-a695-d2012847e5fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aaa9f7e1-4cac-4eaf-8384-02b1bb9ba3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03dbda5f-b9fe-4bc9-b98a-a564043c5cc3",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae139b0-08e6-4d0e-be51-3ddba6d39ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "635ea626-6b40-46ff-80eb-46ad8a124b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "990899ce-76a5-4371-aec8-746d34214938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "30f6682b-2b24-4264-8ba3-d8a20e7487eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbe3360-1a18-4ec4-9079-37b1e1a56fc4",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f844eebb-e55d-4067-b408-5553b307513c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e56fb8ac-25c3-463d-be62-ac77cc1fa448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d231f8-5902-4cfe-b6a3-890b9a17b7ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cef22eb5-d6a1-4a0c-9018-142894c2f685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9302a4d-8cda-4b2f-a349-5182441ba599",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae891cb6-b4bb-464c-bc36-90b050d00d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4952b7-cc93-4233-9995-fc8ea65ce3fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58ffdd76-03f1-4f8d-8df5-562235d6ee19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd9ee1e3-784f-4e84-80e5-9a18bfc511f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e49816-04de-4b36-99ed-2a47b3807d77",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "118fce5d-ddfd-4e7d-bca4-a625ae22ea89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb445740-3fb4-4145-840f-13db4d769840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb22a988-64d2-4c0d-8b02-68dbc3131708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "36d6b114-6bca-47d3-ba47-85bd47e9628e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "070b8fc3-6c3b-49dc-8bfe-49ce2982865e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b60b513b-2b63-4ea5-8c52-33f10e2214d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25ab483a-bd06-4e61-9d61-4cae3e51c4a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e801c5c7-da40-4fb5-95f5-1d1e969f67e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "06c76f23-4e1c-4638-a63a-a53dcc097c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ce5fec-cf55-4d97-9261-9dc4454879ee",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2dd9fa7-2ad1-465a-ad8c-beac49c9be94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07a301de-aca3-4ac3-b5d8-b448f43eb530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7913bd17-1902-4918-b0ad-676a1a17ba59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "25947a26-5083-43cf-811f-11d3234c703b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da527605-7d7d-4955-8a8a-2ef5f54db71c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2115e9-abf0-4a57-a4a2-4cf6338e63bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a73122c7-4dfd-4240-bd1f-9bdff78dc85d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25a8cf77-dd6e-4df1-a0c3-76560b191284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5f06a256-1d54-4498-8a0c-d3d548da85a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a0e268f-d702-4986-862a-5870691f1b83",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70c19d08-62e0-4beb-9271-4e65ae2ff291",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980bd566-f1ad-4a2a-865d-adb738bc708c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56757572-0e1b-41bb-bb43-95cab2036523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d3b576-e487-4b55-b341-418e6610cc22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3d5ec18-dae1-4b30-9ee4-3a4ca6ce3fff",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec98168-61f3-4af9-8c74-9a2e00ccccf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ac8180b-30d6-4e56-b483-9513242606eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d5a9816-960d-4b42-a9aa-860a130379c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "735a35f1-f6e5-4911-8252-981146698049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28a6eaf-466f-43ac-ab51-2d057ebf97ae",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cf3383-aa46-4b5a-ad78-ecc712e43504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183042c3-e501-46fe-9743-cbcc0d4e9168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc4eaeba-4def-40f7-978b-f57ff5f11173",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2df558a-abb9-4606-999e-45270356ead9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2996bae-8321-484d-a046-ebeeca42cb72",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "333d3828-779f-4fb5-9f60-b80d7fb3711d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db110701-9c81-4096-a458-570a914d881f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cd65669-7ba1-4dd8-a9b0-97f7f5b9847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98d1ec5f-ca9f-48d2-a08f-85131b65a0e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae15fdc9-ee5f-4819-b55d-b63f138bf922",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f7245e-587c-4102-8599-f0c3ae7c848f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec78a79-c1e6-494e-927d-a75b1594ffae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17105431-4cf2-41ac-8de8-fcdf793f3110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c5d6495-ece0-4462-83d9-09677929fe5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4dab30c-407a-456a-9091-003bacc313c2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de6b1fb-f276-49f6-b909-ec9a0a2323a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "395a01a1-a129-45dd-a18c-16164dce90ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab045f8-54d1-430b-8e4e-272d8b85ade1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c4b3346-cb04-41b4-bf90-c2d578e12696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8af793b-009c-4996-a588-8eb59aee18b3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4891d3b0-8966-419e-827b-b306cf0eca03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "599e575d-1cc3-4a19-80af-ceb329b3b6e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d8dcec-252b-47be-8308-ec960837a0cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "06222735-6428-4c64-9371-0fbe698427e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd68eee-3c52-4d56-a661-d5a288bbdcec",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcff5e6f-e8fc-4398-84f7-52791d8d7b10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad111622-4893-4a18-b6aa-e6fb0513d3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96383eec-618a-49e3-8d61-83591f11ab0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5c88aa7-a76e-4b80-b800-669587c922b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30507e99-2e37-4b3e-a205-1fa1c1f662b6",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679a062c-52cf-4fb3-a323-4dbb85061c07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eadef1bb-069d-429a-be9a-a886a64db25e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947596f8-e834-4768-988e-a63b17edbdd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f42c327-21e5-4e47-99c8-c7ecc3db2b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b224ca11-3630-4be1-bd90-defe00dce0d5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb272bc-28a2-430d-8b0f-bd0b791d4d30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71269f00-dd3a-46de-97b2-3dc52ec7abac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "650a996f-f3d2-437a-add3-2f24c4503602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ed68f44-a326-4505-bab1-521363b23656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e957e4f-b1cc-42b3-9625-f0aae29dd8ef",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5123d2d7-4ee8-43bd-b17c-80b9d253fa37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad0b1e7-251e-4656-a0fc-e9adc8b609a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "085659ef-a6d2-4a50-aa8f-263b5c74f283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92e7fe05-e6e0-4d60-99ab-063277d16194"
                        }
                      }
                    ]
                  },
                  {
                    "id": "261d9a77-7d5b-45d9-b429-8e0d77a6cce2",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ed12ca-baac-48b8-a26c-4cd8bc293926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cb4bcb-8683-4b61-8a43-8a94d1b29a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf70970e-c6e0-4aae-aaba-02e0c333d3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "af7ad407-d686-4313-99d5-f3302d2e9cbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c0af96e-4b16-4d61-a0e5-b7b9cedcdf61",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd8cbe27-d051-494e-9cd4-86f70ef87b45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1908d317-a781-4b5b-bf97-811052427953"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfa28cf-7528-4ebf-a21a-6aea1a7d9009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7ab25499-232a-4a8d-8574-7a0d5a19af59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f796194d-060f-4683-9133-f651acb04e14",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27850e32-8330-4b9a-9e5d-70f9a05a3494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f083dc94-281f-48c1-9b10-ab324f2f9077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1692f10f-0c49-401e-9432-a0ce7713d26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcbcb051-a8da-445f-bd15-4db5e6784677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938d01d0-46ba-4cff-89bb-f107c1c1e920",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a1a535e-639a-4765-baff-78f875e4cec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e1cca5-bd3d-4dca-8e38-d1b3f8722a82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beff9310-fd64-4a69-8934-94bac892b115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9422177f-647d-4c57-b8e8-25093ba2c1e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad43c322-243b-44a4-9cc1-e749ebe76f80",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a64d07-809e-497d-91a6-33bdf27c82ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e40351b4-11b7-4bf2-918c-a17e3557c0a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3906380-45ab-44b4-bfa3-e96f1555e4e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2c20f03d-88b3-471c-b4c2-2f2b7a4b901c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c83a2fef-787a-4fe4-b6e0-dbed5a3abb7f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a14e77c-e903-4b20-8243-96ed82de3911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c998c82-a07d-4e03-a027-de4658a3d306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e70af67-bca8-4042-9b1b-92869c6230e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c3b9689e-8267-4bde-a3af-b3612c817aab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a89e8a5-9863-446d-8532-00cf21f7651a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2843a3c9-54af-40b6-b26b-545ad0983423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58bbf28c-9785-4891-a401-cbc39540a608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188ea4b1-41e2-437c-a045-d771467b50b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "a734588d-9153-477f-97a5-785caef7a09a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58348c9c-8a3d-4f63-89d7-a39d3b6fb62b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b189105b-c135-40d1-a448-2d966498ae05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da3b03f-361a-4685-a585-bde6aca503f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86e93479-e14c-4805-b343-4e08ebb0f1c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8777b6f4-24de-4575-a3e8-40fb2a01c69b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "923f22c9-1407-4a85-88fa-52e81c0628c6",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e057ad99-ad4f-46ea-91bd-31791c3788b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "706f4e8f-c78a-4372-8a9a-fe0607c0b2c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b382d5-5e21-42bc-89b4-3b37de597778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "07c8a826-4958-4d4b-97da-a7e1f3a731e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79eca692-c7ad-4684-8878-4d4de02f956b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34823d08-a3a8-4087-91e4-136f15fbb94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c8172b-1f93-4feb-8216-c5adae50eaa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6520bda-c79d-4b95-a452-9a04325abdc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8c25ba25-b2e1-4714-ab19-fa08c4aaf2de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94353619-f492-4f4b-a814-da502552d6a8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38e1e861-de24-45b8-953c-74335ecfc0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "775001c0-dab7-4dfc-b763-ed5ea1015623"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e738f4d-b565-4c1b-ab21-9a075e0a6d4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66544570-8a84-4486-846f-8b34e0da0b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c075c45b-087f-4ad8-8005-7b6f774814d1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1179f76e-cfbc-4f41-b5df-5d80dd2b520b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8db8914e-0324-44fd-9230-c1e74feb19dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d19311dc-3b59-44f1-8a94-dc8dddd0536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cf9d8c6-9e23-4cb4-a8d0-1fd4d897ae8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611d9176-586d-4f78-b764-e49fcf729c0b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc683316-dd0e-4ea2-bc16-ea0af3759a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c1b7fb1-e693-4b7f-a9a2-e0e7ab419107"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f6ca51a-d5bf-4fce-8a48-e453e9e1f201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94bbe06c-d32f-445a-8aeb-83a19565e2ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a5516ef-c974-4d60-8ea6-77bf2e9da7f1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0091834-8426-4034-ac49-6fd1dfd5cdb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f537aa-5ed5-480e-8e7d-a0f6069cf7ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e673a1-a142-4578-b54a-bd38cef223ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e888578-a3bd-4309-b0dc-df6e7393fe78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e99d44b-5717-4768-841c-0f86ed6c61ef",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5afa13fb-0a5d-4039-86ac-6e17155bbdab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f75802-d6d5-4da3-bb56-da285076bbeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ede0040-3975-4ee6-8fcc-890864d64ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f2f5ede-1f5e-4129-a56c-23c834bbed36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880a2f74-e966-4572-98bc-7fee6671efad",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c7d0b8-c5f7-4130-9f03-4b56221bec39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93a632a2-2a0c-4721-bd06-7c1474a9832f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b6439e-72e8-46d0-bebb-3bfa0c8131bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fbb4828-7442-44e5-8d06-d381540259b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48f8b9bd-32f5-43d0-b18f-3dea271f0a51",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bced9ed-79dc-4d65-a5c8-62f4f342cd77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e41ad8-b799-4fa5-818a-e04314a5faec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29229d40-fa1a-4478-9ede-fed67a371228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8d5ed7-d521-47a3-a7df-bad53fda4fb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b75e2c-2618-449c-a019-c92b942381ab",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80251cb0-ebaf-4799-9e49-a1c7ecee3bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15f0262-6d45-430d-9506-b59e91f6427d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4caa56f-1eb1-48cd-accb-162cd7907e1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa514d1f-bfa6-4d04-b785-ec93bf46c2e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f018b7e6-8c01-4ffd-b079-5d5ab427ba5b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d5129e4-b37d-41ed-b82a-293fb32981e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "492091cc-327c-4000-a48f-9db5d74b6837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dbde24f-7ef2-4871-86b0-3d4d0e2cb3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2668975-2236-46e2-a81a-58c7b24464e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c549a6a-d97b-4ced-8369-70801214d323",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd468420-ef60-4d3c-b4c4-f5ce8c9cab56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39618888-8a43-4521-a856-66b08753ae7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b21d62d-c784-4248-9468-41a88a58c030",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1458f52e-24ad-4926-bebc-c79091155692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a746fe-ffeb-4f98-a17b-f965fe2b43e3",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cac018a-dd62-43fa-94df-6d3ac346044e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd8b5621-b464-422b-b371-cba4f0411556"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d0ce5a8-2e71-4beb-a67d-3f50f757819b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "099bac73-9b00-46a6-b864-f1753e74f429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a558411c-fa99-4bb0-ac34-258982c4ee83",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7a1439d-26f5-4615-84c2-7a720cd1b462",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec62a2e7-0261-4152-9e58-a9756bded83e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39523bc-b381-4af3-8660-a408b08ff22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3e32337-889c-4beb-ac85-af6a4afa93db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f53d65-5cef-4dd8-982e-e5e7df46ac89",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e29295-7d30-46c6-a2d0-1c0c44ba24f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abe41df-7296-4a9a-8ed4-fd166c5569e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c389ab-cc1d-4bac-89f9-184a6b1be4b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3228a123-3db0-49de-a859-1f5536ef9c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7406fc4d-247c-4b9f-bbba-2f473924db36",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80326919-2aee-456c-bdc1-a577ecf7e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95a511d2-a4be-4c3a-beb4-8af094433555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b3c714-0a57-4f45-83f1-ca146c400724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "142b9ad2-68f9-41b3-b046-44776ab431b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b776d44a-cf85-4d12-8f2b-b4e1504d126d",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d6a81-ff5a-4a5c-bd5b-03e3e74f8a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bf8cb9b-aca0-41c5-ba59-8e619a4b5bcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd28b00-79dc-4446-967b-ea249f4cec33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd2e6e81-44a6-4360-b0a8-e8b427f57c27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d63d70-3c3f-4b4b-8f50-9a795c90ddd6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68d19b48-8995-436d-9a20-828c08373059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009338c2-0108-4eca-9a3c-b38fb8981a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb3b2f-bab8-42cb-a63b-50a620381f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9749b75b-8ad9-4c1b-a65b-f801eaa53597"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62f5a357-33dd-430f-9b5a-8add4a3a571b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3603ad81-152a-4875-a04f-e39765849f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9c7f9ea-8683-45ec-a9cb-cb348931ab8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ee9903e-d0d2-4631-856d-27e1bad9d631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e40992-5f86-4e48-b923-b76b58e7dd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1caefbd1-5a23-4202-8ae1-9fc879f4e333",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3f16b7-8a94-4dac-942a-df95aa8fb547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa5aeb80-c55f-4b5e-bd03-823bfbd3edc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ac1c816-e24a-49ca-ac3b-9605c7dc323c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e187b9-45dd-4db1-80a0-8791b9cb2725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ca14fb2-4708-494b-9839-133e91fcf363",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e0d9ad-42ec-46d3-a079-a44fae2c28d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60bf2b53-c58c-45cc-9dbd-7a32ea1a6e6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "770ef2f3-7406-4c75-82b5-5e2cb0a14b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ed78f219-5799-47e9-83be-83d2f2326eee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf07046f-0874-4bea-ad72-74fa1431331c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "979286c6-499e-48d2-baaf-87fe81728630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bc2309f-b3e3-4be3-b53c-df69bad4cd54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dee0d35-37b3-476b-8c9a-e6e94952bb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9e0cbb2-3c3b-48df-9ed7-2c1d2a3469cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3238bc7d-1858-42d9-9ad3-084dbf810325",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d953774-b60e-47ad-b82c-8de6667d0511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06713f89-f4a5-4c81-befc-4fcd2f355cb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df048135-bc3d-43de-ad3a-35c17cc464db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1385db-ba18-47a3-b1f5-531da53036ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a9590c-7565-4d51-a0a4-3c6893b407f2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "568a68c2-ecf3-4452-9029-05f0e4fbac17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5397828-595a-49f6-9448-48b742377f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f5fd7f-bd04-4567-bba3-9c46c42f52cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4888f4dc-1c60-4331-99d9-316e282c3df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80448d0e-8958-4d22-9611-541d562a024a",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce3de0a4-b0c7-4846-9d1d-db426ba47fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcf91ed-c15b-4308-aa03-a9976cdf101b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a33f3a-c210-4fd1-9075-c9aa1dbee5df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "21f3c993-3366-4bcb-9e0d-bb748f0fa7ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d3b7a1-5572-4dda-8832-7fb6de2cff89",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d314bf6b-fcae-4187-938e-1bd8622eaf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846f01a3-e1b4-422d-b3f9-a9bc02dd6a96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f3e259-cd0e-490b-bb95-f68ee465ba22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7267608-09a9-4b5b-a540-991a48667eec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712ede35-5231-4069-9275-6061b965094c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984d28e8-0574-4a47-9ec6-d87149f70699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8774395d-c37f-424b-acbc-6e2b3c64bbe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b66a72e-0aca-42e9-be5b-015debec265a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "f3195bc3-9936-4022-a0f5-5e94b3d968e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212021f4-8727-40e3-9661-c5efca5045f6",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2b5ba0-8bda-418a-850e-59531f53fdf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35622fb7-6fe5-4a11-838b-262316128c66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74592ec-c35d-453a-8dc2-d09072a7d8af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e33b329-d029-41db-a897-4e0f7a2adec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0471cce-0fad-4f17-bad0-753e555ed345",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8c711d8-0d58-413b-91df-52da0e999dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba86a88b-e36c-4b82-9ec5-c948a5885308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb182b8-a08c-4c8f-8f7c-c9e9e644f4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc28810-2584-49d8-a745-7e39a0fc0cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffe5057-b8c7-4394-9e13-a1ada2d745ac",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9bcd01-22be-4811-9fa5-2fc86e6b9cd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "dac36389-39db-4078-9eeb-6ab94d9bc4c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6794b82-e27a-479b-8b9f-6c2402fc7145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "04d4c323-4a18-47b5-90af-00045b4e1a8a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3a5981c8-27bf-47e5-b647-c640d5752615",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "50ea71be-e45c-4282-bd17-24d1eca6f4dd",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bacd451-ea75-411a-82b5-53e64338af00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc909237-ba22-4d46-b731-7915b6ba5ea3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d016317-2516-48a5-a236-1c47a4375338",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2ccb9df-6e24-4dcf-83c0-1eec28e10fde"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7da5c63-6fab-406c-9280-013dec7655a0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "304a04e7-025d-4209-9fd4-4046960fe007"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f94413b-d249-4a9f-8fbe-4485e3cd9eae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "be59a264-946c-4210-b931-ed5812dc1331"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a80b6944-9f96-4db8-bc3e-8b8da013352f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ed90b6e2-6ced-43f8-a607-487f4504bc7b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7c2d3427-1502-4708-a65d-220b0c5bd034",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3da546e1-83d8-441b-a8c0-6eb0989524e0"
                }
              }
            ]
          },
          {
            "id": "fb85a830-cf7c-498a-a6d3-440ecad6946c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "23551aa7-8c81-4cfb-93e0-7b281cdc5b3a",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "717aac8d-3101-41e9-adb5-185738a1306c",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c814631a-535d-453b-a72f-09fe18a00d62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "893c0dcc-4cc4-47c6-b43e-d72c5d716bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4707b1e-4f0c-4d49-85cc-302d08407dfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6897182-e4bd-4656-b60d-a643a6cc0ed0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5a8a12db-1944-4e57-946a-e5b7e7f7f13c",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74a4834c-718e-43a6-b5b1-b33df54043c7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "94fb6397-fa5f-4148-a83d-11d4514ed236"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fea3785-0e81-47bc-bc02-45eae356f9b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9103a890-27d5-468e-956a-6f82f538f27d"
                    }
                  }
                ]
              },
              {
                "id": "dc391081-c595-49a5-b175-0ff0cde4ec5d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f77ccabb-acb2-4c0a-a578-49c7bd355d77",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1a147fdd-7306-4841-be72-d6fa4165ed2e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5cf2143a-415d-441c-8f82-938ff743b92d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "235f1565-0226-452c-a2ef-3c2ef22a0c62"
                    }
                  }
                ]
              },
              {
                "id": "3b37a952-2855-416c-baec-16609d8346ee",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c1c61a45-5802-4d3c-ab67-10a955d62b5a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dbfba9ab-1309-4719-b66b-bcc8b4dbb4c7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0dea8db9-55f3-4219-a1c1-9ad772ff7624",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c79c0665-6d2d-4fa3-b79a-f5921925170a"
                    }
                  }
                ]
              },
              {
                "id": "51dd3e54-2ca0-4429-abd3-71a26f92ba08",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50c0c404-f073-43c1-8036-faabde275a2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2d4a3be1-9f6c-4d39-bbb1-b3c48a549e06"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9985d239-45f4-4835-a79c-a031a25f3ab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "32e90149-fcd8-4b36-8fb3-843d2cdf6457"
                    }
                  }
                ]
              },
              {
                "id": "8a514f94-bfb5-49ad-872f-62720571917d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc548569-f912-46bf-a543-21cae7a7bbe6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "97f894bc-d00c-4405-ac75-6dd8afa879fe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "926ec737-e440-428d-99f4-b2b392e25729",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4448058c-352f-4b5a-b5f0-052cf37dbd26"
                    }
                  }
                ]
              },
              {
                "id": "0b4476e1-814c-40ee-ab48-f49bde1b6329",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70ac83f0-c8c0-46f9-98d5-2c764d42b0be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ccb57e7f-0c70-4ab8-8f70-d85497367559"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70ff54ad-ab31-4529-b9ad-9b8c8b13adb8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ab234cd9-b7dd-4439-b966-03100f3314ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "036a2949-4a56-43fb-9a3e-0ab352a40d26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7de4fc2d-d109-4427-a11f-721867e8ba8e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8ed605a5-c971-41d0-9442-703bed79786b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3b31cbe8-f504-4f61-8a8d-f3d2aa659a82"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce5fde23-00b3-439c-896f-c54e00d0ee57",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "14181141-3cb8-4b82-8a11-b1ed06467f24"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2fffb636-858a-4420-81c0-1d2e726d8049",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3047515d-4e7b-48e0-9278-986a9001a326"
            }
          }
        ]
      },
      {
        "id": "6187b520-3b58-47fc-ae96-8f7f86d61e07",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "f497ee7b-0b4e-4371-80f9-f863cb8b5a63",
            "name": "Negative Testing",
            "item": [
              {
                "id": "57999920-58bb-4faf-a3d9-f5ec837de992",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "82b72c40-71b8-406e-98f2-92d6fa8b6409",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d4842c-838f-4041-a50f-bfe5abc5ff76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18506fc-b435-4a48-8c70-002c38526137"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad1650e-4a26-4633-bcf5-82ad85f930f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "455f0d21-e601-4987-84e8-b25c658d3452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ae3af77-7d9b-4e5e-adfd-638f4bb0ef5b",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf145213-4360-49f2-aa07-a4ce699ec837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27f306b4-141a-496a-be65-4f13d9ae0819"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ab76e-1cb2-4da6-ae9d-833a04c0142d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f97586f-4750-4711-8192-15b2a939b036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06404c26-b088-44cd-bd3d-a64d6f85e227",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a30d5b2-f460-4b99-b43c-8a7e6b6dd6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbd020e-16b3-4525-995f-69408299e787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9392a72f-2ed5-4553-b827-647a2abaab3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5264f7c5-35c0-495f-8f66-17a7aeeba7f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f61349d-d109-44ea-aeee-3c85782c96f0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b727d49-f1be-4b84-89aa-d69dff50dfd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d31f7ea-4d59-4a03-9ef7-5d478b9a1345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d6eb44-51af-48e7-b5cd-a6a342cc1213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cab1858e-7e53-4fe9-bb32-90f3d9073449"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8b1b652-1adc-43d6-a459-a99f4a80a466",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13a2006c-87d1-492b-aa72-99bec909c9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb2c4f8-2c26-4486-9032-53ada7481ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "728bf545-c4c2-4860-863d-de3f00b8c5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad0a01bf-0e96-4496-a0c9-4b1a520b26f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71f59cd1-2f6c-4bc9-b34a-fc537545d9cf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e8013e-4e72-4454-9e6e-299130026ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d94ae21-7030-4fe3-acc3-1bf0308dac42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e53363-bd13-47ea-8306-59cf413d7b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62cf7a2c-ccd2-41b2-bb33-d8ac53a732fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "530a0e05-0b44-44d0-81e1-ae16e2f7bdac",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06914f25-c886-4950-ac5d-17b0ee3d0c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4541f728-8d63-4bce-b0fd-8c4048007775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0aafeb-26cb-4a61-94c9-1f6042314a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "006a10c9-ff94-4814-be10-7b4a82823ee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061d0f44-a766-4e4d-ac97-76347a892a52",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dbad935-8f86-4f25-bfb7-079491c4781c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da4fd86b-2f91-4817-bcfc-5082e2930624"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93423f0d-6b5f-4172-85e3-2f138dd508b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3690e318-ae54-413a-91c0-d48ff817106a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a50e5e00-4931-41b2-a849-864a4c61eb81",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64360ef8-1f2e-4ed2-be26-fe597ae7745a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f7071d0-9bc2-4570-aaa4-84f32bb0bc14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bd24e0-bce8-498b-a01a-1211ead2a348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c1146a-1211-475b-a2e6-d24e130f5b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff8c7dc-c654-486c-9f0a-3f6ec2dc9f28",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daea7567-6977-444e-8925-aa0bcce0eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd916862-6f9c-437e-aa41-ad7f5bac0175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d769bb72-6360-49a1-b2b0-5b363cab0263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c86b46c-3dae-4ae6-bc8f-7ce771fd092e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d77850ee-67f2-4349-b44e-f77e55c8ae39",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7113d8d6-10db-4807-aff2-9d0cde5a560a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51c7fd3-c581-491c-ab63-655d176d8730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b2656d6-f3b9-4d1e-b00e-85439db14979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "29973b18-58c0-454e-b358-aa1425eab4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1333ac16-5684-4806-aa6a-9ec0654f195e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10594e06-30ec-451b-b4c9-e647909a7afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66bc460f-34e1-48b2-a350-e0baa45ea293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f455a3-aa2d-4816-ab1b-04f82f1534c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6e63bfa-1af8-4443-81cc-78a1203d282b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be63ce8-b2fa-4560-9462-943ca05d98be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1d434ac-55df-4066-8835-fa861d0bb9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3a2082-9f1f-4b04-b848-497b7e07af83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd789670-1516-4fae-ab27-751e82456035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ec45a84d-0553-4a9a-a0f6-725fce96656b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e516f3b3-20e7-4435-9aaf-ec292b327f22",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509a1402-17a9-4225-ab2d-f4f970fb5b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "deeff4d2-a293-4bce-8841-b119eaa028a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2873f221-e14a-4472-a4e3-eafe71ecc674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0eec84dc-a6a3-4430-af1d-2f532bf69b50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca348a9-5dc2-461c-b17f-41e62589c0b5",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "846dc1f6-d21d-4b7b-9f95-bda2310ba712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "861905f7-2fab-4317-aea1-747c955e7be9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1046ac8e-4be6-492c-a0ef-fb82b7a405fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7a3a17e4-bd0f-4f4a-89dd-d9a6a68fd4df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62eb4a01-ee2c-485a-98f5-d8a68871b70b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0836b858-9915-47af-bea2-dc132f96393b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60bb8b0-de27-4433-bfea-b94ce99ba351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e2f0b3-6660-425b-a9e2-d1f3fae43a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "284c88c5-37d1-4d64-8bb9-eff1c42db7bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66aac5b-2102-46cd-a705-864932c7e164",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "714bb203-2c47-4927-beb3-f10821666027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2691c341-e5cf-41a6-bbbe-a535befbcdeb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96bf323e-6275-4cc2-86e3-a3c86223180e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "39b44056-2bf2-4254-ae7a-82fa5d27a9cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12860552-e4c3-4214-8204-72069d6d6cfc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60bce048-a371-4bf4-be43-1f774d334a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e997a4-764b-439c-b670-3141caf2d99a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7916b27-652f-4df6-bb13-cce8347a54fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbdae3a5-7d26-4d3f-bc4a-da9485b9e7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b807a37b-aab6-4d09-b5bb-515451233f62",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0abb8e-74de-4c8e-9e55-10adeb5acb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e9c581e-7105-4a45-a1e0-e82910ebb79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768cf636-26e8-4a4c-b627-803563b48e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c4f720b-7050-4964-b3e5-db48b7e4db7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90029451-3601-4a9e-adc5-3418f001e18a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e05677d-f444-4348-934c-2ab8dc5083e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "396ba225-7c00-4f8f-ab5b-b872ad88fcf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c12a83-defd-4d34-934f-42829d312e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0b239b4-ce8e-4247-a7e2-f7c6f9176fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a066d3-041b-48a1-9c0f-182aa6a9cfb4",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5404d1f3-6ce4-43d1-96bf-cf73343984d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc4b83ba-dcaa-4211-bb6e-57f6b779f65f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daf0a80-38c8-4af4-baab-635d9644ac36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "043c999d-87ff-4fa2-9bfc-53fdd3416eb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79143a62-c3fd-4a0f-a1c2-8c759f986b28",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56571b71-43f9-4ba9-86f6-37308284977b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb92a88-8ede-4eb8-b22c-ea17d369414f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e83402b5-5a60-407a-ad85-bafce13777d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3028905b-14ae-413f-ab67-0846f868d0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3167b62-b354-4dc4-9a04-cd8b6f52587e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9abd2ac-c72f-4c8f-ae65-ecec0f80e75e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c104fa1c-86d1-4449-9abd-6c34fe63f5ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1242f794-894c-4168-b05d-2d40b2d625d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c30fb394-f568-49cc-9da5-c6f4380a943c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076120de-b3ea-4e51-95c1-fd5d93c740d9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea9d94a-d9e7-4192-b679-8641189adebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dfe1058-b99e-4990-a82a-63386d5ad1c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d242f2a0-e04e-4656-b9f0-62495a48b308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d66160-542d-4271-96da-849a591920c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f30121c-081c-4078-9b2d-9c11f575836b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63a77e81-b578-4dbd-93bf-53830aeafad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d07e033-9044-48f9-9610-6e9c895b4edc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049aebc-2864-483f-9d20-3a7fa705b547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44d0d8d4-41a2-4393-9184-a85501f49a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049391f0-b48b-463b-aa74-c3ffc19eb309",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a1b00b2-814d-46c0-802e-5613acca0917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ede6a13-b44c-4676-a72b-cfd9601f31e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad44910-8492-4116-9290-12d4480c9f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "57e3bf05-9d78-4e56-b75d-52ca22d9b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c112eb-51b1-4a0b-88a8-8094f0052d28",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4596451-c1aa-44cb-b6d3-0965a9e30576",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3efd0622-ef12-4df8-aa1b-c4e915d4e186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6388bfc-77dd-4248-8175-71b5d096a887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "476025f2-9e24-437b-bbc0-6f378d6062f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f43c084-8d7e-4d08-bf19-ac3eea79bcc0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6824675-2bff-4253-a3e5-4900aefc7481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee137cb5-bf93-4761-b1d9-7daa2813cd8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8258ec1f-0d2c-4c63-8a1e-c6cdbaafb32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b2182c2-baf7-42fe-be05-cd4aad9f4b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2643f388-9d45-41fe-8465-eb83ab74b61d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad8ee14-19bb-4036-a92c-7313e66646d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e68d536-3a77-41d5-87ce-a6e93e8c5a3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf14f55e-9d66-466c-a4bf-8132498cac1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cee0aa4-be80-415e-a030-296011e003f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8987f401-97c2-4ccf-b8fc-4e2bd9ff15f3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4302cbe1-1eb6-4fb9-81f8-4e1e119bf762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff1c769c-0dde-43bd-b903-2f244e342a07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6f26978-1f78-4696-b0ff-ed5caa4e7131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "27244121-b0f1-4c6f-acdc-deab6ee8a64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9245b4-8eba-4f1f-b5f2-9ba03cc18027",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a356c10-8cf5-4b8f-8558-4a44745517d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3537df6-1b09-45d7-a062-c1a1f68e8eb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8301950-6e92-423b-b45b-0f2edfb50005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "867fecc6-b879-44b9-86f4-25451bb2151a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1edd0ff7-bd42-4fa6-a979-069551979b6f",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a4bd9e-b874-44b4-83b0-855b61465a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1ea71b4-9e6f-403f-a611-98fc1be12cd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5e123ec-e9b8-4302-81e3-f61c1536bd8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c35e64-ca70-4a9e-b4fb-fb3bfdffdee3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70221d43-00c2-453c-a1c5-8f94f3b34c5d",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c367b9c5-c6ba-4318-836d-c36925fbf54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db82eb98-db2c-453a-a7b0-7815f484f02c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a91c9a9b-9d9d-4caf-a3d9-6b23e6adc09d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca1cf781-1572-4b39-907f-aff8625c28e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d517a800-d7c3-4ca0-a7a1-3301e2e22763",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e322bfa2-3d45-4b61-9aae-19a6db4ecc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4cc4abc-722c-459a-93b8-26e4ed38ad47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d72a1cd-ce60-4ea5-8bf0-0efa483ddd07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d0f72ec-c8f6-40e9-97cd-ac16aa691edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "076891c7-deee-4fc7-ab11-4d655af20a98",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6adc5a8a-19e9-4147-a38c-2e9841cca92c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1acd31cd-0cbf-44ef-ad08-e55c94651199"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c0fcbc-c163-421b-82c8-b661b28587e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e64440-7247-48cd-a9c9-f9b8d97672ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c5d8ba-6cac-44e8-b399-c08fab7701a8",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47367fb-8f67-4def-908d-e7a51bae4d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d05360a-a6e1-4521-8668-2f1bb2afa8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5975a60e-b9da-45a2-87a7-c5e4bf33a59c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "675361f4-a4fb-43f3-ba80-78ba45fef0e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "539647f6-fcc9-4a69-b549-e9aaacee8ede",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1057d7-d9f2-4868-82a0-6dad0ccb4ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ef83167-60f6-441e-8d8f-5f046f6f4114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc75b0ac-59a5-407c-b468-af1d9a33b649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25f8d72c-e8c4-4abd-a5bc-f58ce97b4ebf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3773c0aa-f766-4f52-a0f0-3d1fe847163b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fd37da5a-65d7-40b5-9147-25b32f74ae3c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee82cc5b-1390-4397-aa6e-46096b6bdb9e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcb67a5-a531-4c8f-b68d-ba0500995e3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b14eb3e-c149-43d6-bc3b-dbe9d14b7913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c546885b-9849-4950-bb2b-ea05eaed3a81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4ef9292f-683e-4016-bfe2-b4e1a3fbd31d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ebab07e-badd-413c-8c7c-899714ffd97a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f541a7a-071c-4d38-8cfc-c4c451b88e0f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ceb06df-cf6d-42d1-a74a-6f1c8b4340b1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7471afe1-1115-46ff-a055-e8c38018f53a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "92e7dc10-169e-4e3a-ad1f-20dc65b5af6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e25ac43-2e84-475b-aed4-f3a33b9a142e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b27b4dbc-1265-4986-839a-74e97ed3c684"
            }
          }
        ]
      },
      {
        "id": "852be20d-f827-4b4d-be53-02eb10800b89",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8be51575-eae2-4c69-a4ae-ed774d198aa7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ee8b03f3-0c3f-4069-8fbc-fb2bdd686229",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aed113ea-5e4f-4562-9039-cd109243ce5a",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd676b7-0317-49ed-918a-66097c1d3903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f869ed1-8838-4010-a9da-22f847745fea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f67ba05-f442-466d-a062-1ca9fe8ce292",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b827d697-ccbf-4277-82aa-631500b7652b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83e3add1-2305-4a7f-abfd-d42b6f4b9db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5cc0f2-4b43-44a0-a972-c74b37cef220",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5a90506-8521-46b5-aa7e-fee83b121047",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "740d6655-99e4-4160-87b3-f6dfa26641b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5120bfc5-6ed5-4c0d-9a66-5f7b88943b31",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e9a03f-0777-4c32-89f0-ac64cba65c92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2a294aa-c327-4988-a6b2-9933c9f33f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "017090c3-f4c0-4782-b6e5-3dc88a0bb2ac",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6c37ec-59f7-40a1-9365-6cd35ed20675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8bf9b5d-de8e-467b-a76a-a5030d102489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782be185-7a23-493a-9d3a-bf5976975c83",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ec27e9-154b-4e1e-aea4-699c87d0953d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9c3263-bb36-47ff-a48d-84e8ebe545f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67c01ef-25be-437f-8f97-cf7f883e93b2",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8a315a1-33a7-45ed-9f76-6e1ddcd75362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d719d199-4b8e-4b81-a355-b46495bf10a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "367dcc15-60b9-4de0-9996-6237e18f127d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f4ce168-c8b8-42a9-9f4c-d2e2cb636394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeeb5eb5-8e72-44be-8a02-449f6baa03ac",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ac4393-2e3e-4b61-b00e-68fd198381af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88619164-7db5-4424-a08f-a6cfeb654503"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3c93053-b758-40d7-8b6a-1d7f46b9d9a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36531520-35d7-4c46-aee5-8d29c89de5ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c85212-435f-4ce9-b4b1-9dd83ea0ffa2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ed5bfd-414d-4ce3-838b-353644bfbe28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd5a2b5f-5e14-4505-94b8-b59957695ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afb61d1-2ccf-431f-8fe6-f1ad6b87153f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fcc7eec-f2c3-40c5-8381-c4fda55ab122"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bad8c29-7d10-431d-92e6-00ba8b60b671",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b504276e-295b-4f29-8d38-ff60aa654fa6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d385116f-ab5e-4e3f-8c73-a6644bfb40e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8509a679-6f26-4d4e-ad64-1898f245f4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559b5786-d168-4217-9dad-0c2d3c85e928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865845d6-5b91-4790-bf0a-4a5923c54df6",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a73c221-12cc-447c-91bf-108b1a22e7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dddcb07e-fbed-4051-ac70-f3cf6a83a749"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b05f219-8559-4a79-817f-da7e68fc0335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ea67809-daab-4e70-b95e-6a3fd095330e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a631fee-e6c8-4e52-833b-aaeaea1c56e6",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d89cbed5-5ebd-47e8-a8d7-8e50015f2126",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91dd9101-368e-4244-8a58-374aa92895d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49ad3ce0-3c0b-4774-9227-d5cd2aa28a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89600bc-53d5-415e-9b5b-fe1964d2a47b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f677eae8-7f0b-4f3f-9e7d-8f05831ab14a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b3ef52-c33d-4837-93ff-edded0e2ddcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87c77e01-b865-48e4-b40d-7ef91dd768f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf47f8a-0d2d-4cc4-b687-def5b7fa6d4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e0ebd56-0f37-4d4b-88a1-83dc8fb8e817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502f18fc-564d-4b39-8af8-294b8692a541",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddbfd48-bf75-44e1-839e-1cdc0d99574d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77d17d6f-51da-4cff-a342-0717aa4a6344"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0407454b-af59-48b8-8328-f1081fbb39f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "486f4b88-40a9-4278-a295-7324cb11daf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4068c85c-5e67-43fc-b7cc-da80e4059a7e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdf03902-d87c-434b-aa5e-5f3645348ea0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea51f82d-3ea2-467d-9b1f-50194055d7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b9385c-7ac7-4c22-9345-e2f5bbc1c231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61d8ba65-9708-4c4e-952c-ac821718595c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727a6ddf-6097-4e42-b0c6-7861328685cc",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223bad5d-cf22-45d5-939e-31e9c3b83e5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed960a28-a836-485d-8363-b79f7ce5ed38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19518be-0e2e-42bb-9742-56d6efa1d641",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a28e14b3-0594-4053-833d-4383981629f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ac008e-902d-4ef0-ab66-bcb89c4d09e1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be72bdc-036d-4dad-81d8-b3b6193c8ce6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57b31151-4fd6-475d-9484-f0da41f658c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "495210c7-f6b1-442b-99ee-5796832cef2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "965c78a2-064e-4b85-ae07-32a75f4f4ac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4be8ad31-6c20-46b9-bff9-1f1f8a5706ea",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad480c5a-1c00-4e7e-8a8c-bfdf8f502a56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea1250d7-1dd2-41ab-b7a1-3c886dcca468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "392c469a-5fe7-4cd6-8429-47ccb9f6933f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f098559-4525-4b26-ba97-5e226d4f4a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c37c39c-da67-4534-9f64-7a4467b01105",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56134129-b0f1-4eea-aba7-7307ebaceda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "709a56ac-8a59-4fc0-8f98-e09817969f25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94d25d20-9b7a-4920-a054-752f2ebc0b6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e9aafea-11aa-48b5-8cc1-30a36131d15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b0d11a-60de-4f53-bf79-5bf4c5c918ad",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0192cd78-1fc3-4d85-80b6-8ecba5760db9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88877eef-4158-444c-ab22-7e3745fa6dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842ef637-24a0-4195-9cd5-be8397cd84e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbbf0384-5b66-4a52-bae5-f340de9b94b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "450a10b3-b9a3-4ef8-8cb6-5f69eb790604",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0910658-2673-4eb4-8c03-2a009359142e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1ea62c1-2315-4bff-9d5e-77c5f6611a19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1f5005-4956-4e88-8436-4487cd9411cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7dbfdb9-d86a-4b39-b536-66870509991b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28157b6b-849d-4ef0-84e6-490f5b4c5a0b",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce4ddd0e-3cb8-4cec-ba14-0018049bfa4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae68e00-6029-41c4-9a96-191a97aa69fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24f575ea-a942-44e6-9054-c4737b04bd08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3570340e-c434-40bf-8dd7-36cb273c0747"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecba3589-3928-4701-a7ba-1c7890170794",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db975ad4-083d-4dc5-afdc-c1c7573fce39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87a5f062-13fb-4946-8362-fcf261b4151b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a19fa3c7-453a-4d67-9e17-28259f7134bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ef08594-334e-4ddd-9800-aca289bdfbdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b05e8b-8650-4a01-b416-287a235bf701",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e668ac3-c5e8-46b3-b6b1-7c393d406d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d591e943-0cae-4250-8fed-7b470169df99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da1149e-157e-449e-8214-408874cb30e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b122cd-c876-4750-9e8e-6e99c2152814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1c05ba-973c-4365-ade9-df29f31eb53d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82420e09-a057-4329-8975-813bcebb203d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7aa2d7-c32f-409c-a279-3037c9c33dab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24a3c060-3c0a-4e49-bfd3-c52717cafc2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1e7100-056a-41ac-8956-22a79e9925ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7707989b-48a7-4605-9fc5-222355e8f201",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4230e8c-5bc3-40fc-a0f6-7e776e00db0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88ab53bb-5cf3-4fe0-8c8a-9525bd294c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d9afc1-42a3-4f1e-8cd1-cbc59215459c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "215210c5-854e-41c2-9d78-b11387fdec18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db300963-069e-48ef-98b7-9a15bc93087d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f98134e-09b3-4ceb-99b4-e45e0ab1c300",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c6ed4ba-ede0-4fea-9396-ee9c4fe47158"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d5f9c4a-9c7e-4a32-bac6-33dd9e1f617c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d8d4ab-84aa-4840-afa1-8516725ce9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae969f91-2565-4577-90f3-7231f176e3fb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff8c3b9d-75e5-4791-9427-751ea58356e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ec4928-fc38-4e54-a28b-d503092398fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd1f798-99fd-452a-8039-12fe5afe372f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d757c0c6-cae9-42f9-aae3-710d18ea0294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63e314f2-d40f-4776-ac69-7aa01b5df2e2",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5049d322-6547-457d-8d3f-03061c1fd44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d71c8635-1d0c-4eff-903e-b652652b27ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265d1f65-52f9-45f7-9f7f-d403e7af2f6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cec38a5f-05b2-45fd-b919-3c7111a72a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d2c6e1e-f33f-4ea0-869c-7400dbf2efd2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f69400-13b6-4240-aedd-2077941daa6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba1b5e21-5741-4066-a078-f41df8f89228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c840510-482a-438b-90d5-47e44b8125da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae85058a-f9fe-40dd-ad8a-bdca8c35aab6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e06b105-a59f-4db1-9b8b-5703e42c62f9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddd1804-b3d7-42d8-b30c-eea248aab8e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b59d0572-365d-4621-b0ac-6e2a5b2860eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b043c47-e7fe-4942-a6d5-8126e9d5e215",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76e1463c-5390-4705-8fdb-8c2c340cb301"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01a624a7-3477-465e-98a5-b5803976e0b1",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c06142-e886-4cc9-8e1b-de8d42ec1ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d46af76b-d5b8-40ad-8791-3ec9726e167a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e126f7b-19ff-41c8-9442-f9cf35f06903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4db82492-3651-4d17-b4d2-9f64c1b991af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "665f05c3-71a7-4f8e-93f5-13c353d2aac2",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713ca51e-35c1-4829-aed4-27b45120e103",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47ad394a-ec84-4895-ac85-e4fdeee56e94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c692dded-01f7-458d-b197-245b058ad059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33f41e1a-8cd6-4321-a85d-dc7d7aeb0c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4944718c-84bd-465f-8056-b4ea6cdd3280",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e82422-9d11-4164-be6f-b4eb698ff3e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f8c86d4-5ed7-47b3-b0f5-a1a23cc0f117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4258243d-5af1-45f2-a39d-8d09ed3a5a15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf391c9e-f28c-4205-8cf4-8c322ef85756"
                        }
                      }
                    ]
                  },
                  {
                    "id": "447ab33e-c60a-4607-be14-d689ee353902",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0383ac7-0d17-456e-856d-9a6defce05ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "601b9d96-acdf-496b-bc51-0054f0412182"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8bf9ab-1f3c-41ae-a7ee-6098b79e3e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fef3f0dd-c3d9-462b-994b-f90780a730a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a110526-3425-4b46-828c-72d9d8136921",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96efc08e-a86a-4223-8316-81e029b34419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adabf86-49d3-46da-a148-b2040ab59c98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4b7fe7-9a27-4e06-b091-fd24bfa909e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ccfd148-74d0-45f0-a105-22e5fad30a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f9bd104-3927-40e7-9751-1d067fec41e8",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50f9616d-78c4-48cc-a266-399e342b5ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49afdbb8-48d9-431f-a956-b2e5706864c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5993f8a6-6da4-4846-b4b4-f79f52920ddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdff05b8-7b09-45c8-8135-7244b58e121b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb3e853b-7fc4-46e4-81ce-bde9f46aa043",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed122683-979a-48f3-ba3f-33ef054f8442",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bf23417-ddb2-4556-a079-5200a129e2b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b04accbe-dc66-4f97-a8c5-84bc0a30cce2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ebf1e00-1f02-470d-a4d4-946cb7f08632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc82b833-7226-4d71-ba69-5fcb5d66c53e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b08da3df-51b3-4240-9437-9df9572a920b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3dfd94-f846-4a80-af43-4f72dd1f9c63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7657e8cd-c8c3-4697-8de0-ccba77fa7e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eacec23-f0f5-4b12-a17b-4b30a50a05ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bf6852b-35c5-4649-b0d1-46bc686a9052",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da2b501-dc26-4f1d-ba12-3f9969643194",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b869747-2571-4540-add0-8434f9d32009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e359b53-4555-4026-b99a-235b717453c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8027cc8b-ffcf-49cc-b3fd-5655a8832a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f411bc4a-9667-4e87-b584-7489a3e68152",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ba0b55-892f-487a-ae6e-d6cc8c87f80a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4597d965-cbec-4915-8530-cd1d687c41a1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8b36ed-9f86-4ac9-92a8-0cccc36bcec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75a43256-638a-41ec-af96-de9d4fc5b1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61e5328d-bd77-4e37-ab96-04f0fd6a2f5f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963dd0f4-6c98-4dff-b962-33c390ed9527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5311200-8467-4df5-ad3a-be013564e89b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157923f6-439a-4eb5-a0dd-2059ede65f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "001f5bfe-e868-4e74-9459-06345442b17c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7f6872b-a7f7-48c7-8b98-925b13ea6a1f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635a843b-839d-4b53-bf8c-2e9eea0b9eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50ede0d1-7962-4f11-8ede-31c0a5a06f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cffe87-a727-4994-b991-cde728b3d234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49fd228-671d-40c6-9192-1be6cb82a5cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551a6b45-5671-4438-856e-5cc2f824aa4a",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefe50e9-2a76-4e15-bbb7-791f75974d6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "742a3402-e3bc-43c3-9625-5796a3a4930a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893b3f25-9199-4f4d-8c42-9eabd226b8d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87af2087-2c7e-45bd-86ab-752436f8e8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be9dec9-1cfe-493f-8a86-663ff5abd894",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8ba93d6-be77-4e81-a246-b86c4fa45f5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da27f4b5-9d3a-44e4-86c9-489c8a0461fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de9abed-9ef9-4546-a6f8-4509010ec303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea56e468-2ef3-42c0-b2c1-b8d353fd3f7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e37ce5d4-5937-45ed-966e-ad751ceafe35",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fda3764d-c900-463b-b044-b0236f0ce2dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b98abcae-8ea4-4153-9e1d-80135dc6aba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f523c0-e1d7-4b87-9c28-0dc3a6192e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "501e63fb-a87b-408b-96c0-c3bb1e7376ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae8d3c8f-461d-40d7-a766-b8d5688862ac",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b1baac-4234-46d7-89bb-9da13bdc8c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0724bc4b-7108-46ae-8ad9-9cc2878fbb1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cb0c03-27e8-4315-85be-a7541cd637f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd67f244-8c02-44e1-ab87-d3eeaf61d871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61717131-9fce-46b4-8984-0fac3f25529b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3be9c21-ee81-4bae-ae09-0a910644b4fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39e50a90-082b-4619-a38d-9cf3a32e26e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "833d43c6-04cb-46c3-a5e8-908fb1d513ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a884d758-66a3-45c0-8e48-bede32ce569f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b57b1a5e-deca-49a3-b8e8-fb1a4dc6d557",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06be35a-430d-44dd-8f63-13e40a86311d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb8ab3b7-04a2-4562-b7e9-4ca7c763037d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb551b5-b2a3-4672-96ea-3932a5705c32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3305b15c-b582-4af1-88f4-3ba0a4b7a8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c18f755-95a3-42a2-b4d6-bab13cf817dd",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028eee87-50a3-4f5a-9dfa-51b724bf7e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ee2e5e1-ef99-4399-98cb-b171fb20b9f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ccb68c-6d2b-49cf-b755-7a4a90e09254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "219476c3-71a5-4d70-a5d5-56134a42540d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff1443d2-abea-4af5-842c-06b0b0a01550",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa88c97-f32d-4bce-9dcb-5fbcb5a8d6f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "359e1998-ac0b-4fd1-b8c9-067b40c74cf2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2593137-8806-4999-933d-4a5e05a206ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84e4e3ed-6d96-425d-9682-03cb7c380ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de5f5432-4644-4821-a89e-bc0ea0001aaf",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd11e36-72fc-408a-9b5f-2d1e94ea21df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e532476-00b4-41dc-acc4-f3883ac86bfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ae0841-183d-4779-a888-8ee386d3627f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c8c434-7702-447f-b8e1-cc2e75eb1191"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ff5256-c4f8-411a-ba52-a401bb712dd0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05caca87-34a5-45e6-b7c6-bbc884e7adf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55981df1-3f90-4720-90fd-a62e02dcd5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1d8fa5-7790-410e-8064-72b37157a303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2eb457be-aae9-4e2c-b02f-3d1269e7d1d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7de489d3-95e8-46e6-bf7e-fc9f54954907",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df4b41bc-1117-4caf-9b2a-f8fc6b2e2bbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "935c5fa1-8512-4ab5-80ce-fd4ff6e32d8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c15bc9a-31a0-462a-b70b-0db063b2732d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7aa01e-ddb3-435f-b468-11d728c25e89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c82d5d2-2c82-4498-a2ef-2fbcc43eb5c4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bef765f-57e6-45ef-9316-809aa776ea77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d94f277-2b5c-4fe3-9a7e-b267f9f1788a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee35c255-24fb-4f63-a825-e1ca69e6d480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cdb401f-8be6-4353-b009-401614788762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ecde320-f0ba-4151-ab79-6505cd7e879a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b774e0-55d5-4b6e-bfdf-5563b7b9b9b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef040d34-3b2d-440b-8c61-55499dfcea8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ad53bf-f2d3-4482-bd78-c45ed8351cce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c380ee51-efc5-4ce6-9047-2e2eef8183b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5202db-2325-4c60-b83e-978ee6a76e52",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c21fa5-3cac-4c5b-942b-48c5cb223b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea4b213-7285-48da-bcf2-c1afdeacba68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c37374-7c28-415d-897d-a7d642c885be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac025708-81b5-48db-b604-1f8547e0bba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c26105-edf9-455d-ab56-f5f0b125c3ac",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c8479a-817f-4c37-8ef9-04e240819a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3ed4b0-88a7-4f82-b42b-6574a2b20f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81275eae-b7ea-4ff8-8d8f-400a69c56367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a83ee475-4272-47e6-ba3f-32dd410c4f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d900413-e72e-4342-9fbf-6dcb27d4c95d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af51e11b-22ce-49d1-a246-43c4c250aed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae3741c-6acb-4ed3-9552-b09ffd3992ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c21279-677b-4e0e-b765-43d6cf5d1e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4849b83-01ab-48ab-8ad9-1ff3b4a7e91d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6687a62-862b-4c15-8f8e-49adb80adcf8",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6702cc01-1096-421a-98b1-0cdea42cdc1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e2b3ed4-68a4-4937-9e62-eacb9dc7f84e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2a14f8-f98c-4714-a5a4-6df04ac141d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1a285a-9de6-42a6-88fb-50f76dfc6b6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da421ef6-ed28-4628-889c-ab8193055d12",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c001d33f-98d2-4750-a3ef-c7cce2092ffd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "260a99ab-9a6d-4bce-ac52-5e27b774b4f0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7b8c2-c7c4-4832-bffd-5b67cd1ce303",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d3c328a-3f42-4bc4-b687-49dc9a9c569d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9edf95e8-8515-4c14-ac57-4a4571206303",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eb4184-56ca-4734-b95e-212c0fa0a624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a7c1a16-d0e7-45e9-875f-dcb86ebbed13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e7b83ea-abe8-42c0-9507-d8ff9ef0acba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d13018-0138-43d7-939e-298b1e451f80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff26dc1-9500-40c0-ae7c-b5b983a95813",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e78debbd-4857-4e02-8d96-b9954e9ace5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dba9578-d11b-4ace-93db-e4be610ff988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "569c0e1d-87f7-4add-9d74-1981b054adce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703b46a6-e4fc-462c-bc59-9248b4cfc12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d16a6f1-5b7c-4e17-b874-5e3900e8e8ec",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e776fa9c-23e8-4f28-9107-84b4cbe883a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c00ff2-0918-472b-a103-66d0f8b3aadb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a270737-f6fa-4f72-9bdf-f0013b5318b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3520599b-bfab-4fe6-9196-9a7043911f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c28c21-47e3-47a3-950e-d571ceeb7c84",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087e764e-fa00-454c-8d85-b6491c242d11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f334a5-83a6-42aa-a862-fe8056bf80c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd16a87e-a2bd-4cf2-a6a4-bbd834d06053",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1749b071-9b42-4d81-8be4-2add811100bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a749472-4272-478e-96b2-fce6178051cc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154c0119-3499-4fa8-8dec-396933a93fc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4acbeca7-b2f4-4656-b25e-687181a23ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95acb24b-db76-4a45-b3b7-5df6c76473a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5dd53cd-890c-41bd-b883-83f98e82660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e71131-3b71-4f8e-96ba-86f93ef76dfc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "701a1399-5e0c-4e87-82aa-f73ef0330dd5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2358a5b-d016-4424-86d0-ca8584407e16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66d52456-d834-4dd8-86a8-a4aa48f6bb55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88d0e68d-c2d6-42c9-a70b-4dab7f64691b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145a9f7e-8cc2-4599-9ca0-a460897c2833",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a62a97a1-a6f7-4688-a6c5-757a4b132382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a24324a-4a31-49c5-94d1-76469b83f3c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113f5b12-dba0-4283-b4bb-2812bb2e2dd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f77dfec-2763-4a5e-ba00-75fc3f454804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1860e4-da6d-4ef2-92a8-21b680c0d15d",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "079ca768-0264-47ad-81a8-b791c95e88db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5e3cac8-08f3-4414-b8ec-cac01040ef62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da89c6e-023d-4b8d-90d9-7aeef66a459d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce69068b-b3e5-4670-9a2b-94b516782c1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ad400c-b52b-49fb-b763-b3754ac9bff7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f2120f2-f2c2-405c-addb-388568f19d69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c3d6eb9-52f7-4380-807c-319237756b9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff2aa1c5-5fed-484a-b376-93a27e84dadf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada7f598-7408-4963-a48a-94f5f24bbfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d3b820-3770-4d5c-b528-daff1eeba875",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d1cb503-407b-4a91-919a-50a11a2d8e14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37edd39a-9e8d-467d-a41d-b4397f356506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "911e4477-1669-4c67-bd4d-55639446d3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c0903a-e195-4998-a746-01da0a9bebb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8499c476-ab2a-4682-8482-cd4cf555e5bc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2403ed4e-6b27-4144-a4ed-dc0ba726dc04",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec5225d1-76e3-428a-ab40-65cbf0a9492c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a635c86f-b10b-4e4a-8236-0d60513584f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94b1b57-85c7-4d17-b030-6977e9490bed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07342bbe-27f5-401e-ae5c-f682c7408bde",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03f41233-842a-40ea-9541-f7aa72ee6da2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "477c926e-637c-44fc-8334-9b9656613b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64998721-a975-46d4-bb30-7aa4bc164eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97680840-5a56-4ee3-987d-1fdbe0ce8f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de8c2fbd-f3fb-4092-a7a8-4f25a17b829a",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d711fb5-0beb-4c05-bc98-9c53c4a8b781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f27f00f0-d083-4c3e-aa10-246d6c879ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88a49f9e-5b56-44f7-bd18-85e7312f9d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e941ca0-bed7-46bd-8164-4cd1bc909624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b874f38-878f-44a0-bb19-61bb3a0fa383",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8c44319-7e3c-44af-bfbd-71ab28b7e986",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "166c8257-4dfb-4336-b229-4638a7ff0844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24d4d59c-ed09-47b7-8e54-fb509a2e9d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534c9dd0-43b3-40c4-88ff-8db8097a88c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf969812-a445-4ae0-8b77-a28a3bb00b8e",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5324bce-2da9-4e16-9215-081c7cde0991",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "049c4455-987a-4098-98ad-ae0a5bc4caea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e3cdfb1-cd12-4028-8da3-aac603361e04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e98d1c-1826-493e-9c3f-87b6f2bc8587"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ea4eda-c849-4775-a3e8-1411dc3fd852",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e918430e-7154-41a3-a778-ff11cea6efc6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d7bd140-cbdd-4b44-9616-df322dae23c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff36251-12dc-4f5c-bb96-27ea08966b58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "289db254-7b25-4bec-ae56-4c9e9008fdc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c84847-33b6-4fd2-a9e4-a57ec4cd57ed",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36febf31-440e-4cf8-8cdf-16e1b77a53d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3b85a522-c3a8-41de-9a29-6571f3c093ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeef9cff-f0a3-496e-a869-d01e532f4177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40702ea8-e2a4-45dc-b1e5-fa45266c4852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7eb45fa-21c4-43ef-8c12-21b49b226640",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e617760-58c1-4533-a284-9b6d1ce235f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3bc7187-2984-4d0c-9d37-077df95e5830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3b8b7e1-0e1c-4b90-b54b-83a05b3d3894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dadb78-606a-45f8-bbe5-c28aa56322bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220b614f-3d5f-48af-8605-a08bb55c4584",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "331823b1-f353-4c00-82d5-040a68162c28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c94e295-d056-4c40-94f0-3e9ebb4558f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba0ace8-d9a0-43f8-8220-30e637b4c596",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b9605a-06fa-4128-b68b-7b8f32106447"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab255fb-640d-4037-b6fa-7d993759376d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "274b68d5-5c74-428d-89b4-a2ba437c6c30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7523a9a1-9387-4817-917a-ff45ac9c92d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58eb068c-8a1a-488b-baf1-94bce87a7cd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ee25209-b8d5-4cb0-97f9-8cd3ba648f60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff7d2d84-8a8f-44aa-8a66-c39156f9bc51",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95d95ec-c8c3-47b1-8997-5e74a7fa9a16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2a025c9-8b51-4bd5-8fd5-e23a9a9d91bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5561ffb-b4da-4ca3-b59a-2357246e77f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7cd534-1375-4b55-9909-42dbfd9d94a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a330dbf-9e7f-41e5-a400-fc63d528a4dc",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca49da1b-8747-4fe2-8a19-a7bb9487be59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74e0eb4c-8be8-420d-800a-d7f875953815"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eaca2d9-a1a7-4804-9c95-f85a58f239c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a5e0bf-848b-4352-bd0d-8db2de4b0bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f9d20b-edd7-471b-b74f-fe70334b42f7",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71216a58-2df9-4ad8-9ba5-7c0b2d11bf3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c52be4ac-c496-4c5a-ac0e-6e3405111a14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4781484d-58a1-4156-a470-ee68b32db2bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa03b858-3383-4722-b354-8b2ac7ea9b02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6c8e5ec-8639-4277-b5c8-fec6da5d72f0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a29ca358-68dd-424e-b78b-d59ce70e854a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eaa3a55-5650-49b1-9360-bc0dd24cd304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d9c2582-b5a7-4fff-b0ea-3aaeb9a39d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f979aa7-f43d-4018-9a6b-0b1e81027ab1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd414b57-3141-4e93-8547-e5afcb4b0eff",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb265638-2286-4b6c-94c7-4145b9247262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9547167-398c-4b7b-bf93-af8012eff9f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1947ef-064c-4042-bae7-7f58e42374c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c42c311b-a591-4264-a068-3cf909eeb2fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b57871b-71fe-47a4-ad49-86ece77b2f60",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e46427-2fda-4e3f-852c-a7b4b1af42c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d263faa2-8b12-4a14-bd8a-ea5bbecba215"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebde0c2b-9688-4d16-a970-e4359d2a4576",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea1d5d9-de72-4c9e-97ac-c698ca97327f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c051819-eaa9-49ab-8992-3be6dd1c00e2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460b5f22-219d-488f-8340-c5d38d243afe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0baa50f6-ccbd-4502-8270-589e637b9ad7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a49d4e-4f5d-4fae-bd29-c1236e219041",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef5bf918-9c6b-4d65-9dc2-7025c43fbe50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296331a1-ea36-479f-8925-b3750ac5e2ed",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b919dd14-2b36-4e8a-aba7-f46d8fde0bab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658607a7-16c4-4e9b-a6c4-5ab985867969"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd835938-f8a8-46cc-a02b-68122588f1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767b41c5-5c23-4486-a885-31bc8e29b2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a45f93-f76f-43b2-b6b8-75ee76b961e7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c45b740-8db2-4041-b095-ce32e9a49982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3565eaef-422c-4afe-bf5c-ec9322d46ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "965aad1d-a7b1-42bf-a7db-04a9b0e0960d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28233619-407c-43c0-918e-33d894121d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f81dcf5-f306-4dc3-a355-7b282ffbc66a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe33e8a5-cd81-490e-8c3d-4a840957ea2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e98eece-aef6-40e0-a2da-f7d93f7526ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "372ca6b1-99dd-4835-8ff2-8c095c5aedcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "423c1e45-44ab-402c-83fa-0bdbb566aa76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5da15324-4ee9-4f41-9df6-cb5f0f842ddf",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdd0618b-ce34-4f48-96f0-cf28f89099b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4ac070-e14c-47fd-8967-ba09416d94d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048ff2ad-977b-4514-bfb8-d3d36b0ea988",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "609761de-6759-4d9e-b94c-df7706f8fab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bd8a4f7-6b46-4279-9e4f-a947c810e8d8",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a59890-6147-4201-a5c6-8f636cfb0316",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4ebd396-4c1d-4ecf-8ad5-27839a160592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9195f900-fe86-48db-981b-decbf4d4a84a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481d7cbb-5fbe-4006-ba74-45c62f270614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8364a0d5-515d-4a7b-92df-40214c0fee09",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9810f5c7-0e12-4ebe-891e-5372a68ab53a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d7f4b72-fdbe-44ea-aaaa-cb3e489584e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "714e73f3-456b-4f45-b5f2-5b1ec11af4d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e168368-169e-4ccd-b28d-a5ccacbaf907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "120bb32b-17a9-417a-abb9-128fb01281cd",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f324b64-58ef-45c5-8692-3c24e70d14a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2defc7f3-3474-4621-868c-c56dbd43d007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a524cc05-c020-4f40-b33e-ac444f2f180b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb304f3-2594-4372-9471-9db6857ad69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "249a069b-1999-4e7b-b4ad-44cbb6faa543",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072c5743-efc5-4051-8a97-feaa3a7ac25f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afa268f5-5b44-49bd-bdc4-caea28afeace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740f0119-18dc-48e1-960e-32f8719e3fc9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2f0a8e8-724a-4dfb-b5e8-f155daf17128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc503ab4-68b5-4221-a531-81baf00250df",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b93144a4-c5ee-4b6c-8f32-0da8cce00048",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00d96860-3861-43ec-9756-d066b701ce1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0ab0dc8-93c7-42a0-8663-06d55965a871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ff8c110-0331-4bb7-9d8d-8d98053c373d"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ced77973-c599-454c-a000-a17b8cb55a29",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01d37ad3-eb5b-4046-be67-837eb671516d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c232ce58-cba3-4beb-af5a-6146ba171234",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "18776ca3-ca13-4b32-912b-3542e8a6b3ad"
                    }
                  }
                ]
              },
              {
                "id": "5b65b41b-1fed-468d-ab9a-4c871fcb7d57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "367d0577-5a8d-4fc2-8f54-0cacdf229cec",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e75433a4-9f4f-40c5-850f-2e52b56a9b4a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "b21bcad6-05ef-40b6-b1c6-63a962f3e872"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26135575-5837-455c-8599-5d135245db54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "607f48e1-e596-45a3-a6fd-5920cbe5a385"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4025784e-e971-4f51-8b2c-55a37786e26f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aa7409e-3a1d-4aa7-9c90-c0e25fd29104"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dcab8396-ce30-402f-af57-fde03798840d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0e6f064-6e38-4a0f-bb04-d4a571246416"
                    }
                  }
                ]
              },
              {
                "id": "49e9a4ae-0b3c-49d3-a81a-9c6a7f593a1b",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9f2e171b-5bbd-4d2c-b6bf-a99e5e6efbac",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ede6feda-cada-496e-9137-d7365cb6a958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "d8f31b1f-03ac-4553-b746-8df242ac4161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3f00f7a-77fc-4f1e-b366-6f16b7b81d56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "025bf543-7ecf-4792-a34c-c36a1e55ea10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9ed102c5-d0a3-4a80-b1ed-2890e703c972",
            "name": "Positive Testing",
            "item": [
              {
                "id": "01fdbd71-b8d9-4b5a-953f-db2c11f1e5c2",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc3bc9b7-eaa0-4786-97a1-ad2989a024f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e94b35b4-57c8-4819-baa4-1948cb3e1b54"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "11690fbd-c886-4021-a3d2-fd7c05a81cc1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a095612-8fe8-492d-9125-5f4cc45a21ff"
                    }
                  }
                ]
              },
              {
                "id": "ae017f8a-1d37-4bbd-b3b8-28220a7ad3d5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "136c6aea-6415-4421-8df9-6d19154cadfd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ca915663-e41a-47c8-9048-4fbf33c4fbb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "066f911b-aefd-4a3f-9952-459a9d36b91b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13f1f68f-abca-4ce3-b006-922f75c92c74"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30d0dd14-1d56-4bd4-8994-baf6848b9d6c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5f41e994-47b9-4717-9d0b-725436916504"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "849dbb8d-c74e-4d27-a1f9-7bb73965f001",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6f82d95-5410-45c8-b7d4-31e067e3aa7a"
            }
          }
        ]
      },
      {
        "id": "35788226-3430-4223-8645-98bcdf3ea274",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ff93569d-b642-45f1-90f9-6170d3d27aa5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7aa99db5-6504-4d28-ac56-bd036df3a780",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8340697b-5337-4e35-8dd4-ac9db7fcbad4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff6a06f-e606-41e5-ae39-f3a5bbb17b7b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "75ced5ab-a879-4a7e-8fe6-05c816f8c748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2de3145b-a6eb-49cc-96c5-542e31db8ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "84d295b9-7543-482c-ac72-6f1731b32078"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d91bd934-d696-4bae-be6f-558d49025a91",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8ab73a1-1306-43b0-be33-1d8eb06d93f2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a8d767eb-3d12-4734-82ff-ffccee62b35c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "36cc6104-3854-45be-8a28-3fb65b2a9557"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "764ea518-67b9-453e-ba7c-289dea6992fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "68a5386b-4591-4897-abb0-022a1d624f96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85302830-c56b-43fc-ba1e-822382025b2f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "eff6a7c7-b308-4ec3-81f0-9380f69e2117"
            }
          }
        ]
      },
      {
        "id": "00c8b279-9c6d-4bdc-9ee4-7d6d412dad6e",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "3f07cf79-ed7c-4c33-93ad-f337b747a48c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2858b91a-beb7-4f7d-81d3-eda210c5634e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2dd43c8-839a-44cf-b664-0a258e62a491",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "317a445d-4a55-45ba-b73c-edce759443cb",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5a4a2ed-2127-45b9-8c6b-d31f33fb8f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1e07ad-f6e4-4b12-b0b7-744a18133f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9730a980-3567-4c6d-aab2-0182794a8128"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc7edfcb-c937-4d14-b579-78746b5a53a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3210e1f3-3864-4617-b256-b197371d47a7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4505154-b27c-4347-ac82-8e5bbcf38529",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5285bbeb-7d41-4376-b220-b3be0e414917"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39f95c64-5575-4e29-b49a-6b9094dc327d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "17950e39-365e-40c1-a9b5-07878891b065"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85a399d5-1c61-4194-9997-85afa10ca3fa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ecb29b8-c1ec-4d3c-9dff-6437850e5599"
            }
          }
        ]
      },
      {
        "id": "bfafd4af-f74c-4ccd-9933-07733cc9147d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "868ea33d-0103-4157-a0ea-0b41cb80dd38",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bb2d5902-e174-4687-a3b7-63005dd826be",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14889748-fbc7-4e1b-828f-fd6564cab832",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ea6fff2-76ca-4cdc-87de-738731f1d602",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6354cc57-9055-488c-af05-22c7f51623f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb97e68c-4cad-456c-a586-632068fea0b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "44fe3622-6852-4ee6-a597-fa18f4cf41ad"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eb7209bc-05c3-4727-8e3d-d4c5d09201dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1c0ec721-baf4-401f-98ce-f10ffa576e6a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a4d48395-6eda-46fa-8721-7dff4552a344",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "426cb84e-359f-4b1c-b1ae-addb1c9b74e5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0698bc7f-142f-41f6-bb01-84f3f2a95303",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "047f0e91-59bc-49e0-97aa-75f6081d85d9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bc8ba2d8-5456-4254-bce6-c423db7315be",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df38912b-ee80-4006-ae17-0d6337e52cb4"
            }
          }
        ]
      },
      {
        "id": "6676e354-3b60-47ca-bfdc-854e878a5ec5",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac8b5ed6-8663-4a6c-9518-7903e2ea4146",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c117e9e-6d5d-49bb-8e15-ed0c432d6c92",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "54d3d801-95b7-4c6c-94f6-22ff590441c8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "377e0b05-e2aa-4829-a52b-23859a81fd44",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b9a9c48-5511-4e9c-8f1b-afe8b4a58869",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 90.92857142857137,
      "responseMin": 5,
      "responseMax": 8298,
      "responseSd": 589.624923534881,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1712190948079,
      "completed": 1712190979237
    },
    "executions": [
      {
        "id": "658c1c54-2578-47aa-ac56-aa3f02ab0450",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "9ba69708-8ce6-4b8f-83c6-71ab142631e2",
          "httpRequestId": "d5626961-77ae-4856-a496-f8e8952551be"
        },
        "item": {
          "id": "658c1c54-2578-47aa-ac56-aa3f02ab0450",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "286792dc-cdea-4fd9-8d63-37bc56f7e53d",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "053e7815-d1e7-4ff6-9b98-c4dbd287b4fb",
        "cursor": {
          "ref": "891e2255-19de-412d-a9ce-60d143a706c7",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "fbd49559-3455-46e4-8386-754cfe3099b3"
        },
        "item": {
          "id": "053e7815-d1e7-4ff6-9b98-c4dbd287b4fb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "21d34148-45c5-42e8-b1b5-9d0c6c013eb8",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "23c51cc4-20f9-42ce-90de-3a614daed375",
        "cursor": {
          "ref": "26d78827-c62a-4953-b151-d04ed46b948b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a4906f2c-979f-452f-90a6-0d94a8f8c841"
        },
        "item": {
          "id": "23c51cc4-20f9-42ce-90de-3a614daed375",
          "name": "did_json"
        },
        "response": {
          "id": "bb44073d-5bb7-4f43-af16-799475e42456",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de39b886-4052-4363-9dd4-3fbb23a3e161",
        "cursor": {
          "ref": "d7ca2297-9ca2-482f-bf5a-cc3840d2e720",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8ce85bfd-3065-4a44-b320-c559d279634d"
        },
        "item": {
          "id": "de39b886-4052-4363-9dd4-3fbb23a3e161",
          "name": "did:invalid"
        },
        "response": {
          "id": "4afb4bfb-6600-43e1-86f7-b0af5b23224b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 612,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de39b886-4052-4363-9dd4-3fbb23a3e161",
        "cursor": {
          "ref": "d7ca2297-9ca2-482f-bf5a-cc3840d2e720",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8ce85bfd-3065-4a44-b320-c559d279634d"
        },
        "item": {
          "id": "de39b886-4052-4363-9dd4-3fbb23a3e161",
          "name": "did:invalid"
        },
        "response": {
          "id": "4afb4bfb-6600-43e1-86f7-b0af5b23224b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 612,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e7b807-cbb6-4e66-9a33-db2113556afa",
        "cursor": {
          "ref": "6c4f9d8e-b4c8-4a5f-9390-c89a0db508c3",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "92fc6c47-6f2e-43b7-894b-f379e9c21dee"
        },
        "item": {
          "id": "e5e7b807-cbb6-4e66-9a33-db2113556afa",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6ea85ffc-7a7e-4d5d-a9e4-5139fcf3443a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 16,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7a8afa4-7851-49d5-8f19-8ee991405547",
        "cursor": {
          "ref": "9def2bcf-43f7-4885-8b57-42b0508fc986",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ad8f5686-67bb-421e-9631-2ab7400a6ff4"
        },
        "item": {
          "id": "c7a8afa4-7851-49d5-8f19-8ee991405547",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "118b9952-b5f6-44d2-b0e7-f7de7fed6a63",
          "status": "Not Found",
          "code": 404,
          "responseTime": 13,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b5c1f7-86ba-45a3-84ec-0261d80f35ab",
        "cursor": {
          "ref": "c8c17e3e-7a98-46f3-8c7c-da7d8fe9759a",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "359cf1b7-c244-469b-a8ad-e0dcef65a2ad"
        },
        "item": {
          "id": "58b5c1f7-86ba-45a3-84ec-0261d80f35ab",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "b8e118e3-1bd3-4092-8489-2945e31212d6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb25432-8d45-4f34-b296-4f2711e2a96f",
        "cursor": {
          "ref": "7a60c087-f077-4796-b157-5d177b82064a",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "abf4c88e-a1aa-47c2-85e4-c3896dbee12a"
        },
        "item": {
          "id": "cbb25432-8d45-4f34-b296-4f2711e2a96f",
          "name": "identifiers"
        },
        "response": {
          "id": "0cfd755d-f583-45c1-95c0-807df2810330",
          "status": "OK",
          "code": 200,
          "responseTime": 22,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1f906e-f6e9-4549-9192-1c2d075281d4",
        "cursor": {
          "ref": "7266c23d-41d4-4825-acec-771422842d0b",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "9edf7771-25b7-4cca-b817-c3b2307de12d"
        },
        "item": {
          "id": "df1f906e-f6e9-4549-9192-1c2d075281d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "b45b74a9-d86f-4a55-8198-da8f9773e4b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed89da6-f812-4012-9f43-48b30c5e9c21",
        "cursor": {
          "ref": "d44cc748-5593-40c7-a748-bdf99ccea3a8",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0585a992-54a5-445d-b029-5bb905628129"
        },
        "item": {
          "id": "4ed89da6-f812-4012-9f43-48b30c5e9c21",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "ad0ab3eb-b811-484c-b1e2-210bc8f5f590",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec246721-7873-42b0-a839-f002914e5013",
        "cursor": {
          "ref": "2336ab4c-7605-4a43-86c3-43bf7bf106e8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "cb99b213-4bf1-491b-8f66-8a0d1c7ed124"
        },
        "item": {
          "id": "ec246721-7873-42b0-a839-f002914e5013",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e4d3e0c9-9482-4f46-acec-c65dd7710fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5225474b-acbc-4c80-b186-0add309e42d8",
        "cursor": {
          "ref": "e0d384f0-50a4-4d98-a31b-8ccf0396cab6",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "6c0217be-e985-4d29-90ed-55eb4b86f76f"
        },
        "item": {
          "id": "5225474b-acbc-4c80-b186-0add309e42d8",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7ef1fd45-bc4a-4c00-af91-44765721f301",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee54bf20-e3c7-4181-8de4-0ddcc71bd009",
        "cursor": {
          "ref": "921bf74b-ed86-4b0c-8054-83654215f22c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "e7a0b681-6030-4d9d-8bc2-7daf5e5c10dd"
        },
        "item": {
          "id": "ee54bf20-e3c7-4181-8de4-0ddcc71bd009",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "cea9e24e-3ece-4e33-a91c-9148a0cc5058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be566e7-6bcc-40be-815c-e66905ec6438",
        "cursor": {
          "ref": "502f3839-2c74-4382-8e5d-4f2267609dd4",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8d59a652-94ce-4731-a62a-a5b5619b9a4a"
        },
        "item": {
          "id": "3be566e7-6bcc-40be-815c-e66905ec6438",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "70e7659a-1508-43f3-bbdd-4e3d61fdaeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d4f82e-6708-484c-81c4-fe538e3ea428",
        "cursor": {
          "ref": "40da52be-474e-469c-8359-285d7070d0e0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b1bca69f-d62b-40b9-baf3-8409e51cb7bd"
        },
        "item": {
          "id": "f5d4f82e-6708-484c-81c4-fe538e3ea428",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "2d798b80-34e7-428f-9568-0cd2e86d8b63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4f4416a-a419-4aae-934c-8b96b55c3523",
        "cursor": {
          "ref": "88d81d5a-6303-47c7-b9f8-4ebaca2b65a5",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "85d2586a-0c83-44e0-9407-c625ceea8ff5"
        },
        "item": {
          "id": "f4f4416a-a419-4aae-934c-8b96b55c3523",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "66674c1a-5049-4d03-9be2-eea1bee89af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ca0940-9907-4c8d-b2ca-6d87ef581a44",
        "cursor": {
          "ref": "785eb9c5-1216-47d2-a785-0bbedaf670ea",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c616b545-84fa-4f87-b01e-468040c51e6b"
        },
        "item": {
          "id": "22ca0940-9907-4c8d-b2ca-6d87ef581a44",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "67c27d72-0d2a-4cfc-824c-ee46fba6a262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801686be-e036-46f0-916b-229910bf7c9a",
        "cursor": {
          "ref": "e4d9a366-6d62-4950-89da-99cf4f61e49e",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "9bc14711-6e90-479a-959d-887558f91085"
        },
        "item": {
          "id": "801686be-e036-46f0-916b-229910bf7c9a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b5a25ae1-6c81-441e-b7be-4edaeff782ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9b62a86-0638-4d4e-ad4a-c65c152f0c45",
        "cursor": {
          "ref": "a7cd71c8-9b4f-4536-9112-d735e7b05329",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9c3a31ee-1598-4637-88e8-66908e6e1b71"
        },
        "item": {
          "id": "a9b62a86-0638-4d4e-ad4a-c65c152f0c45",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ba887173-8e3c-45a3-abb2-fcc5e777da18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82022e85-de86-4693-a91e-164d91590dda",
        "cursor": {
          "ref": "ea1132bf-984a-46eb-b317-9bb3ab0d3d1c",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4823c007-1aaa-4705-bb08-903b0ac566a7"
        },
        "item": {
          "id": "82022e85-de86-4693-a91e-164d91590dda",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "2359076d-6feb-4408-8137-6af8223dd77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9247881a-967a-4962-afa5-d1dd37a2a498",
        "cursor": {
          "ref": "895dc091-b895-43ff-a8bb-3cd738dbd08e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "afdebc03-9081-4189-b118-9ef501d3cc9f"
        },
        "item": {
          "id": "9247881a-967a-4962-afa5-d1dd37a2a498",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ec417075-d224-43c6-9254-4e46b8b3db61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b56004-003d-4ac2-97cb-a674a5c8e255",
        "cursor": {
          "ref": "4082188b-7230-4146-a7d8-ab2240cbb265",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "844d98b7-a2a5-43bc-92c0-643d13cc8b8a"
        },
        "item": {
          "id": "b9b56004-003d-4ac2-97cb-a674a5c8e255",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a7e65921-1a09-4658-95e4-86547aaa690f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de90c895-fe9a-49ad-a95b-5f31e6c7fcc7",
        "cursor": {
          "ref": "0ba79b43-df70-4903-a61a-38cb868bc6e8",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d09ea81c-bb06-440b-947f-afeb15cd17da"
        },
        "item": {
          "id": "de90c895-fe9a-49ad-a95b-5f31e6c7fcc7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "ed94c528-7ecb-4ca1-9a2b-9c822d1f76d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9df242-847e-45fc-8902-96d2b26e0120",
        "cursor": {
          "ref": "b00cef5b-cb91-48c6-ae3d-17a377511e24",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "618b56e5-7259-45b6-b4bf-0e0ba84f85d3"
        },
        "item": {
          "id": "dc9df242-847e-45fc-8902-96d2b26e0120",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "81dbb5ad-e3bf-4cf0-888c-a48b91145aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb4f69f-be43-4c05-a79d-f19bce0a43f2",
        "cursor": {
          "ref": "02fb79c7-6c6e-479d-a420-92c7579762eb",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "72cbce8b-0a03-4ab5-903c-f77b0c693577"
        },
        "item": {
          "id": "0fb4f69f-be43-4c05-a79d-f19bce0a43f2",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "af1b6dc2-f424-499a-9a38-4733162183d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 249,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8995e986-6945-49ad-a3a0-8f2ea8017ef5",
        "cursor": {
          "ref": "6ed7f8a9-df38-4c61-b1f2-7f7de7a191f1",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e13e5d65-f219-446d-b8ea-687092b7acbf"
        },
        "item": {
          "id": "8995e986-6945-49ad-a3a0-8f2ea8017ef5",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ffcbff39-ea8b-4f93-aaa7-e1955e3d1b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9955f252-245e-4f59-ac0b-dee616b94329",
        "cursor": {
          "ref": "a4be4824-1ec9-4431-be87-c65874f44c93",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0b28dd5b-9654-4127-b3b3-0acbec71dcee"
        },
        "item": {
          "id": "9955f252-245e-4f59-ac0b-dee616b94329",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "07425734-842b-429d-8856-ad92606e461c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69927786-d7e2-4886-a9d2-d67df989fa90",
        "cursor": {
          "ref": "d9dcf9ff-bc91-4630-ba2d-763beb761e61",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e8b3ad98-35e2-435f-8379-e57d74668c91"
        },
        "item": {
          "id": "69927786-d7e2-4886-a9d2-d67df989fa90",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d2053387-8dca-46f8-b69a-4765d7019d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fde4e369-26ac-4ca6-8a3b-16854b80ce41",
        "cursor": {
          "ref": "3396e381-2129-4ea4-ab0d-cb5c0714cd5c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "23988f9e-c146-40b2-9cef-a61b0ce82343"
        },
        "item": {
          "id": "fde4e369-26ac-4ca6-8a3b-16854b80ce41",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "f2097588-561d-493a-bf3a-c5a084ebc310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c96cc052-2ba4-4871-82b6-b874625021ff",
        "cursor": {
          "ref": "444669b3-b2c5-420b-ac7a-ee14a77ad8fa",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "bd95ee1b-b1a5-48e5-a4ce-f9dee838990a"
        },
        "item": {
          "id": "c96cc052-2ba4-4871-82b6-b874625021ff",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "99e4fcb2-2181-492e-b216-87b554f5503e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e2fcab-7f05-4fd6-9897-6bf18b17ebd0",
        "cursor": {
          "ref": "3d72456e-c208-4057-b494-cbca72e3998b",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7895c3e5-e93f-40cc-8299-21a02be1f399"
        },
        "item": {
          "id": "51e2fcab-7f05-4fd6-9897-6bf18b17ebd0",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "c3660b78-6d86-4dbf-a760-becc5471ff71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b46a95-1a96-4dd1-877f-dc4449191c72",
        "cursor": {
          "ref": "61ee6c1e-8355-45aa-b815-86cd9a789559",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a016c927-0328-4739-9858-5ce30556087d"
        },
        "item": {
          "id": "75b46a95-1a96-4dd1-877f-dc4449191c72",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "a783e866-6567-47e4-9437-db90294e77c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40d313e3-6362-4dd0-92dd-c865906d9fde",
        "cursor": {
          "ref": "a715757a-b963-42f9-8328-69cbf8cbb5e7",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "56fa7477-02a5-435e-a3fa-ee41b2e0f09e"
        },
        "item": {
          "id": "40d313e3-6362-4dd0-92dd-c865906d9fde",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "22c07866-75fc-4a7e-812b-6333a35cbe57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64923d23-dd26-4b41-b271-0a415bd202f5",
        "cursor": {
          "ref": "51ec8c23-6a4b-4f2b-a761-aa5719a5c663",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "62931e29-6df2-4809-bcdd-82c775656d2b"
        },
        "item": {
          "id": "64923d23-dd26-4b41-b271-0a415bd202f5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e90bea37-1b8b-4998-9caa-2a53f05aeca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24dcc2f5-b25b-4a76-91aa-b5dad4455ee1",
        "cursor": {
          "ref": "b49cdf2d-a8ba-401b-838e-dbffe1057b3a",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0935f0e8-7d21-4f8f-b5e0-55cd4316dc3b"
        },
        "item": {
          "id": "24dcc2f5-b25b-4a76-91aa-b5dad4455ee1",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "00c83eba-b942-4257-aee7-fc6d74c0ab93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e217e871-a14f-4c48-9378-d1d224baa90d",
        "cursor": {
          "ref": "ec58158a-321c-427c-b39e-97ad7825ac5d",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "781fb0d6-a284-4bae-a925-a6e62a5afbbf"
        },
        "item": {
          "id": "e217e871-a14f-4c48-9378-d1d224baa90d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "37820a67-a559-4e70-ba2a-e111bdf46cab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0675084-05d5-49f6-b765-80ed4530f522",
        "cursor": {
          "ref": "5336f10e-2173-450c-a1f8-d376411c1e68",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "96b20f61-95bc-439f-b6b1-22190ce8ba6b"
        },
        "item": {
          "id": "c0675084-05d5-49f6-b765-80ed4530f522",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "fe809fe4-d4f6-437a-b586-c6462f1c861d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c73a4f62-7a5b-4580-81b3-f958412093f3",
        "cursor": {
          "ref": "1e6a3c8a-8c7f-4894-9a79-0104975cb893",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8ac3e4ff-4e09-4ba3-b6c0-dd8c228aebef"
        },
        "item": {
          "id": "c73a4f62-7a5b-4580-81b3-f958412093f3",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c2c53160-612c-4e85-8dd9-e2be60166039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7db53e75-25af-4638-933d-06ebdff462dd",
        "cursor": {
          "ref": "21fc3804-664e-4e10-91d6-7d8055e87e32",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "110e923e-3f39-4809-a68a-29b2372c7237"
        },
        "item": {
          "id": "7db53e75-25af-4638-933d-06ebdff462dd",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9d9de8e4-8f3d-474d-b41c-8567647f1d30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac0f13d-d040-46a1-a2a3-e53fd5a5e599",
        "cursor": {
          "ref": "d167528a-04ce-42b2-9bf5-0df3b4889376",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ea2d1ca2-2824-4d95-a482-706e6cbc0e9b"
        },
        "item": {
          "id": "dac0f13d-d040-46a1-a2a3-e53fd5a5e599",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "21e5b4ec-67ec-41ba-a9f1-b329c891b7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ff16ba-6e2d-4aa3-b1eb-5135dbdc4052",
        "cursor": {
          "ref": "beee72bd-de8f-4713-ac64-771660e5a37a",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "88cf07b1-ba33-4fa3-884f-809a7ce4d18b"
        },
        "item": {
          "id": "c0ff16ba-6e2d-4aa3-b1eb-5135dbdc4052",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "a9d095b0-1db4-4993-aebf-a33e0d75fe22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cacbb20b-231c-41a1-a54c-f950cae047ff",
        "cursor": {
          "ref": "c7fa63e2-32f0-43f7-a32c-46d49a82fb39",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d9419e2f-3dbf-4cdb-b445-b37e3ff9608c"
        },
        "item": {
          "id": "cacbb20b-231c-41a1-a54c-f950cae047ff",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "696b2e91-a83a-4591-9205-66be9a197a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64d938-a187-4872-b376-60aa9a803990",
        "cursor": {
          "ref": "ac166740-8f93-4bf5-ad95-d9d425eccefc",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "2318abca-e1eb-4678-96ca-30cb767e59bf"
        },
        "item": {
          "id": "3e64d938-a187-4872-b376-60aa9a803990",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "6f5672f6-bec5-4412-b4b1-5eee37593340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "187c4412-dcf1-4bf0-ae5a-2362cf504758",
        "cursor": {
          "ref": "af9fc0af-4ce0-4660-ba90-4b35a3e74ea2",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "727389ab-e5f3-4e08-a505-209bd7405012"
        },
        "item": {
          "id": "187c4412-dcf1-4bf0-ae5a-2362cf504758",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "2c7f5e50-3da6-4aa3-82a6-853fdebce09e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03dbda5f-b9fe-4bc9-b98a-a564043c5cc3",
        "cursor": {
          "ref": "a15b4eb5-93c1-4529-8767-a969ba113898",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3fad29d9-1560-4a2b-9d5e-0d38adf66ae1"
        },
        "item": {
          "id": "03dbda5f-b9fe-4bc9-b98a-a564043c5cc3",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7ab0cbc8-a1d0-4e9c-ad75-81813468b41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbe3360-1a18-4ec4-9079-37b1e1a56fc4",
        "cursor": {
          "ref": "47b89952-5141-487d-813a-2a38d0086f60",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "e532c545-800c-4ddb-9a0a-ee7f64241df0"
        },
        "item": {
          "id": "3bbe3360-1a18-4ec4-9079-37b1e1a56fc4",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8394fdb8-f463-4a0d-8881-966341ed0ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9302a4d-8cda-4b2f-a349-5182441ba599",
        "cursor": {
          "ref": "4e5bdee4-8a51-456d-86a0-6d18b5abc8ca",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "7758d413-2414-4b25-b948-4f04074170df"
        },
        "item": {
          "id": "e9302a4d-8cda-4b2f-a349-5182441ba599",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "9f84d7eb-6341-403a-83e7-8c163e5ca874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e49816-04de-4b36-99ed-2a47b3807d77",
        "cursor": {
          "ref": "ad08577d-f33c-4e60-95a9-97819eb48982",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d5b1e59f-359e-4528-baeb-a23323171a38"
        },
        "item": {
          "id": "d8e49816-04de-4b36-99ed-2a47b3807d77",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "e7bce5c1-8264-45fb-a56d-0d876c25f6f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "070b8fc3-6c3b-49dc-8bfe-49ce2982865e",
        "cursor": {
          "ref": "11e2a3e2-7b50-4e47-be81-677ab147c26b",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "526433e9-2332-44e1-a40d-069f87a82ab6"
        },
        "item": {
          "id": "070b8fc3-6c3b-49dc-8bfe-49ce2982865e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9a906594-6c1a-4a4e-95b1-ffe777468015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ce5fec-cf55-4d97-9261-9dc4454879ee",
        "cursor": {
          "ref": "524c8b5d-b52e-4e49-9df0-d7b4b15f8764",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b31370bd-93d3-4189-8190-9a45de69f148"
        },
        "item": {
          "id": "61ce5fec-cf55-4d97-9261-9dc4454879ee",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "33d95c04-7efb-4d52-9a6f-a1148cde3106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da527605-7d7d-4955-8a8a-2ef5f54db71c",
        "cursor": {
          "ref": "7ca16ef7-ffc5-4a07-b480-b9540da46c21",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "323cefc3-8b8b-474e-bc5f-7ca836c0fe4e"
        },
        "item": {
          "id": "da527605-7d7d-4955-8a8a-2ef5f54db71c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "a4691577-243b-4a17-b20f-c649efabde0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a0e268f-d702-4986-862a-5870691f1b83",
        "cursor": {
          "ref": "e07479c5-6b6a-4dbd-8842-00010d1ca7f4",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "275c3c4f-ca5a-42c4-bcff-5247f173b519"
        },
        "item": {
          "id": "9a0e268f-d702-4986-862a-5870691f1b83",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "360b1b3e-2028-47cd-990a-582613924632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3d5ec18-dae1-4b30-9ee4-3a4ca6ce3fff",
        "cursor": {
          "ref": "36f985bb-8c79-4bd3-9ddd-8481f8b318da",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c63cb6dc-fbde-49b2-a120-67d4ce95870b"
        },
        "item": {
          "id": "d3d5ec18-dae1-4b30-9ee4-3a4ca6ce3fff",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "45dc95a7-c4ca-445e-aac0-6ad9c34abb2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28a6eaf-466f-43ac-ab51-2d057ebf97ae",
        "cursor": {
          "ref": "ab40ae07-63d2-420c-be79-2ed9498209d7",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "1f62cb03-045d-4e62-afe7-91fc8a12ac15"
        },
        "item": {
          "id": "f28a6eaf-466f-43ac-ab51-2d057ebf97ae",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d898ddfe-d32e-4712-b78e-3cfad32952dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2996bae-8321-484d-a046-ebeeca42cb72",
        "cursor": {
          "ref": "37333c51-95d4-4012-ab3b-6015f7e83571",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4d56b91e-06b2-4979-803b-b6c625018c8a"
        },
        "item": {
          "id": "d2996bae-8321-484d-a046-ebeeca42cb72",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7f51b65b-851f-4e49-b0b0-d35a347723f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae15fdc9-ee5f-4819-b55d-b63f138bf922",
        "cursor": {
          "ref": "14d6b9ae-0cf8-4022-8afc-542fdff94e1f",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "03afe553-920c-4fcc-bf38-c60baeb52a73"
        },
        "item": {
          "id": "ae15fdc9-ee5f-4819-b55d-b63f138bf922",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8db0e4c4-78ed-4bdd-8b2e-9d3fd2e723f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dab30c-407a-456a-9091-003bacc313c2",
        "cursor": {
          "ref": "ee537bef-39d0-4f99-86d1-94017f7cc5d6",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "9e40d6e7-58f9-4f5a-9df8-933c29b524ec"
        },
        "item": {
          "id": "a4dab30c-407a-456a-9091-003bacc313c2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0172302c-830a-45eb-a880-2ff85f86537d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8af793b-009c-4996-a588-8eb59aee18b3",
        "cursor": {
          "ref": "087f6ceb-d27b-441d-90ae-a9173a520fbc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "1905ee95-ccc6-4937-b622-c6b5040dd8b0"
        },
        "item": {
          "id": "b8af793b-009c-4996-a588-8eb59aee18b3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "40c17d50-6baa-4c49-9138-10821a9acce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd68eee-3c52-4d56-a661-d5a288bbdcec",
        "cursor": {
          "ref": "a0430bfe-105b-4df6-9726-e9360ca05c7a",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d0b09877-1372-4020-ba5b-32e1c237671b"
        },
        "item": {
          "id": "3cd68eee-3c52-4d56-a661-d5a288bbdcec",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f2ebb3c5-8e5a-4d96-abc3-599e0bc3f991",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30507e99-2e37-4b3e-a205-1fa1c1f662b6",
        "cursor": {
          "ref": "8c3cfb98-f658-4d30-847a-8927e7fa05b4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "e2d2b58b-288d-434a-817d-3b059e102e5d"
        },
        "item": {
          "id": "30507e99-2e37-4b3e-a205-1fa1c1f662b6",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "18929cda-a22b-4729-bb03-5ecad36174e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b224ca11-3630-4be1-bd90-defe00dce0d5",
        "cursor": {
          "ref": "7a44e829-73f1-4937-beb6-6b87bc07122a",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "43a8ebbe-5f60-4a9e-a617-9f29d5ef05b0"
        },
        "item": {
          "id": "b224ca11-3630-4be1-bd90-defe00dce0d5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0bcb33ce-33f3-4b97-acf4-8355b989082a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e957e4f-b1cc-42b3-9625-f0aae29dd8ef",
        "cursor": {
          "ref": "90b7969e-0ad3-4781-872b-5fb451652861",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e425c6ae-0cac-4e46-bf60-5a43daa6fe45"
        },
        "item": {
          "id": "6e957e4f-b1cc-42b3-9625-f0aae29dd8ef",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5872e91d-3923-4979-922a-fbd39d24f1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "261d9a77-7d5b-45d9-b429-8e0d77a6cce2",
        "cursor": {
          "ref": "9ffc626b-8e83-4a5e-b6e6-9ea564006cfc",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "da9efa3f-6332-4c8e-96d3-5bce04301cb1"
        },
        "item": {
          "id": "261d9a77-7d5b-45d9-b429-8e0d77a6cce2",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "44a4e6ff-2f9e-4ed1-b0b0-3f2b69b59e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c0af96e-4b16-4d61-a0e5-b7b9cedcdf61",
        "cursor": {
          "ref": "38972d5b-b767-45c4-ab75-4edeb2c00c62",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9dc70821-cf17-45b9-86b3-e0c49616c931"
        },
        "item": {
          "id": "4c0af96e-4b16-4d61-a0e5-b7b9cedcdf61",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "75b055ad-89a0-4eb0-96e5-f7d3ef4786e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f796194d-060f-4683-9133-f651acb04e14",
        "cursor": {
          "ref": "184e26e1-04d7-47be-ac19-364cc92ceef4",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5c477634-ed89-4343-87fb-8343a96035f8"
        },
        "item": {
          "id": "f796194d-060f-4683-9133-f651acb04e14",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "15c234de-f732-4ddf-9c50-f2f8ab675960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938d01d0-46ba-4cff-89bb-f107c1c1e920",
        "cursor": {
          "ref": "de0b1dd2-9922-40bd-bfc0-15d5b819ee4d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "17867930-1073-4c99-8d0b-129abd6593f0"
        },
        "item": {
          "id": "938d01d0-46ba-4cff-89bb-f107c1c1e920",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "a38fd2a8-28b0-4af5-87a3-22f4d4114be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad43c322-243b-44a4-9cc1-e749ebe76f80",
        "cursor": {
          "ref": "eeafab62-d7c6-433a-9da7-dae68284db0e",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "35aef19a-44f6-41b3-8a93-1e1bdc8679b9"
        },
        "item": {
          "id": "ad43c322-243b-44a4-9cc1-e749ebe76f80",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "2a271fac-1d9f-421a-8410-76215c884270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c83a2fef-787a-4fe4-b6e0-dbed5a3abb7f",
        "cursor": {
          "ref": "15ed436f-e357-45c3-9fa2-d8dbe69974d8",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "050806ba-6071-4f43-a3bf-f5f018119f9b"
        },
        "item": {
          "id": "c83a2fef-787a-4fe4-b6e0-dbed5a3abb7f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d797e953-2a1a-40f7-92e1-dd8135b4c0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a89e8a5-9863-446d-8532-00cf21f7651a",
        "cursor": {
          "ref": "811b59e6-20ef-49a8-b396-172ef8727a80",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "19485ec3-f1e5-4842-a5e8-d0c225ee6ebe"
        },
        "item": {
          "id": "3a89e8a5-9863-446d-8532-00cf21f7651a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7f5e322c-c6b2-40ce-8b5e-befb16473a6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58348c9c-8a3d-4f63-89d7-a39d3b6fb62b",
        "cursor": {
          "ref": "7cc3fb32-b440-45f3-b6c2-a017695a03bc",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4b87249b-5985-4f23-8756-2df050911b04"
        },
        "item": {
          "id": "58348c9c-8a3d-4f63-89d7-a39d3b6fb62b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a989ac65-3139-4e04-9932-56c60760ffae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "923f22c9-1407-4a85-88fa-52e81c0628c6",
        "cursor": {
          "ref": "a0d3c2fe-cc57-4424-ba51-6e4e167041fc",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a891ff60-956a-4893-968e-27498a56bdab"
        },
        "item": {
          "id": "923f22c9-1407-4a85-88fa-52e81c0628c6",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "131c8a5b-eda2-481b-8ec5-dd447b60d6cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79eca692-c7ad-4684-8878-4d4de02f956b",
        "cursor": {
          "ref": "40f8cb36-b661-4ae2-a885-2d612deca250",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c28cc9fd-18d5-4cec-aa60-df92a4c24409"
        },
        "item": {
          "id": "79eca692-c7ad-4684-8878-4d4de02f956b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1218f4f5-f12a-42fe-af0c-65169d4d74ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94353619-f492-4f4b-a814-da502552d6a8",
        "cursor": {
          "ref": "9b904793-10b7-43f4-bcc2-3ac9ab60d4fe",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "ec89b0d5-0c77-4cc4-b54f-77e2dc08b9fd"
        },
        "item": {
          "id": "94353619-f492-4f4b-a814-da502552d6a8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "b02c4433-1939-432d-be20-fd4f17c505de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c075c45b-087f-4ad8-8005-7b6f774814d1",
        "cursor": {
          "ref": "20ab2f5b-fd90-4fb6-9b6a-1d19fc28393c",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "5646d27c-a22f-44bb-b8af-8fa52067e8bb"
        },
        "item": {
          "id": "c075c45b-087f-4ad8-8005-7b6f774814d1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "dc1d9be0-a762-4019-85af-6ae931b49b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611d9176-586d-4f78-b764-e49fcf729c0b",
        "cursor": {
          "ref": "77435963-1ccd-4d48-80a1-086f01f31c86",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "3ee70834-eeac-4a39-8975-b0fef0866278"
        },
        "item": {
          "id": "611d9176-586d-4f78-b764-e49fcf729c0b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fbebfdcd-2341-4e63-80f2-e14766ab89c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a5516ef-c974-4d60-8ea6-77bf2e9da7f1",
        "cursor": {
          "ref": "b9d5476c-0ff2-42c3-a906-eab57f8e022a",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "4e15c5f5-af11-4205-8b0f-bbed933238dd"
        },
        "item": {
          "id": "8a5516ef-c974-4d60-8ea6-77bf2e9da7f1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a0f84490-50f4-4540-bdd7-4d61576d6083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e99d44b-5717-4768-841c-0f86ed6c61ef",
        "cursor": {
          "ref": "02bc3376-7d53-4dcd-8694-a35038b89585",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8f833884-c67f-4229-8528-7cfaa01cbc15"
        },
        "item": {
          "id": "0e99d44b-5717-4768-841c-0f86ed6c61ef",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8811004d-18ee-4f2c-b9f9-dd92c89d98bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880a2f74-e966-4572-98bc-7fee6671efad",
        "cursor": {
          "ref": "ee8ed95e-5093-45cd-aa41-c88d199c1079",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3366c565-42ef-445e-873b-68e167aaf960"
        },
        "item": {
          "id": "880a2f74-e966-4572-98bc-7fee6671efad",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "457444c7-69f1-4950-96cf-b14768f52111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48f8b9bd-32f5-43d0-b18f-3dea271f0a51",
        "cursor": {
          "ref": "79739d7b-f63b-4507-82d3-534a5e9d9f12",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "67df1e6f-07a2-42da-88f9-1ff096e534e8"
        },
        "item": {
          "id": "48f8b9bd-32f5-43d0-b18f-3dea271f0a51",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e6f40869-b2f6-49d2-8ec1-74599b90e525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b75e2c-2618-449c-a019-c92b942381ab",
        "cursor": {
          "ref": "4ae97df8-cdf4-4e41-bee9-e50824315319",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "551f5cc9-aaf6-40fa-99d9-ebdb96afcd39"
        },
        "item": {
          "id": "83b75e2c-2618-449c-a019-c92b942381ab",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "12a24600-a1ac-499a-8e52-c2c344409c58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f018b7e6-8c01-4ffd-b079-5d5ab427ba5b",
        "cursor": {
          "ref": "11cdaa9f-ba38-47f5-b59c-1275e483b34a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "c0bfb267-5e2c-4af8-9ccf-6bf8d358099a"
        },
        "item": {
          "id": "f018b7e6-8c01-4ffd-b079-5d5ab427ba5b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "3cdb35c4-f41b-4d10-b32f-fb724022f8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c549a6a-d97b-4ced-8369-70801214d323",
        "cursor": {
          "ref": "3ff25a9b-c9b4-4ea5-96e0-63a37105a7c9",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e9ba1804-0a43-4e8f-8185-75a5fcab5b3f"
        },
        "item": {
          "id": "3c549a6a-d97b-4ced-8369-70801214d323",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5ea04e43-034d-46de-b6e7-be2fb628c609",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a746fe-ffeb-4f98-a17b-f965fe2b43e3",
        "cursor": {
          "ref": "49e0a55e-7c76-48dd-9699-e4f222619041",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "fe5bef3f-8034-4b72-9cfc-e37ceee56d72"
        },
        "item": {
          "id": "a7a746fe-ffeb-4f98-a17b-f965fe2b43e3",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "033815bb-9f35-4732-a271-3ff10dfb6c1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a558411c-fa99-4bb0-ac34-258982c4ee83",
        "cursor": {
          "ref": "54bea7a6-c981-4071-8843-ee778649ac00",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "e35e1a7d-7a71-45f6-a3f6-ea2ce5404f51"
        },
        "item": {
          "id": "a558411c-fa99-4bb0-ac34-258982c4ee83",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f60dccc4-9e36-4fff-a5ab-d96bd0406bd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f53d65-5cef-4dd8-982e-e5e7df46ac89",
        "cursor": {
          "ref": "be1163d8-9ea4-4494-b77d-a949f2e13393",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5414dd5f-1320-4e0d-b077-a4a894a89a17"
        },
        "item": {
          "id": "79f53d65-5cef-4dd8-982e-e5e7df46ac89",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "2f0fe9d6-6caf-4412-9c8b-1469db8e07a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7406fc4d-247c-4b9f-bbba-2f473924db36",
        "cursor": {
          "ref": "718fec19-970d-4771-ac34-7e9b9d335993",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8363e083-ba29-46d8-bce4-33e56320fb1e"
        },
        "item": {
          "id": "7406fc4d-247c-4b9f-bbba-2f473924db36",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "795f4e17-ca61-490f-bbce-c0c44d231e39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b776d44a-cf85-4d12-8f2b-b4e1504d126d",
        "cursor": {
          "ref": "23e82a48-c4df-4b4a-9d04-8f197d9d8c4c",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "05f483ca-33d8-44a1-8d34-8ab96d6902bb"
        },
        "item": {
          "id": "b776d44a-cf85-4d12-8f2b-b4e1504d126d",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7ef919c6-b3fe-4b42-a7e4-4f601c478e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d63d70-3c3f-4b4b-8f50-9a795c90ddd6",
        "cursor": {
          "ref": "aecbc347-ddc5-4f84-9764-be3c655e5d15",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "32391902-2780-4d84-b936-d652110913bf"
        },
        "item": {
          "id": "78d63d70-3c3f-4b4b-8f50-9a795c90ddd6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8aef715b-5613-49f8-8022-34fafb72d7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62f5a357-33dd-430f-9b5a-8add4a3a571b",
        "cursor": {
          "ref": "7465b3fe-d281-437a-a973-185ffe789a9d",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "9a1ff88e-63c7-40d9-9b99-c1276b8617eb"
        },
        "item": {
          "id": "62f5a357-33dd-430f-9b5a-8add4a3a571b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b4eed6fc-7024-4aee-baca-c6d845b5ce75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1caefbd1-5a23-4202-8ae1-9fc879f4e333",
        "cursor": {
          "ref": "9233d547-f0bd-4299-8b0e-ddf3295d0e46",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "668be6ca-f965-46a4-8ba3-89c26505e022"
        },
        "item": {
          "id": "1caefbd1-5a23-4202-8ae1-9fc879f4e333",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d4582f7c-024c-4fca-9e2e-0b81d52448b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ca14fb2-4708-494b-9839-133e91fcf363",
        "cursor": {
          "ref": "4eda989d-6522-4c68-a515-6165864ea8fa",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "57d609c9-f015-4ea3-b9ba-5a540c1b237d"
        },
        "item": {
          "id": "0ca14fb2-4708-494b-9839-133e91fcf363",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f0af7592-0bb0-428d-8c6e-87372a640d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf07046f-0874-4bea-ad72-74fa1431331c",
        "cursor": {
          "ref": "6923fad4-297c-44dc-b468-9721e669422e",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ee88b2af-d2b5-442e-b66d-081fc746cf3e"
        },
        "item": {
          "id": "bf07046f-0874-4bea-ad72-74fa1431331c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "507c57ab-3ace-4732-b73f-287a0168abba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3238bc7d-1858-42d9-9ad3-084dbf810325",
        "cursor": {
          "ref": "6a78eeea-0906-435f-8ddb-493fe7a19c60",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "371774fd-93b4-49d5-894b-7b6ed4ae3af5"
        },
        "item": {
          "id": "3238bc7d-1858-42d9-9ad3-084dbf810325",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "10cf884b-4dc3-4a2c-b946-baf252eaabbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a9590c-7565-4d51-a0a4-3c6893b407f2",
        "cursor": {
          "ref": "2854f41f-6564-4c8a-ae5a-e2191086e0a0",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5e76967e-2503-43bf-88d9-034532d5577b"
        },
        "item": {
          "id": "42a9590c-7565-4d51-a0a4-3c6893b407f2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "505b6a49-97a9-4e2e-aab8-afb4b25156c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80448d0e-8958-4d22-9611-541d562a024a",
        "cursor": {
          "ref": "8412681a-e03a-470c-bcef-77ed946523a1",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "daf5f31a-8426-4d61-973e-c805bfb0b8d2"
        },
        "item": {
          "id": "80448d0e-8958-4d22-9611-541d562a024a",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "d5f58f92-ba70-4486-9d04-5d8dc4f4f059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d3b7a1-5572-4dda-8832-7fb6de2cff89",
        "cursor": {
          "ref": "cafe8056-1e95-42b5-8be0-5e0130982e41",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "a1296e5d-1613-4c3a-9c75-03830b429273"
        },
        "item": {
          "id": "45d3b7a1-5572-4dda-8832-7fb6de2cff89",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "05a35928-a449-403a-911c-68f47ec13b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712ede35-5231-4069-9275-6061b965094c",
        "cursor": {
          "ref": "6c14b3cc-b7ee-4c3d-a4e9-77b07fe28da4",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fc0799de-342e-4918-9009-1e050eb93f76"
        },
        "item": {
          "id": "712ede35-5231-4069-9275-6061b965094c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "49e3ad52-7283-4357-9f65-828929711b97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212021f4-8727-40e3-9661-c5efca5045f6",
        "cursor": {
          "ref": "71843341-f462-4f6d-9a2f-1f242756849a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "114c9a03-b582-4b79-ba6c-b2d497b5509f"
        },
        "item": {
          "id": "212021f4-8727-40e3-9661-c5efca5045f6",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "d80f91fc-a5e6-41b2-ab87-f77bf09407cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0471cce-0fad-4f17-bad0-753e555ed345",
        "cursor": {
          "ref": "cba3e039-d3dd-4c56-8474-60d81670d709",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "77e2f1ee-bd69-4561-95b1-8aff69e80d26"
        },
        "item": {
          "id": "e0471cce-0fad-4f17-bad0-753e555ed345",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c4ccf96e-8c56-4603-8c75-a4c9e8c95fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffe5057-b8c7-4394-9e13-a1ada2d745ac",
        "cursor": {
          "ref": "0385a84c-9e77-4f51-ab43-819903aa5672",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "72952389-f07e-4676-9d90-8283a599f745"
        },
        "item": {
          "id": "3ffe5057-b8c7-4394-9e13-a1ada2d745ac",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "6c2e697e-a991-4a50-9435-022a24e89278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ea71be-e45c-4282-bd17-24d1eca6f4dd",
        "cursor": {
          "ref": "4f9911c5-c77c-4b15-b640-0ba679312196",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "83e1d1f8-a51c-42ac-9da3-f336e04e5e01"
        },
        "item": {
          "id": "50ea71be-e45c-4282-bd17-24d1eca6f4dd",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d229541a-ee78-49ce-bafd-4eafe2ddea7d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717aac8d-3101-41e9-adb5-185738a1306c",
        "cursor": {
          "ref": "9dc3ccf3-e216-4f37-89d9-a038885f577f",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "ac0854fc-04f9-4874-8780-4c3760434eeb"
        },
        "item": {
          "id": "717aac8d-3101-41e9-adb5-185738a1306c",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "931de2ad-0d40-4e47-8d2c-86cbac94ed18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "5a8a12db-1944-4e57-946a-e5b7e7f7f13c",
        "cursor": {
          "ref": "256c40fa-6f60-42a4-9b41-23a172c76a87",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "245a335c-bc98-49d5-9b42-bda14d36ca8e"
        },
        "item": {
          "id": "5a8a12db-1944-4e57-946a-e5b7e7f7f13c",
          "name": "credentials_issue"
        },
        "response": {
          "id": "cbeb6251-0f97-4290-8451-442c94f5f7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "dc391081-c595-49a5-b175-0ff0cde4ec5d",
        "cursor": {
          "ref": "25441604-e14e-4c4e-8ae8-310053ee4486",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "60acac98-32f8-4c01-8ebe-7c106bfec982"
        },
        "item": {
          "id": "dc391081-c595-49a5-b175-0ff0cde4ec5d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "9bac8a7d-f371-42e6-9e54-b7f81c00b6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "3b37a952-2855-416c-baec-16609d8346ee",
        "cursor": {
          "ref": "1c9a76d4-c2c4-4e78-9968-ad10aef94f9c",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "61061efb-e4c0-4275-956f-028e586c3219"
        },
        "item": {
          "id": "3b37a952-2855-416c-baec-16609d8346ee",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "33657d48-6c92-4164-93d7-fc1b5cb0e60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "51dd3e54-2ca0-4429-abd3-71a26f92ba08",
        "cursor": {
          "ref": "f2acaa3e-7f0e-4b43-99ce-780b04778d4f",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "504b5576-0b5c-435e-84bf-8a06db6ba2e4"
        },
        "item": {
          "id": "51dd3e54-2ca0-4429-abd3-71a26f92ba08",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d1e28036-d91d-4a78-b3ab-4f069a3b22c0",
          "status": "Created",
          "code": 201,
          "responseTime": 8298,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a514f94-bfb5-49ad-872f-62720571917d",
        "cursor": {
          "ref": "4a478d78-f43f-414a-a5f1-430c411a212d",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "73dc4580-fc6c-465c-b945-ce7ef783188c"
        },
        "item": {
          "id": "8a514f94-bfb5-49ad-872f-62720571917d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7c0f3ee3-9c22-4719-88cf-63049010a6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "0b4476e1-814c-40ee-ab48-f49bde1b6329",
        "cursor": {
          "ref": "7b0a4dca-59bd-4cf7-8661-26bb82ed3c72",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f4f702f8-bf51-427b-8c5c-b2349fae5b7f"
        },
        "item": {
          "id": "0b4476e1-814c-40ee-ab48-f49bde1b6329",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8afa62ab-a8bf-450d-8ce9-388a280f8b9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "82b72c40-71b8-406e-98f2-92d6fa8b6409",
        "cursor": {
          "ref": "331afc9e-5c4e-427e-a6c7-aa44a78e9454",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "982cd951-2b04-4203-9ae5-984856f76b44"
        },
        "item": {
          "id": "82b72c40-71b8-406e-98f2-92d6fa8b6409",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e6f48e94-805e-4b36-8c75-a3901e3ad261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ae3af77-7d9b-4e5e-adfd-638f4bb0ef5b",
        "cursor": {
          "ref": "6019ef58-f3c7-4057-b450-7c4d2574c5e7",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "58436f32-e71a-44dc-a752-d0a60e9f146d"
        },
        "item": {
          "id": "1ae3af77-7d9b-4e5e-adfd-638f4bb0ef5b",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "bdbc1e74-c3e9-43d2-a5eb-176a2a9513ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06404c26-b088-44cd-bd3d-a64d6f85e227",
        "cursor": {
          "ref": "88ea5335-72f9-476e-b9f7-849d0060425c",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "70e477a8-4ebb-4328-baa0-42702df6eb8b"
        },
        "item": {
          "id": "06404c26-b088-44cd-bd3d-a64d6f85e227",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b80ef061-ec5e-4737-a0ff-de28787191bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f61349d-d109-44ea-aeee-3c85782c96f0",
        "cursor": {
          "ref": "5cd9aae4-78f9-48cb-b0d5-319b87be6f6f",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "baa446f1-c3e3-435d-88d2-05616db2316f"
        },
        "item": {
          "id": "7f61349d-d109-44ea-aeee-3c85782c96f0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "90b06d8a-920c-4be8-bb76-aa7e4ded0c88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8b1b652-1adc-43d6-a459-a99f4a80a466",
        "cursor": {
          "ref": "7addda73-ec06-4465-a41e-bfa7bd4f14b3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3e17d9db-d4f3-40c3-9481-7800e9036b89"
        },
        "item": {
          "id": "d8b1b652-1adc-43d6-a459-a99f4a80a466",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c55eec74-1c1f-474a-b470-333b2147ddbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71f59cd1-2f6c-4bc9-b34a-fc537545d9cf",
        "cursor": {
          "ref": "d7c4739e-f45c-4c4c-b89f-a83204807bc2",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "06666678-95b7-4f81-9e9e-8278240d54a0"
        },
        "item": {
          "id": "71f59cd1-2f6c-4bc9-b34a-fc537545d9cf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b70c625c-6d7a-458c-8eda-9f3cab9e6ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530a0e05-0b44-44d0-81e1-ae16e2f7bdac",
        "cursor": {
          "ref": "926a1f38-47ae-4fb3-a8ca-40d2afc1b4c6",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "2ec517c3-a028-40a2-b1bb-fbff815545fe"
        },
        "item": {
          "id": "530a0e05-0b44-44d0-81e1-ae16e2f7bdac",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "2921f49e-85e0-4f8d-98b8-2002e6266c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061d0f44-a766-4e4d-ac97-76347a892a52",
        "cursor": {
          "ref": "826af95c-9682-448f-8b84-0738be3fa608",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c38b4b51-e7ef-403a-8b28-1bcf69fdeb15"
        },
        "item": {
          "id": "061d0f44-a766-4e4d-ac97-76347a892a52",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "4eb21cde-cfa5-4548-a362-574388493816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a50e5e00-4931-41b2-a849-864a4c61eb81",
        "cursor": {
          "ref": "526d9e0c-59b9-44e5-832f-158d74119483",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "9f1e3b0f-44e2-4bfd-9e09-215ca2e95827"
        },
        "item": {
          "id": "a50e5e00-4931-41b2-a849-864a4c61eb81",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "3c43025c-f140-4efb-9f75-1e9b270a87c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff8c7dc-c654-486c-9f0a-3f6ec2dc9f28",
        "cursor": {
          "ref": "7576f948-c80a-4fcd-923e-d8d25bf84f03",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "a07d1fd5-e07e-44ed-90c7-a68e30683523"
        },
        "item": {
          "id": "9ff8c7dc-c654-486c-9f0a-3f6ec2dc9f28",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "ed095d94-b1e9-43e4-a0c7-37444570ac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d77850ee-67f2-4349-b44e-f77e55c8ae39",
        "cursor": {
          "ref": "d5c49cb8-b1de-4f90-938f-fbdccae477dd",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5f6eb278-df75-4104-b9be-75cffd7b3283"
        },
        "item": {
          "id": "d77850ee-67f2-4349-b44e-f77e55c8ae39",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d1212444-9fd4-4f70-8e4e-0caaea591dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1333ac16-5684-4806-aa6a-9ec0654f195e",
        "cursor": {
          "ref": "1fefc81f-9a31-4774-9279-d8519f596846",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "af77d2b6-27f1-4da6-9686-2dd3b4b20002"
        },
        "item": {
          "id": "1333ac16-5684-4806-aa6a-9ec0654f195e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "1af07d56-d149-471f-aedc-ea9bc4aada09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be63ce8-b2fa-4560-9462-943ca05d98be",
        "cursor": {
          "ref": "1adc107c-e9aa-40c9-90ea-f557dd623330",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d6929d2d-cc9e-419c-b018-df64ca305466"
        },
        "item": {
          "id": "6be63ce8-b2fa-4560-9462-943ca05d98be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d3367fd6-97c7-4777-a1d6-8db4d5bbda5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e516f3b3-20e7-4435-9aaf-ec292b327f22",
        "cursor": {
          "ref": "e5777f45-f034-4fc8-aa80-b8147bd5df2d",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "3e85fad6-68fa-4289-9272-f5e76f09d2e6"
        },
        "item": {
          "id": "e516f3b3-20e7-4435-9aaf-ec292b327f22",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "ff3eeb65-69e9-47cb-a066-c8f1de4f0a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca348a9-5dc2-461c-b17f-41e62589c0b5",
        "cursor": {
          "ref": "9b4647e9-bb9a-4ac9-b7bb-a5f612845faa",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "53d3394e-7d23-4224-a1e6-eb38021ac461"
        },
        "item": {
          "id": "eca348a9-5dc2-461c-b17f-41e62589c0b5",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "96c22f77-a46a-486f-b23a-ebe8bdb7d88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62eb4a01-ee2c-485a-98f5-d8a68871b70b",
        "cursor": {
          "ref": "69f729d2-dd97-42f2-bb5a-1aceb197ce9f",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "629cfe74-9d49-47e1-9f8f-95075430df11"
        },
        "item": {
          "id": "62eb4a01-ee2c-485a-98f5-d8a68871b70b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "11ad7e6c-b71d-4670-a80c-2c95791c69a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66aac5b-2102-46cd-a705-864932c7e164",
        "cursor": {
          "ref": "b544c306-6499-4dd6-a36a-441e2efbb333",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b166a989-24cc-4d78-bc7d-66515ad09ebd"
        },
        "item": {
          "id": "e66aac5b-2102-46cd-a705-864932c7e164",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "7cb43f7e-ee68-4145-81fe-525d214a376a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 23,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "12860552-e4c3-4214-8204-72069d6d6cfc",
        "cursor": {
          "ref": "41bd18a7-1470-4837-828d-fc6862d441fe",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "0223fb13-5890-4db9-b931-57773c474a87"
        },
        "item": {
          "id": "12860552-e4c3-4214-8204-72069d6d6cfc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "65bdd098-899a-4713-a28c-d2351c2d96fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b807a37b-aab6-4d09-b5bb-515451233f62",
        "cursor": {
          "ref": "6c2b19da-ebc9-419d-92ac-9550e7821210",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d84fe514-db1c-4ca9-becc-3eb400878c67"
        },
        "item": {
          "id": "b807a37b-aab6-4d09-b5bb-515451233f62",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "bc85e9c7-3400-4288-ab94-94ad3d157676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90029451-3601-4a9e-adc5-3418f001e18a",
        "cursor": {
          "ref": "1aa78fed-d446-4658-bc8c-f51e15a24ed4",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7f7857f6-7d28-4b70-8e64-d50d4582553e"
        },
        "item": {
          "id": "90029451-3601-4a9e-adc5-3418f001e18a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "9901ded7-dd89-4c0f-960c-c86ec6e6e63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a066d3-041b-48a1-9c0f-182aa6a9cfb4",
        "cursor": {
          "ref": "902d0bb7-86db-4df3-a126-54b982e5d04b",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "0205b010-d498-47e7-90f0-3b6fe9cef7d0"
        },
        "item": {
          "id": "a2a066d3-041b-48a1-9c0f-182aa6a9cfb4",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f6587d00-a49d-4526-ac12-e848c4a40c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79143a62-c3fd-4a0f-a1c2-8c759f986b28",
        "cursor": {
          "ref": "6ad959b0-c13b-4fde-b84f-2dd104334a1d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b71e999c-246e-493d-ad6b-d5b6c161c0c7"
        },
        "item": {
          "id": "79143a62-c3fd-4a0f-a1c2-8c759f986b28",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "50225c04-82fd-45d4-bf91-8ba96466b3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3167b62-b354-4dc4-9a04-cd8b6f52587e",
        "cursor": {
          "ref": "cf94f580-b1dc-4be9-933c-cd509e5da4c1",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "118e4220-5f52-43fa-9133-625d0fd93849"
        },
        "item": {
          "id": "e3167b62-b354-4dc4-9a04-cd8b6f52587e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db66abf3-a0c6-44ed-9e3f-0bcd97eabd0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "076120de-b3ea-4e51-95c1-fd5d93c740d9",
        "cursor": {
          "ref": "9ec397ea-b7eb-460a-a06d-1976be7a99f2",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7e115ccf-53fb-436f-9298-71b1cfa70072"
        },
        "item": {
          "id": "076120de-b3ea-4e51-95c1-fd5d93c740d9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "6f0228e0-b817-456d-91e6-c23d86c12de7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f30121c-081c-4078-9b2d-9c11f575836b",
        "cursor": {
          "ref": "42e47d6e-17f0-4fbd-bd15-9277da8ddcb9",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3c54dd4d-fa67-465d-a583-aa391f80aceb"
        },
        "item": {
          "id": "3f30121c-081c-4078-9b2d-9c11f575836b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "5897694d-17c8-4116-8b8f-e6bc6cb8b00f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "049391f0-b48b-463b-aa74-c3ffc19eb309",
        "cursor": {
          "ref": "ca0998e2-3e52-4d32-b63c-859d1571b176",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d0e28a02-ab26-490d-81c4-f46970099e2b"
        },
        "item": {
          "id": "049391f0-b48b-463b-aa74-c3ffc19eb309",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a7df1dac-b376-4d37-8037-81d1f6346833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c112eb-51b1-4a0b-88a8-8094f0052d28",
        "cursor": {
          "ref": "219275e6-15e1-4cc0-8e65-f77fb7868165",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a248f2b-19cf-43e3-a278-0d49ef071067"
        },
        "item": {
          "id": "81c112eb-51b1-4a0b-88a8-8094f0052d28",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3ccff94d-ea0c-4aaf-9f76-b1ce1409fc09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f43c084-8d7e-4d08-bf19-ac3eea79bcc0",
        "cursor": {
          "ref": "46c6051f-4dc5-4795-9c8e-6bf697bcb263",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "84fc6105-667a-44e1-8d38-6e84a46926d6"
        },
        "item": {
          "id": "9f43c084-8d7e-4d08-bf19-ac3eea79bcc0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "511d01b3-8fe0-4aca-b173-4dcba5735943",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2643f388-9d45-41fe-8465-eb83ab74b61d",
        "cursor": {
          "ref": "414a6233-6b23-4d23-9747-4e80f2bc90c2",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f6c8790a-2d26-468f-8429-f53ab40d17e8"
        },
        "item": {
          "id": "2643f388-9d45-41fe-8465-eb83ab74b61d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "1b0dc9fe-442a-448c-b39c-9dfe4008f298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8987f401-97c2-4ccf-b8fc-4e2bd9ff15f3",
        "cursor": {
          "ref": "e049c8cf-8af7-4c96-bf3e-4dcb637d08c3",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "283b2bf4-5462-4598-9562-3bcb91c7987f"
        },
        "item": {
          "id": "8987f401-97c2-4ccf-b8fc-4e2bd9ff15f3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6bc9a554-7d90-4b02-9cd9-1fa2bae5ddf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9245b4-8eba-4f1f-b5f2-9ba03cc18027",
        "cursor": {
          "ref": "c5880d81-f7b5-4e99-b17a-df57a2bbf7e6",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "1bf2decc-15ce-4162-bfa8-f705a17f976d"
        },
        "item": {
          "id": "fe9245b4-8eba-4f1f-b5f2-9ba03cc18027",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "31eacfc2-6e58-4da6-a17d-264808418fd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1edd0ff7-bd42-4fa6-a979-069551979b6f",
        "cursor": {
          "ref": "dfb9f746-015e-4bc8-8829-7535addc47f2",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "347f503c-7488-4724-a64f-1d67461316e7"
        },
        "item": {
          "id": "1edd0ff7-bd42-4fa6-a979-069551979b6f",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ab99ee68-a8ec-4e3c-9528-007ea4a9ed16",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 31,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "70221d43-00c2-453c-a1c5-8f94f3b34c5d",
        "cursor": {
          "ref": "0daa3feb-1206-461a-a9a8-403fbef24938",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c91906e9-1a8b-4034-8fbd-0cf720e64b0d"
        },
        "item": {
          "id": "70221d43-00c2-453c-a1c5-8f94f3b34c5d",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ba5d3991-88c6-4c28-90ea-7e7296a9eb64",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 16,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "d517a800-d7c3-4ca0-a7a1-3301e2e22763",
        "cursor": {
          "ref": "c9070f92-7eed-480d-871a-48fa41f6b99c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "421225db-b36d-4e82-851e-3e6dd86ee562"
        },
        "item": {
          "id": "d517a800-d7c3-4ca0-a7a1-3301e2e22763",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "eb78a7af-33f1-49d1-b55a-493c0576a675",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 21,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "076891c7-deee-4fc7-ab11-4d655af20a98",
        "cursor": {
          "ref": "3c5ed5ab-01d1-4e6a-9dd0-b6df93482dae",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1cf22629-a6cb-42c4-9d6a-fa3b70931c21"
        },
        "item": {
          "id": "076891c7-deee-4fc7-ab11-4d655af20a98",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4856e9e8-9b41-448c-ab3b-3c54f2d245fe",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "07c5d8ba-6cac-44e8-b399-c08fab7701a8",
        "cursor": {
          "ref": "e95c6657-6969-4a50-baef-f098a3f4b942",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b024930a-5dae-4270-a3fd-424f6c013d33"
        },
        "item": {
          "id": "07c5d8ba-6cac-44e8-b399-c08fab7701a8",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "9df62f79-8e3f-4df3-b5c8-9d0e04762af0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 26,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "539647f6-fcc9-4a69-b549-e9aaacee8ede",
        "cursor": {
          "ref": "d8b3a015-7b2a-4d1c-8fc8-fe5fd86f4e86",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8f057833-8fbb-4360-a0ec-5f65dd096081"
        },
        "item": {
          "id": "539647f6-fcc9-4a69-b549-e9aaacee8ede",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "0dc6476b-e313-427e-9d3e-90b26a033944",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "fd37da5a-65d7-40b5-9147-25b32f74ae3c",
        "cursor": {
          "ref": "b9c707c3-554a-4090-8197-0597d4c6b1da",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "f66d1503-5821-4a56-8f33-a68867e07ee1"
        },
        "item": {
          "id": "fd37da5a-65d7-40b5-9147-25b32f74ae3c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c9a27d56-7c8b-4a96-ace0-46d9bd492460",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed113ea-5e4f-4562-9039-cd109243ce5a",
        "cursor": {
          "ref": "6dab6674-d530-4f4a-bdda-67e9be19e34c",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "e0871615-ffb0-448a-9d08-c719f207fb80"
        },
        "item": {
          "id": "aed113ea-5e4f-4562-9039-cd109243ce5a",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e2d438a3-b1d4-4efc-9e79-e6b7c2313f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f67ba05-f442-466d-a062-1ca9fe8ce292",
        "cursor": {
          "ref": "c243d17b-d104-41bf-ad51-34b09c6bdd92",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f45fa404-8c54-4b1c-8513-0fd8a2e69261"
        },
        "item": {
          "id": "2f67ba05-f442-466d-a062-1ca9fe8ce292",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f85c9f4e-b68a-4ff9-a225-86bb2c5efc74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5cc0f2-4b43-44a0-a972-c74b37cef220",
        "cursor": {
          "ref": "3e8e479f-c17d-4445-aef5-1fd7f7079b21",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "1307b94b-d433-41d4-aaea-24764c06b182"
        },
        "item": {
          "id": "1d5cc0f2-4b43-44a0-a972-c74b37cef220",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a28fba7-c0e0-42b7-8767-c2ed6adc4456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5120bfc5-6ed5-4c0d-9a66-5f7b88943b31",
        "cursor": {
          "ref": "45d5a1f6-0fb0-44a6-930a-165817f3ab6f",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "40ee2edb-818a-4a16-bb85-edc47c00b6ac"
        },
        "item": {
          "id": "5120bfc5-6ed5-4c0d-9a66-5f7b88943b31",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "074712f8-1c05-4b3e-b7e4-c6343cdc191f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "017090c3-f4c0-4782-b6e5-3dc88a0bb2ac",
        "cursor": {
          "ref": "a6697e13-e5f5-41a3-862a-8c932e517f3e",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5168f814-b210-4222-b4f2-d689d52fead4"
        },
        "item": {
          "id": "017090c3-f4c0-4782-b6e5-3dc88a0bb2ac",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "718b5f9d-75ef-421f-93cf-de5cd0aae890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782be185-7a23-493a-9d3a-bf5976975c83",
        "cursor": {
          "ref": "62d10f71-50b7-4649-88ed-d763f7f7139f",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "c66a102f-30e7-4f9a-b4b2-83871922b24b"
        },
        "item": {
          "id": "782be185-7a23-493a-9d3a-bf5976975c83",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "59c0015f-b4db-4e7b-bb8a-0a8b8ca2062f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67c01ef-25be-437f-8f97-cf7f883e93b2",
        "cursor": {
          "ref": "b22ef4ad-ee84-48a6-ab92-481516813f15",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "3f0e4c30-e50f-4e4d-b6b7-d37a7649219b"
        },
        "item": {
          "id": "c67c01ef-25be-437f-8f97-cf7f883e93b2",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6184898c-519b-42ee-ba50-1aa99d18d145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeeb5eb5-8e72-44be-8a02-449f6baa03ac",
        "cursor": {
          "ref": "4bd0e23a-fdb9-40e7-ac12-7b86845465c7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "79331a6b-2cdf-47f8-8507-9b911bed478d"
        },
        "item": {
          "id": "aeeb5eb5-8e72-44be-8a02-449f6baa03ac",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "762fa76b-fbc0-4f62-a315-85e2d1cf2be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c85212-435f-4ce9-b4b1-9dd83ea0ffa2",
        "cursor": {
          "ref": "58a020e6-edd5-47b9-8859-9c4d79100d83",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d04f3efe-5522-4ada-a9c2-6802f63f6b5b"
        },
        "item": {
          "id": "d9c85212-435f-4ce9-b4b1-9dd83ea0ffa2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e91f922f-aabb-416f-83dc-3f74377d3c43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bad8c29-7d10-431d-92e6-00ba8b60b671",
        "cursor": {
          "ref": "5f070fc6-4ef8-4194-865f-8457c17eff51",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ab122dd-9eec-424c-aa65-5f6302d1ec58"
        },
        "item": {
          "id": "2bad8c29-7d10-431d-92e6-00ba8b60b671",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e163f34c-6ee5-45a6-b644-3a0f540078cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865845d6-5b91-4790-bf0a-4a5923c54df6",
        "cursor": {
          "ref": "e9869244-8bb6-4426-8681-ce7e15cdaf96",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9a19a454-20b5-4e92-af24-5842742ae4f9"
        },
        "item": {
          "id": "865845d6-5b91-4790-bf0a-4a5923c54df6",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ea9dc8fd-e51d-4748-b27d-177396522416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a631fee-e6c8-4e52-833b-aaeaea1c56e6",
        "cursor": {
          "ref": "6c6f3281-bf3a-4b62-9779-9f3215679a12",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "916e4381-7c2c-4fd8-b3f8-f686e4665eb8"
        },
        "item": {
          "id": "5a631fee-e6c8-4e52-833b-aaeaea1c56e6",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d183fbd9-9097-44a8-9c67-5b531549861a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f677eae8-7f0b-4f3f-9e7d-8f05831ab14a",
        "cursor": {
          "ref": "20322ba3-8fa0-4056-997e-03f014b32ac6",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fd8a16d7-92c9-4934-9208-58d793c8f251"
        },
        "item": {
          "id": "f677eae8-7f0b-4f3f-9e7d-8f05831ab14a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "9e7c60b9-3187-427d-bd57-6d634c92886f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502f18fc-564d-4b39-8af8-294b8692a541",
        "cursor": {
          "ref": "c9ae6080-56f1-498f-930a-d69d6c7dace4",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2a63c913-15bb-4e7b-a8f7-7849be74e39f"
        },
        "item": {
          "id": "502f18fc-564d-4b39-8af8-294b8692a541",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "4be96cc9-bf3b-4119-9937-f2aa160664dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4068c85c-5e67-43fc-b7cc-da80e4059a7e",
        "cursor": {
          "ref": "0d94ff61-40f2-4255-87bd-bcd25f545aa1",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "85358401-874c-44c8-ab0c-317093d487c0"
        },
        "item": {
          "id": "4068c85c-5e67-43fc-b7cc-da80e4059a7e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a7e52293-f9ec-4a16-89e3-7f35d4f257a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727a6ddf-6097-4e42-b0c6-7861328685cc",
        "cursor": {
          "ref": "5ef87cd4-718b-4bd5-85a5-9bf0b19a4f1d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "a480a3e9-6421-4dc2-ba9e-b2c0482b67c4"
        },
        "item": {
          "id": "727a6ddf-6097-4e42-b0c6-7861328685cc",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b2b2935e-edc2-471c-a107-e18c02576788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ac008e-902d-4ef0-ab66-bcb89c4d09e1",
        "cursor": {
          "ref": "a69a27f8-2645-49f0-b84b-2b700fda2675",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "c64e0bc1-4fed-496e-95d3-639ee4aceb3f"
        },
        "item": {
          "id": "e1ac008e-902d-4ef0-ab66-bcb89c4d09e1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6376dee7-476f-4f59-9dcd-5065ba8a787d",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "4be8ad31-6c20-46b9-bff9-1f1f8a5706ea",
        "cursor": {
          "ref": "7a8fb447-b83b-4e30-9d84-0b715d00601a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "53c7390f-827f-43bf-9dec-4511eb4710f1"
        },
        "item": {
          "id": "4be8ad31-6c20-46b9-bff9-1f1f8a5706ea",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1e00d913-47da-4781-8d3f-b1b46b662e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c37c39c-da67-4534-9f64-7a4467b01105",
        "cursor": {
          "ref": "0c8e3126-1ddf-4a7a-add9-ae1806310ff8",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b7f42cea-a3cb-4e06-bbcc-d50b11b00925"
        },
        "item": {
          "id": "6c37c39c-da67-4534-9f64-7a4467b01105",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4b99d816-952c-4f6f-94b2-1360f04091c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b0d11a-60de-4f53-bf79-5bf4c5c918ad",
        "cursor": {
          "ref": "c2a683b6-05e1-4c06-a2c5-02c0724db1bb",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "df1fc7c2-3c47-44ab-a3e7-632395d8b4da"
        },
        "item": {
          "id": "a6b0d11a-60de-4f53-bf79-5bf4c5c918ad",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4cb70912-5b1c-4f34-a128-256668ef2de0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "450a10b3-b9a3-4ef8-8cb6-5f69eb790604",
        "cursor": {
          "ref": "2cf6e629-3659-4493-bbf6-193c9bb7c231",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ae434d81-281e-47bd-a634-7398b5035d63"
        },
        "item": {
          "id": "450a10b3-b9a3-4ef8-8cb6-5f69eb790604",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "a4a95cfc-4762-4a3e-a4b2-54669c9eb1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28157b6b-849d-4ef0-84e6-490f5b4c5a0b",
        "cursor": {
          "ref": "de1b2e30-a7c0-4ace-9180-39d4497c0445",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "04f0c5ce-48c3-419f-b193-ae4c895413ab"
        },
        "item": {
          "id": "28157b6b-849d-4ef0-84e6-490f5b4c5a0b",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "cf0d1bc2-e93f-4ef7-8fb4-e0273bd9a5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecba3589-3928-4701-a7ba-1c7890170794",
        "cursor": {
          "ref": "94bde9c4-7efe-49cd-bcbd-d8ad09a93b84",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1400c693-0a18-4e55-879d-4a7cbba46238"
        },
        "item": {
          "id": "ecba3589-3928-4701-a7ba-1c7890170794",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "55f6b4c1-dc07-436f-bac8-20e3a6e179fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b05e8b-8650-4a01-b416-287a235bf701",
        "cursor": {
          "ref": "c659dd02-6b72-4c7b-a114-496cf3c4c3d6",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ec1be764-ecc9-4a72-a5bb-6c926d1254be"
        },
        "item": {
          "id": "a6b05e8b-8650-4a01-b416-287a235bf701",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "4b763d5b-38d6-446a-afbf-f49a51f45dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1c05ba-973c-4365-ade9-df29f31eb53d",
        "cursor": {
          "ref": "2363f52a-3e74-4785-8a61-b63934e5e865",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "4909308b-a247-4a13-bae3-0f2a128b1d53"
        },
        "item": {
          "id": "4d1c05ba-973c-4365-ade9-df29f31eb53d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a5c44849-d46c-4470-9f0c-d1a5cd0f6e78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7707989b-48a7-4605-9fc5-222355e8f201",
        "cursor": {
          "ref": "43f91dce-196b-4fa9-b03d-3b23102214fd",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "d28fbfb7-b127-4bc3-85b8-f0d1eb11f145"
        },
        "item": {
          "id": "7707989b-48a7-4605-9fc5-222355e8f201",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bba59be3-a682-4114-b93b-73937f399284",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db300963-069e-48ef-98b7-9a15bc93087d",
        "cursor": {
          "ref": "10b7d86e-9f1d-4837-b887-d16ee7f820f4",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "603d58a3-6ab2-458c-a53e-9c061899125d"
        },
        "item": {
          "id": "db300963-069e-48ef-98b7-9a15bc93087d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ef3fbfc3-92fd-4a82-af81-23652999d341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae969f91-2565-4577-90f3-7231f176e3fb",
        "cursor": {
          "ref": "d9864cf8-a5ae-4026-a9b9-cd47793ea67a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "1e46a50b-3216-4478-b362-17b9f56efe61"
        },
        "item": {
          "id": "ae969f91-2565-4577-90f3-7231f176e3fb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "68ea220b-b914-4319-840d-fb822b1c6644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63e314f2-d40f-4776-ac69-7aa01b5df2e2",
        "cursor": {
          "ref": "37d2406d-45c8-45d9-b280-f571e91e7a09",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "f38d0885-fa69-4817-88f9-ce81f83f802b"
        },
        "item": {
          "id": "63e314f2-d40f-4776-ac69-7aa01b5df2e2",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "b11acabe-b064-461f-81f9-cb6ef9132115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d2c6e1e-f33f-4ea0-869c-7400dbf2efd2",
        "cursor": {
          "ref": "3d1468f5-a0f0-472e-9b9d-8a4692254eac",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "d6500a31-3f9b-4a7b-93fe-7be0dd838c97"
        },
        "item": {
          "id": "4d2c6e1e-f33f-4ea0-869c-7400dbf2efd2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "acc2e5aa-49c3-42b4-b22c-b350926dba18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e06b105-a59f-4db1-9b8b-5703e42c62f9",
        "cursor": {
          "ref": "5f29836d-e6e7-49d4-9084-c76a2be172b7",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "118476c8-fe02-4fde-9934-f03304f5a9f9"
        },
        "item": {
          "id": "1e06b105-a59f-4db1-9b8b-5703e42c62f9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4125daae-9b1c-4137-a259-153ca3a0d8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 108,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01a624a7-3477-465e-98a5-b5803976e0b1",
        "cursor": {
          "ref": "1c7ac499-a1c4-4596-bb0c-fb4545209334",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "4941529b-7285-4c53-84fe-5e7560022685"
        },
        "item": {
          "id": "01a624a7-3477-465e-98a5-b5803976e0b1",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1865567f-14ce-4a22-b125-e87cc78cb819",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "665f05c3-71a7-4f8e-93f5-13c353d2aac2",
        "cursor": {
          "ref": "93db3a61-f309-4443-adbd-af215289d1f0",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "bebad79b-8b3c-49bf-959a-bd08f35c8efe"
        },
        "item": {
          "id": "665f05c3-71a7-4f8e-93f5-13c353d2aac2",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fa6d11b0-487c-465e-9671-886d006110ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4944718c-84bd-465f-8056-b4ea6cdd3280",
        "cursor": {
          "ref": "f4f91e8c-6d2b-48c1-83a1-f007656829a1",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "94f52ab5-82e1-46ee-9ac2-c54d0eae1e48"
        },
        "item": {
          "id": "4944718c-84bd-465f-8056-b4ea6cdd3280",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e43ef7c1-bde7-40a5-9082-827aa12ccb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "447ab33e-c60a-4607-be14-d689ee353902",
        "cursor": {
          "ref": "aaf6fe54-2f86-42da-a62a-a17c2c7d85b5",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ac6bd410-f81e-4d21-8a62-9fb1fbb0263c"
        },
        "item": {
          "id": "447ab33e-c60a-4607-be14-d689ee353902",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "40addf9b-bb1c-4c07-a3df-2e7588543f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a110526-3425-4b46-828c-72d9d8136921",
        "cursor": {
          "ref": "9abb50ca-66ec-4b8f-a1e5-dfd27fefd913",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9e0aed53-9811-4587-82c6-ff0457a1ff64"
        },
        "item": {
          "id": "8a110526-3425-4b46-828c-72d9d8136921",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f136bb71-f908-4922-8427-ec7d44a1b3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f9bd104-3927-40e7-9751-1d067fec41e8",
        "cursor": {
          "ref": "640188be-996c-457f-86f7-e906b66d14e9",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c07e27b5-f089-4747-860d-ccdfd795f8ca"
        },
        "item": {
          "id": "8f9bd104-3927-40e7-9751-1d067fec41e8",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "27d15eac-dcde-4689-a151-21a21d7a8e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb3e853b-7fc4-46e4-81ce-bde9f46aa043",
        "cursor": {
          "ref": "6374527b-be66-4e85-b101-3e0c2e656ee3",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "016a521d-09a9-41cf-af06-1e64564943dd"
        },
        "item": {
          "id": "cb3e853b-7fc4-46e4-81ce-bde9f46aa043",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d099651b-86eb-423f-92c4-ea3537e4494a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 265,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc82b833-7226-4d71-ba69-5fcb5d66c53e",
        "cursor": {
          "ref": "1126ac2b-ebf5-41ca-b422-2e9252b06add",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ef223118-6d63-4054-8c65-5b5c25bdb353"
        },
        "item": {
          "id": "dc82b833-7226-4d71-ba69-5fcb5d66c53e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "79e9f8d9-e867-49b6-a746-a7029f9302e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bf6852b-35c5-4649-b0d1-46bc686a9052",
        "cursor": {
          "ref": "9f566c51-a5c0-488c-b4f3-5b3fdc555066",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc99bd69-5216-4ffe-ac35-b3b430c2a330"
        },
        "item": {
          "id": "0bf6852b-35c5-4649-b0d1-46bc686a9052",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5b5815f1-3a82-489d-b350-b77beeb891b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f411bc4a-9667-4e87-b584-7489a3e68152",
        "cursor": {
          "ref": "b9f4cbe9-692c-4a79-ae0f-b4ac41a80754",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6a70dbdc-1c52-4bb1-8311-3b0461fa7184"
        },
        "item": {
          "id": "f411bc4a-9667-4e87-b584-7489a3e68152",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a31e94c1-4a61-466d-8c47-da9bad19494f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61e5328d-bd77-4e37-ab96-04f0fd6a2f5f",
        "cursor": {
          "ref": "0326dc34-999d-47aa-b583-058b80fa3355",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ba39d848-06d1-47f6-91d1-8ce31db87ef9"
        },
        "item": {
          "id": "61e5328d-bd77-4e37-ab96-04f0fd6a2f5f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "4250e272-7b0f-4493-b56c-d7d03b1e5d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7f6872b-a7f7-48c7-8b98-925b13ea6a1f",
        "cursor": {
          "ref": "8dde2d16-0a89-4a4d-9398-0cc0bba4a495",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "70bfc1e8-dce1-4dbe-8e2a-f04f5aa1a471"
        },
        "item": {
          "id": "b7f6872b-a7f7-48c7-8b98-925b13ea6a1f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "723df220-9bb6-44a4-a856-43750c9e95b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551a6b45-5671-4438-856e-5cc2f824aa4a",
        "cursor": {
          "ref": "a5c8a6a4-c5dc-4b05-b200-af7808dd1904",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8358ad53-cae6-45d5-bfa6-e51b776d0222"
        },
        "item": {
          "id": "551a6b45-5671-4438-856e-5cc2f824aa4a",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a78ae150-72b2-4a99-b0df-37636a2629a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be9dec9-1cfe-493f-8a86-663ff5abd894",
        "cursor": {
          "ref": "37c4b24c-14fd-45c9-afb6-a44c6de11035",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a24e8c05-85b7-4554-952a-7651ac3d76af"
        },
        "item": {
          "id": "3be9dec9-1cfe-493f-8a86-663ff5abd894",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "c81ff66d-5d23-4d17-b580-cac3c428efb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e37ce5d4-5937-45ed-966e-ad751ceafe35",
        "cursor": {
          "ref": "31051e1d-adbd-4aee-a01a-deb70e7a8134",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "bffbaac5-7142-4c4c-b109-7512a74e2f2a"
        },
        "item": {
          "id": "e37ce5d4-5937-45ed-966e-ad751ceafe35",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7049ae34-7bad-4192-9436-98437c70ffad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae8d3c8f-461d-40d7-a766-b8d5688862ac",
        "cursor": {
          "ref": "b36b816c-2b64-4e7f-8326-7c2907dbc3fc",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "93c9d071-2438-4d29-9f60-af8d0be6faba"
        },
        "item": {
          "id": "ae8d3c8f-461d-40d7-a766-b8d5688862ac",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0b3c5fac-3ff6-47bc-9761-52af4a424417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61717131-9fce-46b4-8984-0fac3f25529b",
        "cursor": {
          "ref": "1236abd4-5775-4427-a034-e574b9103939",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "70233367-192c-42ca-b42f-c6b066265157"
        },
        "item": {
          "id": "61717131-9fce-46b4-8984-0fac3f25529b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f54a7f33-e09d-47d8-abe6-b98bfd35517e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b57b1a5e-deca-49a3-b8e8-fb1a4dc6d557",
        "cursor": {
          "ref": "fbfacc72-a8f1-4367-82ac-d228916de877",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1a4b339c-620c-4bd7-a7ce-f2980b8d4b6c"
        },
        "item": {
          "id": "b57b1a5e-deca-49a3-b8e8-fb1a4dc6d557",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "fa6966fd-eccd-450b-bd7e-ff157dafeb8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c18f755-95a3-42a2-b4d6-bab13cf817dd",
        "cursor": {
          "ref": "a6af2f57-3aff-4c42-8d19-065dc5fc4c95",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5d082aae-96d6-4fc6-8185-73a84e2aeee0"
        },
        "item": {
          "id": "8c18f755-95a3-42a2-b4d6-bab13cf817dd",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7c971797-a807-495b-aac2-333aca39d4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff1443d2-abea-4af5-842c-06b0b0a01550",
        "cursor": {
          "ref": "df5e21b6-8a02-41cf-ab86-8ec2adda7407",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c47871c0-241f-44b6-90e2-3eeb02370e80"
        },
        "item": {
          "id": "ff1443d2-abea-4af5-842c-06b0b0a01550",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "55eec56a-31b3-4069-94e6-a59796c97a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de5f5432-4644-4821-a89e-bc0ea0001aaf",
        "cursor": {
          "ref": "5251f8a2-1784-4f42-bcb1-604ac017af65",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "7d2cf41f-ded1-4734-887a-764e7a24fa56"
        },
        "item": {
          "id": "de5f5432-4644-4821-a89e-bc0ea0001aaf",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "31161978-92e0-4bfa-82bb-08a4941022aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ff5256-c4f8-411a-ba52-a401bb712dd0",
        "cursor": {
          "ref": "f0d4641e-9fa5-45ed-9eb3-c902a76a92f9",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "dd39b4af-9b82-449e-8796-c3a77c64d780"
        },
        "item": {
          "id": "31ff5256-c4f8-411a-ba52-a401bb712dd0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "42dba7e2-fee7-407a-9f1c-3497d38828fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7de489d3-95e8-46e6-bf7e-fc9f54954907",
        "cursor": {
          "ref": "9d883096-c799-4b4f-a89e-87d8e0ce80b4",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "445ebd81-52a1-47ab-a018-065568edbb90"
        },
        "item": {
          "id": "7de489d3-95e8-46e6-bf7e-fc9f54954907",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "bbaf408a-87e0-4a79-809a-6b235e10a4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c82d5d2-2c82-4498-a2ef-2fbcc43eb5c4",
        "cursor": {
          "ref": "16e3eeb0-9b03-4f6a-a218-3794d0a2ac9b",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "7d69ad7b-01e7-4678-afa1-9861269cbf14"
        },
        "item": {
          "id": "2c82d5d2-2c82-4498-a2ef-2fbcc43eb5c4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3131ce4b-46a7-4103-b37a-26d8a0554969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ecde320-f0ba-4151-ab79-6505cd7e879a",
        "cursor": {
          "ref": "9243245a-28ac-451c-b87f-83f004597a52",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "ac4a1c4d-f31c-4025-81cf-ac7b6702a83b"
        },
        "item": {
          "id": "2ecde320-f0ba-4151-ab79-6505cd7e879a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "01d90fa6-e5d0-4c88-a621-262891f0fc94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5202db-2325-4c60-b83e-978ee6a76e52",
        "cursor": {
          "ref": "289ae4ef-c9d6-4543-9815-ae77d4f66b8c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "f19b3df0-6eca-40f7-9d96-bc62a1c35569"
        },
        "item": {
          "id": "0b5202db-2325-4c60-b83e-978ee6a76e52",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "38582fd0-d590-4004-b215-65aac3127982",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c26105-edf9-455d-ab56-f5f0b125c3ac",
        "cursor": {
          "ref": "a99e41bb-e579-4571-9791-be99422d45e0",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "65fc025a-b21b-4725-8355-a5ed20f32ef0"
        },
        "item": {
          "id": "c6c26105-edf9-455d-ab56-f5f0b125c3ac",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "b44a9a70-5994-43b3-8fe2-54cb83e04c10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d900413-e72e-4342-9fbf-6dcb27d4c95d",
        "cursor": {
          "ref": "067450e0-d2d1-4b33-964d-a9fe49973bf3",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3521251e-6560-4a50-b2f2-00d4740732c9"
        },
        "item": {
          "id": "3d900413-e72e-4342-9fbf-6dcb27d4c95d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "23e2b1df-99ae-4ad1-ab77-327ae4c13aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6687a62-862b-4c15-8f8e-49adb80adcf8",
        "cursor": {
          "ref": "b690925f-8879-4fa1-9e1b-8dbfa48af3b4",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "f14d258f-99c7-497b-9f9c-8409a178461d"
        },
        "item": {
          "id": "c6687a62-862b-4c15-8f8e-49adb80adcf8",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "114e63b4-9847-476e-958a-1cb149b291e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da421ef6-ed28-4628-889c-ab8193055d12",
        "cursor": {
          "ref": "d2fb843d-d8e8-4a4c-926f-9456cda37f58",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2268a58e-a867-4fd0-8041-35f0e4181f9f"
        },
        "item": {
          "id": "da421ef6-ed28-4628-889c-ab8193055d12",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "04955d41-e70b-4b0c-b748-d7223d71af19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9edf95e8-8515-4c14-ac57-4a4571206303",
        "cursor": {
          "ref": "0a721086-081f-4c38-8dfb-803dfb99f3e3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9d8f1fb6-7898-4979-a15c-181d2414e051"
        },
        "item": {
          "id": "9edf95e8-8515-4c14-ac57-4a4571206303",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "72db5889-b3eb-4173-9898-11ee13ac2ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff26dc1-9500-40c0-ae7c-b5b983a95813",
        "cursor": {
          "ref": "df50e2a1-a4f3-49d6-a1c0-d4f331bdb08f",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "bfac44d4-5b2f-4f3e-b1b5-608dc3f87752"
        },
        "item": {
          "id": "3ff26dc1-9500-40c0-ae7c-b5b983a95813",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "67ec7f74-c0b9-4405-91cc-bff0b76192b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d16a6f1-5b7c-4e17-b874-5e3900e8e8ec",
        "cursor": {
          "ref": "8fd30b52-8f04-48ee-a7fb-a1400eac001a",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "f8a20592-cf18-40fd-b9fc-9f07165d1ef1"
        },
        "item": {
          "id": "2d16a6f1-5b7c-4e17-b874-5e3900e8e8ec",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "85cd21af-5103-44bd-a9cf-8d6b4266cc6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c28c21-47e3-47a3-950e-d571ceeb7c84",
        "cursor": {
          "ref": "89f693fe-a0b5-4132-951a-c1b165e2d9de",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c5ee8102-5d6f-451b-89d5-8ef3c54bf4d1"
        },
        "item": {
          "id": "10c28c21-47e3-47a3-950e-d571ceeb7c84",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "3cd22381-dc0f-4a4c-b7f7-bbe305bd0863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a749472-4272-478e-96b2-fce6178051cc",
        "cursor": {
          "ref": "7abe16f4-289b-472b-a498-9d73f63b258b",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "8f66dedf-ea07-45bc-8d52-dce6f3cc486d"
        },
        "item": {
          "id": "3a749472-4272-478e-96b2-fce6178051cc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0b7a9ac3-decc-4b61-9760-3c161a90fc5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e71131-3b71-4f8e-96ba-86f93ef76dfc",
        "cursor": {
          "ref": "b0f2944b-ca1b-4c02-b8e0-e09089928d47",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "aba0e320-ef99-4271-8ffc-9227833b20eb"
        },
        "item": {
          "id": "f0e71131-3b71-4f8e-96ba-86f93ef76dfc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "7a8972ba-937d-4c7f-92d3-f980d446da73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145a9f7e-8cc2-4599-9ca0-a460897c2833",
        "cursor": {
          "ref": "f6018ee7-221d-4568-9d1e-90e58bb1d320",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c1db7574-cad2-4d56-93ce-ba6417aa555a"
        },
        "item": {
          "id": "145a9f7e-8cc2-4599-9ca0-a460897c2833",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "74364bcb-6d58-407e-9369-110a74bfd8cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1860e4-da6d-4ef2-92a8-21b680c0d15d",
        "cursor": {
          "ref": "c748eefd-f3ab-40e8-b271-579cc9ea187f",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b6992dbf-f77b-4f89-9555-a8c81cd8dc47"
        },
        "item": {
          "id": "9c1860e4-da6d-4ef2-92a8-21b680c0d15d",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b858a031-a336-4d2e-98ea-f82dbddb2398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ad400c-b52b-49fb-b763-b3754ac9bff7",
        "cursor": {
          "ref": "589bca71-77be-4b13-b7b5-83a89208250e",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "05256814-69d3-4cfc-975f-c5d5edd7c145"
        },
        "item": {
          "id": "a8ad400c-b52b-49fb-b763-b3754ac9bff7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9200203e-e35b-4067-843d-fbc58c0fd56e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d3b820-3770-4d5c-b528-daff1eeba875",
        "cursor": {
          "ref": "bf142851-75c8-4e61-a8d2-c0572fe111ab",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3a64cbb2-ae3a-4b07-b154-3c0de8da154b"
        },
        "item": {
          "id": "32d3b820-3770-4d5c-b528-daff1eeba875",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "dd647e35-0d2e-4399-a886-11cfe4bd0dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8499c476-ab2a-4682-8482-cd4cf555e5bc",
        "cursor": {
          "ref": "80f64b86-4304-431e-9237-619d03ac4b61",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e34df17e-79fe-4ea9-9a50-e06dc0c564dd"
        },
        "item": {
          "id": "8499c476-ab2a-4682-8482-cd4cf555e5bc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "0654e8c2-b6f2-459f-b0fc-8d616e243f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07342bbe-27f5-401e-ae5c-f682c7408bde",
        "cursor": {
          "ref": "0a8923c5-f87a-4111-a883-7a895206fe74",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c1b759df-8e42-40fb-a114-3dafd2b37a63"
        },
        "item": {
          "id": "07342bbe-27f5-401e-ae5c-f682c7408bde",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "27d211e6-46a7-4c9c-8f9c-754a4a4ed228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de8c2fbd-f3fb-4092-a7a8-4f25a17b829a",
        "cursor": {
          "ref": "df4306ca-f42e-4cb6-8014-203600bedb78",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d28d3478-0f53-4ceb-85f6-1a84af7179aa"
        },
        "item": {
          "id": "de8c2fbd-f3fb-4092-a7a8-4f25a17b829a",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0cbf52e8-baeb-4053-b994-845221be7575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b874f38-878f-44a0-bb19-61bb3a0fa383",
        "cursor": {
          "ref": "e10648c3-7929-4cb6-a3d1-6dec5336ef14",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "8e52b889-1572-4510-be8f-661c7902849c"
        },
        "item": {
          "id": "0b874f38-878f-44a0-bb19-61bb3a0fa383",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "d74f908f-4e6b-4a98-8c3a-d5c9b217e8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf969812-a445-4ae0-8b77-a28a3bb00b8e",
        "cursor": {
          "ref": "c16890a6-e37f-4049-b0b8-7ba4a383afc7",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "351db33c-5975-4f49-a2ef-dd09d0dde201"
        },
        "item": {
          "id": "bf969812-a445-4ae0-8b77-a28a3bb00b8e",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "db5ae811-7672-4e1a-9882-212a138efb5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ea4eda-c849-4775-a3e8-1411dc3fd852",
        "cursor": {
          "ref": "a3d20469-9394-4c03-9b04-8e6a5f81ea24",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7b6b6df1-435f-4bd7-8063-1faccc945010"
        },
        "item": {
          "id": "a4ea4eda-c849-4775-a3e8-1411dc3fd852",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f98edf0e-6df7-4b63-bc77-9531552e255e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c84847-33b6-4fd2-a9e4-a57ec4cd57ed",
        "cursor": {
          "ref": "ae67e788-0ec1-4421-a5e7-c7dc10c52402",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "fe950a29-f60c-4828-af9f-c0d18aa09cca"
        },
        "item": {
          "id": "11c84847-33b6-4fd2-a9e4-a57ec4cd57ed",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4fcbf503-c7dc-413c-8e7d-20df623949e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7eb45fa-21c4-43ef-8c12-21b49b226640",
        "cursor": {
          "ref": "9e46141c-970d-4d6b-b990-977dce92aa8b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "48c8034f-c523-4cdf-876b-dc4a24651070"
        },
        "item": {
          "id": "b7eb45fa-21c4-43ef-8c12-21b49b226640",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ecbe6521-8dc8-4606-9661-66341bb06334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220b614f-3d5f-48af-8605-a08bb55c4584",
        "cursor": {
          "ref": "1a044669-745c-4f47-8b9a-90017a092e3e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "86909c4f-a8b7-4621-96e5-f60ce8890c7c"
        },
        "item": {
          "id": "220b614f-3d5f-48af-8605-a08bb55c4584",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3fc2981a-59f4-4a0d-97c5-aeacc6a34aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab255fb-640d-4037-b6fa-7d993759376d",
        "cursor": {
          "ref": "86d80508-f036-41bd-80f4-27cf3af6aad7",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0cc38365-e6b4-4389-b965-25f11039a7ac"
        },
        "item": {
          "id": "9ab255fb-640d-4037-b6fa-7d993759376d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "5eae3e5d-3c6b-4393-b73f-1076836986a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff7d2d84-8a8f-44aa-8a66-c39156f9bc51",
        "cursor": {
          "ref": "cc2e5593-9c34-4e55-a3de-50579652ee85",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "3454e15e-3d6c-4118-b642-ef3abf1b0c0e"
        },
        "item": {
          "id": "ff7d2d84-8a8f-44aa-8a66-c39156f9bc51",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f87337c3-905c-4057-99d5-7b2fbc5bda58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a330dbf-9e7f-41e5-a400-fc63d528a4dc",
        "cursor": {
          "ref": "35020f28-150a-43b0-b219-3f471ec184a5",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "43e8131a-13fc-4b11-bf35-9a16e239a281"
        },
        "item": {
          "id": "9a330dbf-9e7f-41e5-a400-fc63d528a4dc",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "021ecafa-74d6-4c1a-bbb7-b8a6a51269fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f9d20b-edd7-471b-b74f-fe70334b42f7",
        "cursor": {
          "ref": "59c7a7f2-5f1a-43e6-92e4-3fcd53773125",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1de44155-18b0-485e-973d-767343ffd604"
        },
        "item": {
          "id": "c5f9d20b-edd7-471b-b74f-fe70334b42f7",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "487ad7e5-c644-4127-8b2d-367f54ae978f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c8e5ec-8639-4277-b5c8-fec6da5d72f0",
        "cursor": {
          "ref": "ca13a9a0-2ddf-4e77-b3d0-1d1ef59968d6",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6e9a5a04-fc21-4ad3-b437-31b0173e5e35"
        },
        "item": {
          "id": "d6c8e5ec-8639-4277-b5c8-fec6da5d72f0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "b6a6167a-fd31-4361-a101-ce60294caef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd414b57-3141-4e93-8547-e5afcb4b0eff",
        "cursor": {
          "ref": "41289198-340c-4f60-aa05-bdce5dc9c971",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7bb76bd2-686b-467f-8c1a-b442e087441f"
        },
        "item": {
          "id": "cd414b57-3141-4e93-8547-e5afcb4b0eff",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "8037c08b-aa72-45e8-995f-07a7b7ec1047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b57871b-71fe-47a4-ad49-86ece77b2f60",
        "cursor": {
          "ref": "1455e9d8-e288-450d-a138-3dfb8b021abb",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5e7af05c-aea0-428e-a051-2fef8103694d"
        },
        "item": {
          "id": "7b57871b-71fe-47a4-ad49-86ece77b2f60",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "2d8fb038-31cb-45cc-9ccd-93f29d642c90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c051819-eaa9-49ab-8992-3be6dd1c00e2",
        "cursor": {
          "ref": "aabc5e92-fab3-4d99-b2d0-d0305318d8ab",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "36aecfb7-4470-4f22-87b8-f697f55e43c4"
        },
        "item": {
          "id": "5c051819-eaa9-49ab-8992-3be6dd1c00e2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "d03df37e-c129-4035-8a7c-86a5ab5f624b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296331a1-ea36-479f-8925-b3750ac5e2ed",
        "cursor": {
          "ref": "89d65146-2467-47a4-b7e8-cc8b48276699",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "82ee4348-17e9-45fc-bcc4-589a7534a9b3"
        },
        "item": {
          "id": "296331a1-ea36-479f-8925-b3750ac5e2ed",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f50a2e89-5270-4f02-8d38-ba868b1a3127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a45f93-f76f-43b2-b6b8-75ee76b961e7",
        "cursor": {
          "ref": "61300571-e8c1-4446-a25f-167d3d18900c",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b1e9b791-b09c-412a-a5ed-a63a958143fe"
        },
        "item": {
          "id": "61a45f93-f76f-43b2-b6b8-75ee76b961e7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b3335e35-182a-4bcc-afcf-1d10ab80fcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f81dcf5-f306-4dc3-a355-7b282ffbc66a",
        "cursor": {
          "ref": "69c2e010-c924-4d9b-a353-f4cac5422ef5",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9ed5b723-2e06-4e4f-b71c-9f58edc00b69"
        },
        "item": {
          "id": "1f81dcf5-f306-4dc3-a355-7b282ffbc66a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "9bd25bc6-ba45-4ade-9117-074ee69f03a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da15324-4ee9-4f41-9df6-cb5f0f842ddf",
        "cursor": {
          "ref": "0953a20f-b15f-4968-afa6-3eb22b7e8fc0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "cb6592ca-9da3-466b-a1f0-b7e03c9e3b2e"
        },
        "item": {
          "id": "5da15324-4ee9-4f41-9df6-cb5f0f842ddf",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "360dd7fa-9827-4781-8ece-64e3d4eebcfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bd8a4f7-6b46-4279-9e4f-a947c810e8d8",
        "cursor": {
          "ref": "331d109f-5e39-4ee4-820a-84f0644ee979",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "50cc2d03-783e-4b10-98ce-8f7c2eb1303e"
        },
        "item": {
          "id": "9bd8a4f7-6b46-4279-9e4f-a947c810e8d8",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0440180d-b160-4cba-8b77-2478935a1c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8364a0d5-515d-4a7b-92df-40214c0fee09",
        "cursor": {
          "ref": "6b81b3e1-5d0b-4a14-8adb-293e40d88b1b",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a1b268e3-12f5-4e4b-9315-fc64c8b7f753"
        },
        "item": {
          "id": "8364a0d5-515d-4a7b-92df-40214c0fee09",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1a5dd256-4395-465a-ad20-1453732d3658",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "120bb32b-17a9-417a-abb9-128fb01281cd",
        "cursor": {
          "ref": "de8a41d5-c6b0-479f-a05b-0144cf64fcc8",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e66b389f-067f-4794-8376-55026e865981"
        },
        "item": {
          "id": "120bb32b-17a9-417a-abb9-128fb01281cd",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ec99731d-de5b-45c3-a660-165b45249297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "249a069b-1999-4e7b-b4ad-44cbb6faa543",
        "cursor": {
          "ref": "c86d3d52-c453-4c4b-bc60-910535db862f",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "72210829-d9f9-45bc-9e2d-469e6cb3c492"
        },
        "item": {
          "id": "249a069b-1999-4e7b-b4ad-44cbb6faa543",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3811e791-4c77-4d1c-b0f1-62301a1a5706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc503ab4-68b5-4221-a531-81baf00250df",
        "cursor": {
          "ref": "99986f0f-5f17-4d0c-b5af-972379dfc11a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "eb70a8db-4764-4cab-8c8a-458d7c863bd3"
        },
        "item": {
          "id": "dc503ab4-68b5-4221-a531-81baf00250df",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "b9643f70-249b-4fb0-8d70-d5389b982a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "367d0577-5a8d-4fc2-8f54-0cacdf229cec",
        "cursor": {
          "ref": "a2b479a0-5d60-4e6c-b10f-3e15050727ff",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "0094e191-c949-41ce-ab5c-ac45bb34a46e"
        },
        "item": {
          "id": "367d0577-5a8d-4fc2-8f54-0cacdf229cec",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f574e604-19cd-466c-ad36-9e41f64e7efb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f2e171b-5bbd-4d2c-b6bf-a99e5e6efbac",
        "cursor": {
          "ref": "e56da19a-0625-45e7-89c5-4e9f3f2a82bc",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "473edcae-45a0-45d7-a2d7-b766175984fd"
        },
        "item": {
          "id": "9f2e171b-5bbd-4d2c-b6bf-a99e5e6efbac",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "cb098406-f61f-455d-86d6-54b121c3d755",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fdbd71-b8d9-4b5a-953f-db2c11f1e5c2",
        "cursor": {
          "ref": "6ba41113-e748-44d0-8c8c-de859ec87f92",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f9f7fcad-bd6b-443a-b083-ee17f11a611d"
        },
        "item": {
          "id": "01fdbd71-b8d9-4b5a-953f-db2c11f1e5c2",
          "name": "credentials_verify"
        },
        "response": {
          "id": "c4bad475-d4bc-4809-9256-8ab6a0822620",
          "status": "OK",
          "code": 200,
          "responseTime": 2707,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae017f8a-1d37-4bbd-b3b8-28220a7ad3d5",
        "cursor": {
          "ref": "215a0ea1-88c6-4a53-84b7-61fe817e6cd2",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "263bdaac-aadb-4c0c-be13-cee3da0681e9"
        },
        "item": {
          "id": "ae017f8a-1d37-4bbd-b3b8-28220a7ad3d5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "de127db4-85b0-4176-be92-4bdcdcabdc4e",
          "status": "OK",
          "code": 200,
          "responseTime": 3331,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8340697b-5337-4e35-8dd4-ac9db7fcbad4",
        "cursor": {
          "ref": "4b9aba70-e10e-44db-ae1f-abb7d1ceb108",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb596bc7-655a-4a12-b019-1ee5a71a47c4"
        },
        "item": {
          "id": "8340697b-5337-4e35-8dd4-ac9db7fcbad4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2b13d24c-6f34-4055-982e-bb4303608598",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8340697b-5337-4e35-8dd4-ac9db7fcbad4",
        "cursor": {
          "ref": "4b9aba70-e10e-44db-ae1f-abb7d1ceb108",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fb596bc7-655a-4a12-b019-1ee5a71a47c4"
        },
        "item": {
          "id": "8340697b-5337-4e35-8dd4-ac9db7fcbad4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "2b13d24c-6f34-4055-982e-bb4303608598",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2dd43c8-839a-44cf-b664-0a258e62a491",
        "cursor": {
          "ref": "5b75f900-1246-4209-8122-bc38a1286f03",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "db4e3398-b791-4ac9-8bfb-54490027368d"
        },
        "item": {
          "id": "a2dd43c8-839a-44cf-b664-0a258e62a491",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "9b593834-cb6c-4f8e-a4ca-e96fea7dbff1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14889748-fbc7-4e1b-828f-fd6564cab832",
        "cursor": {
          "ref": "848fedab-81b4-43f2-aef5-125e01a61a1b",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "77061dda-39fa-40e9-9349-e486c16ce2cd"
        },
        "item": {
          "id": "14889748-fbc7-4e1b-828f-fd6564cab832",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "234366b1-f8eb-4d8c-a812-a471355a0e25",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}